{"version":3,"file":"static/js/223.adcd7fc2.chunk.js","mappings":"4KAGA,MAsDA,EAtD6BA,IAAwB,IAAvB,cAAEC,GAAeD,EAC7C,MAAME,GAAUC,EAAAA,EAAAA,QAAO,MAwCvB,OAtCAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAkBC,IACtBA,EAAMC,iBACND,EAAME,aAAaC,WAAa,MAAM,EAGlCC,EAAcJ,IAClBA,EAAMC,iBAEN,MAAMI,EAAOL,EAAME,aAAaI,QAAQ,cAExC,IACE,MAAMC,EAASC,KAAKC,MAAMJ,GAC1BK,QAAQC,IAAI,kBAAmBJ,GAE3BZ,GACFA,EAAcY,EAElB,CAAE,MAAOK,GACPF,QAAQG,KAAK,oBAAqBD,EACpC,GAGIE,EAAWlB,EAAQmB,QAOzB,OALID,IACFA,EAASE,iBAAiB,WAAYjB,GACtCe,EAASE,iBAAiB,OAAQZ,IAG7B,KACDU,IACFA,EAASG,oBAAoB,WAAYlB,GACzCe,EAASG,oBAAoB,OAAQb,GACvC,CACD,GACA,CAACT,KAGFuB,EAAAA,EAAAA,MAAA,OAAKC,IAAKvB,EAASwB,UAAU,2BAA0BC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,OACEC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,IAAI,+DACJC,IAAI,eACJP,UAAU,iBAEZE,EAAAA,EAAAA,KAAA,QAAMF,UAAU,qBAAoBC,SAAC,qCACjC,ECyKV,EAtBYO,KACV,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,MAEnD,OAAKF,GAYHX,EAAAA,EAAAA,MAAA,OAAKK,MAAO,CAAES,QAAS,QAASX,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8CACJC,EAAAA,EAAAA,KAAA,OAAAD,SAAMb,KAAKyB,UAAUJ,EAAe,KAAM,SAZ1CP,EAAAA,EAAAA,KAACY,EAAoB,CACnBvC,cAAgBU,IACdK,QAAQC,IAAI,yBAAqBN,GACjCyB,EAAiBzB,EAAK,GAUtB,EC3IV,IAAI8B,EAAO,KA8CI,SAAS,IAGtB,GAAIC,OAAOC,OAAQ,CAGjB,IAAIC,GAAe,EAEnBF,OAAOC,OAAOE,SAAS,UAAU,KAC3BD,EACF5B,QAAQG,KACN,+EAIJyB,GAAe,EA5DrB,WAAkB,IAADE,EAAAC,EACfC,UAAU,CAAC,+BAAgCC,IACzCP,OAAOO,YAAcA,CAAW,IAMlC,IAAIC,GACW,QAAbJ,EAAAJ,OAAOC,cAAM,IAAAG,GAAM,QAANC,EAAbD,EAAeK,YAAI,IAAAJ,OAAN,EAAbA,EAAqBK,cAAc,WACnCC,SAASC,eAAe,QAGrBJ,IACHA,EAAcG,SAASE,cAAc,OACrCL,EAAYM,GAAK,OACbd,OAAOC,QAAUD,OAAOC,OAAOQ,KACjCT,OAAOC,OAAOQ,KAAKM,YAAYP,GAG/BG,SAASF,KAAKM,YAAYP,IAOzBT,IAEHA,EAAOiB,EAAAA,WAAoBR,IAa7BT,EAAKkB,QAAO/B,EAAAA,EAAAA,KAACM,EAAG,IAClB,CAuBM0B,GAAO,GAEX,MACE5C,QAAQE,MACN,sEAGN,C","sources":["DragAndDrop/DragAndDrop.jsx","app/App.jsx","index.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\n\r\nconst DragAndDropComponent = ({ onDropSuccess }) => {\r\n  const dropRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleDragOver = (event) => {\r\n      event.preventDefault();\r\n      event.dataTransfer.dropEffect = \"copy\";\r\n    };\r\n\r\n    const handleDrop = (event) => {\r\n      event.preventDefault();\r\n\r\n      const data = event.dataTransfer.getData(\"text/plain\");\r\n\r\n      try {\r\n        const parsed = JSON.parse(data);\r\n        console.log(\"Dropped object:\", parsed);\r\n\r\n        if (onDropSuccess) {\r\n          onDropSuccess(parsed); // Let parent handle further logic\r\n        }\r\n      } catch (error) {\r\n        console.warn(\"Invalid drop data\", error);\r\n      }\r\n    };\r\n\r\n    const dropArea = dropRef.current;\r\n\r\n    if (dropArea) {\r\n      dropArea.addEventListener(\"dragover\", handleDragOver);\r\n      dropArea.addEventListener(\"drop\", handleDrop);\r\n    }\r\n\r\n    return () => {\r\n      if (dropArea) {\r\n        dropArea.removeEventListener(\"dragover\", handleDragOver);\r\n        dropArea.removeEventListener(\"drop\", handleDrop);\r\n      }\r\n    };\r\n  }, [onDropSuccess]);\r\n\r\n  return (\r\n    <div ref={dropRef} className=\"droppable-container mt-4\">\r\n      <img\r\n        style={{ width: \"90px\", height: \"90px\" }}\r\n        src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n        alt=\"Data Collect\"\r\n        className=\"search-icon\"\r\n      />\r\n      <span className=\"drag-and-drop-text\">Drag and Drop your object here</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","// // import React, { useEffect, useState } from \"react\";\r\n// // import { Provider } from \"react-redux\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import { OktaAuth, toRelativeUrl } from \"@okta/okta-auth-js\";\r\n// // import { Security } from \"@okta/okta-react\";\r\n\r\n// // import config from \"./../config/config\";\r\n// // import { Store } from \"./redux/Store\";\r\n// // import Router from \"./routes\";\r\n// // import { GlobalCss, MatxSuspense, MatxTheme } from \"app/components\";\r\n// // import { ErrorBoundary } from \"react-error-boundary\";\r\n// // import Fallback from \"./components/Fallback/Fallback\";\r\n// // import { OracleMappingsProvider } from \"./contexts/OracleSettingsContext\";\r\n// // import { SettingsProvider } from \"./contexts/SettingsContext\";\r\n// // import DragAndDropComponent from \"DragAndDrop/DragAndDrop\";\r\n\r\n// // const App = () => {\r\n// //   const navigate = useNavigate();\r\n// //   const [oktaAuth, setOktaAuth] = useState(null);\r\n// //   const [hasDropped, setHasDropped] = useState(false);\r\n\r\n// //   // Used by Okta to restore the original route\r\n// //   const restoreOriginalUri = async (_oktaAuth, originalUri) => {\r\n// //     navigate(toRelativeUrl(originalUri || \"/\", window.location.origin));\r\n// //   };\r\n\r\n// //   // Triggered when a route is protected and user is not authenticated\r\n// //   const onAuthRequired = ({ oktaAuth }) => {\r\n// //     oktaAuth.signInWithRedirect();\r\n// //   };\r\n\r\n// //   useEffect(() => {\r\n// //     const timer = setTimeout(() => {\r\n// //       performance.mark(\"FirstContentfulPaint\");\r\n// //     }, 1000);\r\n// //     console.log(\"ENV:\", process.env.NODE_ENV);\r\n\r\n// //     return () => clearTimeout(timer);\r\n// //   }, []);\r\n\r\n// //   // Show drag-and-drop first\r\n// //   if (!hasDropped) {\r\n// //     console.log(\r\n// //       \"📦 Rendering DragAndDropComponent because hasDropped is false\"\r\n// //     );\r\n// //     return (\r\n// //       <DragAndDropComponent\r\n// //         onDropSuccess={(data) => {\r\n// //           console.log(\"✅ Dropping complete:\", data);\r\n// //           const auth = new OktaAuth(config.oidc);\r\n// //           setOktaAuth(auth);\r\n// //           setHasDropped(true);\r\n// //         }}\r\n// //       />\r\n// //     );\r\n// //   }\r\n\r\n// //   // Once dropped but auth not initialized yet\r\n// //   if (!oktaAuth) {\r\n// //     return <div>Initializing authentication...</div>;\r\n// //   }\r\n\r\n// //   return (\r\n// //     <ErrorBoundary FallbackComponent={Fallback} onReset={() => {}}>\r\n// //       <Provider store={Store}>\r\n// //         <SettingsProvider>\r\n// //           <MatxTheme>\r\n// //             <GlobalCss />\r\n// //             <MatxSuspense>\r\n// //               <Security\r\n// //                 oktaAuth={oktaAuth}\r\n// //                 restoreOriginalUri={restoreOriginalUri}\r\n// //                 onAuthRequired={onAuthRequired}\r\n// //               >\r\n// //                 <OracleMappingsProvider>\r\n// //                   <Router />\r\n// //                 </OracleMappingsProvider>\r\n// //               </Security>\r\n// //             </MatxSuspense>\r\n// //           </MatxTheme>\r\n// //         </SettingsProvider>\r\n// //       </Provider>\r\n// //     </ErrorBoundary>\r\n// //   );\r\n// // };\r\n\r\n// // export default App;\r\n\r\n// import React, { useEffect } from \"react\";\r\n// import { Provider } from \"react-redux\";\r\n// import { HashRouter, useNavigate } from \"react-router-dom\";\r\n// import { OktaAuth, toRelativeUrl } from \"@okta/okta-auth-js\";\r\n// import { Security } from \"@okta/okta-react\"; // Import useOktaAuth\r\n// import config from \"./../config/config\";\r\n// import { Store } from \"./redux/Store\";\r\n// import Router from \"./routes\";\r\n// import { GlobalCss, MatxSuspense, MatxTheme } from \"app/components\";\r\n// import { ErrorBoundary } from \"react-error-boundary\";\r\n// import Fallback from \"./components/Fallback/Fallback\";\r\n// import { OracleMappingsProvider } from \"./contexts/OracleSettingsContext\";\r\n// import { SettingsProvider } from \"./contexts/SettingsContext\";\r\n// import { createRoot } from \"react-dom/client\";\r\n// import { StyledEngineProvider } from \"@mui/system\";\r\n// import { CssBaseline } from \"@mui/material\";\r\n\r\n// const oktaAuth = new OktaAuth(config.oidc);\r\n// oktaAuth.options.transformAuthState = async (oktaAuth, authState) => {\r\n//   console.log(\"🔍 [OKTA] transformAuthState called\");\r\n//   console.log(\"AuthState:\", JSON.stringify(authState, null, 2));\r\n// };\r\n\r\n// oktaAuth.options.devMode = true; // This turns on some internal dev logging\r\n// console.log(\"🛂 Okta Auth Config:\", JSON.stringify(config.oidc, null, 2));\r\n// console.log(\"🔐 oktaAuth instance:\", oktaAuth);\r\n\r\n// const App = () => {\r\n//   const navigate = useNavigate();\r\n//   const restoreOriginalUri = (oktaAuth, originalUri) => {\r\n//     console.log(\"✅ [OKTA] restoreOriginalUri fired\");\r\n//     console.log(\"➡️ originalUri:\", originalUri);\r\n//     console.log(\"➡️ window.location.origin:\", window.location.origin);\r\n//     // const relativeUrl = toRelativeUrl(originalUri || \"/\", window.location.origin);\r\n//     // console.log(\"➡️ Redirecting to relativeUrl:\", relativeUrl);\r\n\r\n//     navigate(\"/calist\");\r\n//   };\r\n//   const onAuthRequired = function () {\r\n//     console.warn(\"⚠️ [OKTA] onAuthRequired triggered. User is unauthenticated.\");\r\n//     console.log(\"🔁 Redirecting to /calist (MemoryRouter safe)\");\r\n//     navigate(\"/calist\");\r\n//   };\r\n//   // if (!sessionStorage.getItem(\"original_uwaUrl\")) {\r\n//   //   const currentUrl = window.location.href;\r\n//   //   console.log(\"🌐 Initial Widget URL:\", currentUrl);\r\n//   //   sessionStorage.setItem(\"original_uwaUrl\", currentUrl);\r\n//   // }\r\n\r\n//   useEffect(() => {\r\n//     console.log(\"🚀 App mounted.\");\r\n//     console.log(\"🔗 Current Hash:\", window.location.hash);\r\n//     console.log(\"🌐 Current URL:\", window.location.href);\r\n//     console.log(\"📦 Process Env:\", process.env.NODE_ENV);\r\n\r\n//     const timer = setTimeout(() => {\r\n//       const performanceMarkName = \"FirstContentfulPaint\";\r\n//       performance.mark(performanceMarkName);\r\n//     }, 1000);\r\n\r\n//     console.log(process.env.NODE_ENV, \"process.env.NODE_ENV\");\r\n\r\n//     return () => clearTimeout(timer);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     console.log(\"🚀 App mounted.\");\r\n//     console.log(\"🔗 window.location.hash:\", window.location.hash);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <ErrorBoundary\r\n//       FallbackComponent={Fallback}\r\n//       onReset={(details) => {\r\n//         // Reset the state of your app so the error doesn't happen againn\r\n//       }}\r\n//     >\r\n//       <Provider store={Store}>\r\n//         <SettingsProvider>\r\n//           <MatxTheme>\r\n//             <GlobalCss />\r\n//             <MatxSuspense>\r\n//               <Security\r\n//                 oktaAuth={oktaAuth} // Use authService instead of creating a new instance\r\n//                 restoreOriginalUri={restoreOriginalUri}\r\n//                 onAuthRequired={onAuthRequired}\r\n//               >\r\n//                 <OracleMappingsProvider>\r\n//                   <Router />\r\n//                 </OracleMappingsProvider>\r\n//               </Security>\r\n//             </MatxSuspense>\r\n//           </MatxTheme>\r\n//         </SettingsProvider>\r\n//       </Provider>\r\n//     </ErrorBoundary>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n// // createRoot(document.getElementById(\"root\")).render(\r\n// //   <StyledEngineProvider injectFirst>\r\n// //     <HashRouter>\r\n// //       <CssBaseline />\r\n// //       <App />\r\n// //     </HashRouter>\r\n// //   </StyledEngineProvider>\r\n// // );\r\n\r\nimport React, { useState } from \"react\";\r\nimport DragAndDropComponent from \"../DragAndDrop/DragAndDrop\";\r\n\r\nconst App = () => {\r\n  const [droppedObject, setDroppedObject] = useState(null);\r\n\r\n  if (!droppedObject) {\r\n    return (\r\n      <DragAndDropComponent\r\n        onDropSuccess={(data) => {\r\n          console.log(\"✅ Object Dropped:\", data);\r\n          setDroppedObject(data); // Trigger next state if needed\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\" }}>\r\n      <h2>🎉 Object Successfully Dropped</h2>\r\n      <pre>{JSON.stringify(droppedObject, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// import React from \"react\";\r\n// import ReactDOM from \"react-dom/client\";\r\n// import { BrowserRouter, HashRouter, MemoryRouter } from \"react-router-dom\";\r\n// import { CssBaseline } from \"@mui/material\";\r\n// import { StyledEngineProvider } from \"@mui/styled-engine\";\r\n\r\n// // This function mounts the React app.\r\n// let root = null; // Global React root\r\n\r\n// function start() {\r\n//   if (typeof requirejs === \"undefined\") {\r\n//     console.error(\"❌ requirejs is not defined. PlatformAPI won't load.\");\r\n//     return;\r\n//   }\r\n\r\n//   requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n//     window.PlatformAPI = PlatformAPI;\r\n\r\n//     // ⏬ Dynamically import App after PlatformAPI is loaded\r\n//     import(\"./app/App\").then(({ default: App }) => {\r\n//       // Find the root element within the widget's body (if available)\r\n//       let rootElement =\r\n//         window.widget?.body?.querySelector(\"#root\") ||\r\n//         document.getElementById(\"root\");\r\n\r\n//       console.log(\"Root element is: \", rootElement);\r\n//       // If no root element exists, create one and append it\r\n//       if (!rootElement) {\r\n//         rootElement = document.createElement(\"div\");\r\n//         rootElement.id = \"root\";\r\n//         if (window.widget && window.widget.body) {\r\n//           window.widget.body.appendChild(rootElement);\r\n//         } else {\r\n//           document.body.appendChild(rootElement);\r\n//         }\r\n//       }\r\n\r\n//       // Create or reuse the root\r\n//       if (!root) {\r\n//         root = ReactDOM.createRoot(rootElement);\r\n//       }\r\n\r\n//       root.render(\r\n//         <StyledEngineProvider injectFirst>\r\n//           <HashRouter>\r\n//             <CssBaseline />\r\n//             <App />\r\n//           </HashRouter>\r\n//         </StyledEngineProvider>\r\n//       );\r\n//     });\r\n//   });\r\n// }\r\n\r\n// export default function () {\r\n//   if (window.widget) {\r\n//     let hasOnLoadRun = false;\r\n\r\n//     window.widget.addEvent(\"onLoad\", () => {\r\n//       if (hasOnLoadRun) return;\r\n//       hasOnLoadRun = true;\r\n//       start();\r\n//     });\r\n//   } else {\r\n//     console.error(\r\n//       \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n//     );\r\n//   }\r\n// }\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./app/App\";\r\nimport { BrowserRouter, HashRouter, MemoryRouter } from \"react-router-dom\";\r\n\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport { StyledEngineProvider } from \"@mui/styled-engine\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  const initialEntries = [\"/\"];\r\n\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  // root.render(\r\n  //   <StyledEngineProvider injectFirst>\r\n  //     <MemoryRouter initialEntries={initialEntries}>\r\n  //       <CssBaseline />\r\n  //       <App />\r\n  //     </MemoryRouter>\r\n  //   </StyledEngineProvider>\r\n  // );\r\n  root.render(<App></App>);\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n"],"names":["_ref","onDropSuccess","dropRef","useRef","useEffect","handleDragOver","event","preventDefault","dataTransfer","dropEffect","handleDrop","data","getData","parsed","JSON","parse","console","log","error","warn","dropArea","current","addEventListener","removeEventListener","_jsxs","ref","className","children","_jsx","style","width","height","src","alt","App","droppedObject","setDroppedObject","useState","padding","stringify","DragAndDropComponent","root","window","widget","hasOnLoadRun","addEvent","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","querySelector","document","getElementById","createElement","id","appendChild","ReactDOM","render","start"],"sourceRoot":""}