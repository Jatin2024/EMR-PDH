{"version":3,"file":"static/js/847.c235c560.chunk.js","mappings":"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","sources":["app/hooks/useOracleSettings.js","app/components/Breadcrumb.jsx","app/components/ChatAvatar.jsx","app/components/Chatbox.jsx","app/components/ChatHead.jsx","app/components/ConfirmationDialog.jsx","app/components/MatxMenu.jsx","app/components/MatxProgressBar.jsx","app/components/MatxSearchBox.jsx","app/components/MatxSidenav/MatxSidenav.jsx","app/components/MatxSidenav/MatxSidenavContainer.jsx","app/components/MatxSidenav/MatxSidenavContent.jsx","app/components/MatxSuspense.jsx","app/components/MatxTheme/MatxTheme.jsx","app/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx","app/components/massUpdatePartDescriptionInEnoviaAndERP.jsx","app/components/exportAllTemplateMapping.jsx","app/components/exportAllAdminGeneralProperties.jsx","app/components/exportAllAdminSystemSetups.jsx","app/components/MatxVerticalNav/MatxVerticalNav.jsx","app/components/SimpleCard.jsx","app/styles/utilities/_spacing.js","app/styles/GlobalCss.jsx","app/styles/utilities/_common.js","app/components/Typography.js","app/redux/actions/MCODetailsAction.js","app/components/BuConfirmationBox.jsx","app/contexts/OracleSettingsContext.js","app/hooks/useSettings.js","app/components/MatxLayout/MatxLayout.jsx","services/usersService.jsx","services/temlplateService.jsx","app/utils/commonFunctions.js","app/utils/utils.js","services/buService.jsx","app/components/MatxTheme/themeColors.js","app/components/MatxTheme/components.js","app/components/MatxTheme/themeOptions.js","app/components/MatxTheme/initThemes.js","app/components/MatxLayout/settings.js","app/components/MatxLayout/Layout1/Layout1Settings.js","app/contexts/SettingsContext.js","app/utils/mcoUtils/commonUtils.js","app/redux/reducers/MCODetailsReducer.js","app/redux/reducers/GlobalDataReducer.js","app/utils/baseurl.js","app/redux/reducers/GlobalBUandInstanceReducer.js","app/redux/reducers/RootReducer.js","app/redux/Store.js","app/components/MatxLayout/index.js","app/components/Loader.jsx","services/systemSettingsService.jsx","app/components/McoPages/CustomAlertBox.jsx","app/redux/actions/GlobalBUandInstanceAction.js","services/ApiInstance.js","app/components/CustomAlertBox.jsx","services/massUpdateService.jsx","config/index.js","services/templateMappingService.jsx","app/views/adminConfig/common.jsx","app/components/McoPages/PageError.jsx","config/config.js","app/contexts/JWTAuthContext.js","app/auth/loginScreen.jsx","app/auth/AuthGuard.jsx","app/views/sessions/NotFound.jsx","app/unAuthorizedPage.js","app/components/CustomSelect.jsx","app/homepage.js","app/components/Loadable.jsx","app/views/mcolist/McoListRoutes.js","app/privateRoutes.js","app/views/template/importDialog.jsx","app/views/template/exportTemplate.jsx","app/components/sortedExportDataHOC.jsx","app/views/template/template.jsx","app/views/template/templateWrapper.jsx","services/plantService.jsx","app/views/template/attributeDialog.jsx","app/views/template/createTemplate.jsx","app/views/template/editTemplate.jsx","app/views/template/templateRoutes.jsx","app/auth/authRoles.js","app/views/plants/exportPlants.jsx","app/views/plants/plants.js","app/views/plants/connectivityDetailsDialog.jsx","app/views/plants/createPlant.jsx","app/views/plants/editPlant.jsx","app/views/plants/plantRoutes.jsx","services/sourceListService.jsx","app/views/sourceList/createSourceList.jsx","app/views/sourceList/editSourceList.jsx","app/views/sourceList/exportSource.jsx","app/views/sourceList/sourceList.jsx","app/views/sourceList/sourceListroutes.jsx","services/mappingsService.jsx","app/views/mappings/createMappings.js","app/views/mappings/editMappings.js","app/views/mappings/mappings.js","app/views/mappings/mappingsroutes.js","app/views/businessUnit/exportBUList.jsx","app/views/businessUnit/buList.jsx","app/views/businessUnit/createBU.jsx","app/views/businessUnit/editBU.jsx","app/views/businessUnit/buRoutes.jsx","app/views/users/bulkImportUsersDialog.jsx","app/views/users/bulkExportUsersDialog.jsx","app/views/users/usersList.jsx","app/views/users/addEditUsers.jsx","app/views/users/usersRoutes.jsx","app/constant.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedDialog.jsx","services/historyManagementService.jsx","services/mvotempcompService.jsx","app/components/importMappingsDialog.jsx","app/contexts/MvoTempCompContext.js","app/hooks/useMVOtempComp.js","app/contexts/ParttypetemplateContext.js","app/hooks/usePartTypeTemplate.js","app/contexts/MVOallowedchangesContext.js","app/hooks/useMVOallowedChanges.js","app/contexts/SetCompTempContext.js","app/hooks/useCompTemp.js","app/contexts/BUPlantContext.js","app/hooks/useBUPlant.js","app/contexts/ExpenseMapContext.js","app/hooks/useExpenseMap.js","app/components/exportMappingTemplate.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedList.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedWrapper.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedroutes.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvoDialog.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvotemplateList.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvocompatibilityWrapper.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvocompatibiltyroutes.jsx","app/views/mappingPages/partTypeToTemplate/parttypetemplateDialog.jsx","app/views/mappingPages/partTypeToTemplate/parttypeToTemplateList.jsx","app/views/mappingPages/partTypeToTemplate/parttypetemplateWrapper.jsx","app/views/mappingPages/partTypeToTemplate/parttypeTotemplateroutes.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesDialog.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesList.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangeWrapper.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesroutes.jsx","app/views/mappingPages/setCompatibleTemplates/setcomptempDialog.jsx","app/views/mappingPages/setCompatibleTemplates/setcomptempList.jsx","app/views/mappingPages/setCompatibleTemplates/SetCompTempWrapper.jsx","app/views/mappingPages/setCompatibleTemplates/setcomptemproutes.jsx","app/views/mappingPages/buPlantMapping/buplantDialog.jsx","app/views/mappingPages/buPlantMapping/buplantList.jsx","app/views/mappingPages/buPlantMapping/buplantWrapper.jsx","app/views/mappingPages/buPlantMapping/buplantRoutes.jsx","app/views/mappingPages/expenseMapping/expensemapDialog.jsx","app/views/mappingPages/expenseMapping/expensemapList.jsx","app/views/mappingPages/expenseMapping/expensemapWrapper.jsx","app/views/mappingPages/expenseMapping/expensemapRoutes.jsx","app/views/draftChanges/commitChangesForm.jsx","app/views/draftChanges/draftChangesList.jsx","app/views/draftChanges/draftChangesWrapper.jsx","app/views/draftChanges/draftChangesroutes.jsx","app/views/history/historyList.jsx","app/views/history/historyWrapper.jsx","app/views/history/historyroutes.jsx","app/views/systemSetup/exportSetup.jsx","app/views/systemSetup/systemSetupForm.jsx","app/views/systemSetup/systemSetupList.jsx","app/RedirectRoute.js","app/CustomLoginCallback.js","app/routes.jsx","app/views/systemSetup/systemSetupRoutes.jsx","app/components/Fallback/Fallback.jsx","app/App.jsx","index.jsx","services/SaaSExecutionService.jsx","services/OnPremExecutionService.jsx","services/mcoService.jsx","app/components/MatxLoading.jsx","app/utils/constant.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport OracleSettingsContext from 'app/contexts/OracleSettingsContext';\r\n\r\nconst useOracleSettings = () => useContext(OracleSettingsContext)\r\n\r\nexport default useOracleSettings\r\n","import React from 'react';\r\nimport { Breadcrumbs, Hidden, Icon, styled, useTheme } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport shortId from 'shortid';\r\n\r\nconst BreadcrumbRoot = styled('div')(() => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n}));\r\n\r\nconst BreadcrumbName = styled('h4')(() => ({\r\n  margin: 0,\r\n  fontSize: '16px',\r\n  paddingBottom: '1px',\r\n  verticalAlign: 'middle',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubName = styled('span')(({ theme }) => ({\r\n  textTransform: 'capitalize',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst Separator = styled('h4')(({ theme }) => ({\r\n  margin: 0,\r\n  marginLeft: 8,\r\n  paddingBottom: '3px',\r\n  color: theme.palette.text.hint,\r\n}));\r\n\r\nconst StyledIcon = styled(Icon)(() => ({\r\n  marginLeft: 8,\r\n  marginBottom: '4px',\r\n  verticalAlign: 'middle',\r\n}));\r\n\r\nconst Breadcrumb = ({ routeSegments }) => {\r\n  const theme = useTheme();\r\n  const hint = theme.palette.text.hint;\r\n\r\n  return (\r\n    <BreadcrumbRoot>\r\n      {/* {routeSegments ? (\r\n        <Hidden xsDown>\r\n          <BreadcrumbName>{routeSegments[routeSegments.length - 1]['name']}</BreadcrumbName>\r\n          <Separator>|</Separator>\r\n        </Hidden>\r\n      ) : null} */}\r\n\r\n      <Breadcrumbs\r\n        separator={<Icon sx={{ color: hint }}>navigate_next</Icon>}\r\n        sx={{ display: 'flex', alignItems: 'center', position: 'relative' }}\r\n      >\r\n        <NavLink to={\"/calist\"}>\r\n          <StyledIcon color=\"primary\">home</StyledIcon>\r\n        </NavLink>\r\n\r\n        {routeSegments\r\n          ? routeSegments.map((route, index) => {\r\n            return index !== routeSegments.length - 1 ? (\r\n              <NavLink key={shortId.generate()} to={route.path}>\r\n                <SubName key={shortId.generate()}>{route.name}</SubName>\r\n              </NavLink>\r\n            ) : (\r\n              // <SubName key={shortId.generate()}>{route.name}</SubName>\r\n              <BreadcrumbName key={shortId.generate()}>{route.name}</BreadcrumbName>\r\n            );\r\n          })\r\n          : null}\r\n      </Breadcrumbs>\r\n    </BreadcrumbRoot>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { Avatar, Box, styled } from '@mui/material';\r\n\r\nconst StyledAvatar = styled(Avatar)(() => ({\r\n  height: '40px',\r\n  width: '40px',\r\n}));\r\n\r\nconst StatusCircle = styled('div')(({ theme, status }) => ({\r\n  height: '14px',\r\n  width: '14px',\r\n  bottom: '0px',\r\n  right: '-3px',\r\n  borderRadius: '7px',\r\n  position: 'absolute',\r\n  border: '2px solid white',\r\n  background: status === 'online' ? theme.palette.primary.main : theme.palette.error.main,\r\n  color: status !== 'online' && 'white !important',\r\n}));\r\n\r\nconst ChatAvatar = ({ src, status }) => {\r\n  return (\r\n    <Box position=\"relative\">\r\n      <StyledAvatar src={src} />\r\n      <StatusCircle status={status} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatAvatar;\r\n","import { Avatar, Box, Divider, Icon, IconButton, styled, TextField, useTheme } from '@mui/material';\r\nimport { ChatAvatar } from 'app/components';\r\nimport { convertHexToRGB } from 'app/utils/utils';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport { H5, H6, Span } from './Typography';\r\nimport shortId from 'shortid';\r\n\r\nconst ChatContainer = styled('div')(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  background: '#fff',\r\n}));\r\n\r\nconst StyledScrollBar = styled(ScrollBar)(() => ({\r\n  flexGrow: 1,\r\n}));\r\n\r\nconst ProfileBox = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '12px 12px 12px 20px',\r\n  color: theme.palette.primary.main,\r\n  background: '#fafafa',\r\n}));\r\n\r\nconst ChatStatus = styled('div')(({ theme }) => ({\r\n  marginLeft: '12px',\r\n  color: theme.palette.primary.main,\r\n  '& h5': {\r\n    marginTop: 0,\r\n    fontSize: '14px',\r\n    marginBottom: '3px',\r\n  },\r\n  '& span': { fontWeight: '500' },\r\n}));\r\n\r\nconst ChatMessage = styled('div')(({ theme }) => ({\r\n  padding: '8px',\r\n  maxWidth: 240,\r\n  fontSize: '14px',\r\n  borderRadius: '4px',\r\n  marginBottom: '8px',\r\n  whiteSpace: 'pre-wrap',\r\n  wordBreak: 'break-word',\r\n  color: theme.palette.primary.main,\r\n  background: '#fafafa',\r\n}));\r\n\r\nconst MessageTime = styled('span')(({ theme }) => ({\r\n  fontSize: '13px',\r\n  fontWeight: '500',\r\n  color: theme.palette.primary.main,\r\n}));\r\n\r\nconst ChatImgContainer = styled('div')(({ theme }) => ({\r\n  padding: '20px',\r\n  display: 'flex',\r\n  justifyContent: 'flex-end',\r\n}));\r\n\r\nconst ChatImgBox = styled('div')(({ theme }) => ({\r\n  padding: '8px',\r\n  fontSize: '14px',\r\n  maxWidth: 240,\r\n  borderRadius: '4px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  color: theme.palette.primary.main,\r\n  background: '#fafafa',\r\n}));\r\n\r\nconst ChatImg = styled('img')(() => ({ width: '40px' }));\r\nconst ChatImgSize = styled(MessageTime)(() => ({}));\r\n\r\n// for previewing bot message\r\nconst globalMessageList = [];\r\n\r\nconst Chatbox = ({ togglePopup }) => {\r\n  const [isAlive, setIsAlive] = useState(true);\r\n  const [message, setMessage] = useState('');\r\n  const [messageList, setMessageList] = useState([]);\r\n  const currentUserId = '7863a6802ez0e277a0f98534';\r\n  const chatBottomRef = document.querySelector('#chat-scroll');\r\n\r\n  const sendMessageOnEnter = (event) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      let tempMessage = message.trim();\r\n      if (tempMessage !== '') {\r\n        let tempList = [...messageList];\r\n        let messageObject = {\r\n          text: tempMessage,\r\n          contactId: currentUserId,\r\n        };\r\n        tempList.push(messageObject);\r\n        globalMessageList.push(messageObject);\r\n        if (isAlive) setMessageList(tempList);\r\n        dummyReply();\r\n      }\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const dummyReply = async () => {\r\n    setTimeout(() => {\r\n      let tempList = [...messageList];\r\n      let messageObject = {\r\n        text: 'Good to hear from you. enjoy!!!',\r\n        contactId: 'opponents contact id',\r\n        avatar: '/assets/images/faces/13.jpg',\r\n        name: 'Frank Powell',\r\n      };\r\n\r\n      tempList.push(messageObject);\r\n      globalMessageList.push(messageObject);\r\n      if (isAlive) setMessageList(globalMessageList);\r\n    }, 2000);\r\n  };\r\n\r\n  const scrollToBottom = useCallback(() => {\r\n    if (chatBottomRef) {\r\n      chatBottomRef.scrollTo({\r\n        top: chatBottomRef.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [chatBottomRef]);\r\n\r\n  useEffect(() => {\r\n    if (isAlive) {\r\n      setMessageList([\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Do you ever find yourself falling into the “discount trap?”',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Giving away your knowledge or product just to gain clients?',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Yes',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Don’t feel bad. It happens to a lot of us',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Do you ever find yourself falling into the “discount trap?”',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Giving away your knowledge or product just to gain clients?',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Yes',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Don’t feel bad. It happens to a lot of us',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n      ]);\r\n    }\r\n  }, [isAlive]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n    return () => setIsAlive(false);\r\n  }, [messageList, scrollToBottom]);\r\n\r\n  const { palette } = useTheme();\r\n  const primary = palette.primary.main;\r\n  const textPrimary = palette.text.primary;\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ProfileBox>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <ChatAvatar src=\"/assets/images/face-2.jpg\" status=\"online\" />\r\n          <ChatStatus>\r\n            <H5>Ryan Todd</H5>\r\n            <Span>Active</Span>\r\n          </ChatStatus>\r\n        </Box>\r\n        <IconButton onClick={togglePopup}>\r\n          <Icon fontSize=\"small\">clear</Icon>\r\n        </IconButton>\r\n      </ProfileBox>\r\n      <StyledScrollBar id=\"chat-scroll\">\r\n        {messageList.map((item, ind) => (\r\n          <Box\r\n            key={shortId.generate()}\r\n            p=\"20px\"\r\n            display=\"flex\"\r\n            sx={{\r\n              justifyContent: currentUserId === item.contactId && 'flex-end',\r\n            }}\r\n          >\r\n            {currentUserId !== item.contactId && <Avatar src={item.avatar} />}\r\n            <Box ml=\"12px\">\r\n              {currentUserId !== item.contactId && (\r\n                <H5\r\n                  sx={{\r\n                    mb: '4px',\r\n                    fontSize: '14px',\r\n                    color: primary,\r\n                  }}\r\n                >\r\n                  {item.name}\r\n                </H5>\r\n              )}\r\n              <ChatMessage>{item.text}</ChatMessage>\r\n              <MessageTime>1 minute ago</MessageTime>\r\n            </Box>\r\n          </Box>\r\n        ))}\r\n\r\n        {/* example of image sent by current user*/}\r\n        <ChatImgContainer>\r\n          <Box ml=\"12px\">\r\n            <ChatImgBox>\r\n              <ChatImg alt=\"laptop\" src=\"/assets/images/laptop-1.png\" />\r\n              <Box ml=\"12px\">\r\n                <H6 sx={{ mt: 0, mb: '4px' }}>Asus K555LA.png</H6>\r\n                <ChatImgSize>21.5KB</ChatImgSize>\r\n              </Box>\r\n            </ChatImgBox>\r\n            <MessageTime>1 minute ago</MessageTime>\r\n          </Box>\r\n        </ChatImgContainer>\r\n      </StyledScrollBar>\r\n      <div>\r\n        <Divider\r\n          sx={{\r\n            background: `rgba(${convertHexToRGB(textPrimary)}, 0.15)`,\r\n          }}\r\n        />\r\n        <TextField\r\n          placeholder=\"Type here ...\"\r\n          multiline\r\n          rowsMax={4}\r\n          fullWidth\r\n          sx={{ '& textarea': { color: primary } }}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <Box display=\"flex\">\r\n                <IconButton size=\"small\">\r\n                  <Icon>tag_faces</Icon>\r\n                </IconButton>\r\n                <IconButton size=\"small\">\r\n                  <Icon>attachment</Icon>\r\n                </IconButton>\r\n              </Box>\r\n            ),\r\n            classes: { root: 'pl-5 pr-3 py-3 text-body' },\r\n          }}\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyUp={sendMessageOnEnter}\r\n        />\r\n      </div>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n","import { styled } from '@mui/material';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport clsx from 'clsx';\r\nimport { cloneElement, useState } from 'react';\r\n\r\nconst PopupRoot = styled('div')(({ theme }) => ({\r\n  '& .popupOpen': {\r\n    top: topBarHeight + 16,\r\n    [theme.breakpoints.down('sm')]: { bottom: 0 },\r\n  },\r\n  '& .closeIcon': {\r\n    position: 'absolute',\r\n    top: 6,\r\n    right: 6,\r\n  },\r\n}));\r\n\r\nconst Popup = styled('div')(({ theme }) => ({\r\n  position: 'fixed',\r\n  right: theme.spacing(2),\r\n  bottom: theme.spacing(2),\r\n  top: '100vh',\r\n  transition: 'top 250ms ease-in-out',\r\n  boxShadow: theme.shadows[6],\r\n  borderRadius: 6,\r\n  zIndex: 99999,\r\n  width: 360,\r\n  overflow: 'hidden',\r\n  '@media only screen and (max-width: 450px)': {\r\n    width: 'calc(100% - 32px)',\r\n    left: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ChatHead = ({ icon, children }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const togglePopup = async () => {\r\n    setOpen((open) => !open);\r\n  };\r\n\r\n  return (\r\n    <PopupRoot>\r\n      {cloneElement(icon, { onClick: togglePopup })}\r\n      <Popup className={clsx({ popupOpen: open })}>\r\n        {open ? cloneElement(children, { togglePopup }) : null}\r\n      </Popup>\r\n    </PopupRoot>\r\n  );\r\n};\r\n\r\nexport default ChatHead;\r\n","import { Button, Dialog, styled } from '@mui/material';\r\n\r\nconst DialogBox = styled('div')(() => ({\r\n  width: 360,\r\n  padding: '32px',\r\n  textAlign: 'center',\r\n  marginLeft: 'auto',\r\n  marginRight: 'auto',\r\n}));\r\n\r\nconst Title = styled('h4')(() => ({\r\n  margin: 0,\r\n  marginBottom: '8px',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst Controller = styled('div')(() => ({\r\n  margin: '8px',\r\n  paddingTop: '8px',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledButton = styled(Button)(({ theme }) => ({\r\n  margin: '8px',\r\n  paddingLeft: '24px',\r\n  paddingRight: '24px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n  transition: 'all 250ms',\r\n  '&.yesBtn': {\r\n    '&:hover': {\r\n      color: '#ffffff',\r\n      background: `${theme.palette.primary.main} !important`,\r\n      backgroundColor: `${theme.palette.primary.main} !important`,\r\n      fallbacks: [{ color: 'white !important' }],\r\n    },\r\n  },\r\n  '&.noBtn': {\r\n    '&:hover': {\r\n      color: '#ffffff',\r\n      background: `${theme.palette.secondary.main} !important`,\r\n      backgroundColor: `${theme.palette.secondary.main} !important`,\r\n      fallbacks: [{ color: 'white !important' }],\r\n    },\r\n  },\r\n}));\r\n\r\nconst ConfirmationDialog = ({\r\n  open,\r\n  onConfirmDialogClose,\r\n  text,\r\n  title = 'confirm',\r\n  onYesClick,\r\n}) => {\r\n  return (\r\n    <Dialog maxWidth=\"xs\" open={open} onClose={onConfirmDialogClose}>\r\n      <DialogBox>\r\n        <Title>{title}</Title>\r\n        <p>{text}</p>\r\n        <Controller>\r\n          <StyledButton className=\"yesBtn\" variant=\"outlined\" color=\"primary\" onClick={onYesClick}>\r\n            Yes\r\n          </StyledButton>\r\n          <StyledButton\r\n            className=\"noBtn\"\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={onConfirmDialogClose}\r\n          >\r\n            No\r\n          </StyledButton>\r\n        </Controller>\r\n      </DialogBox>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n","import { Menu, ThemeProvider } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport React, { Fragment } from 'react';\r\nimport shortId from 'shortid';\r\n\r\nconst MenuButton = styled(Box)(({ theme }) => ({\r\n  display: 'inline-block',\r\n  color: theme.palette.text.primary,\r\n  '& div:hover': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n}));\r\n\r\nconst MatxMenu = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const children = React.Children.toArray(props.children);\r\n  let { shouldCloseOnItemClick = true, horizontalPosition = 'left' } = props;\r\n  const { settings } = useSettings();\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MenuButton onClick={handleClick}>{props.menuButton}</MenuButton>\r\n      <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n        <Menu\r\n          elevation={8}\r\n          getContentAnchorEl={null}\r\n          anchorEl={anchorEl}\r\n          open={!!anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: horizontalPosition,\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: horizontalPosition,\r\n          }}\r\n        >\r\n          {children.map((child, index) => (\r\n            <div onClick={shouldCloseOnItemClick && handleClose} key={shortId.generate()}>\r\n              {child}\r\n            </div>\r\n          ))}\r\n        </Menu>\r\n      </ThemeProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MatxMenu;\r\n","import { Grid, LinearProgress, Typography } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport { Small } from './Typography';\r\n\r\nconst CustomLinearProgress = styled(LinearProgress)(() => ({\r\n  borderRadius: 2,\r\n  background: 'rgba(0, 0, 0, 0.1)',\r\n}));\r\n\r\nconst MatxProgressBar = ({\r\n  value = 75,\r\n  color = 'primary',\r\n  text = '',\r\n  spacing = 2,\r\n  coloredText = false,\r\n}) => {\r\n  const theme = useTheme();\r\n  const secondary = theme.palette.text.secondary;\r\n\r\n  return (\r\n    <Grid container spacing={spacing} alignItems=\"center\">\r\n      <Grid item xs={text ? 8 : 12}>\r\n        <CustomLinearProgress\r\n          color={color}\r\n          value={value}\r\n          variant=\"determinate\"\r\n        ></CustomLinearProgress>\r\n      </Grid>\r\n      {text !== '' && (\r\n        <Grid item xs={text ? 4 : false}>\r\n          <Typography color={color}>\r\n            <Small sx={{ color: coloredText ? '' : secondary }}>{text}</Small>\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MatxProgressBar;\r\n","import { Icon, IconButton } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport React, { useState } from 'react';\r\n\r\nconst SearchContainer = styled('div')(({ theme }) => ({\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 9,\r\n  width: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  height: topBarHeight,\r\n  background: theme.palette.primary.main,\r\n  color: theme.palette.text.primary,\r\n  '&::placeholder': {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nconst SearchInput = styled('input')(({ theme }) => ({\r\n  width: '100%',\r\n  border: 'none',\r\n  outline: 'none',\r\n  fontSize: '1rem',\r\n  paddingLeft: '20px',\r\n  height: 'calc(100% - 5px)',\r\n  background: theme.palette.primary.main,\r\n  color: theme.palette.text.primary,\r\n  '&::placeholder': { color: theme.palette.text.primary },\r\n}));\r\n\r\nconst MatxSearchBox = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const toggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const { palette } = useTheme();\r\n  const textColor = palette.text.primary;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!open && (\r\n        <IconButton onClick={toggle}>\r\n          <Icon sx={{ color: textColor }}>search</Icon>\r\n        </IconButton>\r\n      )}\r\n\r\n      {open && (\r\n        <SearchContainer>\r\n          <SearchInput type=\"text\" placeholder=\"Search here...\" autoFocus />\r\n          <IconButton onClick={toggle} sx={{ mx: 2, verticalAlign: 'middle' }}>\r\n            <Icon sx={{ color: textColor }}>close</Icon>\r\n          </IconButton>\r\n        </SearchContainer>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MatxSearchBox;\r\n","import { Box, styled, useMediaQuery, useTheme } from '@mui/material';\r\n\r\nconst SideNav = styled('div')(({ theme, width }) => ({\r\n  zIndex: 91,\r\n  width: width,\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  transition: 'width 250ms ease',\r\n  background: theme.palette.background.default,\r\n  [theme.breakpoints.down('sm')]: {\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n  },\r\n}));\r\n\r\nconst SideNavOverlay = styled('div')(() => ({\r\n  zIndex: 90,\r\n  width: '100%',\r\n  height: '100%',\r\n  position: 'absolute',\r\n  background: 'rgba(0, 0, 0, 0.74)',\r\n}));\r\n\r\nconst MatxSidenav = ({ sx, open, children, toggleSidenav, width = '220px' }) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  return (\r\n    <Box height=\"100%\" display=\"flex\">\r\n      <SideNav sx={sx} width={open || !isMobile ? width : '0px'}>\r\n        {children}\r\n      </SideNav>\r\n\r\n      {open && isMobile && <SideNavOverlay onClick={toggleSidenav} />}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MatxSidenav;\r\n","import { styled } from '@mui/material';\r\n\r\nconst Container = styled('div')(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  position: 'relative',\r\n}));\r\n\r\nconst MatxSidenavContainer = ({ children }) => {\r\n  return <Container>{children}</Container>;\r\n};\r\n\r\nexport default MatxSidenavContainer;\r\n","import { styled } from '@mui/material';\r\n\r\nconst Content = styled('div')(() => ({\r\n  flexGrow: 1,\r\n  height: '100%',\r\n  position: 'relative',\r\n}));\r\n\r\nconst MatxSidenavContent = ({ children }) => {\r\n  return <Content>{children}</Content>;\r\n};\r\n\r\nexport default MatxSidenavContent;\r\n","import { MatxLoading } from 'app/components';\r\nimport React, { Suspense } from 'react';\r\n\r\nconst MatxSuspense = ({ children }) => {\r\n  return <Suspense fallback={<MatxLoading />}>{children}</Suspense>;\r\n};\r\n\r\nexport default MatxSuspense;\r\n","import React from 'react';\r\nimport { CssBaseline, ThemeProvider } from '@mui/material';\r\nimport useSettings from 'app/hooks/useSettings';\r\n\r\nconst MatxTheme = ({ children }) => {\r\n  const { settings } = useSettings();\r\n  let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n\r\n  return (\r\n    <ThemeProvider theme={activeTheme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default MatxTheme;\r\n","import { ButtonBase, Icon } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport clsx from 'clsx';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst NavExpandRoot = styled('div')(({ theme }) => ({\r\n  '& .expandIcon': {\r\n    transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\r\n    transform: 'rotate(90deg)',\r\n    color: theme.palette.common.white,\r\n  },\r\n  '& .collapseIcon': {\r\n    transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\r\n    transform: 'rotate(0deg)',\r\n    color: theme.palette.common.white,\r\n  },\r\n  '& .expansion-panel': {\r\n    overflow: 'hidden',\r\n    transition: 'max-height 0.3s cubic-bezier(0, 0, 0.2, 1)',\r\n\r\n  },\r\n  '& .highlight': {\r\n    background: theme.palette.primary.main,\r\n  },\r\n  '&.compactNavItem': {\r\n    width: 44,\r\n    overflow: 'hidden',\r\n    justifyContent: 'center !important',\r\n    '& .itemText': { display: 'none' },\r\n    '& .itemIcon': { display: 'none' },\r\n  },\r\n}));\r\n\r\nconst BaseButton = styled(ButtonBase)(({ theme }) => ({\r\n  height: 44,\r\n  width: '100%',\r\n  whiteSpace: 'pre',\r\n  overflow: 'hidden',\r\n  paddingRight: '16px',\r\n  borderRadius: '4px',\r\n  marginBottom: '8px',\r\n  display: 'flex',\r\n  justifyContent: 'space-between !important',\r\n  color: theme.palette.text.primary,\r\n  //color: theme.palette.common.white,\r\n  '&:hover': { background: 'rgba(255, 255, 255, 0.08)' },\r\n  '& .icon': {\r\n    width: 36,\r\n    fontSize: '18px',\r\n    paddingLeft: '16px',\r\n    paddingRight: '16px',\r\n    verticalAlign: 'middle',\r\n    color: 'white',\r\n  },\r\n}));\r\n\r\nconst BulletIcon = styled('div')(({ theme }) => ({\r\n  width: 4,\r\n  height: 4,\r\n  color: 'inherit',\r\n  overflow: 'hidden',\r\n  marginLeft: '20px',\r\n  marginRight: '8px',\r\n  borderRadius: '300px !important',\r\n  background: theme.palette.primary.contrastText,\r\n\r\n}));\r\n\r\nconst ItemText = styled('span')(({ theme }) => ({\r\n  fontSize: '0.875rem',\r\n  paddingLeft: '0.8rem',\r\n  verticalAlign: 'middle',\r\n  color: theme.palette.common.white,\r\n  //color: 'white',\r\n}));\r\n\r\nconst BadgeValue = styled('div')(() => ({\r\n  padding: '1px 4px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n  //color: 'white',\r\n}));\r\n\r\nconst MatxVerticalNavExpansionPanel = ({ item, children, mode }) => {\r\n  const [collapsed, setCollapsed] = useState(true); // State to manage collapsed/expanded state\r\n  const elementRef = useRef(null); // Ref to track the DOM element\r\n  const componentHeight = useRef(0); // Ref to store the calculated height\r\n  const { pathname } = useLocation(); // To track the current route\r\n  const { name, icon, iconText, badge } = item; // Destructure item props\r\n\r\n  // Toggle collapsed state with additional checks for child clicks\r\n  const handleClick = (e) => {\r\n    // Prevent collapsing if a child is clicked\r\n    const isChildClick = e?.target?.closest('.submenu');\r\n    if (isChildClick) return;\r\n\r\n    componentHeight.current = 0;\r\n    calcaulateHeight(elementRef.current);\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const calcaulateHeight = useCallback((node) => {\r\n    if (node.name !== 'child') {\r\n      for (let child of node.children) {\r\n        calcaulateHeight(child);\r\n      }\r\n    }\r\n\r\n    if (node.name === 'child') componentHeight.current += node.scrollHeight;\r\n    else componentHeight.current += 44; //here 44 is node height\r\n    return;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!elementRef) return;\r\n\r\n    calcaulateHeight(elementRef.current);\r\n\r\n    // OPEN DROPDOWN IF CHILD IS ACTIVE OR NAME IS \"Search\"\r\n    for (let child of elementRef.current.children) {\r\n      if (child.getAttribute('href') === pathname || name === \"Search\") {\r\n        setCollapsed(false);\r\n      }\r\n    }\r\n  }, [pathname, calcaulateHeight, name]);\r\n\r\n  return (\r\n    <NavExpandRoot>\r\n      <BaseButton\r\n        className={clsx({\r\n          'has-submenu compactNavItem': true,\r\n          compactNavItem: mode === 'compact',\r\n          open: !collapsed,\r\n        })}\r\n        onClick={(e) => handleClick(e)} // Pass the event to handleClick\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          {icon && <Icon className=\"icon\">{icon}</Icon>}\r\n          {iconText && <BulletIcon />}\r\n          <ItemText className={`sidenavHoverShow`}>{name}</ItemText>\r\n        </Box>\r\n\r\n        {badge && <BadgeValue className=\"sidenavHoverShow itemIcon\">{badge.value}</BadgeValue>}\r\n\r\n        <div\r\n          className={clsx({\r\n            sidenavHoverShow: true,\r\n            collapseIcon: collapsed,\r\n            expandIcon: !collapsed,\r\n          })}\r\n        >\r\n          <Icon fontSize=\"small\" sx={{ verticalAlign: 'middle' }}>\r\n            chevron_right\r\n          </Icon>\r\n        </div>\r\n      </BaseButton>\r\n\r\n      <div\r\n        ref={elementRef}\r\n        className=\"expansion-panel submenu\"\r\n        style={collapsed ? { maxHeight: '0px' } : { maxHeight: componentHeight.current + 'px' }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </NavExpandRoot>\r\n  );\r\n};\r\n\r\nexport default React.memo(MatxVerticalNavExpansionPanel);","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from 'shortid';\r\nimport { BUService } from \"services/buService\";\r\nimport { MassUpdate } from \"services/massUpdateService\";\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl\r\n} from \"@mui/material\";\r\n\r\n\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\n// import download from 'downloadjs';\r\n// import CustomSelect from \"./CustomSelect\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialog-paper-root': {\r\n        backgroundColor: '#ffffff',\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst MassUpdatePartDescriptionInEnoviaAndERP = (props) => {\r\n    const buService = new BUService();\r\n    const massUpdate = new MassUpdate();\r\n    const { importMassupdateFile, setImportMassupdateFile, setOpenAlert, setOpenDesc, setIsLoading } = props;\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n    const [sampleFileUrl, setSampleFileUrl] = useState(null);\r\n    // const [bussinessUnitLists, setBussinessUnitLists] = useState([]);\r\n    const instance = localStorage.getItem('instance')\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n\r\n    // const [ERPTypeError, setERPTypeError] = useState(false);\r\n    // const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n    });\r\n\r\n    const importFileData = (e) => {\r\n        console.log('file selected')\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0])\r\n                setImportedFileName(e.target.files[0].name)\r\n                setNoFileError(false)\r\n            } else {\r\n                setNoFileError(true)\r\n                setImportedFileName(null)\r\n                setImportedFileData(null)\r\n            }\r\n        } else {\r\n            setNoFileError(true)\r\n            setImportedFileName(null)\r\n            setImportedFileData(null)\r\n        }\r\n    }\r\n    const handleCloseImport = () => {\r\n        setImportedFileData(null)\r\n        setImportMassupdateFile(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n        //console.info(event.target, 'importSelectionValues')\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (importedFileData === null || importedFileData.length < 1) {\r\n            setNoFileError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n\r\n        if (importedFileData !== null) {\r\n            //alert('file is upl7oaded')\r\n            if (window.confirm(`You have requested a report that will take some time to complete. This report will continue to run if you close this browser window. To access this report later, use 'Mass Update Part Description' > My Report.`)) {\r\n                setImportMassupdateFile(false);\r\n                setIsLoading(true);\r\n\r\n                console.log('ok for mass update')\r\n                let postData = {\r\n                    'file': importedFileData,\r\n                    data: {\r\n                        BU: importSelectionValues.BU,\r\n                        Instance: instance,\r\n                    }\r\n                };\r\n\r\n                // console.log(importSelectionValues, 'importSelectionValues');\r\n                console.log(postData, 'postData');\r\n                massUpdate.massUpdatePartDescription(postData).then((response) => {\r\n                    console.log(response, 'response 11111');\r\n                    setImportResponse(response)\r\n                    setimportfileBar(true);\r\n                    setImportedFileData(null)\r\n                    setImportedFileName(null)\r\n                    setImportMassupdateFile(false)\r\n\r\n                    setIsLoading(false);\r\n                    setOpenAlert(false);\r\n                    if (response?.status === \"success\") {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"success\",\r\n                            desc: response?.msg,\r\n                        });\r\n                    } else if (response?.status === \"failed\") {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"error\",\r\n                            desc: response?.msg,\r\n                        });\r\n                    }\r\n\r\n                    // if (!importResponse?.errorInTemplateCount || !importResponse?.errorInPlantCount) {\r\n                    //     updateRefreshData(true);\r\n                    //     fetchData()\r\n                    // }\r\n                });\r\n            }\r\n            console.log('cancle for mass update')\r\n        }\r\n    }\r\n    const handleImportfileBarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setimportfileBar(false);\r\n    };\r\n    const getUniqueValues = (column) => {\r\n        const values = new Set();\r\n        bussinessUnitLists?.forEach(item => {\r\n            values.add(item[column]);\r\n        })\r\n        return Array.from(values);\r\n    };\r\n    useEffect(() => {\r\n        if (bussinessUnitLists?.length === 0) {\r\n            // buService.getAllBuList().then((result) => {\r\n            //   setBussinessUnitLists(result.data)\r\n            // });\r\n        }\r\n    }, [bussinessUnitLists])\r\n    const handleDownload = () => {\r\n        let filelocation = 'massUpdate/sample-massUpdatepartDescription.xlsx'\r\n        massUpdate.downloadSampleFile(filelocation)\r\n    };\r\n    return (\r\n        <>\r\n            <Dialog open={importMassupdateFile}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Mass Update Part Description in Enovia and ERP\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Instance\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel id=\"bussinessUnit\">{instance}</InputLabel>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Upload File (Excel File)\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                                    Upload file\r\n                                                    <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                                </Button>\r\n                                                {noFileError && (<p>Please Select xlsx file to Upload </p>)}\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={2}>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <a\r\n                                                    // href={sampleFileUrl}\r\n                                                    onClick={handleDownload}\r\n                                                    download=\"Example-XLSX-document\"\r\n                                                    rel=\"noreferrer\"\r\n                                                    // target=\"_blank\"\r\n                                                    //style={{ color: \"blue\" }}\r\n                                                    style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                                                >\r\n                                                    Click Here\r\n                                                </a> to download the sample Excel template for the Part Description Update.\r\n\r\n                                                {/* <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={() => { download(sampleFileUrl) }}>\r\n                                                Download sample file\r\n                                            </Button> */}\r\n                                                {/* </a> */}\r\n                                            </div>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <b>Note:</b> Use only the Excel template, downloaded from this page. Other Excel templates\r\n                                                will not be accepted. The Excel file has four columns with Header labels in the\r\n                                                following order. Fields mark with * are the mandatory fields in the input excel.\r\n                                            </div>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                Part Type*<br />\r\n                                                Part Name*<br />\r\n                                                Part Revision*<br />\r\n                                                Part Description*<br />\r\n                                            </div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Snackbar\r\n                open={importfileBar}\r\n                autoHideDuration={6000}\r\n                onClose={handleImportfileBarClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleImportfileBarClose}\r\n                    severity={(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"success\" : \"error\"}\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    <AlertTitle>{(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"Success\" : \"Error\"}</AlertTitle>\r\n                    {\r\n                        (importResponse && (importResponse?.errorInTemplate?.length || importResponse?.errorInPlants?.length)) ? (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse?.msg} <br />\r\n                                    {\r\n                                        (importResponse?.errorInTemplateCount) ? (<>\r\n                                            Total Template Count: {importResponse?.errorInTemplateCount} <br />\r\n                                            Templates are: <br />\r\n                                            <ul>\r\n                                                {\r\n                                                    importResponse?.errorInTemplate?.map((eitem) => {\r\n                                                        return (\r\n                                                            <li key={shortId.generate()}>\r\n                                                                {eitem}\r\n                                                            </li>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </ul>\r\n                                        </>) : (<></>)\r\n                                    }\r\n\r\n                                    {\r\n                                        (importResponse?.errorInPlantCount) ? (\r\n                                            <>\r\n                                                Total Plant Count: {importResponse?.errorInPlantCount} <br />\r\n                                                Plants are: <br />\r\n                                                <ul>\r\n                                                    {\r\n                                                        importResponse?.errorInPlants?.map((eitem) => {\r\n                                                            return (\r\n                                                                <li key={shortId.generate()}>\r\n                                                                    {eitem}\r\n                                                                </li>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </ul>\r\n                                            </>\r\n                                        ) : (<></>)\r\n                                    }\r\n\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse.msg} <br />\r\n                                    Parts Description Updated: {importResponse.updateTemplates} <br />\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                    {/* Template imported successfully! */}\r\n                </Alert>\r\n            </Snackbar >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MassUpdatePartDescriptionInEnoviaAndERP;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { BUService } from \"services/buService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from \"@mui/material\";\r\n\r\n//import MuiAlert from \"@mui/material/Alert\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst ExportAllTemplateMapping = (props) => {\r\n    const buService = new BUService();\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { exportAllTempMapping, setExportAllTempMapping } = props;\r\n    // const [noFileError, setNoFileError] = useState(false);\r\n    // const [importResponse, setImportResponse] = useState(false);\r\n    // const [importfileBar, setimportfileBar] = useState(false);\r\n    // const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n    // const [sampleFileUrl, setSampleFileUrl] = useState(null);\r\n    //const [bussinessUnitLists, setBussinessUnitLists] = useState([]);\r\n    //const instance = localStorage.getItem('instance')\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    // const [ERPTypeError, setERPTypeError] = useState(false);\r\n    // const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n        dataToExport: 'masterData'\r\n    });\r\n\r\n    // const importFileData = (e) => {\r\n    //     console.log('file selected')\r\n    //     if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n    //         setImportedFileData(e.target.files[0])\r\n    //         setImportedFileName(e.target.files[0].name)\r\n    //         setNoFileError(false)\r\n    //     } else {\r\n    //         setNoFileError(true)\r\n    //         setImportedFileName(null)\r\n    //         setImportedFileData(null)\r\n    //     }\r\n    // }\r\n    const handleCloseImport = () => {\r\n        // setImportedFileData(null)\r\n        setExportAllTempMapping(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n        console.info(event.target, 'importSelectionValues')\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n\r\n        //if (importedFileData !== null) {\r\n        //alert('file is upl7oaded')\r\n        //if (window.confirm(`You have requested a report that will take some time to complete. This report will continue to run if you close this browser window. To access this report later, use 'Mass Update Part Description' > My Report.`)) {\r\n        //console.log('ok for mass update')\r\n        let postData = {\r\n            rdo: importSelectionValues.BU,\r\n            dataToExport: importSelectionValues.dataToExport,\r\n        }\r\n\r\n        // console.log(importSelectionValues, 'importSelectionValues');\r\n        console.log(postData, 'postData');\r\n        templateMappingService.exportAllTemplateMapping(postData).then((response) => {\r\n            console.log(response, 'response 11111');\r\n            // setImportResponse(response)\r\n            // setimportfileBar(true);\r\n            // setImportedFileData(null)\r\n            setImportedFileName(null)\r\n            //console.log(response, ';resprespresp')\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n            setExportAllTempMapping(false)\r\n        });\r\n        // }\r\n        // console.log('cancle for mass update')\r\n        //}\r\n    }\r\n\r\n    // const handleImportfileBarClose = (event, reason) => {\r\n    //     if (reason === \"clickaway\") {\r\n    //         return;\r\n    //     }\r\n    //     setimportfileBar(false);\r\n    // };\r\n    // const getUniqueValues = (column) => {\r\n    //     const values = new Set();\r\n    //     bussinessUnitLists?.forEach(item=>{\r\n    //         values.add(item[column]);\r\n    //     })\r\n    //     return Array.from(values);\r\n    // };\r\n    useEffect(() => {\r\n        if (bussinessUnitLists?.length === 0) {\r\n            // buService.getAllBuList().then((result) => {\r\n            //   setBussinessUnitLists(result.data)\r\n            // });\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Dialog open={exportAllTempMapping}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Export All Template Mappings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Data to Export\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <FormControl>\r\n                                                    {/* <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel> */}\r\n                                                    <RadioGroup\r\n                                                        row\r\n                                                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                                                        name=\"dataToExport\"\r\n                                                        defaultValue=\"masterData\"\r\n                                                        // value={value}\r\n                                                        onChange={handleImportOptionSelection}\r\n                                                    >\r\n                                                        <FormControlLabel value=\"masterData\" control={<Radio />} label=\"Master Data\" />\r\n                                                        <FormControlLabel value=\"draftData\" control={<Radio />} label=\"Proposed Changes\" />\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExportAllTemplateMapping;","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { BUService } from \"services/buService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from \"@mui/material\";\r\n\r\n//import MuiAlert from \"@mui/material/Alert\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst ExportAllGeneralPropertiesDialogBox = (props) => {\r\n    const buService = new BUService();\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { exportAllAdminGeneralPropertiesDialog, setExportAllAdminGeneralPropertiesDialog } = props;    \r\n    const [importedFileName, setImportedFileName] = useState(null);    \r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n        dataToExport: 'masterData'\r\n    });\r\n    \r\n    const handleCloseImport = () => {\r\n        // setImportedFileData(null)\r\n        setExportAllAdminGeneralPropertiesDialog(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n        let postData = {\r\n            rdo: importSelectionValues.BU,\r\n            dataToExport: importSelectionValues.dataToExport,\r\n        }\r\n        templateMappingService.exportAllAdminGeneralProperties(postData).then((response) => {\r\n            console.log(response, 'response 11111');\r\n            setImportedFileName(null)\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n            setExportAllAdminGeneralPropertiesDialog(false)\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Dialog open={exportAllAdminGeneralPropertiesDialog}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Export All Admin General Properties\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Data to Export\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <FormControl>\r\n                                                    {/* <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel> */}\r\n                                                    <RadioGroup\r\n                                                        row\r\n                                                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                                                        name=\"dataToExport\"\r\n                                                        defaultValue=\"masterData\"\r\n                                                        // value={value}\r\n                                                        onChange={handleImportOptionSelection}\r\n                                                    >\r\n                                                        <FormControlLabel value=\"masterData\" control={<Radio />} label=\"Master Data\" />\r\n                                                        <FormControlLabel value=\"draftData\" control={<Radio />} label=\"Proposed Changes\" />\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExportAllGeneralPropertiesDialogBox;","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { BUService } from \"services/buService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from \"@mui/material\";\r\n\r\n//import MuiAlert from \"@mui/material/Alert\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst ExportAllSystemSetupsDialogBox = (props) => {\r\n    const buService = new BUService();\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { exportAllAdminSystemSetupsDialog, setExportAllAdminSystemSetupsDialog } = props;    \r\n    const [importedFileName, setImportedFileName] = useState(null);    \r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n        dataToExport: 'masterData'\r\n    });\r\n    \r\n    const handleCloseImport = () => {\r\n        // setImportedFileData(null)\r\n        setExportAllAdminSystemSetupsDialog(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n        let postData = {\r\n            rdo: importSelectionValues.BU,\r\n            dataToExport: importSelectionValues.dataToExport,\r\n        }\r\n        templateMappingService.exportAllAdminSystemSetups(postData).then((response) => {\r\n            console.log(response, 'response 11111');\r\n            setImportedFileName(null)\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n            setExportAllAdminSystemSetupsDialog(false)\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Dialog open={exportAllAdminSystemSetupsDialog}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Export All Admin System System\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Data to Export\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <FormControl>\r\n                                                    {/* <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel> */}\r\n                                                    <RadioGroup\r\n                                                        row\r\n                                                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                                                        name=\"dataToExport\"\r\n                                                        defaultValue=\"masterData\"\r\n                                                        // value={value}\r\n                                                        onChange={handleImportOptionSelection}\r\n                                                    >\r\n                                                        <FormControlLabel value=\"masterData\" control={<Radio />} label=\"Master Data\" />\r\n                                                        <FormControlLabel value=\"draftData\" control={<Radio />} label=\"Proposed Changes\" />\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExportAllSystemSetupsDialogBox;","import { Box, ButtonBase, Icon, styled, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from '@mui/system';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport React, { Fragment, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Paragraph, Span } from '../Typography';\r\nimport MatxVerticalNavExpansionPanel from './MatxVerticalNavExpansionPanel';\r\nimport shortId from 'shortid';\r\n// import { getBasename } from \"app/utils/baseurl\";\r\nimport MassUpdatePartDescriptionInEnoviaAndERP from '../massUpdatePartDescriptionInEnoviaAndERP';\r\nimport ExportAllTemplateMapping from '../exportAllTemplateMapping';\r\nimport ExportAllGeneralPropertiesDialogBox from '../exportAllAdminGeneralProperties';\r\nimport CustomAlertBox from \"app/components/McoPages/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport ExportAllSystemSetupsDialogBox from '../exportAllAdminSystemSetups';\r\nconst ListLabel = styled(Paragraph)(({ theme, mode }) => ({\r\n  fontSize: '12px',\r\n  marginTop: '20px',\r\n  marginLeft: '15px',\r\n  marginBottom: '10px',\r\n  textTransform: 'uppercase',\r\n  display: mode === 'compact' && 'none',\r\n  color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst ExtAndIntCommon = {\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  borderRadius: '4px',\r\n  height: 44,\r\n  whiteSpace: 'pre',\r\n  marginBottom: '8px',\r\n  textDecoration: 'none',\r\n  justifyContent: 'space-between',\r\n  transition: 'all 150ms ease-in',\r\n  '&:hover': { background: 'rgba(255, 255, 255, 0.08)' },\r\n  '&.compactNavItem': {\r\n    overflow: 'hidden',\r\n    justifyContent: 'center !important',\r\n  },\r\n  '& .icon': {\r\n    fontSize: '18px',\r\n    paddingLeft: '16px',\r\n    paddingRight: '16px',\r\n    verticalAlign: 'middle',\r\n  },\r\n};\r\nconst ExternalLink = styled('a')(({ theme }) => ({\r\n  ...ExtAndIntCommon,\r\n  color: theme.palette.text.primary,\r\n}));\r\n\r\nconst InternalLink = styled(Box)(({ theme }) => ({\r\n  '& a': {\r\n    ...ExtAndIntCommon,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  '& .navItemActive': {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.16)',\r\n  },\r\n}));\r\n\r\nconst StyledText = styled(Span)(({ mode, theme }) => ({\r\n  fontSize: '0.875rem',\r\n  paddingLeft: '0.8rem',\r\n  display: mode === 'compact' && 'none',\r\n  color: theme.palette.common.white,\r\n}));\r\n\r\n//for mass update start\r\nconst StyledTextforMassUpdate = styled(Span)(({ mode, theme }) => ({\r\n  fontSize: '0.875rem',\r\n  paddingLeft: '0.8rem',\r\n  display: mode === 'compact' && 'none',\r\n  color: theme.palette.common.white,\r\n}));\r\n//for mass update end\r\nconst BulletIcon = styled('div')(({ theme }) => ({\r\n  padding: '2px',\r\n  marginLeft: '24px',\r\n  marginRight: '8px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n  background: theme.palette.common.white,\r\n}));\r\n\r\nconst BadgeValue = styled('div')(() => ({\r\n  padding: '1px 8px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n}));\r\n\r\nconst MatxVerticalNav = ({ items }) => {\r\n  const { settings, updateSettings } = useSettings();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { mode } = settings.layout1Settings.leftSidebar;\r\n  const theme = useTheme();\r\n  const isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  // const getBasenameVal = getBasename();\r\n  // const routePaths = getBasenameVal?.segment;\r\n  const [importMassupdateFile, setImportMassupdateFile] = useState(false)\r\n  const [exportAllTempMapping, setExportAllTempMapping] = useState(false)\r\n  const [exportAllAdminGeneralPropertiesDialog, setExportAllAdminGeneralPropertiesDialog] = useState(false)\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [exportAllAdminSystemSetupsDialog, setExportAllAdminSystemSetupsDialog] = useState(false)\r\n  const handleClickImportButton = (event) => {\r\n    if (event === 'massUpdate') {\r\n      setImportMassupdateFile(true)\r\n    } else if (event === 'exportAll') {\r\n      setExportAllTempMapping(true)\r\n    } else if (event === 'exportAllAdminGeneralProperties') {\r\n      setExportAllAdminGeneralPropertiesDialog(true)\r\n    } else if (event === 'exportAllAdminSystemSetups') {\r\n      setExportAllAdminSystemSetupsDialog(true)\r\n    }\r\n  }\r\n  // For NavLink components\r\n  const handleNavLinkClick = () => {\r\n    if (isMdScreen) {\r\n      updateSidebarMode({ mode: 'close' }); // Close the sidebar\r\n    }\r\n  };\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    let activeLayoutSettingsName = settings.activeLayout + 'Settings';\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    updateSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const renderLevels = (data) => {\r\n    return data.map((item, index) => {\r\n      if (item.type === 'label')\r\n        return (\r\n          <ListLabel key={shortId.generate()} mode={mode} className=\"sidenavHoverShow\">\r\n            {item.label}\r\n          </ListLabel>\r\n        );\r\n\r\n      if (item.children) {\r\n        return (\r\n          <MatxVerticalNavExpansionPanel mode={mode} item={item}>\r\n            <div style={{ marginLeft: '20px' }}>\r\n              {renderLevels(item.children)}\r\n            </div>\r\n          </MatxVerticalNavExpansionPanel>\r\n        );\r\n      } else if (item.type === 'extLink') {\r\n        return (\r\n          <ExternalLink\r\n            key={shortId.generate()}\r\n            href={item.path}\r\n            className={`${mode === 'compact' && 'compactNavItem'}`}\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n              {(() => {\r\n                if (item.icon) {\r\n                  return <Icon className=\"icon\">{item.icon}</Icon>;\r\n                } else {\r\n                  return <span className=\"item-icon icon-text\">{item.iconText}</span>;\r\n                }\r\n              })()}\r\n              <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                {item.name}\r\n              </StyledText>\r\n              <Box mx=\"auto\"></Box>\r\n              {item.badge && <BadgeValue>{item.badge.value}</BadgeValue>}\r\n            </ButtonBase>\r\n          </ExternalLink>\r\n        );\r\n      } else if (item.type === 'popup3') {\r\n        return (\r\n          <InternalLink key={shortId.generate()}>\r\n            {\r\n              (item.type === undefined || item.type === \"popup3\" || item.type !== \"popup\") ? (\r\n                <>\r\n                  {\r\n                    (item.type === \"popup3\") ? (\r\n                      <>\r\n                        <NavLink>\r\n                          <ButtonBase onClick={() => {\r\n                            handleClickImportButton(item.path)\r\n                          }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                            {item?.icon ? (\r\n                              <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                {item.icon}\r\n                              </Icon>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <BulletIcon\r\n                                  className={`nav-bullet`}\r\n                                  sx={{ display: mode === 'compact' && 'none' }}\r\n                                />\r\n                                <Box\r\n                                  className=\"nav-bullet-text\"\r\n                                  sx={{\r\n                                    ml: '20px',\r\n                                    fontSize: '11px',\r\n                                    display: mode !== 'compact' && 'none',\r\n                                  }}\r\n                                >\r\n                                  {item.iconText}\r\n                                </Box>\r\n                              </Fragment>\r\n                            )}\r\n                            <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledText>\r\n\r\n                            <Box mx=\"auto\" />\r\n\r\n                            {item.badge && (\r\n                              <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                            )}\r\n                          </ButtonBase>\r\n                        </NavLink>\r\n                        <ExportAllGeneralPropertiesDialogBox\r\n                          exportAllAdminGeneralPropertiesDialog={exportAllAdminGeneralPropertiesDialog}\r\n                          setExportAllAdminGeneralPropertiesDialog={setExportAllAdminGeneralPropertiesDialog}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <NavLink\r\n                        onClick={handleNavLinkClick}\r\n                        to={`${item.path}`}\r\n                        className={({ isActive }) =>\r\n                          isActive\r\n                            ? `navItemActive ${mode === 'compact' && 'compactNavItem'}`\r\n                            : `${mode === 'compact' && 'compactNavItem'}`\r\n                        }\r\n                      >\r\n                        <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          {item?.icon ? (\r\n                            <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                              {item.icon}\r\n                            </Icon>\r\n                          ) : (\r\n                            <Fragment>\r\n                              <BulletIcon\r\n                                className={`nav-bullet`}\r\n                                sx={{ display: mode === 'compact' && 'none' }}\r\n                              />\r\n                              <Box\r\n                                className=\"nav-bullet-text\"\r\n                                sx={{\r\n                                  ml: '20px',\r\n                                  fontSize: '11px',\r\n                                  display: mode !== 'compact' && 'none',\r\n                                }}\r\n                              >\r\n                                {item.iconText}\r\n                              </Box>\r\n                            </Fragment>\r\n                          )}\r\n                          <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                            {item.name}\r\n                          </StyledText>\r\n\r\n                          <Box mx=\"auto\" />\r\n\r\n                          {item.badge && (\r\n                            <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                          )}\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    )\r\n                  }\r\n                </>\r\n              ) :\r\n                (\r\n                  <>\r\n                    <InternalLink key={shortId.generate()}>\r\n                      <NavLink>\r\n                        <ButtonBase onClick={() => {\r\n                          handleClickImportButton(item.path)\r\n                        }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          <Fragment>\r\n                            <BulletIcon\r\n                              className={`nav-bullet`}\r\n                              sx={{ display: mode === 'compact' && 'none' }}\r\n                            />\r\n                            <StyledTextforMassUpdate mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledTextforMassUpdate>\r\n                          </Fragment>\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    </InternalLink>\r\n                    <MassUpdatePartDescriptionInEnoviaAndERP\r\n                      importMassupdateFile={importMassupdateFile}\r\n                      setImportMassupdateFile={setImportMassupdateFile}\r\n                      setOpenAlert={setOpenAlert}\r\n                      setOpenDesc={setOpenDesc}\r\n                      setIsLoading={setIsLoading}\r\n                    />\r\n                    {\r\n                      (openDesc) ? (\r\n                        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                      ) : (<></>)\r\n                    }\r\n                    {\r\n                      isLoading ? (\r\n                        <div className=\"textAlignCenter\">\r\n                          <Loader show={isLoading} />\r\n                        </div>\r\n                      ) : <></>\r\n                    }\r\n                  </>\r\n                )\r\n            }\r\n          </InternalLink>\r\n        );\r\n      } else if (item.type === 'popup6') {\r\n        return (\r\n          <InternalLink key={shortId.generate()}>\r\n            {\r\n              (item.type === undefined || item.type === \"popup6\" || item.type !== \"popup\") ? (\r\n                <>\r\n                  {\r\n                    (item.type === \"popup6\") ? (\r\n                      <>\r\n                        <NavLink>\r\n                          <ButtonBase onClick={() => {\r\n                            handleClickImportButton(item.path)\r\n                          }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                            {item?.icon ? (\r\n                              <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                {item.icon}\r\n                              </Icon>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <BulletIcon\r\n                                  className={`nav-bullet`}\r\n                                  sx={{ display: mode === 'compact' && 'none' }}\r\n                                />\r\n                                <Box\r\n                                  className=\"nav-bullet-text\"\r\n                                  sx={{\r\n                                    ml: '20px',\r\n                                    fontSize: '11px',\r\n                                    display: mode !== 'compact' && 'none',\r\n                                  }}\r\n                                >\r\n                                  {item.iconText}\r\n                                </Box>\r\n                              </Fragment>\r\n                            )}\r\n                            <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledText>\r\n\r\n                            <Box mx=\"auto\" />\r\n\r\n                            {item.badge && (\r\n                              <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                            )}\r\n                          </ButtonBase>\r\n                        </NavLink>\r\n                        <ExportAllSystemSetupsDialogBox\r\n                          exportAllAdminSystemSetupsDialog={exportAllAdminSystemSetupsDialog}\r\n                          setExportAllAdminSystemSetupsDialog={setExportAllAdminSystemSetupsDialog}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <NavLink\r\n                        onClick={handleNavLinkClick}\r\n                        to={`${item.path}`}\r\n                        className={({ isActive }) =>\r\n                          isActive\r\n                            ? `navItemActive ${mode === 'compact' && 'compactNavItem'}`\r\n                            : `${mode === 'compact' && 'compactNavItem'}`\r\n                        }\r\n                      >\r\n                        <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          {item?.icon ? (\r\n                            <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                              {item.icon}\r\n                            </Icon>\r\n                          ) : (\r\n                            <Fragment>\r\n                              <BulletIcon\r\n                                className={`nav-bullet`}\r\n                                sx={{ display: mode === 'compact' && 'none' }}\r\n                              />\r\n                              <Box\r\n                                className=\"nav-bullet-text\"\r\n                                sx={{\r\n                                  ml: '20px',\r\n                                  fontSize: '11px',\r\n                                  display: mode !== 'compact' && 'none',\r\n                                }}\r\n                              >\r\n                                {item.iconText}\r\n                              </Box>\r\n                            </Fragment>\r\n                          )}\r\n                          <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                            {item.name}\r\n                          </StyledText>\r\n\r\n                          <Box mx=\"auto\" />\r\n\r\n                          {item.badge && (\r\n                            <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                          )}\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    )\r\n                  }\r\n                </>\r\n              ) :\r\n                (\r\n                  <>\r\n                    <InternalLink key={shortId.generate()}>\r\n                      <NavLink>\r\n                        <ButtonBase onClick={() => {\r\n                          handleClickImportButton(item.path)\r\n                        }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          <Fragment>\r\n                            <BulletIcon\r\n                              className={`nav-bullet`}\r\n                              sx={{ display: mode === 'compact' && 'none' }}\r\n                            />\r\n                            <StyledTextforMassUpdate mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledTextforMassUpdate>\r\n                          </Fragment>\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    </InternalLink>\r\n                    <MassUpdatePartDescriptionInEnoviaAndERP\r\n                      importMassupdateFile={importMassupdateFile}\r\n                      setImportMassupdateFile={setImportMassupdateFile}\r\n                      setOpenAlert={setOpenAlert}\r\n                      setOpenDesc={setOpenDesc}\r\n                      setIsLoading={setIsLoading}\r\n                    />\r\n                    {\r\n                      (openDesc) ? (\r\n                        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                      ) : (<></>)\r\n                    }\r\n                    {\r\n                      isLoading ? (\r\n                        <div className=\"textAlignCenter\">\r\n                          <Loader show={isLoading} />\r\n                        </div>\r\n                      ) : <></>\r\n                    }\r\n                  </>\r\n                )\r\n            }\r\n          </InternalLink>\r\n        );\r\n      } else {\r\n        return (\r\n          <InternalLink key={shortId.generate()}>\r\n            {\r\n              (item.type === undefined || item.type === \"popup2\" || item.type !== \"popup\") ? (\r\n                <>\r\n                  {\r\n                    (item.type === \"popup2\") ? (\r\n                      <>\r\n                        <NavLink>\r\n                          <ButtonBase onClick={() => {\r\n                            handleClickImportButton(item.path)\r\n                          }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                            {item?.icon ? (\r\n                              <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                {item.icon}\r\n                              </Icon>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <BulletIcon\r\n                                  className={`nav-bullet`}\r\n                                  sx={{ display: mode === 'compact' && 'none' }}\r\n                                />\r\n                                <Box\r\n                                  className=\"nav-bullet-text\"\r\n                                  sx={{\r\n                                    ml: '20px',\r\n                                    fontSize: '11px',\r\n                                    display: mode !== 'compact' && 'none',\r\n                                  }}\r\n                                >\r\n                                  {item.iconText}\r\n                                </Box>\r\n                              </Fragment>\r\n                            )}\r\n                            <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledText>\r\n\r\n                            <Box mx=\"auto\" />\r\n\r\n                            {item.badge && (\r\n                              <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                            )}\r\n                          </ButtonBase>\r\n                        </NavLink>\r\n                        <ExportAllTemplateMapping\r\n                          exportAllTempMapping={exportAllTempMapping}\r\n                          setExportAllTempMapping={setExportAllTempMapping}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <NavLink\r\n                        onClick={handleNavLinkClick}\r\n                        to={`${item.path}`}\r\n                        className={({ isActive }) =>\r\n                          isActive\r\n                            ? `navItemActive ${mode === 'compact' && 'compactNavItem'}`\r\n                            : `${mode === 'compact' && 'compactNavItem'}`\r\n                        }\r\n                      >\r\n                        <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          {item?.icon ? (\r\n                            <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                              {item.icon}\r\n                            </Icon>\r\n                          ) : (\r\n                            <Fragment>\r\n                              <BulletIcon\r\n                                className={`nav-bullet`}\r\n                                sx={{ display: mode === 'compact' && 'none' }}\r\n                              />\r\n                              <Box\r\n                                className=\"nav-bullet-text\"\r\n                                sx={{\r\n                                  ml: '20px',\r\n                                  fontSize: '11px',\r\n                                  display: mode !== 'compact' && 'none',\r\n                                }}\r\n                              >\r\n                                {item.iconText}\r\n                              </Box>\r\n                            </Fragment>\r\n                          )}\r\n                          <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                            {item.name}\r\n                          </StyledText>\r\n\r\n                          <Box mx=\"auto\" />\r\n\r\n                          {item.badge && (\r\n                            <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                          )}\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    )\r\n                  }\r\n                </>\r\n              ) :\r\n                (\r\n                  <>\r\n                    <InternalLink key={shortId.generate()}>\r\n                      <NavLink>\r\n                        <ButtonBase onClick={() => {\r\n                          handleClickImportButton(item.path)\r\n                        }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          <Fragment>\r\n                            <BulletIcon\r\n                              className={`nav-bullet`}\r\n                              sx={{ display: mode === 'compact' && 'none' }}\r\n                            />\r\n                            <StyledTextforMassUpdate mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledTextforMassUpdate>\r\n                          </Fragment>\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    </InternalLink>\r\n                    <MassUpdatePartDescriptionInEnoviaAndERP\r\n                      importMassupdateFile={importMassupdateFile}\r\n                      setImportMassupdateFile={setImportMassupdateFile}\r\n                      setOpenAlert={setOpenAlert}\r\n                      setOpenDesc={setOpenDesc}\r\n                      setIsLoading={setIsLoading}\r\n                    />\r\n                    {\r\n                      (openDesc) ? (\r\n                        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                      ) : (<></>)\r\n                    }\r\n                    {\r\n                      isLoading ? (\r\n                        <div className=\"textAlignCenter\">\r\n                          <Loader show={isLoading} />\r\n                        </div>\r\n                      ) : <></>\r\n                    }\r\n                  </>\r\n                )\r\n            }\r\n          </InternalLink>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return <div className=\"navigation\">{renderLevels(items)}</div>;\r\n};\r\n\r\nexport default React.memo(MatxVerticalNav);","import React from 'react';\r\nimport { Card } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nconst CardRoot = styled(Card)(() => ({\r\n  height: '100%',\r\n  padding: '20px 24px',\r\n}));\r\n\r\nconst CardTitle = styled('div')(({ subtitle }) => ({\r\n  fontSize: '1rem',\r\n  fontWeight: '500',\r\n  textTransform: 'capitalize',\r\n  marginBottom: !subtitle && '16px',\r\n}));\r\n\r\nconst SimpleCard = ({ children, title, subtitle, icon }) => {\r\n  return (\r\n    <CardRoot elevation={6}>\r\n      <CardTitle subtitle={subtitle}>{title}</CardTitle>\r\n      {subtitle && <Box sx={{ mb: 2 }}>{subtitle}</Box>}\r\n      {children}\r\n    </CardRoot>\r\n  );\r\n};\r\n\r\nexport default SimpleCard;\r\n","import { styled as makeStyles } from '@mui/material/styles';\r\n\r\nexport const spacingStyles = makeStyles(({ palette, ...theme }) => ({\r\n    '@global': {\r\n        '.px-80': {\r\n            paddingRight: '80px',\r\n            paddingLeft: '80px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingRight: '16px',\r\n                paddingLeft: '16px',\r\n            },\r\n        },\r\n        '.px-sm-30': {\r\n            padding: '0px 30px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: '0px 16px',\r\n            },\r\n        },\r\n        '.p-sm-24': {\r\n            padding: '24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: '16px !important',\r\n            },\r\n        },\r\n        '.px-sm-24': {\r\n            padding: '0px 24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: '0px 12px !important',\r\n            },\r\n        },\r\n        '.pt-sm-24': {\r\n            paddingTop: '24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingTop: '16px !important',\r\n            },\r\n        },\r\n        '.pl-sm-24': {\r\n            paddingLeft: '24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingLeft: '16px !important',\r\n            },\r\n        },\r\n        '.m-auto': { margin: 'auto !important' },\r\n        '.mx-auto': {\r\n            marginLeft: 'auto !important',\r\n            marginRight: 'auto !important',\r\n        },\r\n        '.my-auto': {\r\n            marginTop: 'auto !important',\r\n            marginBottom: 'auto !important',\r\n        },\r\n        '.m-sm-30': {\r\n            margin: '30px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                margin: '16px',\r\n            },\r\n        },\r\n        '.mb-sm-30': {\r\n            marginBottom: '30px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                marginBottom: '16px',\r\n            },\r\n        },\r\n        '.w-full': { width: '100%' },\r\n        '.mui-invalid': { color: '#FF3D57' },\r\n        '.max-w-full': { maxWidth: '100% !important' },\r\n        '.min-w-full': { minWidth: '100% !important' },\r\n        '.min-w-full-screen': { minWidth: '100vw !important' },\r\n        '.w-full-screen': { width: '100vw' },\r\n        '.min-w-600': { minWidth: '600px' },\r\n        '.min-w-750': { minWidth: '750px' },\r\n        '.min-w-1050': { minWidth: '1050px' },\r\n        '.max-w-450': { maxWidth: '450px' },\r\n        '.max-w-550': { maxWidth: '550px' },\r\n        '.max-h-500': { maxHeight: '500px' },\r\n        '.max-w-600': { maxWidth: '600px' },\r\n        '.max-w-770': { maxWidth: '770px' },\r\n        '.max-w-800': { maxWidth: '800px' },\r\n        '.max-w-850': { maxWidth: '850px' },\r\n        '.max-w-900': { maxWidth: '900px' },\r\n        '.max-w-1340': { maxWidth: '1340px' },\r\n        '.h-full': { height: '100% !important' },\r\n        '.min-h-full': { minHeight: '100% !important' },\r\n        '.h-auto': { height: 'auto' },\r\n        '.h-full-screen': { height: '100vh' },\r\n        '.min-h-full-screen': { minHeight: '100vh !important' },\r\n        '.h-150px': { height: '150px !important' },\r\n        '.size-36': { height: '36px !important', width: '36px !important' },\r\n        '.size-24': { height: '24px !important', width: '24px !important' },\r\n        ...generateMarginPadding(0, 25, 0.25, 'rem'),\r\n        ...generateMarginPadding(1, 16, 1, 'px'),\r\n        ...generateMarginPadding(-25, -1, 0.25, 'rem'),\r\n        ...generateMarginPadding(-16, -1, 1, 'px'),\r\n        ...generateHeightWidh(),\r\n    },\r\n}))\r\n\r\nconst generateMarginPadding = (\r\n    start = 0,\r\n    end = 25,\r\n    increament = 0.25,\r\n    unit = 'rem'\r\n) => {\r\n    let classList = {}\r\n\r\n    for (let i = start; i <= end; i++) {\r\n        classList[`.m-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            margin: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mt-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginTop: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mb-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginBottom: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mr-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.ml-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginLeft: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mx-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginLeft: `${i * increament}${unit} !important`,\r\n            marginRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.my-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginTop: `${i * increament}${unit} !important`,\r\n            marginBottom: `${i * increament}${unit} !important`,\r\n        }\r\n\r\n        classList[`.p-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            padding: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pt-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingTop: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pb-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingBottom: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pr-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pl-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingLeft: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.px-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingLeft: `${i * increament}${unit} !important`,\r\n            paddingRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.py-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingTop: `${i * increament}${unit} !important`,\r\n            paddingBottom: `${i * increament}${unit} !important`,\r\n        }\r\n    }\r\n\r\n    return classList\r\n}\r\n\r\nconst generateHeightWidh = (\r\n    start = 0,\r\n    end = 400,\r\n    increament = 4,\r\n    unit = 'px'\r\n) => {\r\n    let classList = {}\r\n\r\n    for (let i = start; i <= end; i += increament) {\r\n        classList[`.w-${i}`] = {\r\n            width: `${i}${unit} !important`,\r\n        }\r\n        classList[`.min-w-${i}`] = {\r\n            minWidth: `${i}${unit} !important`,\r\n        }\r\n        classList[`.max-w-${i}`] = {\r\n            maxWidth: `${i}${unit} !important`,\r\n        }\r\n        classList[`.h-${i}`] = {\r\n            height: `${i}${unit} !important`,\r\n        }\r\n        classList[`.min-h-${i}`] = {\r\n            minHeight: `${i}${unit} !important`,\r\n        }\r\n        classList[`.max-h-${i}`] = {\r\n            maxHeight: `${i}${unit} !important`,\r\n        }\r\n    }\r\n\r\n    return classList\r\n}\r\n","import './VendorCss'\r\nimport React from 'react'\r\n// import { variableStyles } from './_variables'\r\n// import { positioningStyles } from './utilities/_positionings'\r\nimport { spacingStyles } from './utilities/_spacing'\r\n// import { borderStyles } from './utilities/_border'\r\n// import { shadowStyles } from './utilities/_shadows'\r\n// import { colorStyles } from './utilities/_color'\r\n// import { typographyStyles } from './utilities/_typography'\r\nimport { commonStyles } from './utilities/_common'\r\n\r\nconst GlobalCss = ({ children }) => {\r\n    // variableStyles()\r\n    // positioningStyles()\r\n    // spacingStyles()\r\n    // borderStyles()\r\n    // colorStyles()\r\n    // shadowStyles()\r\n    // typographyStyles()\r\n    // commonStyles()\r\n\r\n    return children || null\r\n}\r\n\r\nexport default React.memo(GlobalCss)\r\n","import { styled as makeStyles } from '@mui/material/styles';\r\n\r\nexport const commonStyles = makeStyles(({ palette, ...theme }) => ({\r\n    '@global': {\r\n        '.circular-image-small': {\r\n            height: '48px',\r\n            width: '48px',\r\n            borderRadius: '50%',\r\n            overflow: 'hidden',\r\n        },\r\n        '.card': { transition: 'all 0.3s ease' },\r\n        '.card:hover': { boxShadow: theme.shadows[12] },\r\n        '.card-title': {\r\n            fontSize: '1rem',\r\n            textTransform: 'capitalize',\r\n            fontWeight: '500',\r\n        },\r\n        '.card-subtitle': { fontSize: '0.875rem', color: 'var(--text-muted)' },\r\n        '.theme-dark .card-subtitle': { color: 'rgba(255, 255, 255, 0.54)' },\r\n        '.hide-on-mobile': { display: 'inherit' },\r\n        '@media screen and (max-width: 767px)': {\r\n            '.hide-on-mobile': { display: 'none !important' },\r\n            '.show-on-mobile': { display: 'inherit !important' },\r\n            '.invisible-on-pc': { visibility: 'visible' },\r\n        },\r\n        '@media screen and (min-width: 1200px)': {\r\n            '.hide-on-pc': { display: 'none !important' },\r\n        },\r\n        '@media screen and (max-width: 1200px)': {\r\n            '.show-on-pc': { display: 'none !important' },\r\n        },\r\n        '.VictoryContainer svg': { height: '100% !important' },\r\n        '.box-shadow-none': { boxShadow: 'none !important' },\r\n        '.circle-44': { height: '44px !important', width: '44px !important' },\r\n        '.circle-32': {\r\n            height: '32px !important',\r\n            minHeight: '32px !important',\r\n            width: '32px !important',\r\n        },\r\n        '.circle-32 .MuiFab-root': { minHeight: '32px !important' },\r\n        '.circle-32 .MuiIcon-root': { fontSize: '13px !important' },\r\n        '.show-on-mobile': { display: 'none !important' },\r\n        '.invisible-on-pc': { visibility: 'hidden' },\r\n        '.highlight-js pre': { whiteSpace: 'pre-line' },\r\n        '.cursor-pointer': {\r\n            cursor: 'pointer',\r\n        },\r\n        '.cursor-move': {\r\n            cursor: 'move',\r\n        },\r\n        '.avatar': {\r\n            height: '32px !important',\r\n            width: '32px !important',\r\n        },\r\n        '.face-group .avatar:not(:first-child)': {\r\n            marginLeft: '-0.875rem !important',\r\n        },\r\n        '.opacity-1': {\r\n            opacity: 1,\r\n        },\r\n        '.datatimeInputCls': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}))\r\n","import { Box, styled } from '@mui/material';\r\nimport clsx from 'clsx';\r\n\r\nconst StyledBox = styled(Box)(({ theme, texttransformstyle, ellipsis }) => ({\r\n  textTransform: texttransformstyle || 'none',\r\n  whiteSpace: ellipsis ? 'nowrap' : 'normal',\r\n  overflow: ellipsis ? 'hidden' : '',\r\n  textOverflow: ellipsis ? 'ellipsis' : '',\r\n}));\r\n\r\nexport const H1 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({ [className || '']: true })}\r\n      component=\"h1\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"28px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H2 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({ [className || '']: true })}\r\n      component=\"h2\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"24px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H3 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({ [className || '']: true })}\r\n      component=\"h3\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"18px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H4 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"h4\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"16px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H5 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"h5\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"14px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H6 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"h6\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"13px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Paragraph = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"p\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"14px\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Small = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"small\"\r\n      fontSize=\"12px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Span = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"span\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Tiny = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"small\"\r\n      fontSize=\"10px\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n","import { MCOService } from '../../../services/mcoService';\r\n\r\nexport const mcoService = new MCOService();\r\n\r\nexport const GET_MCOLIST = 'GET_MCOLIST';\r\nexport const GET_MCOINFO = 'GET_MCOINFO';\r\nexport const GET_UPDATEMCODETAILS = 'GET_UPDATEMCODETAILS';\r\nexport const GET_UPDATE_MCO_RELATED_VALUES = 'GET_UPDATE_MCO_RELATED_VALUES';\r\nexport const SET_ALL_CA_MCO_DETAILS = 'SET_ALL_CA_MCO_DETAILS';\r\nexport const SET_UPDATED_ROUTES = \"SET_UPDATED_ROUTES\";\r\n\r\nexport const RESET_VALUES = 'RESET_VALUES';\r\n\r\nexport const setUpdatedRoutes = (routes) => ({\r\n  type: SET_UPDATED_ROUTES,\r\n  payload: routes,\r\n});\r\n\r\nexport const getMCOLists = (data) => async (dispatch) => {\r\n  try {\r\n    // await mcoService.searchMCO(search).then((result) => {\r\n    await dispatch({\r\n      type: GET_MCOLIST,\r\n      payload: data,\r\n    })\r\n    // })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const updateResponseData = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: GET_MCOINFO,\r\n      payload: data,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const updateMcoDetails = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: GET_UPDATEMCODETAILS,\r\n      payload: data,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const update_generalValues = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: GET_UPDATE_MCO_RELATED_VALUES,\r\n      payload: data,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const resetValues = () => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: RESET_VALUES,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\n\r\nexport const setAllCaMCODetails = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: SET_ALL_CA_MCO_DETAILS,\r\n      payload: data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useEffect } from 'react';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function BuConfirmationBox({ isBUModified, updateBUModifiedData }) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = (event, reason) => {\r\n        // Prevent closing on backdrop click or escape key\r\n        if (reason === 'backdropClick' || reason === 'escapeKeyDown') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        updateBUModifiedData();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOpen(isBUModified);\r\n    }, [isBUModified]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <BootstrapDialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={open}\r\n            >\r\n                <DialogTitle sx={{ m: 0, p: 2 }} id=\"customized-dialog-title\">\r\n                    Organization Credentials Updated\r\n                </DialogTitle>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={handleClose}\r\n                    sx={(theme) => ({\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        color: theme.palette.grey[500],\r\n                    })}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                    <Typography gutterBottom>\r\n                        The credentials for the organization have been modified. To ensure you have the latest data,\r\n                        <br></br>\r\n                        <br></br>\r\n                        please click \"Okay\" to proceed.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose}>\r\n                        Okay\r\n                    </Button>\r\n                </DialogActions>\r\n            </BootstrapDialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { useNavigate, useLocation } from \"react-router-dom\"\r\nimport { TemplateMappingService } from \"./../../services/templateMappingService\";\r\nimport { UserService } from \"services/usersService\";\r\nimport Loader from 'app/components/Loader';\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport SomethingWrong from \"app/components/McoPages/PageError\";\r\nimport BuConfirmationBox from \"app/components/BuConfirmationBox\";\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\n\r\nconst OracleSettingsContext = createContext({\r\n    isLoading: false,\r\n    userDetails: null,\r\n    bussinessUnit: null,\r\n    bussinessUnitLists: null,\r\n    templatesInfo: [],\r\n    allTemplatesInfo: [],\r\n    mappingTemplatesInfo: [],\r\n    refreshData: true,\r\n    updateBussinessUnit: () => null,\r\n    updateBussinessUnitLists: () => null,\r\n    updateTemplateLists: () => [],\r\n    updateAllTemplate: () => [],\r\n    updateMappingTemplatesInfo: () => [],\r\n    updateRefreshData: () => null,\r\n})\r\n\r\nexport const OracleMappingsProvider = ({ children }) => {\r\n    const { authState, authService } = useOktaAuth();\r\n    const {\r\n        globalBussinessUnit,\r\n    } = useSelector((state) => ({\r\n        globalBussinessUnit: state.globalBUandInstance.bu,\r\n    }), shallowEqual);\r\n\r\n    // const tempService = new templateService();\r\n    const tempMapService = new TemplateMappingService();\r\n    const userService = new UserService();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [userDetails, setUserDetails] = useState(null);\r\n    const [isPageHavingError, setIsPageHavingError] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [bussinessUnit, setBussinessUnit] = useState(localStorage.getItem('bussinessUnit') || null);\r\n    const [isBUModified, setIsBUModified] = useState(false);\r\n    const [bussinessUnitLists, setBussinessUnitLists] = useState(null);\r\n    const [templatesInfo, setTemplatesInfo] = useState([]);\r\n    const [allTemplatesInfo, setAllTemplatesInfo] = useState([]);\r\n    const [mappingTemplatesInfo, setMappingTemplatesInfo] = useState([]);\r\n    const [refreshData, setRefreshData] = useState(true);\r\n\r\n    const updateBussinessUnit = (values) => {\r\n        setBussinessUnit(values);\r\n    };\r\n    const updateBussinessUnitLists = (values) => {\r\n        setBussinessUnitLists(values);\r\n    };\r\n    const updateTemplateLists = (values) => {\r\n        setTemplatesInfo(values);\r\n        setAllTemplatesInfo(values);\r\n    };\r\n    const updateAllTemplate = (values) => {\r\n        setAllTemplatesInfo(values);\r\n        setTemplatesInfo(values);\r\n    };\r\n    const updateMappingTemplatesInfo = (values) => {\r\n        setMappingTemplatesInfo(values);\r\n    };\r\n    const updateRefreshData = (values) => {\r\n        setRefreshData(values);\r\n    };\r\n\r\n    const updateBUModifiedData = () => {\r\n        if (location?.pathname?.includes(\"mcodetail\")) {\r\n            window.location.reload();\r\n        } else {\r\n            const bu = localStorage.getItem('bussinessUnit');\r\n            if (bu) {\r\n                setBussinessUnit(bu);\r\n            }\r\n        }\r\n        setIsBUModified(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userDetails && mappingTemplatesInfo?.length <= 1) {\r\n            if (authState && authState.isAuthenticated) {\r\n                // tempService.getAllTemplateList().then((result) => {\r\n                //     updateAllTemplate(result.template);\r\n                // });\r\n                updateRefreshData(true);\r\n                tempMapService.getAlltemplateMappings().then((result) => {\r\n                    updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n                    updateTemplateLists(result?.data?.templateList);\r\n                    updateBussinessUnitLists(result?.data?.bulist);\r\n\r\n                    updateAllTemplate(result?.data?.templateList);\r\n\r\n                    updateRefreshData(false);\r\n                });\r\n            }\r\n        }\r\n        if (authState && authState.isAuthenticated && authService) {\r\n            authService.getAccessToken().then((accessToken) => {\r\n                console.log('Access Token: ', accessToken);\r\n            });\r\n        }\r\n    }, [authState, authService, userDetails]);\r\n\r\n    useEffect(() => {\r\n        if (authState?.isAuthenticated && !userDetails) {\r\n            setIsLoading(true);\r\n            userService.validateUser().then((result) => {\r\n                if (result.status === 'error') {\r\n                    navigate(\"/accessDenied\", { state: { userInfo: result?.data[0], NotAuthorized: true } });\r\n                } else {\r\n                    if (result?.data?.length) {\r\n                        setUserDetails(result?.data[0]);\r\n                        setIsLoading(false);\r\n                    }\r\n                }\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setIsPageHavingError(true);\r\n            });\r\n        }\r\n    }, [authState]);\r\n\r\n    useEffect(() => {\r\n        console.log(globalBussinessUnit, \"=====globalBussinessUnit\");\r\n\r\n        const checkLocalStorage = (event) => {\r\n            // for avoid the check for mcodetails screen\r\n            if (location?.pathname?.includes(\"mcodetail\")) {\r\n                return false;\r\n            }\r\n            const bu = localStorage.getItem('bussinessUnit');\r\n\r\n            console.log(bussinessUnit, \"===localStorageBusinessUnit\");\r\n            console.log(bu, \"===localStorageBusinessUnit 2\");\r\n            // if (event.key === 'bussinessUnit') { // Check if the specific key you're interested in changed\r\n            //     return;\r\n            // }\r\n            if (bu && bu !== bussinessUnit) {\r\n                // setBussinessUnit(bu);\r\n                setIsBUModified(true);\r\n                console.log(bu, \"===localStorageBusinessUnit 3\");\r\n            }\r\n        };\r\n\r\n        window.addEventListener('storage', checkLocalStorage);\r\n        // checkLocalStorage(); // Check initially\r\n\r\n        return () => {\r\n            window.removeEventListener('storage', checkLocalStorage);\r\n        };\r\n    });\r\n\r\n\r\n    return (\r\n        <OracleSettingsContext.Provider\r\n            value={{\r\n                isLoading,\r\n                userDetails,\r\n                bussinessUnit,\r\n                bussinessUnitLists,\r\n                templatesInfo,\r\n                allTemplatesInfo,\r\n                mappingTemplatesInfo,\r\n                refreshData,\r\n                updateBussinessUnit,\r\n                updateBussinessUnitLists,\r\n                updateTemplateLists,\r\n                updateAllTemplate,\r\n                updateMappingTemplatesInfo,\r\n                updateRefreshData\r\n            }}\r\n        >\r\n            {\r\n                (!authState?.isAuthenticated) ? (children) : (\r\n                    <>\r\n                        {\r\n                            (!isPageHavingError) ? (\r\n                                <>\r\n                                    {(userDetails && !isLoading) ? children : (\r\n                                        <div style={{ textAlign: \"center\", position: \"absolute\", width: \"100%\", top: \"50%\" }}>\r\n                                            <CircularProgress />\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            ) : (<SomethingWrong />)\r\n                        }\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                (isBUModified) ? (<>\r\n                    <BuConfirmationBox isBUModified={isBUModified} updateBUModifiedData={updateBUModifiedData} />\r\n                </>) : (null)\r\n            }\r\n        </OracleSettingsContext.Provider>\r\n    );\r\n};\r\n\r\nexport default OracleSettingsContext;","import { useContext } from 'react'\r\nimport SettingsContext from 'app/contexts/SettingsContext'\r\n\r\nconst useSettings = () => useContext(SettingsContext)\r\n\r\nexport default useSettings\r\n","import { MatxSuspense } from 'app/components';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { MatxLayouts } from './index';\r\n\r\nconst MatxLayout = (props) => {\r\n  const { settings } = useSettings();\r\n  const Layout = MatxLayouts[settings.activeLayout];\r\n\r\n  return (\r\n    <MatxSuspense>\r\n      <Layout {...props} />\r\n    </MatxSuspense>\r\n  );\r\n};\r\n\r\nexport default MatxLayout;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE  } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nimport { Store } from \"app/redux/Store\";\r\nimport { update_generalValues } from 'app/redux/actions/MCODetailsAction';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\nexport class UserService {\r\n  getAllUsersList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/users/getUsers`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getUsers\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  addnewUser = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/addUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewUser\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateUser = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/users/updateUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateUser\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteUser = (ids) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/users/deleteUser`,\r\n        { data: { ids } },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting users:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n  validateUser = () => {\r\n    console.log(\"validateUser called with URL:\", `${BACKEND_API_URL}/users/validateUser`);\r\n    console.log(\"Headers being sent:\", REACT_APP_BACKEND_API_HEADER);\r\n  \r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/users/validateUser`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        console.log(\"validateUser response:\", res);\r\n  \r\n        if (res.status === 200) {\r\n          console.log(\"validateUser success:\", res.data);\r\n          return res.data;\r\n        }\r\n  \r\n        console.warn(\"validateUser unexpected status:\", res.status);\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"validateUser request failed:\", error);\r\n  \r\n        Store.dispatch(update_generalValues({\r\n          isPageHavingIssue: true\r\n        }));\r\n  \r\n        throw error;\r\n      });\r\n  };\r\n  \r\n  requestForAccess = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/requestForAccessApp`,\r\n        { data: data },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error requestForAccessApp users:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  importUser = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/bulkAddUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddUser\", e);\r\n        return [];\r\n      });\r\n  };\r\n  exportUser = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/bulkExportUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath.replace(\"downloads/\", \"\") \r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportTemplate:', error);\r\n        throw error;\r\n      });\r\n  };\r\n  downloadSampleFile = (fileName) => {\r\n    window.open(`http://localhost:8086/users/bulkExportUser/${fileName}`);\r\n  }\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\n\r\nexport class templateService {\r\n  // ===============Template=====================\r\n\r\n  // get the templateList\r\n  getAllTemplateList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/template/gettemplate`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTemplateDetails\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  addnewTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/template/addTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n  getTemplateById = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/template/getTemplateById`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTemplateById\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTemplate = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/template/updateTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTemplate = (ids) => {\r\n    return ApiInstance.delete(\r\n      `${BACKEND_API_URL}/template/deleteTemplate`,\r\n      { data: { ids } },\r\n      REACT_APP_BACKEND_API_HEADER\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting plant:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  importTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/template/bulkAddTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddTemplate\", e);\r\n        return [];\r\n      });\r\n  };\r\n  exportTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/bulkExportTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath.replace(\"downloads/\", \"\") \r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportTemplate:', error);\r\n        throw error;\r\n      });\r\n  };\r\n  downloadSampleFile = (fileName) => {\r\n    window.open(`${BACKEND_API_URL}/${fileName}`);\r\n  }\r\n  // ===============Plant=====================\r\n}\r\n","import jwt from 'jwt-simple';\r\nimport { Buffer } from 'buffer';\r\n\r\nexport const getToken = () => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            const getToken = window.localStorage.getItem('okta-token-storage')\r\n            const sessionToken = (getToken) ? JSON.parse(getToken)?.accessToken?.accessToken : null;\r\n            resolve(sessionToken);\r\n        }, 500);\r\n    });\r\n}\r\n\r\nexport const getOKTAAccessKey = () => {\r\n    const getToken = window.localStorage.getItem('okta-token-storage');\r\n    if (!getToken) {\r\n        console.error('Token storage item not found');\r\n        return null;\r\n    }\r\n\r\n    const parsedToken = JSON.parse(getToken);\r\n    const accessToken = parsedToken?.accessToken?.accessToken;\r\n    const curruid = parsedToken?.accessToken?.claims?.uid;\r\n    const userinfo = parsedToken?.idToken?.claims;\r\n\r\n    if (!accessToken || !userinfo) {\r\n        console.error('Access token or userinfo not found in token storage item');\r\n        return null;\r\n    }\r\n\r\n    const payload = {\r\n        exp: Math.floor(Date.now() / 1000) + (60 * 60), // expires in 1 hour\r\n        data: {\r\n            accessToken: accessToken,\r\n            userinfo: {\r\n                username: userinfo?.name,\r\n                email: userinfo?.email,\r\n                uid: curruid\r\n            }\r\n        },\r\n    };\r\n\r\n    const secret = 'EMRPRoDucTDaTa';\r\n    let token = null;\r\n    try {\r\n        window.Buffer = Buffer;\r\n        token = jwt.encode(payload, secret, 'HS512')\r\n    } catch (error) {\r\n        console.error('Error encoding JWT:', error);\r\n        return null;\r\n    }\r\n    return token;\r\n}","import { differenceInSeconds } from 'date-fns';\r\n\r\nexport const convertHexToRGB = (hex) => {\r\n  // check if it's a rgba\r\n  if (hex.match('rgba')) {\r\n    let triplet = hex.slice(5).split(',').slice(0, -1).join(',');\r\n    return triplet;\r\n  }\r\n\r\n  let c;\r\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n    c = hex.substring(1).split('');\r\n    if (c.length === 3) {\r\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n    }\r\n    c = '0x' + c.join('');\r\n\r\n    return [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',');\r\n  }\r\n};\r\n\r\nexport function debounce(func, wait, immediate) {\r\n  let timeout;\r\n  return function () {\r\n    let context = this,\r\n      args = arguments;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    }, wait);\r\n    if (immediate && !timeout) func.apply(context, args);\r\n  };\r\n}\r\n\r\nexport function isMobile() {\r\n  if (window) {\r\n    return window.matchMedia(`(max-width: 767px)`).matches;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isMdScreen() {\r\n  if (window) {\r\n    return window.matchMedia(`(max-width: 1199px)`).matches;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction currentYPosition(elm) {\r\n  if (!window && !elm) {\r\n    return;\r\n  }\r\n  if (elm) return elm.scrollTop;\r\n  // Firefox, Chrome, Opera, Safari\r\n  if (window.pageYOffset) return window.pageYOffset;\r\n  // Internet Explorer 6 - standards mode\r\n  if (document.documentElement && document.documentElement.scrollTop)\r\n    return document.documentElement.scrollTop;\r\n  // Internet Explorer 6, 7 and 8\r\n  if (document.body.scrollTop) return document.body.scrollTop;\r\n  return 0;\r\n}\r\n\r\nfunction elmYPosition(elm) {\r\n  let y = elm.offsetTop;\r\n  let node = elm;\r\n  while (node.offsetParent && node.offsetParent !== document.body) {\r\n    node = node.offsetParent;\r\n    y += node.offsetTop;\r\n  }\r\n  return y;\r\n}\r\n\r\nexport function scrollTo(scrollableElement, elmID) {\r\n  let elm = document.getElementById(elmID);\r\n\r\n  if (!elmID || !elm) {\r\n    return;\r\n  }\r\n\r\n  let startY = currentYPosition(scrollableElement);\r\n  let stopY = elmYPosition(elm);\r\n\r\n  let distance = stopY > startY ? stopY - startY : startY - stopY;\r\n  if (distance < 100) {\r\n    scrollTo(0, stopY);\r\n    return;\r\n  }\r\n  let speed = Math.round(distance / 50);\r\n  if (speed >= 20) speed = 20;\r\n  let step = Math.round(distance / 25);\r\n  let leapY = stopY > startY ? startY + step : startY - step;\r\n  let timer = 0;\r\n  if (stopY > startY) {\r\n    for (let i = startY; i < stopY; i += step) {\r\n      setTimeout(\r\n        (function (leapY) {\r\n          return () => {\r\n            scrollableElement.scrollTo(0, leapY);\r\n          };\r\n        })(leapY),\r\n        timer * speed\r\n      );\r\n      leapY += step;\r\n      if (leapY > stopY) leapY = stopY;\r\n      timer++;\r\n    }\r\n    return;\r\n  }\r\n  for (let i = startY; i > stopY; i -= step) {\r\n    setTimeout(\r\n      (function (leapY) {\r\n        return () => {\r\n          scrollableElement.scrollTo(0, leapY);\r\n        };\r\n      })(leapY),\r\n      timer * speed\r\n    );\r\n    leapY -= step;\r\n    if (leapY < stopY) leapY = stopY;\r\n    timer++;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getTimeDifference(date) {\r\n  let difference = differenceInSeconds(new Date(), date);\r\n\r\n  if (difference < 60) return `${Math.floor(difference)} sec`;\r\n  else if (difference < 3600) return `${Math.floor(difference / 60)} min`;\r\n  else if (difference < 86400) return `${Math.floor(difference / 3660)} h`;\r\n  else if (difference < 86400 * 30) return `${Math.floor(difference / 86400)} d`;\r\n  else if (difference < 86400 * 30 * 12) return `${Math.floor(difference / 86400 / 30)} mon`;\r\n  else return `${(difference / 86400 / 30 / 12).toFixed(1)} y`;\r\n}\r\n\r\nexport function generateRandomId() {\r\n  const crypto = window.crypto || window.msCrypto;\r\n  let array = new Uint32Array(1);\r\n  crypto.getRandomValues(array); // Compliant for security-sensitive use cases\r\n  const uid = array[0];\r\n  return uid;\r\n}\r\n\r\nexport function getQueryParam(prop) {\r\n  let params = {};\r\n  let search = decodeURIComponent(\r\n    window.location.href.slice(window.location.href.indexOf('?') + 1)\r\n  );\r\n  let definitions = search.split('&');\r\n  definitions.forEach(function (val, key) {\r\n    let parts = val.split('=', 2);\r\n    params[parts[0]] = parts[1];\r\n  });\r\n  return prop && prop in params ? params[prop] : params;\r\n}\r\n\r\nexport function classList(classes) {\r\n  return Object.entries(classes)\r\n    .filter((entry) => entry[1])\r\n    .map((entry) => entry[0])\r\n    .join(' ');\r\n}\r\n\r\nexport const flat = (array) => {\r\n  let result = [];\r\n  array.forEach(function (a) {\r\n    result.push(a);\r\n    if (Array.isArray(a.children)) {\r\n      result = result.concat(flat(a.children));\r\n    }\r\n  });\r\n  return result;\r\n};\r\n// Sorted latest data get passed to bulkExport function\r\nexport const sortExportData = (data, sortInfo) => {\r\n  if (!sortInfo || !sortInfo.id) {\r\n    // If sortInfo is null or does not have an id, return original order\r\n    return data;\r\n  }\r\n\r\n  return [...data].sort((a, b) => {\r\n    const field = sortInfo.id || sortInfo.name || sortInfo.columnName;\r\n    const aValue = a[field]?.toLowerCase() || '';\r\n    const bValue = b[field]?.toLowerCase() || '';\r\n    if (aValue < bValue) {\r\n      return sortInfo.dir === 1 ? -1 : 1;\r\n    }\r\n    if (aValue > bValue) {\r\n      return sortInfo.dir === 1 ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const sortInsideRowData = (data) => {\r\n  let sortedNameDivs = [];\r\n  let sortedMvoTemplateToDivs = [];\r\n\r\n  return data.map(item => {\r\n    if (item.name) {\r\n      const nameDivs = item.name.match(/<div>.*?<\\/div>/g) || [];\r\n      sortedNameDivs = nameDivs.sort((a, b) => {\r\n        const textA = a.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        const textB = b.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        return textA.localeCompare(textB);\r\n      });\r\n    }\r\n\r\n    if (item.MVO_TEMPLATE_TO) {\r\n      const mvoTemplateToDivs = item.MVO_TEMPLATE_TO.match(/<div>.*?<\\/div>/g) || [];\r\n      sortedMvoTemplateToDivs = mvoTemplateToDivs.sort((a, b) => {\r\n        const textA = a.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        const textB = b.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        return textA.localeCompare(textB);\r\n      });\r\n    }\r\n\r\n    return {\r\n      ...item,\r\n      name: sortedNameDivs.join(''),\r\n      MVO_TEMPLATE_TO: sortedMvoTemplateToDivs.join('')\r\n    };\r\n  });\r\n};\r\n\r\nexport function sortAndReorderData(filterData) {\r\n  // Function to sort object values alphabetically (excluding \"Entity\")\r\n  function sortObjectValues(obj) {\r\n      return {\r\n          Entity: obj.Entity,\r\n          ...Object.fromEntries(\r\n              Object.entries(obj)\r\n                  .filter(([key]) => key !== \"Entity\")\r\n                  .sort((a, b) => a[1].localeCompare(b[1])) // Sort values alphabetically\r\n          )\r\n      };\r\n  }\r\n\r\n  // Find the \"PlantGroup\" object without removing it\r\n  const plantGroup = filterData.find(item => item.Entity === \"PlantGroup\");\r\n\r\n  // Sort the \"PlantGroup\" object (if found)\r\n  const sortedPlantGroup = plantGroup ? sortObjectValues(plantGroup) : null;\r\n\r\n  // Sort the rest of the objects based on \"Entity\" alphabetically, excluding \"PlantGroup\"\r\n  const sortedOtherEntities = filterData\r\n      .filter(item => item.Entity !== \"PlantGroup\") // Keep everything except \"PlantGroup\"\r\n      .map(sortObjectValues)\r\n      .sort((a, b) => a.Entity.localeCompare(b.Entity));\r\n\r\n  // Return the final array with \"PlantGroup\" on top (if exists)\r\n  return sortedPlantGroup ? [sortedPlantGroup, ...sortedOtherEntities] : sortedOtherEntities;\r\n}\r\n\r\nexport const caseInsensitiveSort = (a, b) => {\r\n  return a.localeCompare(b, undefined, { sensitivity: 'base' });\r\n};","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class BUService {\r\n  getAllBuList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/bu/getBusinessUnit`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getAllBuList\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  getBusinessUnitbyid = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/bu/getBusinessUnitbyid`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getBusinessUnitbyid\", e);\r\n        return [];\r\n      });\r\n  };\r\n  addnewBU = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/bu/addBusinessUnit`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewBU\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateBU = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/bu/updateBusinessUnit`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateBU\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteBU = (ids) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/bu/deleteBusinessUnit`,\r\n        { data: { ids } },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting bu:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","const textLight = {\r\n    primary: 'rgba(52, 49, 76, 1)',\r\n    secondary: 'rgba(52, 49, 76, 0.54)',\r\n    disabled: 'rgba(52, 49, 76, 0.38)',\r\n    hint: 'rgba(52, 49, 76, 0.38)',\r\n}\r\n\r\nconst textDark = {\r\n    primary: '#fff',\r\n    secondary: 'rgba(255, 255, 255, 0.7)',\r\n    disabled: 'rgba(255, 255, 255, 0.64)',\r\n    hint: 'rgba(255, 255, 255, 0.64)',\r\n};\r\n\r\nconst secondaryColor = {\r\n    light: '#f9a352',\r\n    main: '#ff9e43',\r\n    dark: '#ff932e',\r\n    contrastText: textLight.primary,\r\n}\r\nconst errorColor = {\r\n    main: '#FF3D57',\r\n}\r\n\r\nexport const themeColors = {\r\n    whitePurple: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#ffffff',\r\n                contrastText: textLight.primary,\r\n            },\r\n            secondary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    whiteBlue: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#ffffff',\r\n                contrastText: textLight.primary,\r\n            },\r\n            secondary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            text: textLight,\r\n        },\r\n    },\r\n    slateDark1: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#005686',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    slateDark2: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#1a2038',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    purple1: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: secondaryColor,\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    purple2: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#6a75c9',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    purpleDark1: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    purpleDark2: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#6a75c9',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    blue: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FFAF38',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    blueDark: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FF4F30',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    red: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#e53935',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FFAF38',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n        },\r\n    },\r\n}\r\n\r\nexport const themeShadows = [\r\n    'none',\r\n    '0px 2px 1px -1px rgba(0, 0, 0, 0.06),0px 1px 1px 0px rgba(0, 0, 0, 0.042),0px 1px 3px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 1px -2px rgba(0, 0, 0, 0.06),0px 2px 2px 0px rgba(0, 0, 0, 0.042),0px 1px 5px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 3px -2px rgba(0, 0, 0, 0.06),0px 3px 4px 0px rgba(0, 0, 0, 0.042),0px 1px 8px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 2px 4px -1px rgba(0, 0, 0, 0.06),0px 4px 5px 0px rgba(0, 0, 0, 0.042),0px 1px 10px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 5px -1px rgba(0, 0, 0, 0.06),0px 5px 8px 0px rgba(0, 0, 0, 0.042),0px 1px 14px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 5px -1px rgba(0, 0, 0, 0.06),0px 6px 10px 0px rgba(0, 0, 0, 0.042),0px 1px 18px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 4px 5px -2px rgba(0, 0, 0, 0.06),0px 7px 10px 1px rgba(0, 0, 0, 0.042),0px 2px 16px 1px rgba(0, 0, 0, 0.036)',\r\n    '0px 5px 5px -3px rgba(0, 0, 0, 0.06),0px 8px 10px 1px rgba(0, 0, 0, 0.042),0px 3px 14px 2px rgba(0, 0, 0, 0.036)',\r\n    '0px 5px 6px -3px rgba(0, 0, 0, 0.06),0px 9px 12px 1px rgba(0, 0, 0, 0.042),0px 3px 16px 2px rgba(0, 0, 0, 0.036)',\r\n    '0px 6px 6px -3px rgba(0, 0, 0, 0.06),0px 10px 14px 1px rgba(0, 0, 0, 0.042),0px 4px 18px 3px rgba(0, 0, 0, 0.036)',\r\n    '0px 6px 7px -4px rgba(0, 0, 0, 0.06),0px 11px 15px 1px rgba(0, 0, 0, 0.042),0px 4px 20px 3px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 8px -4px rgba(0, 0, 0, 0.06),0px 12px 17px 2px rgba(0, 0, 0, 0.042),0px 5px 22px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 8px -4px rgba(0, 0, 0, 0.06),0px 13px 19px 2px rgba(0, 0, 0, 0.042),0px 5px 24px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 9px -4px rgba(0, 0, 0, 0.06),0px 14px 21px 2px rgba(0, 0, 0, 0.042),0px 5px 26px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 9px -5px rgba(0, 0, 0, 0.06),0px 15px 22px 2px rgba(0, 0, 0, 0.042),0px 6px 28px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 10px -5px rgba(0, 0, 0, 0.06),0px 16px 24px 2px rgba(0, 0, 0, 0.042),0px 6px 30px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 11px -5px rgba(0, 0, 0, 0.06),0px 17px 26px 2px rgba(0, 0, 0, 0.042),0px 6px 32px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 9px 11px -5px rgba(0, 0, 0, 0.06),0px 18px 28px 2px rgba(0, 0, 0, 0.042),0px 7px 34px 6px rgba(0, 0, 0, 0.036)',\r\n    '0px 9px 12px -6px rgba(0, 0, 0, 0.06),0px 19px 29px 2px rgba(0, 0, 0, 0.042),0px 7px 36px 6px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n];","import { themeShadows } from './themeColors';\r\n\r\nexport const components = {\r\n  MuiTable: {\r\n    styleOverrides: {\r\n      root: {\r\n        tableLayout: 'fixed',\r\n      },\r\n    },\r\n  },\r\n  MuiTableCell: {\r\n    styleOverrides: {\r\n      head: {\r\n        fontSize: '13px',\r\n        padding: '12px 0px',\r\n      },\r\n      root: {\r\n        fontSize: '14px',\r\n        whiteSpace: 'pre-wrap',\r\n        wordBreak: 'break-all',\r\n        padding: '12px 8px 12px 0px',\r\n      },\r\n    },\r\n  },\r\n  MUIDataTableSelectCell: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: 12,\r\n      },\r\n    },\r\n  },\r\n  MUIDataTableHeadCell: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: 16,\r\n      },\r\n    },\r\n  },\r\n  MUIDataTableBodyCell: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: 8,\r\n      },\r\n    },\r\n  },\r\n  MuiButton: {\r\n    styleOverrides: {\r\n      root: {\r\n        fontSize: '12px',\r\n        textTransform: 'none',\r\n        fontWeight: '400',\r\n      },\r\n      contained: {\r\n        boxShadow: themeShadows[8],\r\n      },\r\n    },\r\n  },\r\n  MuiCssBaseline: {\r\n    styleOverrides: {\r\n      '*': {\r\n        boxSizing: 'border-box',\r\n      },\r\n      html: {\r\n        MozOsxFontSmoothing: 'grayscale',\r\n        WebkitFontSmoothing: 'antialiased',\r\n        height: '100%',\r\n        width: '100%',\r\n      },\r\n      body: {\r\n        height: '100%',\r\n      },\r\n      a: {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      },\r\n      '#root': {\r\n        height: '100%',\r\n      },\r\n      '#nprogress .bar': {\r\n        zIndex: '2000 !important',\r\n      },\r\n    },\r\n  },\r\n  MuiFab: {\r\n    styleOverrides: {\r\n      root: {\r\n        boxShadow: themeShadows[12],\r\n      },\r\n    },\r\n  },\r\n  MuiAccordion: {\r\n    styleOverrides: {\r\n      root: {\r\n        '&:before': {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  MuiTooltip: {\r\n    styleOverrides: {\r\n      tooltip: {\r\n        fontSize: '11px',\r\n      },\r\n    },\r\n  },\r\n  MuiMenuItem: {\r\n    styleOverrides: {\r\n      root: {\r\n        fontSize: '0.875rem',\r\n      },\r\n    },\r\n  },\r\n  MuiExpansionPanel: {\r\n    styleOverrides: {\r\n      root: {\r\n        '&:before': {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  MuiCard: {\r\n    styleOverrides: {\r\n      root: {\r\n        borderRadius: '8px',\r\n        boxShadow:\r\n          '0px 3px 3px -2px rgb(0 0 0 / 6%), 0px 3px 4px 0px rgb(0 0 0 / 4%), 0px 1px 8px 0px rgb(0 0 0 / 4%) !important',\r\n      },\r\n    },\r\n  },\r\n};\r\n","import { red } from '@mui/material/colors';\r\nimport { components } from './components';\r\n\r\nconst themeOptions = {\r\n  typography: {\r\n    fontSize: 14,\r\n    body1: { fontSize: '14px' },\r\n  },\r\n\r\n  status: { danger: red[500] },\r\n  components: { ...components },\r\n};\r\n\r\nexport default themeOptions;\r\n","import { createTheme } from '@mui/material';\r\nimport { forEach, merge } from 'lodash';\r\nimport { themeColors } from './themeColors';\r\nimport themeOptions from './themeOptions';\r\n\r\nfunction createMatxThemes() {\r\n  let themes = {};\r\n\r\n  forEach(themeColors, (value, key) => {\r\n    themes[key] = createTheme(merge({}, themeOptions, value));\r\n  });\r\n\r\n  return themes;\r\n}\r\nexport const themes = createMatxThemes();\r\n","import { themes } from '../MatxTheme/initThemes';\r\nimport layout1Settings from './Layout1/Layout1Settings';\r\n\r\n// UPDATE BELOW CODE\r\nexport const MatxLayoutSettings = {\r\n  activeLayout: 'layout1', // layout1, layout2\r\n  activeTheme: 'blue', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  perfectScrollbar: true,\r\n\r\n  themes: themes,\r\n  layout1Settings, // open Layout1/Layout1Settings.js\r\n\r\n  secondarySidebar: {\r\n    show: true,\r\n    open: false,\r\n    theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  },\r\n  // Footer options\r\n  footer: {\r\n    show: true,\r\n    fixed: false,\r\n    theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  },\r\n};\r\n","const Layout1Settings = {\r\n  leftSidebar: {\r\n    show: true,\r\n    mode: 'full', // full, close, compact, mobile,\r\n    theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n    bgimgurl: '/assets/images/sidebar/sidebar-bg-dark.jpg',\r\n  },\r\n  topbar: {\r\n    show: true,\r\n    fixed: true,\r\n    theme: 'whiteBlue', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  },\r\n};\r\n\r\nexport default Layout1Settings;\r\n","import React, { createContext, useState, useMemo } from 'react'\r\nimport { merge } from 'lodash'\r\nimport { MatxLayoutSettings } from 'app/components/MatxLayout/settings'\r\n\r\nconst SettingsContext = createContext({\r\n    settings: MatxLayoutSettings,\r\n    updateSettings: () => { },\r\n})\r\n\r\nexport const SettingsProvider = ({ settings, children }) => {\r\n    const [currentSettings, setCurrentSettings] = useState(\r\n        settings || MatxLayoutSettings\r\n    )\r\n\r\n    const handleUpdateSettings = (update = {}) => {\r\n        // Fixed typo from \"marged\" to \"merged\"\r\n        const merged = merge({}, currentSettings, update);\r\n        setCurrentSettings(merged);\r\n    }\r\n\r\n    // Use useMemo to ensure the context value object is stable unless currentSettings changes\r\n    const contextValue = useMemo(() => ({\r\n        settings: currentSettings,\r\n        updateSettings: handleUpdateSettings,\r\n    }), [currentSettings]);\r\n\r\n    return (\r\n        <SettingsContext.Provider value={contextValue}>\r\n            {children}\r\n        </SettingsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SettingsContext\r\n","\r\nexport const formatMessage = (template, replaceArray) => {\r\n    let formattedMessage = template;\r\n    // Replace placeholders in the message template\r\n    replaceArray.forEach((value, index) => {\r\n        const placeholder = new RegExp(`\\\\{${index}\\\\}`, 'g');\r\n        formattedMessage = formattedMessage?.replace(placeholder, value);\r\n    });\r\n    return formattedMessage;\r\n}\r\n\r\nexport const sortDataByKey = (data, key) => {\r\n  if (!Array.isArray(data)) {\r\n    console.error('Invalid data: Expected an array');\r\n    return [];\r\n  }\r\n\r\n  return data.sort((a, b) => {\r\n    const valueA = a[key] !== undefined ? a[key].toString().toLowerCase() : '';\r\n    const valueB = b[key] !== undefined ? b[key].toString().toLowerCase() : '';\r\n\r\n    if (!isNaN(valueA) && !isNaN(valueB)) {\r\n      return parseFloat(valueA) - parseFloat(valueB);\r\n    }\r\n\r\n    if (valueA < valueB) return -1;\r\n    if (valueA > valueB) return 1;\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const sortDataByKeyAllowableOrgTemplates = (data, key) => {\r\n  return data.sort((a, b) => {\r\n    const valueA = a.details[key] || '';\r\n    const valueB = b.details[key] || '';\r\n    return valueA.toLowerCase().localeCompare(valueB.toLowerCase());\r\n  });\r\n}; \r\n\r\nexport const sortByLabel = (data) => {\r\n  return data.sort((a, b) => {\r\n    const labelA = a.label ? a.label.toLowerCase() : '';\r\n    const labelB = b.label ? b.label.toLowerCase() : '';\r\n    return labelA.localeCompare(labelB);\r\n  });\r\n};","import {\r\n  GET_MCOLIST,\r\n  GET_MCOINFO,\r\n  GET_UPDATEMCODETAILS,\r\n  GET_UPDATE_MCO_RELATED_VALUES,\r\n  RESET_VALUES,\r\n  SET_ALL_CA_MCO_DETAILS,\r\n  SET_UPDATED_ROUTES\r\n} from '../actions/MCODetailsAction';\r\n\r\nconst initialState = {\r\n  isPageHavingIssue: false,\r\n  stepData: 'Create',\r\n  RSMEList: {},\r\n  RMEList: {},\r\n  responseData: {\r\n    itemERPStatus: [],\r\n  },\r\n  affectedPartsData: [],\r\n  exportAffectedPartsData: [],\r\n  currentMcoDetails: null,\r\n  isPropertyFormEdited: false,\r\n  isMaterialFormEdited: false,\r\n  selectedRowData: {},\r\n  selectedRowFormdata: {},\r\n  selectedRowIndex: null,\r\n  templates: [],\r\n  source: [],\r\n  plants: [],\r\n  materialData: [],\r\n  masterData: {},\r\n  templateMappingsInfo: [],\r\n  ORGAllowedTemplateMappings: [],\r\n  previousMcosDetails: [],\r\n  // eachPartMRDetails: {},\r\n  mrDetails: [],\r\n  massUpdateChanges: {},\r\n  lifeCycleData: {},\r\n  systemSetingsDetail: [],\r\n  eachTemplateOptions: {},\r\n  bulkPartTemplates: [],\r\n  caRelatedEachMCODetails: {},\r\n  allCaMCODetails: {},\r\n  mcoSearchLists: {},\r\n  showMaterialForm: false,\r\n  parentMCODetails: {},\r\n  caLifeCycleData: {},\r\n};\r\n\r\nconst MCODetailsReducer = function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_UPDATED_ROUTES:\r\n      return {\r\n        ...state,\r\n        updatedRoutes: action.payload,\r\n    };\r\n    case GET_MCOLIST: {\r\n      return { ...action.payload };\r\n    }\r\n    case GET_MCOINFO: {\r\n      return {\r\n        ...state,\r\n        responseData: {\r\n          ...state.responseData,\r\n          ...action.payload\r\n        },\r\n      };\r\n    }\r\n    case GET_UPDATEMCODETAILS: {\r\n      return {\r\n        ...state,\r\n        responseData: {\r\n          ...state.responseData,\r\n          ...action.payload\r\n        },\r\n      };\r\n    }\r\n    case GET_UPDATE_MCO_RELATED_VALUES: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    }\r\n    case SET_ALL_CA_MCO_DETAILS: {\r\n      return {\r\n        ...state,\r\n        allCaMCODetails: action.payload, // Update the Redux state\r\n      };\r\n    }\r\n    case RESET_VALUES:\r\n      return {\r\n        // Reset to initial state\r\n        ...initialState,\r\n        updatedRoutes: state.updatedRoutes,\r\n      };\r\n  \r\n      \r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default MCODetailsReducer;\r\n","import {\r\n  GET_CURRENT_INSTANCE,\r\n} from '../actions/GlobalDataAction';\r\n\r\nimport { getBasename } from \"app/utils/baseurl\";\r\n\r\nconst baseValues = getBasename();\r\n\r\nconst initialState = {\r\n  segment: baseValues?.segment || {},\r\n  instanceType: baseValues?.instanceType || {},\r\n};\r\n\r\nconst GlobalDataReducer = function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CURRENT_INSTANCE: {\r\n      return { ...state };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default GlobalDataReducer;\r\n","//import React from \"react\";\r\n\r\nexport const getBasename = () => {\r\n    const path = window.location.pathname;\r\n    let currentInstance = \"\";\r\n    if (path === \"/\") {\r\n        return {\r\n            segment: path,\r\n            instanceType: currentInstance,\r\n        };\r\n    }\r\n    if (path.includes(\"login\")) {\r\n        return {\r\n            segment: \"/\",\r\n            instanceType: currentInstance,\r\n        };\r\n    }\r\n\r\n    let pathArray = path.split('/');\r\n    pathArray = pathArray.filter(fitem => fitem !== \"\");\r\n\r\n    let returnVal = '/';\r\n    if (pathArray.length > 1) {\r\n        if (pathArray[1] === \"Cloud\" || pathArray[1] === \"onPrem\") {\r\n            if (pathArray[0] === \"Dev\") {\r\n                currentInstance = pathArray[1];\r\n                returnVal = pathArray[0] + \"/\";\r\n            }\r\n        }\r\n    } else if (pathArray.length === 1 && pathArray[0] === \"Dev\") {\r\n        return {\r\n            segment: \"/\",\r\n            instanceType: currentInstance,\r\n        };\r\n    }\r\n    return {\r\n        segment: returnVal,\r\n        instanceType: currentInstance,\r\n    }\r\n};","import {\r\n  GET_BU_AND_INSTANSE,\r\n} from '../actions/GlobalBUandInstanceAction';\r\n\r\nconst initialState = {\r\n  bu: '',\r\n  instance: '',\r\n  systemName: \"\"\r\n};\r\n\r\nconst GlobalBUandInstanceReducer = function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BU_AND_INSTANSE: {\r\n      return { ...state, ...action.payload };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default GlobalBUandInstanceReducer;","import { combineReducers } from 'redux';\r\n// import NavigationReducer from './NavigationReducer';\r\n// import NotificationReducer from './NotificationReducer';\r\nimport MCODetailsReducer from './MCODetailsReducer';\r\nimport GlobalDataReducer from './GlobalDataReducer';\r\nimport GlobalBUandInstanceReducer from './GlobalBUandInstanceReducer';\r\n\r\nconst RootReducer = combineReducers({\r\n  // notifications: NotificationReducer,\r\n  // navigations: NavigationReducer,\r\n  mcoDetails: MCODetailsReducer,\r\n  globalData: GlobalDataReducer,\r\n  globalBUandInstance: GlobalBUandInstanceReducer\r\n});\r\n\r\nexport default RootReducer;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from './reducers/RootReducer';\r\n\r\nconst initialState = {};\r\nconst middlewares = [thunk];\r\nlet devtools = (x) => x;\r\n\r\nif (\r\n  process &&\r\n  process.env.NODE_ENV !== 'production' &&\r\n  process.browser &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n) {\r\n  devtools = window.__REDUX_DEVTOOLS_EXTENSION__();\r\n}\r\n\r\nexport const Store = createStore(\r\n  RootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middlewares), devtools)\r\n);\r\n","import React from 'react';\r\n\r\nexport const MatxLayouts = { layout1: React.lazy(() => import('./Layout1/Layout1')) };\r\n","import React, { useEffect } from \"react\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nexport default function Loader(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        setOpen(props.show)\r\n    }, [props.show]);\r\n\r\n    return (\r\n        <div>\r\n            <Backdrop\r\n                sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                open={open}>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <CircularProgress color=\"inherit\" style={{\r\n                            zIndex: 9999, // Set your desired z-index value\r\n                        }} />\r\n                    </div>\r\n                    <div>Please wait...</div>\r\n                </div>\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class SystemSettingsService {\r\n    getAllsystemSetupList = () => {\r\n        return ApiInstance\r\n            .get(\r\n                `${BACKEND_API_URL}/systemSettings/getSystemSettings`,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"getSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n    getSystemSettingsbyid = (data) => {\r\n        return ApiInstance\r\n            .post(\r\n                `${BACKEND_API_URL}/systemSettings/getSystemSettingsbyid`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"getSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n\r\n    addSystemSettings = (data) => {\r\n        return ApiInstance\r\n            .post(\r\n                `${BACKEND_API_URL}/systemSettings/addSystemSettings`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"addnewSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n\r\n    updateSystemSettings = (data) => {\r\n        return ApiInstance\r\n            .put(\r\n                `${BACKEND_API_URL}/systemSettings/updateSystemSettings`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"updateSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n\r\n    deleteSystemSettings = (ids) => {\r\n        return ApiInstance\r\n            .delete(\r\n                `${BACKEND_API_URL}/systemSettings/deleteSystemSettings`,\r\n                { data: ids },\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error deleting SystemSettings:\", error);\r\n                throw error;\r\n            });\r\n    };\r\n}\r\n","\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nconst CustomAlertBox = ({ openAlert, openDesc, setOpenAlert }) => {\r\n    const vertical = 'top';\r\n    const horizontal = 'center';\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={openAlert}\r\n                // autoHideDuration={30 * 1000} // 30 sec\r\n                onClose={(event, reason) => {\r\n                    if (reason === 'clickaway') {\r\n                        return;\r\n                    }\r\n                    setOpenAlert(false);\r\n                }}\r\n                key={vertical + horizontal}\r\n                sx={{ top: '70px!important' }} // Set top to 70px\r\n            >\r\n\r\n                <Alert\r\n                    onClose={(event, reason) => {\r\n                        if (reason === 'clickaway') {\r\n                            return;\r\n                        }\r\n                        setOpenAlert(false);\r\n                    }}\r\n                    severity={openDesc.severity}\r\n                    sx={{ width: '100%', maxHeight: \"calc(100vh - 100px)\" }}\r\n                >\r\n                    {(openDesc.severity === \"success\") ? (<AlertTitle>Success</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"warning\") ? (<AlertTitle>Warning</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"error\") ? (<AlertTitle>Error</AlertTitle>) : (<></>)}\r\n                    {\r\n                        (openDesc?.type === 'validationcheck') ? (\r\n                            <>\r\n                                <div style={{ fontWeight: \"bold\" }}>\r\n                                    Please verify the below items.\r\n                                </div>\r\n                                <ul>\r\n                                    {openDesc.desc}\r\n                                </ul>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {openDesc.desc}\r\n                            </>\r\n                        )\r\n                    }\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomAlertBox;","export const GET_BU_AND_INSTANSE = 'GET_BU_AND_INSTANSE';\r\n\r\nexport const updateGlobalBUandInstance = (data) => async (dispatch) => {\r\n    try {\r\n      console.log(data, 'updateGlobalBUandInstance data')\r\n      dispatch({\r\n        type: GET_BU_AND_INSTANSE,\r\n        payload: data,\r\n      })\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  };","import axios from 'axios';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\nconst ApiInstance = axios.create();\r\n\r\n// Request interceptor\r\nApiInstance.interceptors.request.use(\r\n    (config) => {\r\n        // Do something before request is sent\r\n        // For example, add an authorization header for specific APIs\r\n        config.headers.Authorization = 'Bearer ' + getOKTAAccessKey();\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Response interceptor\r\nApiInstance.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    (error) => {\r\n        console.error('Error response:', error.response);\r\n        return Promise.reject((error?.response?.data) || 'Something went wrong!')\r\n    }\r\n);\r\n\r\nexport default ApiInstance;","\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nconst CustomAlertBox = ({ openAlert, openDesc, setOpenAlert }) => {\r\n    const vertical = 'top';\r\n    const horizontal = 'center';\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={openAlert}\r\n                // autoHideDuration={30 * 1000} // 30 sec\r\n                onClose={(event, reason) => {\r\n                    if (reason === 'clickaway') {\r\n                        return;\r\n                    }\r\n                    setOpenAlert(false);\r\n                }}\r\n                key={vertical + horizontal}\r\n                sx={{ top: '70px!important' }} // Set top to 70px\r\n            >\r\n\r\n                <Alert\r\n                    onClose={(event, reason) => {\r\n                        if (reason === 'clickaway') {\r\n                            return;\r\n                        }\r\n                        setOpenAlert(false);\r\n                    }}\r\n                    severity={openDesc.severity}\r\n                    sx={{ width: '100%', maxHeight: \"calc(100vh - 100px)\" }}\r\n                >\r\n                    {(openDesc.severity === \"success\") ? (<AlertTitle>Success</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"warning\") ? (<AlertTitle>Warning</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"error\") ? (<AlertTitle>Error</AlertTitle>) : (<></>)}\r\n                    {\r\n                        (openDesc?.type === 'validationcheck') ? (\r\n                            <>\r\n                                <div style={{ fontWeight: \"bold\" }}>\r\n                                    Please verify the below items.\r\n                                </div>\r\n                                <ul>\r\n                                    {openDesc.desc}\r\n                                </ul>\r\n                            </>\r\n                        ) : (<>\r\n                            {openDesc.desc}\r\n                        </>)\r\n                    }\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomAlertBox;","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nexport class MassUpdate {\r\n    massUpdatePartDescription = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/massUpdate/massUpdatePartDescription`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddTemplate\", e);\r\n        return [];\r\n      });\r\n  }\r\n  getMyReport = (data) => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/massUpdate/myReport`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"myReport\", e);\r\n        return [];\r\n      });\r\n  }\r\n  deleteReport = (ids) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/massUpdate/deleteMyReport`,\r\n        { data: { ids } },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting bu:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n  downloadSampleFile=(fileName)=>{\r\n    window.open(`${BACKEND_API_URL}/${fileName}`);\r\n  }\r\n}","// EMRPDH SERVER\r\nexport const BACKEND_API_URL = process.env.REACT_APP_PRO_MODE;\r\n\r\n// React Okta\r\nexport const REACT_APP_EMRPDH_OKTA_CLIENT_ID = process.env.REACT_APP_EMRPDH_OKTA_CLIENT_ID;\r\nexport const REACT_APP_EMRPDH_OKTA_ISSUER = process.env.REACT_APP_EMRPDH_OKTA_ISSUER;\r\nexport const REACT_APP_EMRPDH_OKTA_DOMAIN = process.env.REACT_APP_EMRPDH_OKTA_DOMAIN;\r\n\r\nexport const REACT_APP_ENOVIA_API_URL = process.env.REACT_APP_ENOVIA_API_URL;\r\nexport const REACT_APP_ENOVIA_CLOUD_API_URL = process.env.REACT_APP_ENOVIA_CLOUD_API_URL;\r\nexport const REACT_APP_MULSOFT_API_URL = process.env.REACT_APP_MULSOFT_API_URL;\r\n\r\nexport const REACT_APP_PLM_API_KEY = process.env.REACT_APP_PLM_API_KEY;\r\nexport const REACT_APP_PLM_API_KEY_VALUE = process.env.REACT_APP_PLM_API_KEY_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_ENRYPT_KEY_VALUE = process.env.REACT_APP_MULESOFT_ENRYPT_KEY_VALUE;\r\nexport const REACT_APP_MULESOFT_ENRYPT_INIT_VECTOR_VALUE = process.env.REACT_APP_MULESOFT_ENRYPT_INIT_VECTOR_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_API_CLIENT_ID = process.env.REACT_APP_MULESOFT_API_CLIENT_ID;\r\nexport const REACT_APP_MULESOFT_API_CLIENT_ID_VALUE = process.env.REACT_APP_MULESOFT_API_CLIENT_ID_VALUE;\r\nexport const REACT_APP_MULESOFT_API_CLIENT_SECRET = process.env.REACT_APP_MULESOFT_API_CLIENT_SECRET;\r\nexport const REACT_APP_MULESOFT_API_CLIENT_SECRET_VALUE = process.env.REACT_APP_MULESOFT_API_CLIENT_SECRET_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_ID = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_ID;\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_ID_VALUE = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_ID_VALUE;\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET;\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET_VALUE = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID;\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID_VALUE = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID_VALUE;\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET;\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET_VALUE = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET_VALUE;\r\nexport const client_id = 123;\r\nexport const client_secret = 456;\r\nexport const REACT_APP_ENOVIA_SAAS_API_URL = 'https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1' //process.env.REACT_APP_ENOVIA_SAAS_API_URL\r\nexport const SAP_API_BASE_URL = process.env.REACT_APP_PRO_MODE; //\"http://localhost:8086\" //'https://emr-product-datahub-server-sap-stage.azurewebsites.net' //\"http://localhost:8086\" // process.env.API_BASE_URL\r\n\r\nexport const REACT_APP_BACKEND_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n};\r\nexport const REACT_APP_BACKEND_API_HEADER_FOR_FILE = {\r\n    headers: {\r\n        \"content-type\": \"multipart/form-data; boundary=-------842470573919341855553902\"\r\n    },\r\n};\r\nexport const REACT_APP_ENOVIA_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        [REACT_APP_PLM_API_KEY]: REACT_APP_PLM_API_KEY_VALUE,\r\n    },\r\n};\r\n\r\nexport const REACT_APP_MULESOFT_ITEM_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'text/plain',\r\n        [REACT_APP_MULESOFT_API_CLIENT_ID]: REACT_APP_MULESOFT_API_CLIENT_ID_VALUE,\r\n        [REACT_APP_MULESOFT_API_CLIENT_SECRET]: REACT_APP_MULESOFT_API_CLIENT_SECRET_VALUE,\r\n    },\r\n};\r\nexport const REACT_APP_MULESOFT_BOM_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'text/plain',\r\n        [REACT_APP_MULESOFT_BOM_API_CLIENT_ID]: REACT_APP_MULESOFT_BOM_API_CLIENT_ID_VALUE,\r\n        [REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET]: REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET_VALUE,\r\n    },\r\n};\r\n\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        [REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID]: REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID_VALUE,\r\n        [REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET]: REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET_VALUE,\r\n    },\r\n};\r\n\r\nexport const REACT_APP_MULESOFT_SAAS_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'client_id': client_id,\r\n        'client_secret': client_secret,\r\n        'Access-Control-Allow-Origin': '*'\r\n    },\r\n};","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\n\r\nexport class TemplateMappingService {\r\n  getAlltemplateMappings = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/newtemplateMappings/getTemplateMappings`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTemplateMapping = (tempMappingId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/newtemplateMappings/deleteTemplateMappings/${tempMappingId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting deleteTemplateMappings:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/addTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        //console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/newtemplateMappings/updateTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n  importTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/bulkAddTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddTemplate\", e);\r\n        return [];\r\n      });\r\n  };\r\n  \r\n  downloadSampleFile=(fileName)=>{\r\n    window.open(`${BACKEND_API_URL}/${fileName}`);\r\n  }\r\n\r\n  exportAllTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/exportAllTemplateMapping`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath;\r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportAllData:', error);\r\n        throw error;\r\n      });\r\n  };\r\n  \r\n\r\n  exportAllAdminGeneralProperties = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/exportAllAdminGeneralProperties`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath;\r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportAllData:', error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  exportAllAdminSystemSetups = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/exportAllAdminSystemSetups`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath;\r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportAllData:', error);\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import { sortByLabel } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nexport const BUOptions = [\r\n  { value: \"Micro Motion\", label: \"Micro Motion\" },\r\n  { value: \"Daniel\", label: \"Daniel\" },\r\n  { value: \"EPM brazil\", label: \"EPM brazil\" },\r\n  { value: \"Poly Oil\", label: \"Poly Oil\" },\r\n  { value: \"Rosemount Flow\", label: \"Rosemount Flow\" },\r\n  { value: \"Roxar\", label: \"Roxar\" },\r\n  { value: \"Rosemount Measurement\", label: \"Rosemount Measurement\" },\r\n  { value: \"Flow Assurance\", label: \"Flow Assurance\" },\r\n  { value: \"Flow Systems\", label: \"Flow Systems\" },\r\n  { value: \"Ultrasonic\", label: \"Ultrasonic\" },\r\n  { value: \"Metran Flow\", label: \"Metran Flow\" },\r\n  { value: \"Flow Control Valves\", label: \"Flow Control Valves\" },\r\n  { value: \"Biffi Morin\", label: \"Biffi Morin\" },\r\n  { value: \"DP Flow\", label: \"DP Flow\" },\r\n  { value: \"Magtech\", label: \"Magtech\" },\r\n  { value: \"Keystone Butterfly Valves\", label: \"Keystone Butterfly Valves\" },\r\n];\r\nexport const bomusageOptions = [\r\n  { value: \"1\", label: \"Production\" },\r\n  { value: \"2\", label: \"Engineering/Design\" },\r\n  { value: \"3\", label: \"Universal\" },\r\n  { value: \"4\", label: \"Plant maintenance\" },\r\n  { value: \"5\", label: \"Sales and Distribution\" },\r\n  { value: \"6\", label: \"Costing\" },\r\n  { value: \"7\", label: \"Empties\" },\r\n  { value: \"8\", label: \"Stability study\" },\r\n  { value: \"M\", label: \"External Munitions Display \" },\r\n  { value: \"Z\", label: \"Planning BOM\" },\r\n];\r\nexport const ERPtypeOptions = [\r\n  { value: \"ORACLE\", label: \"ORACLE\" },\r\n  { value: \"JDE\", label: \"JDE\" },\r\n  { value: \"SAP\", label: \"SAP\" },\r\n];\r\n\r\nexport const instanceOptions = sortByLabel([\r\n  { value: \"BETSYD10\", label: \"betsyD10\" },\r\n  { value: \"D01\", label: \"D01\" },\r\n  { value: \"D03\", label: \"D03\" },\r\n  { value: \"ED1\", label: \"ED1\" },\r\n  { value: \"EP1\", label: \"EP1\" },\r\n  { value: \"P01\", label: \"P01\" },\r\n  { value: \"P03\", label: \"P03\" },\r\n  // { value: \"Q01\", label: \"Q01\" },\r\n  // { value: \"Q03\", label: \"Q03\" },\r\n  // { value: \"EQ1\", label: \"EQ1\" },\r\n  // { value: \"EQ3\", label: \"EQ3\" },\r\n  // { value: \"BETSY\", label: \"BETSY\" },\r\n  // { value: \"BETSY\", label: \"BETSY\" },\r\n]);\r\n\r\nexport const exportToERPOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const existInOracleOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const notOwningDivisionOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const userGroupOptions = [\r\n  \"admin\",\r\n  \"Everyone\",\r\n  \"Guest\",\r\n]\r\n\r\nexport const is_authorizedOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const enableBOSTransferOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\nexport const InstanceOptions = sortByLabel([\r\n  { value: \"onPrem\", label: \"onPrem\" },\r\n  { value: \"SaaS\", label: \"SaaS\" },\r\n]);\r\n","import React from \"react\";\r\nimport { Grid, Button } from '@mui/material';\r\nimport { SimpleCard } from \"app/components\";\r\n\r\nconst SomethingWrong = () => {\r\n    return (\r\n        <SimpleCard>\r\n            <Grid container spacing={3} alignItems=\"center\" style={{ position: \"relative\" }}>\r\n                <Grid item md={12} sm={12} xs={12} style={{ textAlign: \"center\" }}>\r\n                    Something went wrong! Please inform to administrator or reload the page.\r\n                    <br></br>\r\n                    <br></br>\r\n                    <Button variant=\"contained\" onClick={() => window.location.reload()}>\r\n                        Reload\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </SimpleCard>\r\n    )\r\n}\r\nexport default SomethingWrong;","import { REACT_APP_EMRPDH_OKTA_CLIENT_ID, REACT_APP_EMRPDH_OKTA_ISSUER, REACT_APP_EMRPDH_OKTA_DOMAIN } from \"./index\";\r\n\r\nconst CLIENT_ID = REACT_APP_EMRPDH_OKTA_CLIENT_ID;\r\nconst ISSUER = REACT_APP_EMRPDH_OKTA_ISSUER;\r\nconst domain = REACT_APP_EMRPDH_OKTA_DOMAIN;\r\n\r\nconst OKTA_TESTING_DISABLEHTTPSCHECK = process.env.OKTA_TESTING_DISABLEHTTPSCHECK || false;\r\nconst REDIRECT_URI = \"https://jatin2024.github.io/EMR-PDH\"; // adjust if needed\r\n\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  oidc: {\r\n    clientId: CLIENT_ID,\r\n    issuer: ISSUER,\r\n    redirectUri: REDIRECT_URI,\r\n    scopes: ['openid', 'profile', 'email', 'groups'],\r\n    pkce: true,\r\n    disableHttpsCheck: OKTA_TESTING_DISABLEHTTPSCHECK,\r\n    domain: domain,\r\n  },\r\n  // resourceServer: {\r\n  //   messagesUrl: `${window.location.origin}`,\r\n  // },\r\n};\r\n","import React, { createContext, useEffect, useReducer } from 'react'\r\nimport jwtDecode from 'jwt-decode'\r\nimport axios from 'axios'\r\nimport { MatxLoading } from 'app/components'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    isInitialised: false,\r\n    user: null,\r\n}\r\n\r\nconst isValidToken = (accessToken) => {\r\n    if (!accessToken) {\r\n        return false\r\n    }\r\n\r\n    const decodedToken = jwtDecode(accessToken)\r\n    const currentTime = Date.now() / 1000\r\n    return decodedToken.exp > currentTime\r\n}\r\n\r\nconst setSession = (accessToken) => {\r\n    if (accessToken) {\r\n        localStorage.setItem('accessToken', accessToken)\r\n        axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`\r\n    } else {\r\n        localStorage.removeItem('accessToken')\r\n        delete axios.defaults.headers.common.Authorization\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INIT': {\r\n            const { isAuthenticated, user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated,\r\n                isInitialised: true,\r\n                user,\r\n            }\r\n        }\r\n        case 'LOGIN': {\r\n            const { user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user,\r\n            }\r\n        }\r\n        case 'LOGOUT': {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: null,\r\n            }\r\n        }\r\n        case 'REGISTER': {\r\n            const { user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user,\r\n            }\r\n        }\r\n        default: {\r\n            return { ...state }\r\n        }\r\n    }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    ...initialState,\r\n    method: 'JWT',\r\n    login: () => Promise.resolve(),\r\n    logout: () => { },\r\n    register: () => Promise.resolve(),\r\n})\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    const login = async (email, password) => {\r\n        const response = await axios.post('/api/auth/login', {\r\n            email,\r\n            password,\r\n        })\r\n        const { accessToken, user } = response.data\r\n\r\n        setSession(accessToken)\r\n\r\n        dispatch({\r\n            type: 'LOGIN',\r\n            payload: {\r\n                user,\r\n            },\r\n        })\r\n    }\r\n\r\n    const register = async (email, username, password) => {\r\n        const response = await axios.post('/api/auth/register', {\r\n            email,\r\n            username,\r\n            password,\r\n        })\r\n\r\n        const { accessToken, user } = response.data\r\n\r\n        setSession(accessToken)\r\n\r\n        dispatch({\r\n            type: 'REGISTER',\r\n            payload: {\r\n                user,\r\n            },\r\n        })\r\n    }\r\n\r\n    const logout = () => {\r\n        setSession(null)\r\n        dispatch({ type: 'LOGOUT' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        ; (async () => {\r\n            try {\r\n                const accessToken = window.localStorage.getItem('accessToken')\r\n\r\n                if (accessToken && isValidToken(accessToken)) {\r\n                    setSession(accessToken)\r\n                    const response = await axios.get('/api/auth/profile')\r\n                    const { user } = response.data\r\n\r\n                    dispatch({\r\n                        type: 'INIT',\r\n                        payload: {\r\n                            isAuthenticated: true,\r\n                            user,\r\n                        },\r\n                    })\r\n                } else {\r\n                    dispatch({\r\n                        type: 'INIT',\r\n                        payload: {\r\n                            isAuthenticated: false,\r\n                            user: null,\r\n                        },\r\n                    })\r\n                }\r\n            } catch (err) {\r\n                console.error(err)\r\n                dispatch({\r\n                    type: 'INIT',\r\n                    payload: {\r\n                        isAuthenticated: false,\r\n                        user: null,\r\n                    },\r\n                })\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    if (!state.isInitialised) {\r\n        return <MatxLoading />\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                ...state,\r\n                method: 'JWT',\r\n                login,\r\n                logout,\r\n                register,\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { toRelativeUrl } from '@okta/okta-auth-js';\r\n\r\nconst LoginScreen = () => {\r\n    const { authState, oktaAuth } = useOktaAuth();\r\n\r\n    const login = async () => {\r\n        // try {\r\n        //     oktaAuth.tokenManager.clear();\r\n        //     const response = await oktaAuth.signInWithRedirect();\r\n        //     // handle successful authentication here\r\n        // } catch (error) {\r\n        //     console.error('Authentication error:', error);\r\n        //     // handle error appropriately, e.g., display error message or redirect to login page\r\n        // }\r\n        try {\r\n            await oktaAuth.signInWithRedirect();\r\n        } catch (error) {\r\n            if (error.name === 'AuthApiError') {\r\n                // Handle AuthApiError\r\n                console.error('Authentication failed:', error.message);\r\n                // Display an error message to the user\r\n            } else {\r\n                // Handle other errors\r\n                console.error('An unexpected error occurred:', error);\r\n                // Display a generic error message to the user\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!authState) {\r\n            return;\r\n        }\r\n\r\n        if (!authState?.isAuthenticated) {\r\n            // const originalUri = toRelativeUrl(window.location.href, window.location.origin);\r\n            // oktaAuth.setOriginalUri(originalUri);\r\n            // oktaAuth.signInWithRedirect();\r\n                       // Instead of relying on browser URL, set a static path for MemoryRouter\r\n                       const fallbackUri = \"/calist\"; // Or any page you want to land on post-login\r\n                       oktaAuth.setOriginalUri(fallbackUri);\r\n\r\n            login();\r\n        }\r\n    }, [oktaAuth, !!authState, authState?.isAuthenticated]);\r\n\r\n    if (!authState || !authState?.isAuthenticated) {\r\n        return null;\r\n    }\r\n\r\n    return (<Outlet />);\r\n}\r\n\r\nexport default LoginScreen;","import React from \"react\";\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\n\r\nimport { useOktaAuth } from '@okta/okta-react'\r\nimport LoginScreen from \"./loginScreen\";\r\n\r\nconst AuthGuard = ({ children }) => {\r\n  const { authState } = useOktaAuth()\r\n\r\n  // let {\r\n  //   isAuthenticated,\r\n  //   // user\r\n  // } = useAuth();\r\n  // const { pathname } = useLocation();\r\n\r\n  // // IF YOU NEED ROLE BASED AUTHENTICATION,\r\n  // // UNCOMMENT ABOVE LINES\r\n  // // AND COMMENT OUT BELOW authenticated VARIABLE\r\n\r\n  // let authenticated = isAuthenticated;\r\n\r\n  const isAuthenticated = authState && authState.isAuthenticated\r\n  let authenticated = isAuthenticated;\r\n\r\n  return (\r\n    <>\r\n      {authenticated ? (\r\n        children\r\n      ) : (\r\n        // <Navigate replace to=\"/session/signin\" state={{ from: pathname }} />\r\n        <LoginScreen />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthGuard;\r\n","import { Box, Button, styled } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n}));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({\r\n  maxWidth: 320,\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst IMG = styled('img')(() => ({\r\n  width: '100%',\r\n  marginBottom: '32px',\r\n}));\r\n\r\nconst NotFoundRoot = styled(FlexBox)(() => ({\r\n  width: '100%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  height: '100vh !important',\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <NotFoundRoot>\r\n      <JustifyBox>\r\n        <IMG src=\"/assets/images/illustrations/404.svg\" alt=\"\" />\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          sx={{ textTransform: 'capitalize' }}\r\n          onClick={() => navigate(-1)}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </JustifyBox>\r\n    </NotFoundRoot>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport getBaseUrl from \"app/utils/getBaseUrl\";\r\nimport Button from '@mui/material/Button';\r\nimport { UserService } from \"services/usersService\";\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nconst UnauthorizedPage = () => {\r\n    const userService = new UserService();\r\n    const { authState, oktaAuth } = useOktaAuth();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const userInfo = location.state?.userInfo !== undefined ? location.state?.userInfo : false;\r\n    const NotAuthorized = location.state?.NotAuthorized !== undefined ? location.state?.NotAuthorized : false;\r\n    console.log(location.state?.NotAuthorized, 'location.state?.NotAuthorized')\r\n    console.log(NotAuthorized, 'NotAuthorized')\r\n    const [requestforAccess, setRequestforAccess] = useState(false);\r\n    const requestAccess = () => {\r\n        if (!requestforAccess) {\r\n            userService.requestForAccess({ userData: userInfo }).then((result) => {\r\n                setRequestforAccess(true);\r\n                // setIsLoading(false)\r\n                setTimeout(() => {\r\n                    logout()\r\n                }, 2000);\r\n            });\r\n        }\r\n    }\r\n    const logout = async () => {\r\n        try {\r\n            if (authState.isAuthenticated) {\r\n                // await oktaAuth.signOut();\r\n                await oktaAuth.signOut({\r\n                    // This needs to be changed here\r\n                    postLogoutRedirectUri: window.location.origin,\r\n                });\r\n            }\r\n            // handle successful authentication here\r\n        } catch (error) {\r\n            // handle error appropriately, e.g., display error message or redirect to login page\r\n        }\r\n    };\r\n    return (\r\n        <div style={styles.container}>\r\n            <h1 style={styles.title}>Access Denied</h1>\r\n            {!NotAuthorized ?\r\n                <><p style={styles.message}>Sorry, you don't have permission to access the page.</p>\r\n                    {/* You can optionally add a button to redirect users to another page */}\r\n                    <Button variant=\"contained\" onClick={() => navigate('/calist')}>Go to Home</Button>\r\n                    {/* <button onClick={() => navigate(getBaseUrl() + '/calist')} style={styles.button}>Go to Home</button> */}\r\n                </>\r\n                :\r\n                <>\r\n                    <p style={styles.message}>Sorry, you don't have permission to access the application.</p>\r\n                    <p style={styles.message}>To access the application Please request by click on the button below.</p>\r\n                    <Button variant=\"contained\" onClick={requestAccess}>Request Access</Button>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100vh',\r\n        backgroundColor: '#f8f9fa',\r\n    },\r\n    title: {\r\n        fontSize: '2rem',\r\n        color: '#333',\r\n    },\r\n    message: {\r\n        fontSize: '1rem',\r\n        color: '#666',\r\n        textAlign: 'center',\r\n        marginTop: '10px',\r\n    },\r\n    // Optional button styles\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '10px 20px',\r\n        fontSize: '1rem',\r\n        backgroundColor: '#007bff',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        transition: 'background-color 0.3s ease',\r\n        textDecoration: 'none',\r\n        outline: 'none',\r\n        ':hover': {\r\n            backgroundColor: '#0056b3',\r\n        },\r\n    },\r\n};\r\n\r\nexport default UnauthorizedPage;\r\n","import React, { useEffect } from 'react';\r\nimport { Select, MenuItem } from '@mui/material';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import {bussinessUnitLists} from '../contexts/OracleSettingsContext'\r\n//export default function CustomSelect({ isdisabled = false, selectedvalue, defaultValue, optionValues, onChangeFunc, style = {} }) {\r\nexport default function CustomSelect({ isdisabled = false, selectedvalue, defaultValue, onChangeFunc, style = {}, size }) {\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    //console.log(bussinessUnitLists, 'bussinessUnitLists')\r\n    useEffect(() => {\r\n        if (defaultValue) {\r\n            onChangeFunc(defaultValue);\r\n        }\r\n    }, [defaultValue]);\r\n\r\n    return (\r\n        <Select\r\n            disabled={isdisabled}\r\n            className=\"form-control\"\r\n            defaultValue={defaultValue}\r\n            value={selectedvalue}\r\n            onChange={(e) => onChangeFunc(e.target.value)}\r\n            style={style}\r\n            size={size?size:'medium'}\r\n            displayEmpty // Enable displayEmpty prop\r\n            renderValue={(selected) => {\r\n                // Render the selected value\r\n                let selectedOption = [];\r\n                selectedOption = bussinessUnitLists?.find(\r\n                    (option) => (option.businessUnit === selected)\r\n                );\r\n\r\n                return (selectedOption?.businessUnit) ? selectedOption.buName : '';\r\n                //return (selectedOption?.value) ? selectedOption.label : '';\r\n            }}\r\n        >\r\n            {bussinessUnitLists?.map((option, index) => {\r\n                const listKey = \"dpKey\" + index;\r\n                return (\r\n                    <MenuItem value={option.businessUnit} key={listKey}>\r\n                        {/* {option.templateName ? option.instance + \"_\" + option.templateName + \"_\" + option.desc : ''} */}\r\n                        {/*option.templateName ? option.desc : ''*/}\r\n                        {option.buName}\r\n                    </MenuItem>\r\n                )\r\n            })}\r\n        </Select>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport CustomSelect from \"./components/CustomSelect\";\r\nimport { Grid, Select, MenuItem } from \"@mui/material\";\r\nimport { useSelector } from 'react-redux';\r\nimport { InstanceOptions } from \"./views/adminConfig/common.jsx\";\r\n\r\nconst Homepage = () => {\r\n  const globalBUandInstance = useSelector((state) => state.globalBUandInstance);\r\n  const [bussinessUnit, setBussinessUnit] = useState('')\r\n  const [instance, setInstance] = useState('')\r\n  const handleSelectChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === 'Instance') {\r\n      setInstance(value)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (globalBUandInstance.bu !== '') {\r\n      setBussinessUnit(globalBUandInstance.bu)\r\n    }\r\n    if (globalBUandInstance.instanse !== '') {\r\n      setInstance(globalBUandInstance.instanse)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n\r\n      <h1 style={styles.title}>Select RDO and Instance</h1>\r\n      <Grid container item md={6} sm={6} xs={12} className=\"font-medium\"\r\n        style={{ backgroundColor: 'lightblue', padding: '20px' }}\r\n      >\r\n        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n          <span>Design Organization:</span>\r\n          <CustomSelect\r\n            selectedvalue={bussinessUnit}\r\n            style={{ width: \"50%\" }}\r\n            // optionsValues={BUOptions}\r\n            defaultValue={bussinessUnit ? bussinessUnit : \"\"}\r\n            onChangeFunc={(selectedOptionValue) => {\r\n              setBussinessUnit(selectedOptionValue);\r\n              console.log(selectedOptionValue, 'selectedOptionValue')\r\n              //handleSelectChange()\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n          <span>Select Instance:</span>\r\n          <Select\r\n            labelId=\"Instance\"\r\n            id=\"Instance\"\r\n            name=\"Instance\"\r\n            fullWidth\r\n            style={{ width: \"50%\" }} // Set the width here\r\n            value={instance ? instance : ''}\r\n            onChange={handleSelectChange}\r\n          >\r\n            {InstanceOptions.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  title: {\r\n    fontSize: '2rem',\r\n    color: '#333',\r\n  },\r\n  message: {\r\n    fontSize: '1rem',\r\n    color: '#666',\r\n    textAlign: 'center',\r\n    marginTop: '10px',\r\n  },\r\n  // Optional button styles\r\n  button: {\r\n    marginTop: '20px',\r\n    padding: '10px 20px',\r\n    fontSize: '1rem',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s ease',\r\n    textDecoration: 'none',\r\n    outline: 'none',\r\n    ':hover': {\r\n      backgroundColor: '#0056b3',\r\n    },\r\n  },\r\n};\r\n\r\nexport default Homepage;\r\n","import { Suspense } from 'react';\r\nimport Loading from './MatxLoading';\r\n\r\nconst Loadable = (Component) => (props) => {\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <Component {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Loadable;\r\n","import Loadable from 'app/components/Loadable';\r\nimport React, { lazy } from 'react';\r\n\r\nconst CaList = Loadable(lazy(() => import('./CaList')));\r\nconst CaDetails = Loadable(lazy(() => import('./CaDetails')));\r\nconst McoList = Loadable(lazy(() => import('./McoList')));\r\nconst Mcodetails = Loadable(lazy(() => import('./Mcodetails')));\r\nconst TrackerProgressBar = Loadable(lazy(() => import('./TrackerProgressBar')));\r\nconst SpecCreationList = Loadable(lazy(() => import('./SpecCreationList')));\r\nconst ObsoletePartList = Loadable(lazy(() => import('./ObsoletePartList')));\r\nconst MyReportList = Loadable(lazy(() => import('./MyReports')));\r\n\r\nconst McoListRoutes = [\r\n    { path: '/calist', element: <CaList /> },\r\n    { path: '/caDetails/:ca_id', element: <CaDetails /> },\r\n    { path: '/mcolist', element: <McoList /> },\r\n    { path: '/mcodetail/:mco_id?', element: <Mcodetails /> },\r\n    { path: '/:mcoName/tracker', element: <TrackerProgressBar /> },\r\n    { path: '/specCreationList', element: <SpecCreationList /> },\r\n    { path: '/obsoletePartList', element: <ObsoletePartList /> },\r\n    { path: '/myreport', element: <MyReportList /> }\r\n];\r\n\r\nexport default McoListRoutes;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n    const { userDetails } = useOracleSettings();\r\n    const { authState } = useOktaAuth();\r\n    return (\r\n        (authState?.isAuthenticated && userDetails?.userinfo?.includes(\"admin\")) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n        // (authState?.isAuthenticated && userRoles?.includes(\"admin\")) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n        // (authState?.isAuthenticated && authState?.idToken?.claims?.userinfo?.includes(\"admin\")) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n        // (authState?.isAuthenticated) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\r\n\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Autocomplete,\r\n    Select,\r\n    MenuItem\r\n} from \"@mui/material\";\r\n\r\n\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nimport { templateService } from \"services/temlplateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n// import * as sampleTemplate from '../../../assets/sample-template.xlsx';\r\n\r\nimport download from 'downloadjs';\r\nimport {\r\n    instanceOptions,\r\n    ERPtypeOptions,\r\n    existInOracleOptions,\r\n    exportToERPOptions,\r\n    notOwningDivisionOptions,\r\n    BUOptions,\r\n} from \"../adminConfig/common\";\r\nimport { textAlign } from \"@mui/system\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\n\r\nconst ImportDialogBox = (props) => {\r\n    const { allTemplatesInfo, updateAllTemplate, bussinessUnitLists } = useOracleSettings();\r\n\r\n    const tempService = new templateService();\r\n    const { importTemplate, setImportTemplate, setTemplateData, setIsLoading } = props;\r\n    const [ERPTypeError, setERPTypeError] = useState(false);\r\n    const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null)\r\n\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        ERPType: [],\r\n        instance: [],\r\n        BU: [],\r\n    });\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const fileName = 'sample-template.xlsx';\r\n    const handleDownload = () => {\r\n        tempService.downloadSampleFile(fileName)\r\n    };\r\n\r\n    const handleImportTemplateSelection = (column, selectedValues) => {\r\n        console.log(column, '==values ==', selectedValues)\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [column]: column === 'BU' ? selectedValues : selectedValues.value,\r\n            };\r\n        })\r\n        if (column === 'ERPType') { setERPTypeError(false) }\r\n        if (column === 'instance') { setinstanceError(false) }\r\n        if (column === 'BU') { setBUError(false) }\r\n        console.info(importSelectionValues, 'importSelectionValues')\r\n    }\r\n\r\n    const getUniqueValues = (column) => {\r\n        const values = new Set();\r\n\r\n        //console.log(allTemplatesInfo, 'allTemplatesInfo vvvvv');\r\n\r\n        /*  allTemplatesInfo?.forEach((subscriber) => {\r\n             if (column === \"plants\") {\r\n                 subscriber[column]?.forEach((plant) => {\r\n                     values.add(plant.plantName);\r\n                 });\r\n             } else if (column === \"BU\") {\r\n                 subscriber[column]?.forEach((BU) => {\r\n                     values.add(BU);\r\n                 });\r\n             } else {\r\n                 values.add(subscriber[column]);\r\n             }\r\n         });\r\n         return Array.from(values); */\r\n        bussinessUnitLists?.forEach(item => {\r\n            values.add(item[column]);\r\n        })\r\n        return Array.from(values);\r\n    };\r\n\r\n    const importFileData = (e) => {\r\n        //  console.log(e.target.files[0].name, 'rowData')\r\n        //  console.log(e.target.files[0].type, 'rowData')\r\n        //  console.log(e.target.files[0].name.split('.').pop(), 'file name')\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0]);\r\n                setImportedFileName(e.target.files[0].name);\r\n                setNoFileError(false);\r\n            } else {\r\n                setNoFileError(true);\r\n                setImportedFileName(null);\r\n                setImportedFileData(null);\r\n            }\r\n        } else {\r\n            setNoFileError(true);\r\n            setImportedFileName(null);\r\n            setImportedFileData(null);\r\n        }\r\n    }\r\n\r\n    const handleCloseImportTemplate = () => {\r\n        setImportSelectionValues((prev) => {\r\n            return {\r\n                ERPType: [],\r\n                instance: [],\r\n                BU: []\r\n            }\r\n        })\r\n        setImportedFileData(null)\r\n        setImportTemplate(false)\r\n        setImportedFileName(null)\r\n        setNoFileError(false)\r\n        setERPTypeError(false)\r\n        setinstanceError(false)\r\n        setBUError(false)\r\n    };\r\n    const handleImportfileBarClick = () => {\r\n        setimportfileBar(true);\r\n    };\r\n\r\n    const handleImportTemplate = () => {\r\n        if (importSelectionValues.ERPType === null || importSelectionValues.ERPType.length < 1) { setERPTypeError(true) }\r\n        if (importSelectionValues.instance === null || importSelectionValues.instance.length < 1) { setinstanceError(true) }\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) { setBUError(true) }\r\n        if (importedFileData === null || importedFileData.length < 1) { setNoFileError(true) }\r\n        // console.log(importSelectionValues, 'importSelectionValueshandleImportTemplate')\r\n        if (importSelectionValues.ERPType.length > 1 && importSelectionValues.instance.length > 1 && importSelectionValues.BU.length > 1 && importedFileData !== null) {\r\n            let postData = { 'file': importedFileData, data: importSelectionValues };\r\n            setIsLoading(true);\r\n            setImportTemplate(false)\r\n            tempService.importTemplate(postData).then(async (response) => {\r\n                setImportResponse(response)\r\n                let desc;\r\n                let severity;\r\n                if (response.errorCount > 0) {\r\n                    desc = (\r\n                        <div style={{ color: 'red' }}>\r\n                            {/* Failure <br /> */}\r\n                            New Template Added: {response.newTemplateAdded} <br />\r\n                            Template Updated: {response.updateTemplates} <br />\r\n                            Error in Template: {response.errorCount} <br />\r\n                        </div>\r\n                    );\r\n                    severity = 'error';\r\n                    setOpenAlert(true);\r\n                    setOpenDesc({\r\n                        severity: severity,\r\n                        desc: desc,\r\n                    });\r\n                    setIsLoading(false);\r\n                } else {\r\n                    desc = (\r\n                        <div>\r\n                            Success <br />\r\n                            New Template Added: {response.newTemplateAdded} <br />\r\n                            Template Updated: {response.updateTemplates} <br />\r\n                            Error in Template: {response.errorCount} <br />\r\n                        </div>\r\n                    );\r\n                    severity = 'success';\r\n                    setIsLoading(false);\r\n\r\n                }\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: severity,\r\n                    desc: desc,\r\n                });\r\n                setImportSelectionValues((prev) => {\r\n                    return {\r\n                        ERPType: [],\r\n                        instance: [],\r\n                        BU: []\r\n                    }\r\n                })\r\n                setImportedFileData(null)\r\n                setImportedFileName(null)\r\n                // setTimeout(() => {\r\n                //     setImportTemplate(false)\r\n                // }, 200);\r\n\r\n                await tempService.getAllTemplateList().then((result) => {\r\n                    setTemplateData(result.template);\r\n                    updateAllTemplate(result.template);\r\n                });\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n    }\r\n    const handleImportfileBarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setImportSelectionValues((prev) => {\r\n            return {\r\n                ERPType: [],\r\n                instance: [],\r\n                BU: []\r\n            }\r\n        })\r\n        setimportfileBar(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(allTemplatesInfo, 'allTemplatesInfo cccc');\r\n    }, [allTemplatesInfo])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={importTemplate}>\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Import Template\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                Design Organization\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={getUniqueValues(\"buName\")}\r\n                                                value={importSelectionValues.BU}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"BU\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select RDO\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.BU.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {BUError && (<p style={{ textAlign: \"left\", color: \"red\" }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                ERP Type\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={ERPtypeOptions}\r\n                                                value={importSelectionValues.ERPType}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"ERPType\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select ERP Type\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.ERPType.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {ERPTypeError && (<p style={{ textAlign: \"left\", color: \"red\" }}>please select ERP Type</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                Instance\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={instanceOptions}\r\n                                                value={importSelectionValues.instance}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"instance\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select Instance\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                // getOptionLabel={(option) => option}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.instance.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {instanceError && (<p style={{ textAlign: \"left\", color: \"red\" }}>please select Instance</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                            Upload file\r\n                                            <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                        </Button>\r\n                                        {noFileError && (<p style={{ textAlign: \"left\", color: \"red\" }}>Please Select xlsx file to Upload </p>)}\r\n                                    </div>\r\n                                    {importedFileName && (<p>{importedFileName}</p>)}\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        {/* <a\r\n                                            href={sampleTemplate}\r\n                                            download=\"Example-XLSX-document\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noreferrer\"\r\n                                        > */}\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={handleDownload}>\r\n                                            Download sample file\r\n                                        </Button>\r\n                                        {/* </a> */}\r\n                                    </div>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleCloseImportTemplate}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleImportTemplate}>Import</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* <Snackbar\r\n                open={importfileBar}\r\n                autoHideDuration={3000}\r\n                onClose={handleImportfileBarClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleImportfileBarClose}\r\n                    severity=\"success\"\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    {importResponse && (\r\n                        <div>\r\n                            {importResponse.msg} <br />\r\n                            New Template Added: {importResponse.newTemplateAdded} <br />\r\n                            Template Updated: {importResponse.updateTemplates} <br />\r\n                            Error in Template: {importResponse.errorCount} <br />\r\n                        </div>\r\n                    )}\r\n                </Alert>\r\n            </Snackbar> */}\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} sx={{ '& .MuiAlertTitle-root': { backgroundColor: 'red' } }} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImportDialogBox;","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.templateData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n\r\n\r\n  /* export template data start */\r\n  //const [exportResponse, setExportResponse] = useState('');\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    //console.log(dataToExport, 'vdataToExport')\r\n    console.log(props?.filterTemplateData, 'filterTemplateData')\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.templateData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        'Template Name': item.templateName,\r\n        'Description': item.desc,\r\n        'ERP Type': item.ERPType,\r\n         Instance: item.instance,\r\n        'Design Organization': Array.isArray(item?.BU) && item?.BU.length > 0\r\n          ? item?.BU.join(', ')\r\n          : null,\r\n        // attributes: typeof item.attributes == \"object\"? JSON.stringify(item.attributes):null,\r\n        //RDO: typeof item.BU == \"object\" && item.BU.length>0 ? JSON.stringify(item.BU.join(', ')):null,\r\n        // ExportToERP: item.exportToERP,\r\n        // ExistInOracle: item.existInOracle,\r\n        // NotOwningDivision: item.notOwningDivision,\r\n        //Name: item.Name\r\n      }\r\n      return res\r\n    })\r\n    //console.log(exportData, 'inside template export exportData')\r\n    //return;\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Template' }).then((response) => {\r\n      setExportResponse(response)\r\n      //console.log(response, ';resprespresp')\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.templateData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n      //console.log(filteredTempData, 'filteredTempData')\r\n    }\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import React from 'react';\r\n\r\nconst sortedExportDataHOC = (WrappedComponent) => {\r\n    return ({ data = [], sortInfo = {}, initialData = [], ...props }) => {\r\n        const sortData = (data, sortInfo) => {\r\n            if (!Array.isArray(data)) {\r\n                return [];\r\n            }\r\n\r\n            if (!sortInfo || !sortInfo.id) {\r\n                return initialData; // Return initial data if sortInfo is null or empty\r\n            }\r\n\r\n            const field = sortInfo.id || sortInfo.name || sortInfo.columnName;\r\n            const direction = sortInfo.dir === 1 ? 1 : -1;\r\n\r\n            return [...data].sort((a, b) => {\r\n                const aValue = String(a[field] || '').toLowerCase();\r\n                const bValue = String(b[field] || '').toLowerCase();\r\n\r\n                if (aValue < bValue) return -direction;\r\n                if (aValue > bValue) return direction;\r\n                return 0;\r\n            });\r\n        };\r\n\r\n        const sortedData = sortData(data, sortInfo);\r\n        return <WrappedComponent data={sortedData} sortInfo={sortInfo} {...props} />;\r\n    };\r\n};\r\n\r\nexport default sortedExportDataHOC;","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport Loader from 'app/components/Loader';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Box,\r\n  styled,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport ImportDialogBox from \"./importDialog\";\r\nimport ExportDialogBox from \"./exportTemplate\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst Template = () => {\r\n  const location = useLocation();\r\n  let toastState = location.state;\r\n  const { updateAllTemplate } = useOracleSettings();\r\n  const tempService = new templateService();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [templateData, setTemplateData] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [selectedDelTemplate, setselectedDelTemplate] = useState();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filteredTempData, setFilteredTempData] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const sortedFilterTempData = sortDataByKey(filteredTempData, \"templateName\");\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteTemplateDialog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditTemplate(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    tempService.getAllTemplateList()\r\n      .then((result) => {\r\n        setTemplateData(result.template);\r\n        setInitialData(result.template); // Set initial data\r\n        setFilteredTempData(result.template);\r\n        updateAllTemplate(result.template);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFilteredTempData(templateData);\r\n  }, [templateData]);\r\n\r\n  useEffect(() => {\r\n    if (toastState?.status) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: toastState?.status,\r\n        desc: toastState?.message,\r\n      });\r\n    }\r\n    toastState = {};\r\n\r\n    // Clear the state value on page refresh\r\n    window.onbeforeunload = () => {\r\n      window.history.replaceState({}, document.title);\r\n    };\r\n  }, [toastState]);\r\n\r\n  //************Search code************* */\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n  // *************Search code ends *******/\r\n  const navigate = useNavigate();\r\n  const templateModeRef = useRef(\"initialValue\");\r\n  const handleCreateTemplate = () => {\r\n    templateModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createTemplate\");\r\n    }, 200);\r\n  };\r\n  const handleEditTemplate = (editSelectedTemplate) => {\r\n    templateModeRef.current = \"edit\";\r\n    const selectedTempalteData = editSelectedTemplate;\r\n    setTimeout(() => {\r\n      navigate(`/editTemplate/${selectedTempalteData?.id}`, {\r\n        state: { templateMode: templateModeRef.current, selectedTempalteData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteTemplateDialog = (Deltemplate) => {\r\n    setDeleteDialog(true);\r\n    setselectedDelTemplate(Deltemplate);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setselectedDelTemplate(null);\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteTemplate = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      setIsLoading(true);\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await tempService.deleteTemplate(selRowsId).then(async (response) => {\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n\r\n        await tempService.getAllTemplateList().then((result) => {\r\n          setTemplateData(result.template);\r\n          setInitialData(result.template); // Set initial data\r\n          setFilteredTempData(result.template);\r\n          updateAllTemplate(result.template);\r\n        });\r\n      })\r\n    } catch (error) {\r\n      return error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleImportTemplateDialog = () => {\r\n    setImportTemplate(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    if (templateData) {\r\n      const new_FilteredData = templateData.filter((subscriber) => {\r\n        return (searchValue === \"\" ||\r\n          subscriber?.templateName?.toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          subscriber.desc\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          subscriber.plants?.some((plant) =>\r\n            plant.plantName\r\n              .toLowerCase()\r\n              .includes(searchValue.toLowerCase())\r\n          ) ||\r\n          subscriber.BU?.some((BU) =>\r\n            BU.toLowerCase().includes(searchValue.toLowerCase())\r\n          ) ||\r\n          subscriber.instance\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          subscriber.ERPType.toLowerCase().includes(\r\n            searchValue.toLowerCase()\r\n          ))\r\n      })\r\n      setFilteredTempData(new_FilteredData);\r\n    }\r\n  }, [searchValue, templateData]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedTemplate = sortedExportDataHOC(Template);\r\n    // const sortedData = SortedTemplate({ data: templateData, sortInfo, filteredTempData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    const sortedData = SortedTemplate({ data: templateData, sortInfo, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setTemplateData(sortedData.props.data);\r\n    //setFilteredTempData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Template\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateTemplate}\r\n              style={{ marginRight: \"10px\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 10px 0 0px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 0px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleImportTemplateDialog}\r\n              style={{ marginRight: '10px' }}\r\n            >\r\n              Import\r\n            </Button>\r\n\r\n            <ExportDialogBox templateData={templateData} filterTemplateData={selectedRows} />\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br></br>\r\n            <DataGrid\r\n              idProperty=\"id\"\r\n              showZebraRows={false}\r\n              style={{ minHeight: 550 }}\r\n              defaultLimit={100}\r\n              columns={[\r\n                {\r\n                  name: \"templateName\",\r\n                  header: <Tooltip title={'Name'}>Template Name</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                  render: ({ data }) => <div>{data?.templateName}</div>,\r\n                },\r\n                {\r\n                  name: \"desc\",\r\n                  header: <Tooltip title={\"Description\"}>Description</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                  render: ({ data }) => <div>{data?.desc}</div>,\r\n                },\r\n                {\r\n                  name: \"ERPType\",\r\n                  header: <Tooltip title={\"ERP Type\"}>ERP Type</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                },\r\n                {\r\n                  name: \"instance\",\r\n                  header: <Tooltip title={\"Instance\"}>Instance</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                },\r\n                {\r\n                  name: \"BU\",\r\n                  header: <Tooltip title={\"Design Organization\"}>Design Organization</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                  render: ({ data }) => <div>{(data?.BU) ? data.BU.sort().map((item) => item).join(\", \") : ''}</div>,\r\n                },\r\n              ]}\r\n              dataSource={sortedFilterTempData}\r\n              checkboxColumn\r\n              selected={selected}\r\n              onSelectionChange={onSelectionChange}\r\n              handle={ref => gridRef.current = ref ? ref.current : null}\r\n              pagination\r\n              renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n              onSortInfoChange={handleSortInfoChange}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the template{\" \"}\r\n                <b>{selectedDelTemplate?.templateName}</b> with instance{\" \"}\r\n                <b>{selectedDelTemplate?.instance}</b>\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted templates?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteTemplate}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <ImportDialogBox\r\n        importTemplate={importTemplate}\r\n        setImportTemplate={setImportTemplate}\r\n        setTemplateData={setTemplateData}\r\n        setIsLoading={setIsLoading}\r\n      />\r\n\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n\r\n      {\r\n        isLoading ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Loader show={isLoading} />\r\n          </div>\r\n        ) : <></>\r\n      }\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Template;","import React from \"react\";\r\nimport Template from \"./template\";\r\n// import { TemplateProvider } from \"app/contexts/\";\r\n\r\nconst TemplateWrapper = () => {\r\n    return (\r\n        <>\r\n            {/* <TemplateProvider> */}\r\n            <Template />\r\n            {/* </TemplateProvider> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TemplateWrapper;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class PlantService {\r\n  getAllPlantsList = () => {\r\n    return ApiInstance\r\n      .get(`${BACKEND_API_URL}/plant/getplants`, REACT_APP_BACKEND_API_HEADER)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getAllPlantsList\", e);\r\n        return [];\r\n      });\r\n  };\r\n  getPlantById = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/plant/getPlantById`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getPlantById\", e);\r\n        return [];\r\n      });\r\n  };\r\n  addnewPlant = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/plant/addPlant`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updatePlant = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/plant/updatePlant`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deletePlant = (ids) => {\r\n    return ApiInstance.delete(\r\n      `${BACKEND_API_URL}/plant/deletePlant`,\r\n      { data: { ids } },\r\n      REACT_APP_BACKEND_API_HEADER\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting plant:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst AttributeDialog = ({\r\n  open,\r\n  handleDialogClose,\r\n  tempObject,\r\n  handleAttributeChange,\r\n  handleAddAttribute,\r\n  newKey,\r\n  newValue,\r\n  handleAddRow,\r\n  handleDeleteRow,\r\n  keyerror,\r\n  attributeForm,\r\n  valuesInputList,\r\n}) => {\r\n  const InputTypeOptions = [\r\n    { value: \"text\", label: \"text\" },\r\n    { value: \"select\", label: \"select\" },\r\n  ];\r\n  const DataTypeOptions = [\r\n    { value: \"int\", label: \"int\" },\r\n    { value: \"string\", label: \"string\" },\r\n    { value: \"long\", label: \"long\" },\r\n    { value: \"bool\", label: \"bool\" },\r\n  ];\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {attributeForm === null ? \"Add Attribute\" : \"Edit Attribute\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Name:\r\n              {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              name=\"name\"\r\n              value={tempObject.name || \"\"}\r\n              onChange={handleAttributeChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Mandatory: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                value={tempObject.mandatory || \"YES\"}\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"mandatory\"\r\n                onChange={handleAttributeChange}\r\n              >\r\n                <FormControlLabel value=\"Y\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"N\" control={<Radio />} label=\"No\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Material master:{\" \"}\r\n              {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                value={tempObject.material_master || \"Y\"}\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"material_master\"\r\n                onChange={handleAttributeChange}\r\n              >\r\n                <FormControlLabel value=\"Y\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"N\" control={<Radio />} label=\"No\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Data type: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              labelId=\"DataType-label\"\r\n              id=\"DataType-select\"\r\n              name=\"dataType\"\r\n              fullWidth\r\n              value={tempObject.dataType || \"\"}\r\n              onChange={handleAttributeChange}\r\n            >\r\n              {DataTypeOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.value}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Input Type: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              labelId=\"InputType-label\"\r\n              id=\"InputType-select\"\r\n              name=\"inputType\"\r\n              fullWidth\r\n              value={tempObject.inputType || \"\"}\r\n              onChange={handleAttributeChange}\r\n            >\r\n              {InputTypeOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          {tempObject.inputType === \"select\" && (\r\n            <>\r\n              <Grid item md={3} sm={4} xs={12}>\r\n                <span>\r\n                  Values: {/* <span className={classes.spanRed}>*</span>:*/}\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={3} style={{ marginLeft: \"3px\" }}>\r\n                    <TextField\r\n                      name=\"newKey\"\r\n                      label=\"value\"\r\n                      value={newKey}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleAttributeChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      name=\"newValue\"\r\n                      label=\"display value\"\r\n                      value={newValue}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleAttributeChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      style={{ fontSize: \"30px\", marginTop: \"6px\" }}\r\n                      onClick={handleAddRow}\r\n                    >\r\n                      <b>+</b>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{ color: \"red\" }}>{keyerror}</p>\r\n                <div\r\n                  style={{\r\n                    height: \"100px\",\r\n                    overflowY: \"auto\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    alignContent: \"center\",\r\n                  }}\r\n                >\r\n                  {valuesInputList.map((row, index) => (\r\n                    <Paper\r\n                      key={index}\r\n                      style={{\r\n                        paddingLeft: \"50px\",\r\n                        marginBottom: \"8px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginLeft: \"2px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <p>\r\n                            <b>{row.key}</b>:<b>{row.value}</b>\r\n                          </p>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                          <IconButton onClick={() => handleDeleteRow(index)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Default values: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              name=\"defaultValues\"\r\n              value={tempObject.defaultValues || \"\"}\r\n              onChange={handleAttributeChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddAttribute}>\r\n          {attributeForm === null ? \"Add\" : \"Update\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AttributeDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  IconButton,\r\n  Grid,\r\n  TextField,\r\n  Paper,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { styled as makeStyles } from \"@mui/material/styles\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { templateService } from \"services/temlplateService\";\r\nimport { PlantService } from \"services/plantService\";\r\n\r\nimport AttributeDialog from \"./attributeDialog\";\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  existInOracleOptions,\r\n  exportToERPOptions,\r\n  notOwningDivisionOptions,\r\n  BUOptions,\r\n} from \"../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { caseInsensitiveSort, generateRandomId } from \"../../utils/utils\";\r\nimport shortId from 'shortid';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nconst defaultFormValue = {\r\n  name: null,\r\n  mandatory: null,\r\n  material_master: null,\r\n  dataType: null,\r\n  inputType: null,\r\n  values: null,\r\n  defaultValues: null,\r\n};\r\n\r\nexport default function CreateTemplate() {\r\n  const tempService = new templateService();\r\n  const { bussinessUnitLists } = useOracleSettings();\r\n  const plantService = new PlantService();\r\n  const [plantData, setPlantData] = useState();\r\n\r\n  const [templateForm, setTemplateForm] = useState({\r\n    exportToERP: \"Y\",\r\n    existInOracle: \"N\",\r\n    notOwningDivision: \"Y\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n\r\n  //**********AttributeComplete States************************** */\r\n  const [diabox, setDiabox] = useState(false);\r\n  const [attributeData, setAttributeData] = useState([]);\r\n  const [attributeForm, setAttributeForm] = useState(null);\r\n  const [tempObject, setTempObject] = useState({});\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  //**********AttributeComplete States end ************************** */\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n    });\r\n  }, []);\r\n\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  // const handleBUChange = (event) => {\r\n  //   setSelectedBU(event.target.value);\r\n  // };\r\n\r\n  const handleSelectChange = (event, type) => {\r\n    const selectedValues = event.target.value;\r\n\r\n    if (type === \"BU\") {\r\n      setSelectedBU(selectedValues);\r\n    } else if (type === \"plants\") {\r\n      const selectedPlantsInfo = plantData.filter((option) =>\r\n        selectedValues.includes(option.plantName)\r\n      );\r\n\r\n      const extractedInfo = selectedPlantsInfo.map((option) => ({\r\n        plantName: option.plantName,\r\n        id: option.id,\r\n      }));\r\n\r\n      setSelectedPlants(extractedInfo);\r\n    }\r\n  };\r\n\r\n  //********all atrribute functions */\r\n  const handleAttributeChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddAttribute = () => {\r\n    const updatedTempObject = {\r\n      ...tempObject,\r\n      values: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n\r\n    if (updatedTempObject.material_master === \"\") {\r\n      updatedTempObject[\"material_master\"] = \"Y\";\r\n    }\r\n    if (updatedTempObject.mandatory === \"\") {\r\n      updatedTempObject[\"mandatory\"] = \"Y\";\r\n    }\r\n    if (Object.keys(updatedTempObject.values).length) {\r\n      updatedTempObject[\"values\"] = [updatedTempObject.values];\r\n    }\r\n\r\n    if (attributeForm !== null) {\r\n      const updatedAttributeData = [...attributeData];\r\n      updatedAttributeData[attributeForm] = updatedTempObject;\r\n      setAttributeData(updatedAttributeData);\r\n    } else {\r\n      setAttributeData((prevAttributeData) => [\r\n        ...prevAttributeData,\r\n        updatedTempObject,\r\n      ]);\r\n    }\r\n\r\n    setDiabox(false);\r\n    setTempObject(defaultFormValue);\r\n    setValuesInputList([]);\r\n    setAttributeForm(null);\r\n  };\r\n\r\n  const handleDeleteAttribute = (index) => {\r\n    setAttributeData((prevData) => {\r\n      const updatedData = [...prevData];\r\n      updatedData.splice(index, 1);\r\n      return updatedData;\r\n    });\r\n  };\r\n  const handleEditAttribute = (index) => {\r\n    if (index >= 0 && index < attributeData.length) {\r\n      setAttributeForm(index);\r\n      setDiabox(true);\r\n      setTempObject({ ...attributeData[index] });\r\n\r\n      const attindex = attributeData[index]?.values[0];\r\n      const valuesArray = Object.entries(attindex || {}).map(\r\n        ([key, value]) => ({\r\n          key,\r\n          value,\r\n        })\r\n      );\r\n\r\n      setValuesInputList(valuesArray);\r\n    }\r\n  };\r\n\r\n  const handleAddNewAttribute = () => {\r\n    setAttributeForm(null);\r\n    setDiabox(true);\r\n    setTempObject({\r\n      name: \"\",\r\n      mandatory: \"\",\r\n      material_master: \"\",\r\n      dataType: \"\",\r\n      inputType: \"\",\r\n      defaultValues: \"\",\r\n    });\r\n    setValuesInputList([]);\r\n  };\r\n\r\n  //********all atrribute functions ends */\r\n\r\n  const handleTemplateFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    let updatedForm = {};\r\n  \r\n    if (name === \"ERPtype\") {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: null,\r\n        plants: null,\r\n        url: null,\r\n        username: null,\r\n        port: null,\r\n        authkey: null,\r\n        material_master: null,\r\n        SalesOrg: null,\r\n        ECN_required: null,\r\n        bomusage: null,\r\n  \r\n        [name]: value,\r\n      };\r\n    } else if (name === \"plant\") {\r\n      const {\r\n        id,\r\n        plantName,\r\n        material_master,\r\n        SalesOrg,\r\n        ECN_required,\r\n        bomusage,\r\n        ConnectivityDetails,\r\n      } = value;\r\n  \r\n      const { url, username, password, port, authkey } = ConnectivityDetails;\r\n  \r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: id,\r\n        plantName: plantName,\r\n        SalesOrg: SalesOrg,\r\n        url: url,\r\n        material_master: material_master,\r\n        username: username,\r\n        password: password,\r\n        port: port,\r\n        authkey: authkey,\r\n        ECN_required: ECN_required,\r\n        bomusage: bomusage,\r\n      };\r\n    } else {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        [name]: value,\r\n      };\r\n    }\r\n    // if (updatedForm.ERPType === \"SAP\") {\r\n    //   updatedForm.exportToERP = \"\";\r\n    //   updatedForm.existInOracle = \"\";\r\n    //   updatedForm.notOwningDivision = \"\";\r\n    // }\r\n    setTemplateForm(updatedForm);\r\n  };\r\n  \r\n  const handleTemplateNameBlur = (event) => {\r\n    const { name, value } = event.target;\r\n    const trimmedValue = value.trim().replace(/\\s+/g, ' '); // Trim and replace multiple spaces\r\n    setTemplateForm((prevForm) => ({\r\n      ...prevForm,\r\n      [name]: trimmedValue,\r\n    }));\r\n  };\r\n\r\n  const filteredPlant = plantData?.filter(\r\n    (plant) =>\r\n      plant.ERPType === templateForm.ERPType &&\r\n      plant.instance === templateForm.instance\r\n  );\r\n  //console.log(filteredPlant, \"2323232 plant \");\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    // setSnackbarMessage(message);\r\n    // setSnackbarSeverity(severity);\r\n    // setsnackBar(true);\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  const handleSubmitTempForm = async () => {\r\n    const randomid = Math.floor(100000 + generateRandomId() * 900000);\r\n\r\n    if (\r\n      templateForm.templateName?.trim() === \"\" ||\r\n      !templateForm.templateName ||\r\n      templateForm.desc?.trim() === \"\" ||\r\n      !templateForm.desc ||\r\n      // templateForm.plantName?.trim() === \"\" ||\r\n      // !templateForm.plantName ||\r\n      templateForm.ERPType?.trim() === \"\" ||\r\n      !templateForm.ERPType ||\r\n      (templateForm.ERPType === \"SAP\" && !templateForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the required details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const updatedForm = {\r\n      ...templateForm,\r\n      id: randomid.toString(),\r\n      attributes: attributeData,\r\n      BU: selectedBU,\r\n      plants: selectedplants,\r\n    };\r\n\r\n    tempService.addnewTemplate(updatedForm).then((resp) => {\r\n      if (resp && Object.keys(resp)?.length && resp?.status === \"failed\") {\r\n        const altHtml = resp?.message?.map((citem) => {\r\n          return (<li key={shortId.generate()}>{citem}</li>)\r\n        });\r\n        handlesnackBarClick(altHtml, \"error\");\r\n        return;\r\n      }\r\n      // handlesnackBarClick(\"Template added successfully!\", \"success\");\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/template\", { state: { message: 'Template added successfully', status: \"success\" } });\r\n      }, 200);\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  const sortedBusinessUnitList = sortDataByKey(bussinessUnitLists, \"businessUnit\");\r\n  \r\n  // console.log(templateForm, \"tempform data\");\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Template\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid item md={9} sm={6} xs={6}>\r\n          <form>\r\n            <h4>Create Template</h4>\r\n\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Template Name</span> <span className={classes.spanRed}>*</span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"templateName\"\r\n                  value={templateForm.templateName}\r\n                  onChange={handleTemplateFormChange}\r\n                  onBlur={handleTemplateNameBlur}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Description</span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"desc\"\r\n                  value={templateForm.desc}\r\n                  onChange={handleTemplateFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={templateForm.ERPType}\r\n                  onChange={handleTemplateFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              {(templateForm.ERPType === \"SAP\" ||\r\n                templateForm.ERPType === \"ORACLE\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Instance</span>{\" \"}\r\n                      <span className={classes.spanRed}>*</span>\r\n                      {/* <span className={classes.spanRed}>*</span> */}\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        // label=\"instance\"\r\n                        id=\"instance\"\r\n                        name=\"instance\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={templateForm.instance}\r\n                        onChange={handleTemplateFormChange}\r\n                      >\r\n                        {instanceOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n              {/* {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Export to ERP </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"exportToERP\"\r\n                      name=\"exportToERP\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.exportToERP}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {exportToERPOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Exist in Oracle </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"existInOracle\"\r\n                      name=\"existInOracle\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.existInOracle}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {existInOracleOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Not Owning Division </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"notOwningDivision\"\r\n                      name=\"notOwningDivision\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.notOwningDivision}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {notOwningDivisionOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )} */}\r\n\r\n              {(templateForm.ERPType === \"ORACLE\" ||\r\n                templateForm.ERPType === \"SAP\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Design Organization <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        style={{ width: \"100%\" }}\r\n                        multiple\r\n                        name=\"BU\"\r\n                      value={selectedBU.sort(caseInsensitiveSort)}\r\n                        onChange={(e) => handleSelectChange(e, \"BU\")}\r\n                      renderValue={(selected) => selected.sort(caseInsensitiveSort).join(\", \")}\r\n                        MenuProps={{\r\n                          sx: {\r\n                            \"&& .Mui-selected\": {\r\n                              backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        {bussinessUnitLists.map((option) => (\r\n                          <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                            {option.businessUnit}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n              {/* <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Plant</span> <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  multiple\r\n                  name=\"plants\"\r\n                  value={selectedplants.map((item) => item.plantName)}\r\n                  onChange={(e) => handleSelectChange(e, \"plants\")}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                >\r\n                  {filteredPlant?.map((option) => (\r\n                    <MenuItem key={option.id} value={option.plantName}>\r\n                      {option.plantName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid> */}\r\n\r\n              {(templateForm.ERPType === \"SAP\") && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Attributes</span>\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <span>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        margin=\"2px\"\r\n                        onClick={handleAddNewAttribute}\r\n                      >\r\n                        Add Attribute\r\n                      </Button>\r\n                    </span>\r\n                    <br />\r\n                    &nbsp;\r\n                    <Grid md={4}>\r\n                      <span>\r\n                        <div\r\n                          style={{\r\n                            height: \"154px\",\r\n                            overflowY: \"auto\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            width: \"500px\",\r\n                          }}\r\n                        >\r\n                          {attributeData.map((attrivar, aindex) => (\r\n                            <Paper\r\n                              key={aindex}\r\n                              style={{\r\n                                paddingLeft: \"50px\",\r\n                                marginBottom: \"8px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                alignItems: \"center\",\r\n                                height: \"46px\",\r\n                              }}\r\n                            >\r\n                              <Grid container alignItems=\"center\" spacing={3}>\r\n                                <Grid item md={9} sm={8} xs={12}>\r\n                                  <p>\r\n                                    <b>Name:</b> {attrivar.name}\r\n                                    <IconButton\r\n                                      onClick={() => handleEditAttribute(aindex)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteAttribute(aindex)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </p>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Paper>\r\n                          ))}\r\n                        </div>\r\n                      </span>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleSubmitTempForm}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </form>\r\n\r\n          <Snackbar\r\n            open={snackBar}\r\n            autoHideDuration={3000}\r\n            onClose={handlesnackbarClose}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n          >\r\n            <Alert\r\n              onClose={handlesnackbarClose}\r\n              severity={snackbarseverity}\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              {snackbarmessage}\r\n            </Alert>\r\n          </Snackbar>\r\n          {(openDesc) ? (\r\n            <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n          ) : (<></>)}\r\n          {/* add attribute dialog box code */}\r\n          <AttributeDialog\r\n            open={diabox}\r\n            handleDialogClose={handleDialogClose}\r\n            attributeForm={attributeForm}\r\n            tempObject={tempObject}\r\n            handleAttributeChange={handleAttributeChange}\r\n            handleAddAttribute={handleAddAttribute}\r\n            newKey={newKey}\r\n            newValue={newValue}\r\n            handleAddRow={handleAddRow}\r\n            handleDeleteRow={handleDeleteRow}\r\n            keyerror={keyerror}\r\n            valuesInputList={valuesInputList}\r\n          />\r\n        </Grid>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  IconButton,\r\n  Grid,\r\n  TextField,\r\n  Paper,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport AttributeDialog from \"./attributeDialog\";\r\nimport Loader from 'app/components/Loader';\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  existInOracleOptions,\r\n  exportToERPOptions,\r\n  notOwningDivisionOptions,\r\n  BUOptions,\r\n} from \"../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport shortId from 'shortid';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nimport { caseInsensitiveSort } from \"app/utils/utils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\nconst defaultFormValue = {\r\n  name: null,\r\n  mandatory: null,\r\n  material_master: null,\r\n  dataType: null,\r\n  inputType: null,\r\n  values: null,\r\n  defaultValues: null,\r\n};\r\n\r\nexport default function EditTemplate() {\r\n  const tempService = new templateService();\r\n  const { refreshData, bussinessUnitLists } = useOracleSettings();\r\n  const plantService = new PlantService();\r\n  const [plantData, setPlantData] = useState();\r\n  const classes = useStyles();\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n\r\n  //**********AttributeComplete States************************** */\r\n  const [diabox, setDiabox] = useState(false);\r\n\r\n  const [attributeForm, setAttributeForm] = useState(null);\r\n  const [tempObject, setTempObject] = useState({});\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  //**********AttributeComplete States end ************************** */\r\n  let navigate = useNavigate();\r\n  const location = useLocation();\r\n  const params = useParams();\r\n\r\n  const [selectedTemplateObj, setSelectedTemplateObj] = useState();\r\n  const [templateForm, setTemplateForm] = useState({});\r\n  const [attributeData, setAttributeData] = useState([]);\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n    });\r\n  }, []);\r\n\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  //********all atrribute functions */\r\n  const handleAttributeChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddAttribute = () => {\r\n    const updatedTempObject = {\r\n      ...tempObject,\r\n      values: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n\r\n    if (updatedTempObject.material_master === \"\") {\r\n      updatedTempObject[\"material_master\"] = selectedTemplateObj;\r\n    }\r\n    if (updatedTempObject.mandatory === \"\") {\r\n      updatedTempObject[\"mandatory\"] = \"Y\";\r\n    }\r\n\r\n    if (Object.keys(updatedTempObject.values).length) {\r\n      updatedTempObject[\"values\"] = [updatedTempObject.values];\r\n    }\r\n\r\n    if (attributeForm !== null) {\r\n      const updatedAttributeData = [...attributeData];\r\n      updatedAttributeData[attributeForm] = updatedTempObject;\r\n      setAttributeData(updatedAttributeData);\r\n    } else {\r\n      if (attributeData) {\r\n        setAttributeData((prevAttributeData) => [\r\n          ...prevAttributeData,\r\n          updatedTempObject,\r\n        ]);\r\n      } else {\r\n        const newAttr = [updatedTempObject]\r\n        setAttributeData(newAttr);\r\n      }\r\n    }\r\n\r\n    setDiabox(false);\r\n    setTempObject(defaultFormValue);\r\n    setValuesInputList([]);\r\n    setAttributeForm(null);\r\n  };\r\n\r\n  const handleDeleteAttribute = (index) => {\r\n    if (index >= 0 && index < attributeData.length) {\r\n      const updatedAttributeData = [...attributeData];\r\n      updatedAttributeData.splice(index, 1);\r\n      setAttributeData(updatedAttributeData);\r\n    }\r\n  };\r\n  const handleEditAttribute = (index) => {\r\n    if (index >= 0 && index < attributeData.length) {\r\n      setAttributeForm(index);\r\n      setDiabox(true);\r\n\r\n      const selectedAttribute = { ...attributeData[index] };\r\n\r\n      const attindex = attributeData[index]?.values[0];\r\n      const valuesArray = Object.entries(attindex || {})?.map(\r\n        ([key, value]) => ({\r\n          key,\r\n          value,\r\n        })\r\n      );\r\n\r\n      setValuesInputList(valuesArray);\r\n\r\n      setTempObject(selectedAttribute);\r\n    }\r\n  };\r\n\r\n  const handleAddNewAttribute = () => {\r\n    setAttributeForm(null);\r\n    setDiabox(true);\r\n    setTempObject({\r\n      name: \"\",\r\n      mandatory: \"\",\r\n      material_master: \"\",\r\n      dataType: \"\",\r\n      inputType: \"\",\r\n      defaultValues: \"\",\r\n    });\r\n    setValuesInputList([]);\r\n  };\r\n\r\n  //********all atrribute functions ends */\r\n\r\n  const handleSelectChange = (event, type) => {\r\n    const selectedValues = event.target.value;\r\n\r\n    if (type === \"BU\") {\r\n      setSelectedBU(selectedValues);\r\n    } else if (type === \"plants\") {\r\n      const selectedPlantsInfo = plantData?.filter((option) =>\r\n        selectedValues.includes(option.plantName)\r\n      );\r\n\r\n      const extractedInfo = selectedPlantsInfo?.map((option) => ({\r\n        plantName: option.plantName,\r\n        id: option.id,\r\n      }));\r\n\r\n      setSelectedPlants(extractedInfo);\r\n    }\r\n  };\r\n\r\n  const handleTemplateFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    let updatedForm = {};\r\n\r\n    if (name === \"ERPtype\") {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: null,\r\n        plants: null,\r\n        url: null,\r\n        username: null,\r\n        port: null,\r\n        authkey: null,\r\n        material_master: null,\r\n        SalesOrg: null,\r\n        ECN_required: null,\r\n        bomusage: null,\r\n        //oracle changes\r\n        // exportToERP: null,\r\n        // existInOracle: null,\r\n        // notOwningDivision: null,\r\n        BU: null,\r\n\r\n        [name]: value,\r\n      };\r\n    } else if (name === \"plant\") {\r\n      const {\r\n        id,\r\n        plantName,\r\n        material_master,\r\n        ECN_required,\r\n        bomusage,\r\n        SalesOrg,\r\n        ConnectivityDetails,\r\n      } = value;\r\n\r\n      const { url, username, password, port, authkey } = ConnectivityDetails;\r\n\r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: id,\r\n        plantName: plantName,\r\n        ECN_required: ECN_required,\r\n        bomusage: bomusage,\r\n        SalesOrg: SalesOrg,\r\n        url: url,\r\n        material_master: material_master,\r\n        username: username,\r\n        password: password,\r\n        port: port,\r\n        authkey: authkey,\r\n      };\r\n    } else {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        [name]: value,\r\n      };\r\n    }\r\n\r\n    // if (updatedForm.ERPType === \"SAP\") {\r\n    //   updatedForm.exportToERP = \"\";\r\n    //   updatedForm.existInOracle = \"\";\r\n    //   updatedForm.notOwningDivision = \"\";\r\n    // }\r\n\r\n    setTemplateForm(updatedForm);\r\n  };\r\n\r\n  const filteredPlant = plantData?.filter(\r\n    (plant) =>\r\n      plant.ERPType === templateForm.ERPType &&\r\n      plant.instance === templateForm.instance\r\n  );\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    // setSnackbarMessage(message);\r\n    // setSnackbarSeverity(severity);\r\n    // setsnackBar(true);\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  const handleSubmitTempForm = async () => {\r\n    if (\r\n      templateForm.templateName?.trim() === \"\" ||\r\n      !templateForm.templateName ||\r\n      templateForm.desc?.trim() === \"\" ||\r\n      !templateForm.desc ||\r\n      // templateForm.plantName?.trim() === \"\" ||\r\n      // !templateForm.plantName ||\r\n      templateForm.ERPType?.trim() === \"\" ||\r\n      !templateForm.ERPType ||\r\n      (templateForm.ERPType === \"SAP\" && !templateForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the required details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    setTemplateForm((prevData) => {\r\n      const updatedForm = {\r\n        ...prevData,\r\n        id: templateForm.id,\r\n        templates: templateForm.templates,\r\n        attributes: attributeData,\r\n        BU: selectedBU,\r\n        plants: selectedplants,\r\n      };\r\n\r\n      tempService.updateTemplate(updatedForm).then((resp) => {\r\n        if (resp && Object.keys(resp)?.length && resp?.status === \"failed\") {\r\n          const altHtml = resp?.message?.map((citem) => {\r\n            return (<li key={shortId.generate()}>{citem}</li>)\r\n          });\r\n          handlesnackBarClick(altHtml, \"error\");\r\n          return;\r\n        }\r\n        // handlesnackBarClick(\"Template updated successfully\", \"success\");\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/template\", { state: { message: resp.msg, status: resp.status } });\r\n        }, 200);\r\n      });\r\n\r\n      return updatedForm;\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (params?.tempId) {\r\n      setIsLoading(true);\r\n      tempService.getTemplateById({ id: params?.tempId }).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp && Object?.keys(resp)?.length) {\r\n          const selectedTemplate = resp;\r\n\r\n          setSelectedTemplateObj(selectedTemplate);\r\n\r\n          setSelectedBU(\r\n            selectedTemplate.BU\r\n          );\r\n          setAttributeData(\r\n            selectedTemplate.attributes\r\n          );\r\n          setSelectedPlants(\r\n            selectedTemplate.plants\r\n          );\r\n          setTemplateForm({\r\n            id: selectedTemplate.id,\r\n            templates: selectedTemplate.templates,\r\n            templateName: selectedTemplate.templateName,\r\n            desc: selectedTemplate.desc,\r\n            ERPType: selectedTemplate.ERPType,\r\n            instance: selectedTemplate.instance,\r\n            plantId: selectedTemplate.plantId,\r\n            plantName: selectedTemplate.plantName,\r\n            port: selectedTemplate.port,\r\n            url: selectedTemplate.url,\r\n            username: selectedTemplate.username,\r\n            attributes: selectedTemplate.attributes,\r\n            ECN_required: selectedTemplate.ECN_required,\r\n            bomusage: selectedTemplate.bomusage,\r\n            //oracle changes\r\n            BU: selectedTemplate.BU,\r\n            // exportToERP: selectedTemplate.exportToERP,\r\n            // existInOracle: selectedTemplate.existInOracle,\r\n            // notOwningDivision: selectedTemplate.notOwningDivision,\r\n          });\r\n        } else {\r\n          navigate(\"/template\", { state: { message: \"Template not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/template\", { state: { message: \"Template not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n sortDataByKey(bussinessUnitLists, \"businessUnit\");\r\n  \r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Template\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid item md={9} sm={6} xs={6}>\r\n          <form>\r\n            <h4>Edit Template</h4>\r\n\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Template Name</span>\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"templateName\"\r\n                  value={templateForm.templateName}\r\n                  onChange={handleTemplateFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  disabled\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Description</span>\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"desc\"\r\n                  value={templateForm.desc}\r\n                  onChange={handleTemplateFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              {(templateForm.ERPType === \"SAP\" ||\r\n                templateForm.ERPType === \"ORACLE\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>ERP Type </span>\r\n                      <span className={classes.spanRed}>*</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        labelId=\"ERPType-label\"\r\n                        id=\"ERPType-select\"\r\n                        name=\"ERPType\"\r\n                        fullWidth\r\n                        value={templateForm?.ERPType}\r\n                        onChange={handleTemplateFormChange}\r\n                      >\r\n                        {ERPtypeOptions?.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Instance</span>\r\n                      <span className={classes.spanRed}>*</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        label=\"instance\"\r\n                        id=\"instance\"\r\n                        name=\"instance\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={templateForm.instance}\r\n                        onChange={handleTemplateFormChange}\r\n                      >\r\n                        {instanceOptions?.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n              {/* {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Export to ERP </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"exportToERP\"\r\n                      name=\"exportToERP\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.exportToERP}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {exportToERPOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Exist in Oracle </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"existInOracle\"\r\n                      name=\"existInOracle\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.existInOracle}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {existInOracleOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Not Owning Division </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"notOwningDivision\"\r\n                      name=\"notOwningDivision\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.notOwningDivision}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {notOwningDivisionOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )} */}\r\n\r\n              {(templateForm.ERPType === \"ORACLE\" || templateForm.ERPType === \"SAP\") && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>\r\n                      Design Organization <span className={classes.spanRed}>*</span>\r\n                    </span>\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      style={{ width: \"100%\" }}\r\n                      multiple\r\n                      name=\"BU\"\r\n                      value={selectedBU.sort(caseInsensitiveSort)}\r\n                      onChange={(e) => handleSelectChange(e, \"BU\")}\r\n                      renderValue={(selected) => selected.sort(caseInsensitiveSort).join(\", \")}\r\n                      MenuProps={{\r\n                        sx: {\r\n                          \"&& .Mui-selected\": {\r\n                            backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                          }\r\n                        }\r\n                      }}\r\n                    >\r\n                      {bussinessUnitLists?.map((option) => (\r\n                        <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                          {option.businessUnit}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {/* <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Plants</span>\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  multiple\r\n                  name=\"plants\"\r\n                  value={selectedplants.map((item) => item.plantName)}\r\n                  onChange={(e) => handleSelectChange(e, \"plants\")}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                >\r\n                  {filteredPlant?.map((option) => (\r\n                    <MenuItem key={option.id} value={option.plantName}>\r\n                      {option.plantName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid> */}\r\n\r\n              {(templateForm.ERPType === \"SAP\") && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Attributes</span>\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <span>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        margin=\"2px\"\r\n                        onClick={handleAddNewAttribute}\r\n                      >\r\n                        Add Attribute\r\n                      </Button>\r\n                    </span>\r\n                    <br />\r\n                    &nbsp;\r\n                    <Grid md={4}>\r\n                      <span>\r\n                        <div\r\n                          style={{\r\n                            height: \"154px\",\r\n                            overflowY: \"auto\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            width: \"500px\",\r\n                          }}\r\n                        >\r\n                          {attributeData?.map((attrivar, aindex) => (\r\n                            <Paper\r\n                              key={aindex}\r\n                              style={{\r\n                                paddingLeft: \"50px\",\r\n                                marginBottom: \"8px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                alignItems: \"center\",\r\n                                height: \"46px\",\r\n                              }}\r\n                            >\r\n                              <Grid container alignItems=\"center\" spacing={3}>\r\n                                <Grid item md={9} sm={8} xs={12}>\r\n                                  <p>\r\n                                    <b>Name:</b> {attrivar.name}\r\n                                    <IconButton\r\n                                      onClick={() => handleEditAttribute(aindex)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteAttribute(aindex)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </p>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Paper>\r\n                          ))}\r\n                        </div>\r\n                      </span>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleSubmitTempForm}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n\r\n          <Snackbar\r\n            open={snackBar}\r\n            autoHideDuration={3000}\r\n            onClose={handlesnackbarClose}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n          >\r\n            <Alert\r\n              onClose={handlesnackbarClose}\r\n              severity={snackbarseverity}\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              {snackbarmessage}\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          {(openDesc) ? (\r\n            <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n          ) : (<></>)}\r\n          {\r\n            (refreshData || isLoading) ? (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <Loader show={true} />\r\n              </div>\r\n            ) : <></>\r\n          }\r\n\r\n          {/* add attribute dialog box code */}\r\n          <AttributeDialog\r\n            open={diabox}\r\n            handleDialogClose={handleDialogClose}\r\n            attributeForm={attributeForm}\r\n            tempObject={tempObject}\r\n            handleAttributeChange={handleAttributeChange}\r\n            handleAddAttribute={handleAddAttribute}\r\n            newKey={newKey}\r\n            newValue={newValue}\r\n            handleAddRow={handleAddRow}\r\n            handleDeleteRow={handleDeleteRow}\r\n            keyerror={keyerror}\r\n            valuesInputList={valuesInputList}\r\n          />\r\n        </Grid>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\n// import { authRoles } from \"../../auth/authRoles\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport TemplateWrapper from \"./templateWrapper\";\r\nimport CreateTemplate from \"./createTemplate\";\r\nimport EditTemplate from \"./editTemplate\";\r\n\r\nconst templateRoutes = [\r\n  {\r\n    path: \"/template\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <TemplateWrapper />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n\r\n  {\r\n    path: \"/createTemplate\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateTemplate />\r\n      </PrivateRoute>\r\n    ),\r\n    // auth: authRoles.admin,\r\n  },\r\n\r\n  {\r\n    path: \"/editTemplate/:tempId\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditTemplate />\r\n      </PrivateRoute>\r\n    ),\r\n    // auth: authRoles.admin,\r\n  },\r\n];\r\n\r\nexport default templateRoutes;\r\n","export const authRoles = {\r\n    sa: ['SA'], // Only Super Admin has access\r\n    admin: ['SA', 'ADMIN'], // Only SA & Admin has access\r\n    editor: ['SA', 'ADMIN', 'EDITOR'], // Only SA & Admin & Editor has access\r\n    guest: ['SA', 'ADMIN', 'EDITOR', 'GUEST'], // Everyone has access\r\n}\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.plantData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.plantData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        'Plant Name': item.plantName,\r\n        'ERP Type': item.ERPType,\r\n        Instance: item.instance,\r\n        \"Export To ERP\": item.exportToERP,\r\n      }\r\n      return res\r\n    })\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Plants' }).then((response) => {\r\n      setExportResponse(response)\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.plantData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n    }\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportPlants\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst Plant = () => {\r\n  const plantService = new PlantService();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [plantData, setPlantData] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [selectedDelPlant, setSelectedDelPlant] = useState();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const handleDeleteDialog = () => {\r\n    handleDeletePlantDialog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditPlant(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n\r\n  const fetchPlants = () => {\r\n    setIsLoading(true);\r\n    plantService.getAllPlantsList()\r\n      .then((result) => {\r\n        setPlantData(result);\r\n        setInitialData(result); // Set initial data\r\n        setFilteredPlantData(result);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlants();\r\n  }, []);\r\n\r\n  const [filteredPlantData, setFilteredPlantData] = useState([]);\r\n  let sortedPlanteData = sortDataByKey([...filteredPlantData], \"plantName\");\r\n    \r\n  useEffect(() => {\r\n    setFilteredPlantData(plantData);\r\n  }, [plantData]);\r\n  // ***** Global search functionality ********\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  // ***** Global search functionality ends********\r\n\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n  const handleCreatePlant = () => {\r\n    plantModeRef.current = \"create\"; // Update the ref with the new value of plantMode\r\n    setTimeout(() => {\r\n      navigate(\"/createPlant\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n  const handleDeletePlantDialog = (DeletePlant) => {\r\n    setDeleteDialog(true);\r\n    setSelectedDelPlant(DeletePlant);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeletePlant = async () => {\r\n    setDeleteDialog(false);\r\n\r\n    try {\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await plantService.deletePlant(selRowsId);\r\n      setSelected({});\r\n      setSelectedRows([]);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n    });\r\n    handlesnackBarClick(\"Plant deleted successfully\", \"success\");\r\n  };\r\n\r\n  const handleEditPlant = (editSelectedPlant) => {\r\n    plantModeRef.current = \"edit\";\r\n    const selectedPlantData = editSelectedPlant;\r\n    setTimeout(() => {\r\n      navigate(`/editPlant/${selectedPlantData?.id}`, {\r\n        state: { plantMode: plantModeRef.current, selectedPlantData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    const new_FilteredData = plantData.filter((subscriber) => {\r\n      return (searchValue === \"\" ||\r\n        subscriber.plantName\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.instance\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.ERPType.toLowerCase().includes(\r\n          searchValue.toLowerCase()\r\n        ))\r\n    });\r\n    setFilteredPlantData(new_FilteredData);\r\n  }, [searchValue, plantData]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedPlant = sortedExportDataHOC(Plant);\r\n    const sortedData = SortedPlant({ data: plantData, sortInfo, sortedPlanteData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setPlantData(sortedData.props.data);\r\n    setFilteredPlantData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Plant\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreatePlant}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <ExportDialogBox\r\n              plantData={sortInfo && Object.keys(sortInfo).length === 0 ? sortedPlanteData : plantData}\r\n              filterTemplateData={selectedRows} />\r\n          </Grid>\r\n\r\n\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br />\r\n            {isLoading ? (\r\n              // Display loading spinner while data is being fetched\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  minHeight: 550\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              // Render DataGrid once data is loaded\r\n              <DataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                style={{ minHeight: 550 }}\r\n                defaultLimit={100}\r\n                columns={[\r\n                  {\r\n                    name: \"plantName\",\r\n                    header: <Tooltip title={'Name'}>Plant Name</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.plantName}</div>,\r\n                  },\r\n                  {\r\n                    name: \"ERPType\",\r\n                    header: <Tooltip title={\"ERP Type\"}>ERP Type</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.ERPType}</div>,\r\n                  },\r\n                  {\r\n                    name: \"instance\",\r\n                    header: <Tooltip title={\"instance\"}>Instance</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"exportToERP\",\r\n                    header: <Tooltip title={\"Export To ERP\"}>Export To ERP</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  // {\r\n                  //   name: \"orgId\",\r\n                  //   header: <Tooltip title={\"Org Id\"}>Org Id</Tooltip>,\r\n                  //   defaultFlex: 1,\r\n                  //   defaultWidth: 50,\r\n                  // },\r\n                  // {\r\n                  //   name: \"BU\",\r\n                  //   header: <Tooltip title={\"Design Organization\"}>Design Organization</Tooltip>,\r\n                  //   defaultFlex: 1,\r\n                  //   defaultWidth: 50,\r\n                  //   render: ({ data }) => <div>{(data?.BU) ? data.BU.map((item) => item).join(\", \") : ''}</div>,\r\n                  // },\r\n                ]}\r\n                  dataSource={sortInfo === null ? filteredPlantData : sortedPlanteData}\r\n                // rowHeight={null}\r\n                checkboxColumn\r\n                selected={selected}\r\n                onSelectionChange={onSelectionChange}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                pagination\r\n                renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                onSortInfoChange={handleSortInfoChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Plant\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the plant <b>{selectedDelPlant?.plantName}</b>{\" \"}\r\n                with instance <b>{selectedDelPlant?.instance}</b> having Design Organizations{\" \"}\r\n                {/* <b>\r\n                  {selectedDelPlant?.BU.map((buname) => {\r\n                    return buname;\r\n                  }).join(\",\")}\r\n                </b> */}\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted plants?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeletePlant}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Plant;","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\nexport default function ConnectivityDetailsDialog({\r\n  open,\r\n  connDetails,\r\n  handleCDChange,\r\n  handleAddCD,\r\n  connectivityError,\r\n  handleDialogClose,\r\n  plantForm,\r\n}) {\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>Add Connectivity details</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>URL :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"URL\"\r\n              name=\"url\"\r\n              value={connDetails.url}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>Username :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              value={connDetails.username}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>Password :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              value={connDetails?.password || \"\"}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>AuthKey :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Authkey\"\r\n              name=\"authkey\"\r\n              value={connDetails.authkey}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>Port :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Port\"\r\n              name=\"port\"\r\n              value={connDetails.port}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          {plantForm.ERPType === \"SAP\" && (\r\n            <>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>sapsysnum :</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"sapsysnum\"\r\n                  name=\"sapsysnum\"\r\n                  value={connDetails.sapsysnum}\r\n                  onChange={handleCDChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>sapclientid :</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"sapclientid\"\r\n                  name=\"sapclientid\"\r\n                  value={connDetails.sapclientid}\r\n                  onChange={handleCDChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <p style={{ color: \"red\" }}>{connectivityError}</p>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddCD}>Add</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { Formik, Form } from \"formik\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  styled\r\n} from \"@mui/material\";\r\nimport ConnectivityDetailsDialog from \"./connectivityDetailsDialog\";\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  bomusageOptions,\r\n  exportToERPOptions,\r\n} from \"../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\nexport default function CreatePlant() {\r\n  const plantService = new PlantService();\r\n  const { bussinessUnitLists } = useOracleSettings();\r\n  const [allPlantData, setallPlantData] = useState();\r\n  const [diaBox, setDiabox] = useState(false);\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    id: \"\",\r\n    plants: \"\",\r\n    ERPType: \"\",\r\n    instance: \"\",\r\n    Connectivitydetails: {},\r\n  };\r\n  const [plantForm, setPlantForm] = useState({\r\n    BU: [],\r\n    exportToERP: \"Y\", // Initialize BU as an empty array\r\n    ERPType: \"\",\r\n    instance: \"\",\r\n    orgId: \"\",\r\n    plantName: \"\",\r\n    SalesOrg: \"\",\r\n    aliasPlant: \"\",\r\n    material_master: \"\",\r\n    ECN_required: \"\",\r\n    bomusage: \"\",\r\n    // ... other fields\r\n  });\r\n  const [connDetails, setconnDetails] = useState({});\r\n  const [connectivityError, setconnectivityError] = useState();\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  let navigate = useNavigate();\r\n\r\n  const materialMasterOption = [\r\n    {\r\n      value: \"Y\",\r\n      label: \"Yes\",\r\n    },\r\n    {\r\n      value: \"N\",\r\n      label: \"No\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setallPlantData(result.plant);\r\n    });\r\n  }, []);\r\n\r\n  //console.log(diaBox, \"dialogbox status\");\r\n\r\n  const handleAddPlant = () => {\r\n    const newPlant = {\r\n      id:\r\n        plantForm.plantName +\r\n        \"_\" +\r\n        plantForm.ERPType +\r\n        \"_\" +\r\n        plantForm.instance,\r\n      plants: plantForm.plantName + \"_\" + plantForm.ERPType,\r\n      plantName: plantForm.plantName,\r\n      ERPType: plantForm.ERPType,\r\n      orgId: plantForm.orgId,\r\n      SalesOrg: plantForm.SalesOrg,\r\n      aliasPlant: plantForm.aliasPlant,\r\n      material_master: plantForm.material_master,\r\n      ECN_required: plantForm.ECN_required,\r\n      bomusage: plantForm.bomusage,\r\n      // BU: plantForm.ERPType === \"SAP\" ? \"\" : selectedBU,\r\n      // exportToERP: plantForm.ERPType === \"SAP\" ? \"\" : plantForm.exportToERP,\r\n      exportToERP: plantForm.exportToERP,\r\n      ConnectivityDetails: connDetails,\r\n    };\r\n\r\n    if (plantForm?.instance) {\r\n      newPlant[\"instance\"] = plantForm?.instance;\r\n      newPlant[\"id\"] =\r\n        plantForm.plantName +\r\n        \"_\" +\r\n        plantForm.ERPType +\r\n        \"_\" +\r\n        plantForm.instance;\r\n      newPlant[\"plants\"] =\r\n        plantForm.plantName +\r\n        \"_\" +\r\n        plantForm.ERPType +\r\n        \"_\" +\r\n        plantForm.instance;\r\n    }\r\n\r\n    if (\r\n      plantForm.plantName?.trim() === \"\" || !plantForm.plantName ||\r\n      plantForm.ERPType?.trim() === \"\" || !plantForm.ERPType ||\r\n      plantForm.instance?.trim() === \"\" || !plantForm.instance ||\r\n      plantForm.exportToERP?.trim() === \"\" || !plantForm.exportToERP ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.plantName?.trim() === \"\" || !plantForm.plantName)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.material_master?.trim() === \"\" || !plantForm.material_master)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.bomusage?.trim() === \"\" || !plantForm.bomusage)) ||\r\n      (plantForm.ERPType === \"SAP\" && !plantForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill required details \", \"error\");\r\n    } else {\r\n      plantService.addnewPlant(newPlant).then((resp) => {\r\n        if (resp && resp?.data && resp?.data?.length) {\r\n          if (resp?.data[0]?.id) {\r\n            handlesnackBarClick(\"Plant added successfully!\", \"success\");\r\n\r\n            setTimeout(() => {\r\n              navigate(\"/plants\");\r\n            }, 2000);\r\n          } else if (resp?.data[0]?.msg) {\r\n            handlesnackBarClick(resp?.data[0]?.msg, \"error\");\r\n          }\r\n        } else {\r\n          //console.log(\"No data in resp.\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCDChange = (e) => {\r\n    setconnDetails({\r\n      ...connDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddCD = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  const handlePlantFromChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...plantForm,\r\n      [name]: value,\r\n    };\r\n    setPlantForm(updatedForm);\r\n  };\r\n\r\n  const handleBUChange = (event) => {\r\n    setSelectedBU(event.target.value);\r\n  };\r\n  //connectivity form methods\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n    setconnectivityError(\"\");\r\n    setconnDetails(\"\");\r\n  };\r\n\r\n  // snackbar code\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  //console.log(plantForm, \"plantform\");\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Plant\" }]} />\r\n      </Box>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={() => {\r\n        }}\r\n      >\r\n        <Form>\r\n          <SimpleCard>\r\n            <Grid item md={9} sm={6} xs={6}>\r\n              <h4>Create Plant</h4>\r\n\r\n              <Grid container spacing={3} alignItems=\"center\">\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    Plant Name <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                </Grid>\r\n\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <TextField\r\n                    name=\"plantName\"\r\n                    value={plantForm.plantName}\r\n                    onChange={handlePlantFromChange}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n\r\n\r\n\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    ERP Type <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                </Grid>\r\n\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <Select\r\n                    id=\"ERPType\"\r\n                    name=\"ERPType\"\r\n                    fullWidth\r\n                    displayEmpty\r\n                    value={plantForm.ERPType}\r\n                    onChange={handlePlantFromChange}\r\n                  >\r\n                    {ERPtypeOptions.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n\r\n                {(plantForm.ERPType === \"SAP\" || plantForm.ERPType === \"ORACLE\" || plantForm.ERPType === \"JDE\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Organization Id<span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <TextField\r\n                        label=\"Organization Id\"\r\n                        name=\"orgId\"\r\n                        value={plantForm.orgId}\r\n                        onChange={handlePlantFromChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {(plantForm.ERPType === \"SAP\" ||\r\n                  plantForm.ERPType === \"ORACLE\" || plantForm.ERPType === \"JDE\") && (\r\n                    <>\r\n                      <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                        <span>\r\n                          Instance <span className={classes.spanRed}>*</span>\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item md={9} sm={8} xs={12}>\r\n                        <Select\r\n                          id=\"instance\"\r\n                          name=\"instance\"\r\n                          fullWidth\r\n                          displayEmpty\r\n                          value={plantForm.instance}\r\n                          onChange={handlePlantFromChange}\r\n                        >\r\n                          {instanceOptions.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n\r\n                {[\"ORACLE\", \"SAP\", \"JDE\"]?.includes(plantForm.ERPType) && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Export to ERP</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"exportToERP\"\r\n                        name=\"exportToERP\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.exportToERP}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {exportToERPOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {/* {plantForm.ERPType === \"ORACLE\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Design Organization <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        style={{ width: \"100%\" }}\r\n                        multiple\r\n                        value={selectedBU}\r\n                        onChange={handleBUChange}\r\n                        renderValue={(selected) => selected.join(\", \")}\r\n                        MenuProps={{\r\n                          sx: {\r\n                            \"&& .Mui-selected\": {\r\n                              backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        {bussinessUnitLists.map((option) => (\r\n                          <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                            {option.businessUnit}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )} */}\r\n\r\n                {plantForm.ERPType === \"SAP\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Default Sales Org<span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <TextField\r\n                        label=\"Sales Org\"\r\n                        name=\"SalesOrg\"\r\n                        value={plantForm.SalesOrg}\r\n                        onChange={handlePlantFromChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Material Master <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"material_master\"\r\n                        name=\"material_master\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.material_master}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    {plantForm.material_master === \"Y\" && (\r\n                      <>\r\n                        <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                          <span>\r\n                            Plant Alias Name\r\n                            <span className={classes.spanRed}>*</span>\r\n                          </span>\r\n                        </Grid>\r\n\r\n                        <Grid item md={9} sm={8} xs={12}>\r\n                          <TextField\r\n                            name=\"aliasPlant\"\r\n                            value={plantForm.aliasPlant}\r\n                            onChange={handlePlantFromChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        ECN Required <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"ECN_required\"\r\n                        name=\"ECN_required\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.ECN_required}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        BOM Usage <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"bomusage\"\r\n                        name=\"bomusage\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.bomusage}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {bomusageOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    {console.log(plantForm.ERPType, 'plantForm.ERPType')}\r\n                    {plantForm.ERPType === \"SAP\" && (\r\n                      <>\r\n                        <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                          <span>Connectivity Details </span>\r\n                        </Grid>\r\n\r\n                        <Grid item md={9} sm={8} xs={12}>\r\n                          <span>\r\n                            {Object.keys(connDetails).length === 0 && (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                margin=\"2px\"\r\n                                onClick={() => {\r\n                                  setDiabox(true);\r\n                                }}\r\n                              >\r\n                                Add Connectivity Details\r\n                              </Button>\r\n                            )}\r\n                            {Object.keys(connDetails).length > 0 && (\r\n                              <Grid item md={12} sm={8} xs={12}>\r\n                                <>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <p>\r\n                                      <b>URL :</b> {connDetails.url}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Username :</b> {connDetails.username}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Pass :</b> {connDetails.password}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>AuthKey :</b> {connDetails.authkey}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Port :</b> {connDetails.port}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    {plantForm.ERPType === \"SAP\" && (\r\n                                      <>\r\n                                        <p>\r\n                                          <b>sapsysnum :</b> {connDetails.sapsysnum}\r\n                                        </p>{\" \"}\r\n                                        &nbsp;\r\n                                        <p>\r\n                                          <b>sapclientid :</b> {connDetails.sapclientid}\r\n                                        </p>{\" \"}\r\n                                      </>\r\n                                    )}\r\n                                    <p>\r\n                                      {\" \"}\r\n                                      <EditIcon\r\n                                        onClick={() => {\r\n                                          setDiabox(true);\r\n                                        }}\r\n                                      />\r\n                                    </p>\r\n                                  </div>\r\n                                </>\r\n                              </Grid>\r\n                            )}\r\n                          </span>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleAddPlant}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleCancel}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </SimpleCard>\r\n        </Form>\r\n      </Formik>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      {/* dialogBox */}\r\n\r\n      <ConnectivityDetailsDialog\r\n        open={diaBox}\r\n        onClose={handleDialogClose}\r\n        connDetails={connDetails}\r\n        handleDialogClose={handleDialogClose}\r\n        handleCDChange={handleCDChange}\r\n        handleAddCD={handleAddCD}\r\n        connectivityError={connectivityError}\r\n        plantForm={plantForm}\r\n        classes={classes}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { Formik, Form } from \"formik\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  bomusageOptions,\r\n  BUOptions,\r\n  exportToERPOptions,\r\n} from \"../adminConfig/common\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport ConnectivityDetailsDialog from \"./connectivityDetailsDialog\";\r\nimport { Grid, TextField, Select, MenuItem, Box, styled } from \"@mui/material\";\r\nimport Loader from 'app/components/Loader';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\nexport default function EditPlant() {\r\n  const { refreshData } = useOracleSettings();\r\n  const plantService = new PlantService();\r\n  const [allPlantData, setallPlantData] = useState();\r\n  const [diaBox, setDiabox] = useState(false);\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    id: \"\",\r\n    plants: \"\",\r\n    ERPType: \"\",\r\n    instance: \"\",\r\n    Connectivitydetails: {},\r\n  };\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [connectivityError, setconnectivityError] = useState();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  // const selectedPlant = location.state?.selectedPlantData;\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [plantForm, setPlantForm] = useState({});\r\n  const [connDetails, setConnDetails] = useState({});\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [selectedPlant, setSelectedPlant] = useState({});\r\n\r\n  const materialMasterOption = [\r\n    {\r\n      value: \"Y\",\r\n      label: \"Yes\",\r\n    },\r\n    {\r\n      value: \"N\",\r\n      label: \"No\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setallPlantData(result.plant);\r\n    });\r\n  }, []);\r\n\r\n  //plantform methods\r\n\r\n  const handleAddPlant = async () => {\r\n    setIsLoading(true);\r\n    const newPlant = {\r\n      id: plantForm.id,\r\n      plants: plantForm.plants,\r\n      plantName: plantForm.plantName,\r\n      ERPType: plantForm.ERPType,\r\n      SalesOrg: plantForm.SalesOrg,\r\n      aliasPlant: plantForm.aliasPlant,\r\n      material_master: plantForm.material_master,\r\n      ECN_required: plantForm.ECN_required,\r\n      bomusage: plantForm.bomusage,\r\n      ConnectivityDetails: connDetails,\r\n      // BU: plantForm.ERPType === \"SAP\" ? \"\" : selectedBU,\r\n      // exportToERP: plantForm.ERPType === \"SAP\" ? \"\" : plantForm.exportToERP,\r\n      exportToERP: plantForm.exportToERP,\r\n    };\r\n\r\n    if (plantForm?.instance) {\r\n      newPlant[\"instance\"] = plantForm?.instance;\r\n    }\r\n    if (\r\n      plantForm.plantName?.trim() === \"\" || !plantForm.plantName ||\r\n      plantForm.ERPType?.trim() === \"\" || !plantForm.ERPType ||\r\n      plantForm.instance?.trim() === \"\" || !plantForm.instance ||\r\n      plantForm.exportToERP?.trim() === \"\" || !plantForm.exportToERP ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.plantName?.trim() === \"\" || !plantForm.plantName)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.material_master?.trim() === \"\" || !plantForm.material_master)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.bomusage?.trim() === \"\" || !plantForm.bomusage)) ||\r\n      (plantForm.ERPType === \"SAP\" && !plantForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill required details \", \"error\");\r\n      setIsLoading(false);\r\n    } else {\r\n      setIsLoading(true);\r\n      await plantService.updatePlant(newPlant).then((resp) => {\r\n        if (resp?.data?.id) {\r\n          handlesnackBarClick(\"Plant updated successfully\", \"success\");\r\n          setTimeout(() => {\r\n            setIsLoading(false);\r\n            navigate(\"/plants\");\r\n          }, 2000);\r\n        } else if (resp.msg) {\r\n          setIsLoading(false);\r\n          // console.log(resp.msg, \"res.msg\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCDChange = (e) => {\r\n    setConnDetails({\r\n      ...connDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddCD = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  const handlePlantFromChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...plantForm,\r\n      [name]: value,\r\n    };\r\n    setPlantForm(updatedForm);\r\n  };\r\n\r\n  const handleBUChange = (event) => {\r\n    setSelectedBU(event.target.value);\r\n  };\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n    setconnectivityError(\"\");\r\n  };\r\n\r\n  // snackbar code\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  function hasValues(obj) {\r\n    for (let key in obj) {\r\n      if (obj.hasOwnProperty(key) && obj[key] !== \"\" && obj[key] !== undefined) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (params?.plantId) {\r\n      setIsLoading(true);\r\n      plantService.getPlantById({ id: params?.plantId }).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp?.data && Object?.keys(resp?.data)?.length) {\r\n          const selectedPlantObj = resp?.data;\r\n          setSelectedPlant(\r\n            selectedPlantObj\r\n          );\r\n          setSelectedBU(\r\n            selectedPlantObj?.BU\r\n          );\r\n          setPlantForm({\r\n            id: selectedPlantObj?.id,\r\n            plants: selectedPlantObj?.plants,\r\n            plantName: selectedPlantObj?.plantName,\r\n            SalesOrg: selectedPlantObj?.SalesOrg,\r\n            aliasPlant: selectedPlantObj?.aliasPlant,\r\n            ERPType: selectedPlantObj?.ERPType,\r\n            instance: selectedPlantObj?.instance,\r\n            material_master: selectedPlantObj?.material_master,\r\n            ECN_required: selectedPlantObj?.ECN_required,\r\n            bomusage: selectedPlantObj?.bomusage,\r\n            exportToERP: selectedPlantObj?.exportToERP,\r\n\r\n            Connectivitydetails: {\r\n              url: selectedPlantObj?.ConnectivityDetails?.url,\r\n              username: selectedPlantObj?.ConnectivityDetails?.username,\r\n              password: selectedPlantObj?.ConnectivityDetails?.password,\r\n              authkey: selectedPlantObj?.ConnectivityDetails?.authkey,\r\n              port: selectedPlantObj?.ConnectivityDetails?.port,\r\n            },\r\n          });\r\n          setConnDetails({\r\n            url: selectedPlantObj?.ConnectivityDetails?.url,\r\n            username: selectedPlantObj?.ConnectivityDetails?.username,\r\n            password: selectedPlantObj?.ConnectivityDetails?.password,\r\n            authkey: selectedPlantObj?.ConnectivityDetails?.authkey,\r\n            port: selectedPlantObj?.ConnectivityDetails?.port,\r\n            sapsysnum: selectedPlantObj?.ConnectivityDetails?.sapsysnum,\r\n            sapclientid: selectedPlantObj?.ConnectivityDetails?.sapclientid,\r\n          });\r\n        } else {\r\n          navigate(\"/plants\", { state: { message: \"Plant not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/plants\", { state: { message: \"Plant not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Plant\" }]} />\r\n      </Box>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={() => {\r\n        }}\r\n      >\r\n        <Form>\r\n          <SimpleCard>\r\n            <Grid item md={9} sm={6} xs={6}>\r\n              <h4>Edit Plant</h4>\r\n\r\n              <Grid container spacing={3} alignItems=\"center\">\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    Plant Name <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                </Grid>\r\n\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <TextField\r\n                    disabled\r\n                    name=\"plantName\"\r\n                    value={plantForm.plantName}\r\n                    onChange={handlePlantFromChange}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    ERP Type <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                  {/* <span className={classes.spanRed}>*</span> */}\r\n                </Grid>\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <Select\r\n                    id=\"ERPType\"\r\n                    name=\"ERPType\"\r\n                    label=\"ERPType\"\r\n                    fullWidth\r\n                    disabled\r\n                    displayEmpty\r\n                    value={[plantForm?.ERPType]}\r\n                    onChange={handlePlantFromChange}\r\n                  >\r\n                    {ERPtypeOptions.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n\r\n                {(plantForm.ERPType === \"SAP\" ||\r\n                  plantForm.ERPType === \"ORACLE\") && (\r\n                    <>\r\n                      <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                        <span>\r\n                          Instance <span className={classes.spanRed}>*</span>\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item md={9} sm={8} xs={12}>\r\n                        <Select\r\n                          label=\"instance\"\r\n                          id=\"instance\"\r\n                          name=\"instance\"\r\n                          disabled\r\n                          fullWidth\r\n                          displayEmpty\r\n                          value={plantForm.instance}\r\n                          onChange={handlePlantFromChange}\r\n                        >\r\n                          {instanceOptions.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n\r\n                {[\"ORACLE\", \"SAP\"]?.includes(plantForm.ERPType) && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Export To ERP</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"exportToERP\"\r\n                        name=\"exportToERP\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.exportToERP}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {exportToERPOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {/* {plantForm.ERPType === \"ORACLE\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Design Organization\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        style={{ width: \"100%\" }}\r\n                        multiple\r\n                        value={selectedBU}\r\n                        onChange={handleBUChange}\r\n                        renderValue={(selected) => selected.join(\", \")}\r\n                        MenuProps={{\r\n                          sx: {\r\n                            \"&& .Mui-selected\": {\r\n                              backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        {BUOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )} */}\r\n\r\n                {plantForm.ERPType === \"SAP\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Default Sales Org\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <TextField\r\n                        label=\"SalesOrg\"\r\n                        name=\"SalesOrg\"\r\n                        defaultValue={plantForm.SalesOrg}\r\n                        onChange={handlePlantFromChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Material Master\r\n                      </span>\r\n                      {/* <span className={classes.spanRed}>*</span> */}\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"material_master\"\r\n                        name=\"material_master\"\r\n                        label=\"material_master\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.material_master}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    {plantForm.material_master === \"Y\" && (\r\n                      <>\r\n                        <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                          <span>\r\n                            Plantname Alias\r\n                          </span>\r\n                        </Grid>\r\n\r\n                        <Grid item md={9} sm={8} xs={12}>\r\n                          <TextField\r\n                            label=\"aliasPlant\"\r\n                            name=\"aliasPlant\"\r\n                            value={plantForm.aliasPlant}\r\n                            onChange={handlePlantFromChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        ECN Required\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"ECN_required\"\r\n                        name=\"ECN_required\"\r\n                        label=\"ECN_required\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.ECN_required}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        BOM Usage\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"bomusage\"\r\n                        name=\"bomusage\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.bomusage}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {bomusageOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    {hasValues(connDetails) && (<>\r\n\r\n                      <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                        <span>Connectivity Details </span>\r\n                      </Grid>\r\n\r\n                      <Grid item md={9} sm={8} xs={12}>\r\n                        <span>\r\n                          {Object.keys(connDetails).length === 0 ||\r\n                            (selectedPlant?.ConnectivityDetails === null && (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                margin=\"2px\"\r\n                                onClick={() => {\r\n                                  setDiabox(true);\r\n                                }}\r\n                              >\r\n                                Add Connectivity Details\r\n                              </Button>\r\n                            ))}\r\n                          {(Object.keys(connDetails).length > 0 ||\r\n                            selectedPlant?.ConnectivityDetails !== null) && (\r\n                              <Grid item md={12} sm={8} xs={12}>\r\n                                <>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <p>\r\n                                      <b>URL :</b> {connDetails.url}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Username :</b> {connDetails.username}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Pass :</b> {connDetails.password}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>authkey :</b> {connDetails.authkey}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Port :</b> {connDetails.port}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    {plantForm.ERPType === \"SAP\" && (\r\n                                      <>\r\n                                        <p>\r\n                                          <b>sapsysnum :</b> {connDetails.sapsysnum}\r\n                                        </p>{\" \"}\r\n                                        &nbsp;\r\n                                        <p>\r\n                                          <b>sapclientid :</b> {connDetails.sapclientid}\r\n                                        </p>{\" \"}\r\n                                      </>\r\n                                    )}\r\n                                    <p>\r\n                                      {\" \"}\r\n                                      <EditIcon\r\n                                        onClick={() => {\r\n                                          setDiabox(true);\r\n                                        }}\r\n                                      />\r\n                                    </p>\r\n                                  </div>\r\n                                </>\r\n                              </Grid>\r\n                            )}\r\n                        </span>\r\n                      </Grid>\r\n                    </>)}\r\n                  </>\r\n                )}\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleAddPlant}\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleCancel}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </SimpleCard>\r\n        </Form>\r\n      </Formik>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n\r\n      {\r\n        (refreshData || isLoading) ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Loader show={true} />\r\n          </div>\r\n        ) : <></>\r\n      }\r\n\r\n      {/* dialogBox */}\r\n      <ConnectivityDetailsDialog\r\n        open={diaBox}\r\n        onClose={handleDialogClose}\r\n        connDetails={connDetails}\r\n        handleDialogClose={handleDialogClose}\r\n        handleCDChange={handleCDChange}\r\n        handleAddCD={handleAddCD}\r\n        connectivityError={connectivityError}\r\n        plantForm={plantForm}\r\n        classes={classes}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { authRoles } from \"../../auth/authRoles\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nimport Plants from \"./plants\";\r\nimport CreatePlant from \"./createPlant\";\r\nimport EditPlant from \"./editPlant\";\r\n\r\nconst plantRoutes = [\r\n  {\r\n    path: \"/plants\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <Plants />\r\n      </PrivateRoute>\r\n    )\r\n    // auth: authRoles.admin,\r\n  },\r\n  {\r\n    path: \"/createPlant\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreatePlant />\r\n      </PrivateRoute>\r\n    )\r\n    // auth: authRoles.admin,\r\n  },\r\n  {\r\n    path: \"/editPlant/:plantId\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditPlant />\r\n      </PrivateRoute>\r\n    )\r\n    // auth: authRoles.admin,\r\n  },\r\n];\r\n\r\nexport default plantRoutes;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class SourceListService {\r\n  getAllSourceList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/sourceList/getSource`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getSourceDetails\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteSource = (ids) => {\r\n    return ApiInstance.delete(\r\n      `${BACKEND_API_URL}/sourceList/deleteSource`,\r\n      { data: { ids } },\r\n      REACT_APP_BACKEND_API_HEADER\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting source:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewSource = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/sourceList/addSource`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewSource\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateSource = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/sourceList/updateSource`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  getSourceById = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/sourceList/getSourceById`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getPlantById\", e);\r\n        return [];\r\n      });\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function CreateSourceList() {\r\n  const [sourceForm, setSourceForm] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const sourceListService = new SourceListService();\r\n  const handleAddSource = () => {\r\n    if (\r\n      sourceForm.source?.trim() === \"\" ||\r\n      !sourceForm.source ||\r\n      sourceForm.environment?.trim() === \"\" ||\r\n      !sourceForm.environment ||\r\n      sourceForm.instance?.trim() === \"\" ||\r\n      !sourceForm.instance ||\r\n      sourceForm.ERPType?.trim() === \"\" ||\r\n      !sourceForm.ERPType\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newSource = {\r\n      source: sourceForm.source,\r\n      environment: sourceForm.environment,\r\n      instance: sourceForm.instance,\r\n      ERPType: sourceForm.ERPType,\r\n    };\r\n    sourceListService.addnewSource(newSource).then((resp) => {\r\n      if (resp?.data?.id) {\r\n        handlesnackBarClick(\"Source added successfully!\", \"success\");\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/sourceList\");\r\n        }, 2000);\r\n      } else if (resp?.data[0]?.msg) {\r\n        //console.log(resp?.data[0]?.msg, \"res.msg\");\r\n\r\n        handlesnackBarClick(resp.data[0].msg, \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSourceFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...sourceForm,\r\n      [name]: value,\r\n    };\r\n    setSourceForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Source\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Create Source</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Source <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"source\"\r\n                  value={sourceForm.source}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Instance <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"instance\"\r\n                  value={sourceForm.instance}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Environment <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"environment\"\r\n                  value={sourceForm.environment}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={sourceForm.ERPType}\r\n                  onChange={handleSourceFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleAddSource}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={2} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function EditSourceList() {\r\n  const { refreshData } = useOracleSettings();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const sourceListService = new SourceListService();\r\n  // const selectedSource = location.state?.selectedSourceData;\r\n  const [sourceForm, setSourceForm] = useState({});\r\n\r\n  const handleAddSource = async () => {\r\n    setIsLoading(true);\r\n    if (\r\n      sourceForm.source?.trim() === \"\" ||\r\n      !sourceForm.source ||\r\n      sourceForm.environment?.trim() === \"\" ||\r\n      !sourceForm.environment ||\r\n      sourceForm.instance?.trim() === \"\" ||\r\n      !sourceForm.instance ||\r\n      sourceForm.ERPType?.trim() === \"\" ||\r\n      !sourceForm.ERPType\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    const newSource = {\r\n      source: sourceForm.source,\r\n      environment: sourceForm.environment,\r\n      instance: sourceForm.instance,\r\n      ERPType: sourceForm.ERPType,\r\n    };\r\n    sourceListService.updateSource(newSource).then((resp) => {\r\n      handlesnackBarClick(\"Source updated successfully\", \"success\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n        navigate(\"/sourceList\");\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const handleSourceFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...sourceForm,\r\n      [name]: value,\r\n    };\r\n    setSourceForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  useEffect(() => {\r\n    if (params?.sourceId) {\r\n      setIsLoading(true);\r\n      sourceListService.getSourceById({ id: params?.sourceId }).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp?.data && Object?.keys(resp?.data)?.length) {\r\n          const selectedSource = resp?.data;\r\n          setSourceForm({\r\n            source: selectedSource.source,\r\n            environment: selectedSource.environment,\r\n            instance: selectedSource.instance,\r\n            ERPType: selectedSource.ERPType,\r\n          });\r\n        } else {\r\n          navigate(\"/sourceList\", { state: { message: \"Source not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/sourceList\", { state: { message: \"Source not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Source\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Edit Source</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Source <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"source\"\r\n                  disabled\r\n                  value={sourceForm.source}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Instance <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"instance\"\r\n                  disabled\r\n                  value={sourceForm.instance}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Environment <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"environment\"\r\n                  value={sourceForm.environment}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  disabled\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={[sourceForm.ERPType]}\r\n                  onChange={handleSourceFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleAddSource}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={2} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n\r\n        {\r\n          (refreshData || isLoading) ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Loader show={true} />\r\n            </div>\r\n          ) : <></>\r\n        }\r\n\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.sourceData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  console.log('props', props);\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.sourceData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        Source: item.source,\r\n        Instance: item.instance,\r\n        Environment: item.environment,\r\n        'ERP Type': item.ERPType\r\n      }\r\n      return res\r\n    })\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Source' }).then((response) => {\r\n      setExportResponse(response)\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.sourceData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n    }\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\n\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportSource\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst SourceList = () => {\r\n  const [selectedSource, setselectedSource] = useState();\r\n  const [sourceData, setsourceData] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const sourceListService = new SourceListService();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n  const [unSortSourceData, setUnSortSourceData] = useState([])\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteSourceDilaog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditSource(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    sourceListService.getAllSourceList()\r\n      .then((result) => {\r\n        setsourceData(result);\r\n        setInitialData(result); // Set initial data\r\n        setFilteredSourceData(result);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const [filteredSourceData, setFilteredSourceData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredSourceData(sourceData);\r\n  }, [sourceData]);\r\n\r\n  let sortedSourceData = sortDataByKey([...filteredSourceData], \"source\");\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n  const handleSearch = () => {\r\n  };\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n  const handleCreateSourceList = () => {\r\n    plantModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createSourceList\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleEditSource = (editSelectedSource) => {\r\n    plantModeRef.current = \"edit\";\r\n    const selectedSourceData = editSelectedSource;\r\n    setTimeout(() => {\r\n      navigate(`/editSourceList/${selectedSourceData?.id}`, {\r\n        state: { plantMode: plantModeRef.current, selectedSourceData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteSourceDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n    setselectedSource(DeleteSource);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteSource = async () => {\r\n    setDeleteDialog(false);\r\n\r\n    try {\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await sourceListService.deleteSource(selRowsId).then(result => {\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: result?.status,\r\n          desc: result?.msg,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n    sourceListService.getAllSourceList().then((result) => {\r\n      setsourceData(result);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    const new_FilteredData = sourceData.filter((subscriber) => {\r\n      return (searchValue === \"\" ||\r\n        subscriber.source\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.environment\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.instance\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.ERPType.toLowerCase().includes(\r\n          searchValue.toLowerCase()\r\n        ))\r\n    })\r\n\r\n    setFilteredSourceData(new_FilteredData);\r\n  }, [searchValue, sourceData]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedSource = sortedExportDataHOC(SourceList);\r\n    const sortedData = SortedSource({ data: sourceData, sortInfo, sortedSourceData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setsourceData(sortedData.props.data);\r\n    setFilteredSourceData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Source\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateSourceList}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <ExportDialogBox sourceData={sourceData} filterTemplateData={selectedRows} />\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br></br>\r\n            {isLoading ? (\r\n              // Display loading spinner while data is being fetched\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  minHeight: 550\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              // Render DataGrid once data is loaded\r\n              <DataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                style={{ minHeight: 550 }}\r\n                defaultLimit={100}\r\n                columns={[\r\n                  {\r\n                    name: \"source\",\r\n                    header: <Tooltip title={'Name'}>Source</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.source}</div>,\r\n                  },\r\n                  {\r\n                    name: \"instance\",\r\n                    header: <Tooltip title={\"Instance\"}>Instance</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"environment\",\r\n                    header: <Tooltip title={\"Environment\"}>Environment</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"ERPType\",\r\n                    header: <Tooltip title={\"ERP Type\"}>ERP Type</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.ERPType}</div>,\r\n                  }\r\n                ]}\r\n                dataSource={sortInfo==null ? filteredSourceData : sortedSourceData}\r\n                checkboxColumn\r\n                selected={selected}\r\n                onSelectionChange={onSelectionChange}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                pagination\r\n                renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                onSortInfoChange={handleSortInfoChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Source\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the source <b>{selectedSource?.source}</b>{\" \"}\r\n                having instance <b>{selectedSource?.instance}</b> and ERPType{\" \"}\r\n                <b>{selectedSource?.ERPType}</b>\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted sources?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteSource}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SourceList;","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport CreateSourceList from \"./createSourceList\";\r\nimport EditSourceList from \"./editSourceList\";\r\nimport SourceList from \"./sourceList\";\r\n\r\nconst sourceListRoutes = [\r\n  {\r\n    path: \"/sourceList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <SourceList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/createSourceList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateSourceList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/editSourceList/:sourceId\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditSourceList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n];\r\n\r\nexport default sourceListRoutes;\r\n","import {\r\n    BACKEND_API_URL,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n} from '../config'\r\nimport ApiInstance from './ApiInstance';\r\n\r\n\r\nexport class MappingsService {\r\n\r\n\r\n    getAllMappings = () => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/mappings/getMappings`, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error(\"getSourceDetails\", e);\r\n            return [];\r\n        });\r\n    };\r\n\r\n    deleteMapping = (mappingId) => {\r\n        return ApiInstance.delete(`${BACKEND_API_URL}/mappings/deleteMapping/${mappingId}`, REACT_APP_BACKEND_API_HEADER)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting source:', error);\r\n                throw error;\r\n            });\r\n    };\r\n\r\n    addnewMapping = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mappings/addMapping`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            // console.log(data, 'data in post call');\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error('addnewSource', e);\r\n            return [];\r\n        });\r\n    };\r\n\r\n    updateMapping = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mappings/updateMapping`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            //console.log(data, 'data in post call');\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error('addnewPlant', e);\r\n            return [];\r\n        });\r\n    };\r\n}","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Paper,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\n\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport { MappingsService } from \"services/mappingsService\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function CreateMapping() {\r\n  const [sourceForm, setSourceForm] = useState({});\r\n  const [mappingForm, setMappingForm] = useState({});\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [tempObject, setTempObject] = useState({});\r\n\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const sourceListService = new SourceListService();\r\n  const mappingService = new MappingsService();\r\n  const handleAddMapping = () => {\r\n    if (\r\n      mappingForm.Name?.trim() === \"\" ||\r\n      !mappingForm.Name ||\r\n      mappingForm.ERPType?.trim() === \"\" ||\r\n      !mappingForm.ERPType ||\r\n      valuesInputList.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newMaping = {\r\n      Name: mappingForm.Name,\r\n      ERPType: mappingForm.ERPType,\r\n      List: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n    mappingService.addnewMapping(newMaping).then((resp) => {\r\n      if (resp && resp?.data && resp?.data?.length) {\r\n        if (resp?.data[0]?.id) {\r\n          handlesnackBarClick(\"Mapping added successfully!\", \"success\");\r\n\r\n          setTimeout(() => {\r\n            navigate(\"/mappings\");\r\n          }, 200);\r\n        } else if (resp?.data[0]?.msg) {\r\n          handlesnackBarClick(resp?.data[0]?.msg, \"error\");\r\n        }\r\n      } else {\r\n        console.log(\"No data in resp.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //*********mapping values*******/\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleMappingvalueChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // console.log(\r\n  //   valuesInputList,\r\n  //   \"values\"\r\n  // );\r\n  //**********values code end******/\r\n\r\n  const handleMappingFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...mappingForm,\r\n      [name]: value,\r\n    };\r\n    setMappingForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setSnackbarMessage(message);\r\n    setSnackbarSeverity(severity);\r\n    setsnackBar(true);\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  //console.log(mappingForm, \"mappingForm\");\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Mapping\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Create Mapping</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  name=\"Name\"\r\n                  value={mappingForm.Name}\r\n                  onChange={handleMappingFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={mappingForm.ERPType}\r\n                  onChange={handleMappingFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Mapping values <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={3} style={{ marginLeft: \"3px\" }}>\r\n                    <TextField\r\n                      name=\"newKey\"\r\n                      label=\"key\"\r\n                      value={newKey}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      name=\"newValue\"\r\n                      label=\"value\"\r\n                      value={newValue}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      style={{ fontSize: \"30px\", marginTop: \"6px\" }}\r\n                      onClick={handleAddRow}\r\n                    >\r\n                      <b>+</b>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{ color: \"red\" }}>{keyerror}</p>\r\n                <div\r\n                  style={{\r\n                    height: \"100px\",\r\n                    overflowY: \"auto\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    alignContent: \"center\",\r\n                    width: \"51%\",\r\n                  }}\r\n                >\r\n                  {valuesInputList.map((row, index) => (\r\n                    <Paper\r\n                      key={index}\r\n                      style={{\r\n                        paddingLeft: \"50px\",\r\n                        marginBottom: \"8px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginLeft: \"2px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <p>\r\n                            <b>{row.key}</b>:<b>{row.value}</b>\r\n                          </p>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                          <IconButton onClick={() => handleDeleteRow(index)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n              <span>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddMapping}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </span>\r\n              {/* <span className={classes.spanRed}>*</span> */}\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        <Snackbar\r\n          open={snackBar}\r\n          autoHideDuration={3000}\r\n          onClose={handlesnackbarClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        >\r\n          <Alert\r\n            onClose={handlesnackbarClose}\r\n            severity={snackbarseverity}\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            {snackbarmessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Paper,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { MappingsService } from \"services/mappingsService\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function EditMapping() {\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [tempObject, setTempObject] = useState({});\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const location = useLocation();\r\n  const mappingService = new MappingsService();\r\n  const selectedMapping = location.state?.selectedMappingData;\r\n  //console.log(selectedMapping, \"selected from list to edit \");\r\n  const [mappingForm, setMappingForm] = useState({\r\n    Name: selectedMapping.Name,\r\n    ERPType: selectedMapping.ERPType,\r\n  });\r\n\r\n  const reversedList = Object.entries(selectedMapping.List).map(([key, value]) => ({ key, value }));\r\n  //console.log(reversedList, \"reversed list    \")\r\n  const [valuesInputList, setValuesInputList] = useState(reversedList);\r\n\r\n\r\n  const handleAddMapping = () => {\r\n    if (\r\n      mappingForm.Name?.trim() === \"\" ||\r\n      !mappingForm.Name ||\r\n      mappingForm.ERPType?.trim() === \"\" ||\r\n      !mappingForm.ERPType ||\r\n      valuesInputList.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newMaping = {\r\n      Name: mappingForm.Name,\r\n      ERPType: mappingForm.ERPType,\r\n      List: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n    mappingService.updateMapping(newMaping).then((resp) => {\r\n      setTimeout(() => {\r\n        navigate(\"/mappings\");\r\n      }, 200);\r\n    });\r\n\r\n    handlesnackBarClick(\"Mapping updated successfully\", \"success\");\r\n  };\r\n\r\n  //*********mapping values*******/\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleMappingvalueChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  //**********values code end******/\r\n\r\n  const handleMappingFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...mappingForm,\r\n      [name]: value,\r\n    };\r\n    setMappingForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setSnackbarMessage(message);\r\n    setSnackbarSeverity(severity);\r\n    setsnackBar(true);\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  //console.log(mappingForm, \"mappingForm\");\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Mapping\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Edit Mapping</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  name=\"Name\"\r\n                  disabled\r\n                  value={mappingForm.Name}\r\n                  onChange={handleMappingFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={mappingForm.ERPType}\r\n                  onChange={handleMappingFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Mapping values <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={3} style={{ marginLeft: \"3px\" }}>\r\n                    <TextField\r\n                      name=\"newKey\"\r\n                      label=\"key\"\r\n                      value={newKey}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      name=\"newValue\"\r\n                      label=\"value\"\r\n                      value={newValue}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      style={{ fontSize: \"30px\", marginTop: \"6px\" }}\r\n                      onClick={handleAddRow}\r\n                    >\r\n                      <b>+</b>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{ color: \"red\" }}>{keyerror}</p>\r\n                <div\r\n                  style={{\r\n                    height: \"100px\",\r\n                    overflowY: \"auto\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    alignContent: \"center\",\r\n                    width: \"51%\",\r\n                  }}\r\n                >\r\n                  {valuesInputList.map((row, index) => (\r\n                    <Paper\r\n                      key={index}\r\n                      style={{\r\n                        paddingLeft: \"50px\",\r\n                        marginBottom: \"8px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginLeft: \"2px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <p>\r\n                            <b>{row.key}</b>:<b>{row.value}</b>\r\n                          </p>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                          <IconButton onClick={() => handleDeleteRow(index)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n              <span>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddMapping}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </span>\r\n              {/* <span className={classes.spanRed}>*</span> */}\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        <Snackbar\r\n          open={snackBar}\r\n          autoHideDuration={3000}\r\n          onClose={handlesnackbarClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        >\r\n          <Alert\r\n            onClose={handlesnackbarClose}\r\n            severity={snackbarseverity}\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            {snackbarmessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\n\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nimport {\r\n  Box,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  InputLabel,\r\n  Grid,\r\n  TextField,\r\n  Autocomplete,\r\n} from \"@mui/material\";\r\n\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { MappingsService } from \"services/mappingsService\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst Mappings = () => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [selectedMapping, setSelectedMapping] = useState();\r\n  const [mappingData, setMappingData] = useState();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filteredRows, setFilteredRows] = useState([]);\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const mappingService = new MappingsService();\r\n  useEffect(() => {\r\n    mappingService.getAllMappings().then((result) => {\r\n      setMappingData(result);\r\n    });\r\n  }, []);\r\n  //console.log(mappingData, \"mappingData\");\r\n\r\n  const [filteredMappingData, setFilteredMappingData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredMappingData(mappingData);\r\n  }, [mappingData]);\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n\r\n    if (newSearchValue === \"\") {\r\n      setFilteredMappingData(mappingData);\r\n    } else {\r\n      const filteredData = mappingData?.filter(\r\n        (subscriber) =>\r\n          subscriber?.Name?.toLowerCase().includes(\r\n            newSearchValue.toLowerCase()\r\n          ) ||\r\n          subscriber.ERPType?.toLowerCase().includes(\r\n            newSearchValue.toLowerCase()\r\n          )\r\n      );\r\n      setFilteredMappingData(filteredData);\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (searchValue === \"\") {\r\n      setFilteredMappingData(mappingData);\r\n    } else {\r\n      const filteredData = mappingData.filter((subscriber) =>\r\n        subscriber?.Name.toLowerCase().includes(searchValue.toLowerCase())\r\n      );\r\n      setFilteredMappingData(filteredData);\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n\r\n  const handleCreateMappings = () => {\r\n    plantModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createMappings\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleEditMapping = (editselectedMapping) => {\r\n    plantModeRef.current = \"edit\";\r\n\r\n    const selectedMappingData = editselectedMapping;\r\n    setTimeout(() => {\r\n      navigate(\"/editMappings\", {\r\n        state: { plantMode: plantModeRef.current, selectedMappingData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteMappingDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n\r\n    setSelectedMapping(DeleteSource);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteMapping = async () => {\r\n    setDeleteDialog(false);\r\n    // console.log(selectedMapping.id, \" selected deleted plant \");\r\n\r\n    try {\r\n      await mappingService.deleteMapping(selectedMapping.id);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete plant:\", error);\r\n    }\r\n\r\n    mappingService.getAllMappings().then((result) => {\r\n      setMappingData(result);\r\n    });\r\n\r\n    handlesnackBarClick();\r\n  };\r\n\r\n  const handlesnackBarClick = () => {\r\n    setsnackBar(true);\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n  // ****************filters**********************\r\n  const [filterValues, setFilterValues] = useState({\r\n    Name: [],\r\n\r\n    ERPType: [],\r\n  });\r\n\r\n  const handleFilterChange = (column, selectedValues) => {\r\n    setFilterValues((prevFilterValues) => ({\r\n      ...prevFilterValues,\r\n      [column]: selectedValues,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let dataToShow = mappingData;\r\n\r\n    if (filterValues[\"Name\"].length > 0) {\r\n      dataToShow = dataToShow.filter((row) =>\r\n        filterValues[\"Name\"].includes(row[\"Name\"])\r\n      );\r\n    }\r\n\r\n    if (filterValues[\"ERPType\"].length > 0) {\r\n      dataToShow = dataToShow.filter((row) =>\r\n        filterValues[\"ERPType\"].includes(row[\"ERPType\"])\r\n      );\r\n    }\r\n\r\n    setFilteredRows(dataToShow);\r\n  }, [filterValues]);\r\n\r\n  const getUniqueValues = (column) => {\r\n    const values = new Set();\r\n    mappingData?.forEach((subscriber) => values.add(subscriber[column]));\r\n    return Array.from(values);\r\n  };\r\n\r\n  // *******filters end***********\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Mappings\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateMappings}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <StyledTable>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {/* <TableCell align=\"left\">Id</TableCell> */}\r\n                  {/*<TableCell align=\"left\">ID</TableCell>*/}\r\n                  <TableCell align=\"left\">\r\n                    <InputLabel\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        color: \"rgba(52, 49, 76, 1)\",\r\n                      }}\r\n                    >\r\n                      Mapping Name\r\n                    </InputLabel>\r\n\r\n                    <br />\r\n                    <Autocomplete\r\n                      style={{ width: \"70%\" }}\r\n                      multiple\r\n                      options={getUniqueValues(\"Name\")}\r\n                      value={filterValues.Name}\r\n                      onChange={(_, newValue) =>\r\n                        handleFilterChange(\"Name\", newValue)\r\n                      }\r\n                      renderValue={() => null}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          variant=\"outlined\"\r\n                          label=\"Filter Name\"\r\n                          placeholder=\"Search...\"\r\n                        />\r\n                      )}\r\n                      PaperProps={{\r\n                        style: {\r\n                          maxHeight: \"200px\",\r\n                        },\r\n                      }}\r\n                      disableCloseOnSelect\r\n                      isOptionEqualToValue={(option, value) => option === value}\r\n                      getOptionLabel={(option) => option}\r\n                      getOptionSelected={(option, value) =>\r\n                        filterValues.Name.includes(value)\r\n                      }\r\n                      ChipProps={{\r\n                        style: {\r\n                          fontSize: \"8px\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    <InputLabel\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        color: \"rgba(52, 49, 76, 1)\",\r\n                      }}\r\n                    >\r\n                      ERP Type\r\n                    </InputLabel>\r\n\r\n                    <br />\r\n                    <Autocomplete\r\n                      style={{ width: \"70%\" }}\r\n                      multiple\r\n                      options={getUniqueValues(\"ERPType\")}\r\n                      value={filterValues.ERPType}\r\n                      onChange={(_, newValue) =>\r\n                        handleFilterChange(\"ERPType\", newValue)\r\n                      }\r\n                      renderValue={() => null}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          variant=\"outlined\"\r\n                          label=\"Filter ERP Type\"\r\n                          placeholder=\"Search...\"\r\n                        />\r\n                      )}\r\n                      PaperProps={{\r\n                        style: {\r\n                          maxHeight: \"200px\",\r\n                        },\r\n                      }}\r\n                      disableCloseOnSelect\r\n                      isOptionEqualToValue={(option, value) => option === value}\r\n                      getOptionLabel={(option) => option}\r\n                      getOptionSelected={(option, value) =>\r\n                        filterValues.ERPType.includes(value)\r\n                      }\r\n                      ChipProps={{\r\n                        style: {\r\n                          fontSize: \"8px\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <InputLabel\r\n                      style={{\r\n                        paddingBottom: \"85px\",\r\n                        fontWeight: \"bold\",\r\n                        color: \"rgba(52, 49, 76, 1)\",\r\n                      }}\r\n                    >\r\n                      Actions\r\n                    </InputLabel>\r\n                  </TableCell>\r\n\r\n                  {/* <TableCell align=\"right\">Action</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {filteredMappingData?.length > 0 ? (\r\n                  filteredMappingData\r\n                    .filter(\r\n                      (subscriber) =>\r\n                        (searchValue === \"\" ||\r\n                          subscriber.Name.toLowerCase().includes(\r\n                            searchValue.toLowerCase()\r\n                          ) ||\r\n                          subscriber?.ERPType.toLowerCase().includes(\r\n                            searchValue.toLowerCase()\r\n                          )) &&\r\n                        (filterValues.Name.length === 0 ||\r\n                          filterValues.Name.includes(subscriber.Name)) &&\r\n                        (filterValues.ERPType.length === 0 ||\r\n                          filterValues.ERPType.includes(subscriber.ERPType))\r\n                    )\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((subscriber, index) => {\r\n                      return (\r\n                        <TableRow key={index}>\r\n                          {/* <TableCell align=\"left\">{subscriber.id}</TableCell>*/}\r\n                          {/* <TableCell align=\"left\">{subscriber.name}</TableCell> */}\r\n                          <TableCell\r\n                            align=\"left\"\r\n                            style={{ textTransform: \"none\" }}\r\n                          >\r\n                            {subscriber.Name}\r\n                          </TableCell>\r\n\r\n                          <TableCell\r\n                            align=\"left\"\r\n                            style={{ textTransform: \"none\" }}\r\n                          >\r\n                            {subscriber.ERPType}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            align=\"left\"\r\n                            style={{ textTransform: \"none\" }}\r\n                          >\r\n                            <EditIcon\r\n                              id={subscriber.id}\r\n                              onClick={() => handleEditMapping(subscriber)}\r\n                            />{\" \"}\r\n                            <DeleteIcon\r\n                              onClick={() =>\r\n                                handleDeleteMappingDilaog(subscriber)\r\n                              }\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })\r\n                ) : (\r\n                  <>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      colSpan={5}\r\n                      style={{ textAlign: \"center\" }}\r\n                    >\r\n                      {\"No result found!\"}\r\n                    </TableCell>\r\n                  </>\r\n                )}\r\n              </TableBody>\r\n            </StyledTable>\r\n            {mappingData?.length ? (\r\n              <TablePagination\r\n                sx={{ px: 2 }}\r\n                page={page}\r\n                component=\"div\"\r\n                rowsPerPage={rowsPerPage}\r\n                count={mappingData?.length}\r\n                onPageChange={handleChangePage}\r\n                rowsPerPageOptions={[10, 25, 50]}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\r\n                backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <Snackbar\r\n        open={snackBar}\r\n        autoHideDuration={3000}\r\n        onClose={handlesnackbarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handlesnackbarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          Mapping deleted successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Do you want to delete the source <b>{selectedMapping?.Name}</b>{\" \"}\r\n            having ERP type <b>{selectedMapping?.ERPType}</b>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteMapping}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Mappings;\r\n","import React from 'react';\r\nimport { authRoles } from \"../../auth/authRoles\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport CreateMapping from \"./createMappings\";\r\nimport EditMapping from \"./editMappings\";\r\n\r\nimport Mappings from \"./mappings\";\r\n\r\nconst mappingsroutes = [\r\n  {\r\n    path: \"/mappings\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <Mappings />\r\n      </PrivateRoute>\r\n    ),\r\n    auth: authRoles.admin\r\n  },\r\n  {\r\n    path: \"/createMappings\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateMapping />\r\n      </PrivateRoute>\r\n    ),\r\n    auth: authRoles.admin,\r\n  },\r\n  {\r\n    path: \"/editMappings\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditMapping />\r\n      </PrivateRoute>\r\n    ),\r\n    auth: authRoles.admin,\r\n  },\r\n];\r\n\r\nexport default mappingsroutes;\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.buData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false);\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.buData) || [];\r\n\r\n    // Check if props.sortInfo is an empty object\r\n    if (!props.sortInfo || Object.keys(props.sortInfo).length === 0) {\r\n      data = data.sort((a, b) => {\r\n        const aValue = a.businessUnit?.toLowerCase() || '';\r\n        const bValue = b.businessUnit?.toLowerCase() || '';\r\n        if (aValue < bValue) return -1;\r\n        if (aValue > bValue) return 1;\r\n        return 0;\r\n      });\r\n    }\r\n   \r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        'Design Organization': item.businessUnit,\r\n        'Export To ERP Disabled': item.exportToERPdisabled,\r\n        'Export To ERP Bypassed': item.exportToERPbyPassed,\r\n        'Enable BOS Transfer': item.enableBOSTransfer,\r\n        'Context DFF': item.contextDEF,\r\n        'EMR Division ARG': item.EMRDivisionORGValue,\r\n        'Product Hierarchy': item.productHierarchy,\r\n        'Plant Name': item?.plants?.length > 0 ? item?.plants?.map(plant => plant?.plantName).join(\"\\n\") : null,\r\n        'Do Not Send To ERP': item.doNotSendToERP.join(\"\\n\"),\r\n        'Oracle Existing': item.oracleExisting.join(\"\\n\"),\r\n        'Make Without BOM List': item.makeWithoutBOMList.join(\"\\n\"),\r\n        'Not Owning Division List': item.notOwningDivisionList.join(\"\\n\"),\r\n        //ERPType: item.ERPType,\r\n        //Instance: item.instance,\r\n        // attributes: typeof item.attributes == \"object\"? JSON.stringify(item.attributes):null,\r\n        //RDO: typeof item.BU == \"object\" && item.BU.length>0 ? JSON.stringify(item.BU.join(', ')):null,\r\n        // ExportToERP: item.exportToERP,\r\n        // ExistInOracle: item.existInOracle,\r\n        // NotOwningDivision: item.notOwningDivision,\r\n        //Name: item.Name\r\n      }\r\n      return res\r\n    })\r\n    //console.log(exportData, 'inside template export exportData')\r\n    //return;\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Design Organization' }).then((response) => {\r\n      setExportResponse(response)\r\n      //console.log(response, ';resprespresp')\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.buData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n      //console.log(filteredTempData, 'filteredTempData')\r\n    }\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { BUService } from \"services/buService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportBUList\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst BUList = () => {\r\n  const { bussinessUnitLists, updateBussinessUnitLists } = useOracleSettings();\r\n  const location = useLocation();\r\n  let toastState = location.state;\r\n  const [selectedSource, setselectedSource] = useState();\r\n  const [buData, setBUData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const buService = new BUService();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // State to keep track of sorting information\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [initialData, setInitialData] = useState([]);\r\n  \r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    const styles = \r\n    {\r\n          backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n          zIndex: 99,\r\n          background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n          height: \"auto !important\",\r\n          whiteSpace: \"normal\"\r\n        }\r\n    return styles;\r\n  };\r\n \r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteSourceDilaog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditSource(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (!bussinessUnitLists) {\r\n      buService.getAllBuList()\r\n        .then((result) => {\r\n          setBUData(result.data);\r\n          updateBussinessUnitLists(result.data);\r\n          setInitialData(result.data); // Set initial data\r\n          setFilteredBUData(result.data);\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setTimeout(() => {\r\n        setBUData(bussinessUnitLists);\r\n        setInitialData(bussinessUnitLists);\r\n        setIsLoading(false);\r\n      }, 500);\r\n\r\n    }\r\n  }, [bussinessUnitLists]);\r\n  const [filteredBUData, setFilteredBUData] = useState([]);\r\n  useEffect(() => {\r\n    setFilteredBUData(buData);\r\n  }, [buData]);\r\n\r\n  const sortedFilteredBuData =  sortDataByKey([...filteredBUData], \"buName\");\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n  const handleCreateBUList = () => {\r\n    plantModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createBU\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n  const handleEditSource = (editSelectedSource) => {\r\n    plantModeRef.current = \"edit\";\r\n    const selectedBUData = editSelectedSource;\r\n    setTimeout(() => {\r\n      navigate(`/editBU/${selectedBUData?.id}`, {\r\n        state: { plantMode: plantModeRef.current, selectedBUData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteSourceDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n    setselectedSource(DeleteSource);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteSource = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await buService.deleteBU(selRowsId).then(response => {\r\n        console.log(response, 'delete response')\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete BU:\", error);\r\n    }\r\n    buService.getAllBuList().then((result) => {\r\n      setBUData(result.data);\r\n      updateBussinessUnitLists(result.data)\r\n      setInitialData(result.data);\r\n    });\r\n  };\r\n\r\n  // ****************filters**********************\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    if (buData) {\r\n      const new_FilteredData = buData.filter((subscriber) => {\r\n        return (searchValue === \"\" ||\r\n          subscriber.buName\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase())\r\n        )\r\n      })\r\n      setFilteredBUData(new_FilteredData);\r\n    }\r\n  }, [searchValue, buData]);\r\n  useEffect(() => {\r\n    if (toastState?.status) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: toastState?.status,\r\n        desc: toastState?.message,\r\n      });\r\n      buService.getAllBuList().then((result) => {\r\n        setBUData(result.data);\r\n        updateBussinessUnitLists(result.data)\r\n        setInitialData(result.data); \r\n      });\r\n    }\r\n    toastState = {};\r\n\r\n    // Clear the state value on page refresh\r\n    window.onbeforeunload = () => {\r\n      window.history.replaceState({}, document.title);\r\n    };\r\n  }, [toastState]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedbuList = sortedExportDataHOC(BUList);\r\n    const sortedData = SortedbuList({ data: buData, sortInfo, sortedFilteredBuData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setBUData(sortedData.props.data);\r\n    setFilteredBUData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Design Organization\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateBUList}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <ExportDialogBox sortInfo={sortInfo} buData={buData} filterTemplateData={selectedRows} />\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br />\r\n            {isLoading ? (\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  minHeight: 550,\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              <DataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                defaultLimit={100}\r\n                rowStyle={rowStyle}\r\n                // style={{ minHeight: 550 }}\r\n                columns={[\r\n                  {\r\n                    name: \"buName\",\r\n                    header: <Tooltip title={'Design Organization'}>Design Organization</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.buName}</div>,\r\n                  },\r\n                  {\r\n                    name: \"exportToERPdisabled\",\r\n                    header: <Tooltip title={\"Export To ERP Disabled\"}>Export To ERP Disabled</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"exportToERPbyPassed\",\r\n                    header: <Tooltip title={\"Export To ERP Bypassed\"}>Export To ERP Bypassed</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"enableBOSTransfer\",\r\n                    header: <Tooltip title={\"Enable BOS Transfer\"}>Enable BOS Transfer</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"contextDFF\",\r\n                    header: <Tooltip title={\"Context DFF\"}>Context DFF</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.contextDEF}</div>,\r\n                  },\r\n                  {\r\n                    name: \"EMRDivisionORGValue\",\r\n                    header: <Tooltip title={\"EMR Division ORG Value\"}>EMR Division ARG</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.EMRDivisionORGValue}</div>,\r\n                  },\r\n                  {\r\n                    name: \"productHierarchy\",\r\n                    header: <Tooltip title={\"Product Hierarchy\"}>Product Hierarchy</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.productHierarchy}</div>,\r\n                  },\r\n                  {\r\n                    name: \"plants\",\r\n                    header: <Tooltip title={\"Plant Name\"}>Plant Name</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.plants\r\n                          .sort((a, b) => a.plantName.localeCompare(b.plantName))\r\n                          .map((item, index) => (\r\n                            <div key={index}>{item?.plantName}</div>\r\n                          ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"DoNotSendToERP\",\r\n                    header: <Tooltip title={\"DoNotSendToERP\"}>Do Not Send To ERP</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.doNotSendToERP\r\n                          .sort((a, b) => a.localeCompare(b)) \r\n                          .map((item, index) => (\r\n                            <div key={index}>{item}</div>\r\n                          ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"OracleExisting\",\r\n                    header: <Tooltip title={\"OracleExisting\"}>Oracle Existing</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.oracleExisting.sort((a, b)=>a.localeCompare(b))\r\n                        .map((item, index) => (\r\n                          <div key={index}>{item}</div> \r\n                        ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"MakeWithoutBOMList\",\r\n                    header: <Tooltip title={\"Make Without BOMList\"}>Make Without BOM List</Tooltip>,\r\n                    defaultFlex: 0,\r\n                    defaultWidth: 170,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.makeWithoutBOMList.sort((a, b)=>a.localeCompare(b))\r\n                        .map((item, index) => (\r\n                          <div key={index}>{item}</div>\r\n                        ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"NotOwningDivisionList\",\r\n                    header: <Tooltip title={\"Not Owning DivisionList\"}>Not Owning Division List</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 100,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.notOwningDivisionList.sort((a, b)=>a.localeCompare(b))\r\n                        .map((item, index) => (\r\n                          <div key={index}>{item}</div> \r\n                        ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ]}\r\n                dataSource={sortedFilteredBuData}\r\n                // rowHeight={null}\r\n                checkboxColumn\r\n                selected={selected}\r\n                onSelectionChange={onSelectionChange}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                pagination\r\n                renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                onSortInfoChange={handleSortInfoChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Design Organization\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the RDO <b>{selectedSource?.buName}</b> having\r\n                plants{\" \"}\r\n                <b>\r\n                  {\" \"}\r\n                  {selectedSource?.plants\r\n                    .map((plant) => {\r\n                      return plant.plantName;\r\n                    })\r\n                    .join(\",\")}{\" \"}\r\n                </b>\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted Design Organization?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteSource}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BUList;","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { exportToERPOptions, enableBOSTransferOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { BUService } from \"services/buService\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nexport default function CreateBU() {\r\n  const {\r\n    refreshData,\r\n    templatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [buForm, setBuFrom] = useState({\r\n    exportToERPdisabled: \"N\",\r\n    exportToERPbyPassed: \"N\",\r\n    enableBOSTransfer: \"Y\",\r\n  });\r\n  const [plantData, setPlantData] = useState([]);\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n  const [DoNotSendToERP, setDoNotSendToERP] = useState([]);\r\n  const [OracleExisting, setOracleExisting] = useState([]);\r\n  const [MakeWithoutBOMList, setMakeWithoutBOMList] = useState([]);\r\n  const [NotOwningDivisionList, setNotOwningDivisionList] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  let navigate = useNavigate();\r\n  const buService = new BUService();\r\n\r\n  const plantService = new PlantService();\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  const handleAddbuName = () => {\r\n    if (\r\n      buForm.buName?.trim() === \"\" ||\r\n      !buForm.buName ||\r\n      selectedplants.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n    const newbuName = {\r\n      id: buForm.buName,\r\n      buName: buForm.buName,\r\n      exportToERPdisabled: buForm.exportToERPdisabled,\r\n      contextDEF: buForm.contextDEF,\r\n      EMRDivisionORGValue: buForm.EMRDivisionORGValue,\r\n      productHierarchy: buForm.productHierarchy,\r\n      exportToERPbyPassed: buForm.exportToERPbyPassed,\r\n      enableBOSTransfer: buForm.enableBOSTransfer,\r\n      plants: selectedplants?.map((option) => {\r\n        return {\r\n          id: option?.id,\r\n          plantName: option?.plantName\r\n        }\r\n      }) || [],\r\n      doNotSendToERP: DoNotSendToERP?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      oracleExisting: OracleExisting?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      makeWithoutBOMList: MakeWithoutBOMList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      notOwningDivisionList: NotOwningDivisionList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n    };\r\n    setIsLoading(true);\r\n    buService.addnewBU(newbuName).then((resp) => {\r\n      setIsLoading(false);\r\n      if (resp.status === 'success') {\r\n        setTimeout(() => {\r\n          navigate(\"/buList\", { state: { message: resp.msg, status: resp.status } });\r\n        }, 200);\r\n      } else if (resp.status === 'error') {\r\n        handlesnackBarClick(resp.msg, \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlebuFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...buForm,\r\n      [name]: value,\r\n    };\r\n    setBuFrom(updatedForm);\r\n  };\r\n  const handlePlantsChange = (selectedObj) => {\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => plantData.some((existing) => existing.plantName === item.plantName)\r\n    ) || [];\r\n    setSelectedPlants(newselectedObj);\r\n  };\r\n\r\n  const handleTemplateChange = (name, selectedObj) => {\r\n    console.log(`New Value: ${name} - `, selectedObj);\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => templatesInfo.some((existing) => existing.templateName === item.templateName)\r\n    ) || [];\r\n    if (name === 'DoNotSendToERP') {\r\n      setDoNotSendToERP(newselectedObj)\r\n    }\r\n    else if (name === 'OracleExisting') {\r\n      setOracleExisting(newselectedObj);\r\n    }\r\n    else if (name === 'MakeWithoutBOMList') {\r\n      setMakeWithoutBOMList(newselectedObj)\r\n    }\r\n    else if (name === 'NotOwningDivisionList') {\r\n      setNotOwningDivisionList(newselectedObj)\r\n    }\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  sortDataByKey(plantData, 'plantName');\r\n  sortDataByKey(templatesInfo, 'templateName');\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Design Organization\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Create Design Organization</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                Design Organization <span style={{ color: \"#FF3D57\" }}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"buName\"\r\n                  value={buForm.buName}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Export to ERP Disabled </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"exportToERPdisabled\"\r\n                  id=\"exportToERPdisabled\"\r\n                  name=\"exportToERPdisabled\"\r\n                  fullWidth\r\n                  value={buForm.exportToERPdisabled}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Export To ERP Bypassed\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"exportToERPbyPassed\"\r\n                  id=\"exportToERPbyPassed\"\r\n                  name=\"exportToERPbyPassed\"\r\n                  fullWidth\r\n                  value={buForm.exportToERPbyPassed}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Enable BOS Transfer </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"enableBOSTransfer\"\r\n                  id=\"enableBOSTransfer\"\r\n                  name=\"enableBOSTransfer\"\r\n                  fullWidth\r\n                  value={'Y'}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {enableBOSTransferOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Context DFF\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"contextDEF\"\r\n                  value={buForm.contextDEF}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  EMR Division ARG\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"EMRDivisionORGValue\"\r\n                  value={buForm.EMRDivisionORGValue}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Product Hierarchy\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"productHierarchy\"\r\n                  value={buForm.productHierarchy}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Plant Name <span style={{ color: \"#FF3D57\" }}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={selectedplants}\r\n                  getOptionLabel={(option) => option.plantName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handlePlantsChange(newValue)\r\n                  }}\r\n                  options={plantData}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.plantName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* add templates  */}\r\n              {/* DoNotSendToERP */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Do Not Send To ERP\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={DoNotSendToERP}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"DoNotSendToERP\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* OracleExisting */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Oracle Existing\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={OracleExisting}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"OracleExisting\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* MakeWithoutBOMList */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Make Without BOM List\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={MakeWithoutBOMList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"MakeWithoutBOMList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* NotOwningDivisionList */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Not Owning Division List\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={NotOwningDivisionList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"NotOwningDivisionList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* add templates  */}\r\n              <Grid item md={12} sm={12} xs={12} className=\"font-medium\" style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleCancel}\r\n                  style={{ marginRight: \"20px\" }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddbuName}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n\r\n        {\r\n          (refreshData || isLoading) ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Loader show={refreshData} />\r\n            </div>\r\n          ) : <></>\r\n        }\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { exportToERPOptions, enableBOSTransferOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { BUService } from \"services/buService\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function EditBU() {\r\n  const {\r\n    refreshData,\r\n    templatesInfo,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n  const [plantData, setPlantData] = useState([]);\r\n  const location = useLocation();\r\n  // const selectBU = location.state?.selectedBUData;\r\n  const [selectBU, setSelectBU] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [buForm, setBuFrom] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const buService = new BUService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const plantService = new PlantService();\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const handleAddbuName = () => {\r\n    if (\r\n      buForm.buName?.trim() === \"\" ||\r\n      !buForm.buName ||\r\n      selectedplants.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newbuName = {\r\n      id: buForm.id,\r\n      buName: buForm.buName,\r\n      exportToERPdisabled: buForm.exportToERPdisabled,\r\n      contextDEF: buForm.contextDEF,\r\n      EMRDivisionORGValue: buForm.EMRDivisionORGValue,\r\n      productHierarchy: buForm.productHierarchy,\r\n      exportToERPbyPassed: buForm.exportToERPbyPassed,\r\n      enableBOSTransfer: buForm.enableBOSTransfer,\r\n      plants: selectedplants?.map((option) => {\r\n        return {\r\n          id: option?.id,\r\n          plantName: option?.plantName\r\n        }\r\n      }) || [],\r\n      doNotSendToERP: DoNotSendToERP?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      oracleExisting: OracleExisting?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      makeWithoutBOMList: MakeWithoutBOMList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      notOwningDivisionList: NotOwningDivisionList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n    };\r\n    setIsLoading(true);\r\n    buService.updateBU(newbuName).then((resp) => {\r\n      setIsLoading(false);\r\n      if (resp.status === 'success') {\r\n        setIsLoading(false);\r\n        tempMapService.getAlltemplateMappings().then((result) => {\r\n          updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n          setIsLoading(true);\r\n        });\r\n        setTimeout(() => {\r\n          navigate(\"/buList\", { state: { message: resp.msg, status: resp.status } });\r\n        }, 200);\r\n      } else if (resp.status === 'error') {\r\n        handlesnackBarClick(resp.msg, resp.status);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlebuFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...buForm,\r\n      [name]: value,\r\n    };\r\n    console.log(updatedForm, \"===================updatedForm\");\r\n    setBuFrom(updatedForm);\r\n  };\r\n\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n  const [DoNotSendToERP, setDoNotSendToERP] = useState([]);\r\n  const [OracleExisting, setOracleExisting] = useState([]);\r\n  const [MakeWithoutBOMList, setMakeWithoutBOMList] = useState([]);\r\n  const [NotOwningDivisionList, setNotOwningDivisionList] = useState([]);\r\n  const handlePlantsChange = (selectedObj) => {\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => plantData.some((existing) => existing.plantName === item.plantName)\r\n    ) || [];\r\n    setSelectedPlants(newselectedObj);\r\n  };\r\n  const handleTemplateChange = (name, selectedObj) => {\r\n    console.log(\"New Value:\", selectedObj);\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => templatesInfo.some((existing) => existing.templateName === item.templateName)\r\n    ) || [];\r\n    if (name === 'DoNotSendToERP') {\r\n      setDoNotSendToERP(newselectedObj)\r\n    }\r\n    else if (name === 'OracleExisting') {\r\n      setOracleExisting(newselectedObj);\r\n    }\r\n    else if (name === 'MakeWithoutBOMList') {\r\n      setMakeWithoutBOMList(newselectedObj)\r\n    }\r\n    else if (name === 'NotOwningDivisionList') {\r\n      setNotOwningDivisionList(newselectedObj)\r\n    }\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  const getTemplValues = (fieldValue) => {\r\n    const newselectedObj = templatesInfo?.filter(\r\n      (item) => fieldValue.some((templateName) => templateName === item.templateName)\r\n    ) || [];\r\n    return newselectedObj;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (selectBU?.plants) {\r\n      const newselectedObj = plantData?.filter(\r\n        (item) => selectBU?.plants.some((eitem) => eitem?.plantName === item?.plantName)\r\n      ) || [];\r\n      setSelectedPlants(newselectedObj)\r\n    }\r\n    if (selectBU?.doNotSendToERP) {\r\n      const newselectedObj = getTemplValues(selectBU?.doNotSendToERP);\r\n      setDoNotSendToERP(newselectedObj)\r\n    }\r\n    if (selectBU?.oracleExisting) {\r\n      const newselectedObj = getTemplValues(selectBU?.oracleExisting);\r\n      setOracleExisting(newselectedObj)\r\n    }\r\n    if (selectBU?.makeWithoutBOMList) {\r\n      const newselectedObj = getTemplValues(selectBU.makeWithoutBOMList);\r\n      setMakeWithoutBOMList(newselectedObj)\r\n    }\r\n    if (selectBU?.notOwningDivisionList) {\r\n      const newselectedObj = getTemplValues(selectBU.notOwningDivisionList);\r\n      setNotOwningDivisionList(newselectedObj)\r\n    }\r\n  }, [selectBU, plantData, templatesInfo]);\r\n\r\n  useEffect(() => {\r\n    if (params?.buId) {\r\n      setIsLoading(true);\r\n      buService.getBusinessUnitbyid([{ id: params?.buId }]).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp?.data?.length && (resp?.data?.[0] && Object?.keys(resp?.data?.[0])?.length)) {\r\n          setSelectBU(resp?.data[0]);\r\n          const selectBUValue = resp?.data[0];\r\n          setBuFrom({\r\n            id: selectBUValue.id,\r\n            buName: selectBUValue.buName,\r\n            exportToERPdisabled: selectBUValue.exportToERPdisabled,\r\n            exportToERPbyPassed: selectBUValue.exportToERPbyPassed,\r\n            enableBOSTransfer: selectBUValue.enableBOSTransfer,\r\n            contextDEF: selectBUValue.contextDEF,\r\n            EMRDivisionORGValue: selectBUValue.EMRDivisionORGValue,\r\n            productHierarchy: selectBUValue.productHierarchy,\r\n          });\r\n        } else {\r\n          navigate(\"/buList\", { state: { message: \"Design Organization not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/buList\", { state: { message: \"Design Organization not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n  sortDataByKey(plantData, 'plantName');\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Design Organization\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Edit Design Organization</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Design Organization <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"buName\"\r\n                  disabled\r\n                  value={buForm.buName}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Export to ERP Disabled </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  id=\"exportToERPdisabled\"\r\n                  name=\"exportToERPdisabled\"\r\n                  fullWidth\r\n                  value={buForm?.exportToERPdisabled ? buForm?.exportToERPdisabled : \"N\"}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Export To ERP ByPassed\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  id=\"exportToERPbyPassed\"\r\n                  name=\"exportToERPbyPassed\"\r\n                  fullWidth\r\n                  value={buForm?.exportToERPbyPassed ? buForm?.exportToERPbyPassed : \"N\"}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Enable BOS Transfer </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"enableBOSTransfer\"\r\n                  id=\"enableBOSTransfer\"\r\n                  name=\"enableBOSTransfer\"\r\n                  fullWidth\r\n                  value={buForm?.enableBOSTransfer ? buForm?.enableBOSTransfer : 'Y'}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {enableBOSTransferOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Context DFF\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"contextDEF\"\r\n                  value={buForm.contextDEF}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  EMR Division ARG\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"EMRDivisionORGValue\"\r\n                  value={buForm.EMRDivisionORGValue}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Product Hierarchy\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"productHierarchy\"\r\n                  value={buForm.productHierarchy}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Plant Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={selectedplants}\r\n                  getOptionLabel={(option) => option.plantName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handlePlantsChange(newValue)\r\n                  }}\r\n                  options={plantData}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.plantName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <InfoIcon style={{ marginTop: '5px' }} color=\"secondary\" fontSize=\"small\" /><span style={{ marginBottom: '20px' }}> Changing Plants will affect the Template Mappings.</span>\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Do Not Send To ERP\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={DoNotSendToERP}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"DoNotSendToERP\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Oracle Existing\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={OracleExisting}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"OracleExisting\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Make Without BOM List\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={MakeWithoutBOMList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"MakeWithoutBOMList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Not Owning Division List\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={NotOwningDivisionList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"NotOwningDivisionList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={12} sm={12} xs={12} className=\"font-medium\" style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleCancel}\r\n                  style={{ marginRight: \"20px\" }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddbuName}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n\r\n        {\r\n          (refreshData || isLoading) ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Loader show={true} />\r\n            </div>\r\n          ) : <></>\r\n        }\r\n      </form>\r\n    </Container >\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport BUList from \"./buList\";\r\nimport CreateBU from \"./createBU\";\r\nimport EditBU from \"./editBU\";\r\n\r\nconst buListRoutes = [\r\n  {\r\n    path: \"/buList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <BUList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/createBU\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateBU />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/editBU/:buId\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditBU />\r\n      </PrivateRoute>\r\n    )\r\n  }\r\n];\r\nexport default buListRoutes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from \"shortid\";\r\nimport { MCOService } from \"services/mcoService\";\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Box,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { UserService } from \"services/usersService\";\r\n// import download from 'downloadjs';\r\n// import CustomSelect from \"./CustomSelect\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled(\"input\")({\r\n  clip: \"rect(0 0 0 0)\",\r\n  clipPath: \"inset(50%)\",\r\n  height: 1,\r\n  overflow: \"hidden\",\r\n  position: \"absolute\",\r\n  bottom: 0,\r\n  left: 0,\r\n  whiteSpace: \"nowrap\",\r\n  width: 1,\r\n});\r\n\r\nconst BulkImportUsers = ({\r\n  userImportDialog,\r\n  setUserImportDialog,\r\n  setUserData,\r\n}) => {\r\n  const mcoService = new MCOService();\r\n  // const { importBulkUpdateFile, setImportBulkUpdateFile, savePartAndOracleTempInRedux } = props;\r\n  const userService = new UserService();\r\n  const [noFileError, setNoFileError] = useState(false);\r\n  const [importResponse, setImportResponse] = useState(false);\r\n  const [importfileBar, setimportfileBar] = useState(false);\r\n  const [importedFileData, setImportedFileData] = useState(null);\r\n  const [importedFileName, setImportedFileName] = useState(null);\r\n  const instance = localStorage.getItem(\"instance\");\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const importFileData = (e) => {\r\n    console.log(\"file selected\");\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const fileType = file.name.split('.').pop();\r\n      if (fileType === 'xlsx' || fileType === 'xls') {\r\n        // if (\r\n        //   e.target.files[0].name.split(\".\").pop() == \"xlsx\" ||\r\n        //   e.target.files[0].name.split(\".\").pop() === \"xls\"\r\n        // ) {\r\n        setImportedFileData(e.target.files[0]);\r\n        setImportedFileName(e.target.files[0].name);\r\n        setNoFileError(false);\r\n      } else {\r\n        setNoFileError(true);\r\n        setImportedFileName(null);\r\n        setImportedFileData(null);\r\n      }\r\n    } else {\r\n      setNoFileError(true);\r\n      setImportedFileName(null);\r\n      setImportedFileData(null);\r\n    }\r\n  };\r\n\r\n  // const handleCloseImport = () => {\r\n  //     setImportedFileData(null)\r\n  //     setImportBulkUpdateFile(false);\r\n  // };\r\n  const handleImportFile1 = () => {\r\n    let hasError = false;\r\n    if (importedFileData === null || importedFileData.length < 1) {\r\n      setNoFileError(true);\r\n      hasError = true;\r\n    }\r\n    if (hasError) {\r\n      return;\r\n    }\r\n\r\n    if (importedFileData !== null) {\r\n      //alert('file is upl7oaded')\r\n      let postData = {\r\n        file: importedFileData,\r\n        data: {\r\n          Instance: instance,\r\n        },\r\n      };\r\n\r\n      // console.log(importSelectionValues, 'importSelectionValues');\r\n      console.log(postData, \"postData\");\r\n      userService.importUser(postData).then((response) => {\r\n        console.log(response, \"response 11111\");\r\n        if (response.status === \"success\") {\r\n          console.log(\r\n            response,\r\n            \"response 22222 file uploaded successfully and user added\"\r\n          );\r\n        }\r\n        setImportResponse(response);\r\n        setimportfileBar(true);\r\n        setImportedFileData(null);\r\n        setImportedFileName(null);\r\n        //   setImportBulkUpdateFile(false)\r\n        handleCloseImportDialog();\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n      });\r\n      userService.getAllUsersList().then((result) => {\r\n        setUserData(result.data);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleImportFile = async () => {\r\n    if (!importedFileData || importedFileData.length < 1) {\r\n      setNoFileError(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const postData = {\r\n        file: importedFileData,\r\n        data: {\r\n          Instance: instance,\r\n        },\r\n      };\r\n\r\n      console.log(postData, \"postData\");\r\n\r\n      const response = await userService.importUser(postData);\r\n      console.log(response, \"response 11111\");\r\n\r\n      // Determine the status from the response\r\n      const status = response.status || \"error\";\r\n\r\n      // Common tasks for both success and failure cases\r\n      setImportResponse(response);\r\n      setimportfileBar(true);\r\n      setImportedFileData(null);\r\n      setImportedFileName(null);\r\n      handleCloseImportDialog();\r\n\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: status,\r\n        desc: status === \"success\" ? response?.msg : response.errors.join(\", \"),\r\n      });\r\n\r\n      if (status === \"success\") {\r\n        console.log(\r\n          response,\r\n          \"response 22222 file uploaded successfully and user added\"\r\n        );\r\n        const result = await userService.getAllUsersList();\r\n        setUserData(result.data);\r\n      } else {\r\n        console.log(status, \"response status\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error importing file:\", error);\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: \"error\",\r\n        desc: \"An error occurred while importing the file.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    let filelocation = \"sample-bulkUserUpload.xlsx\";\r\n    mcoService.downloadSampleFile(filelocation);\r\n  };\r\n  const handleCloseImportDialog = () => {\r\n    setUserImportDialog(false);\r\n    setImportedFileData(null);\r\n    setImportedFileName(null);\r\n  };\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={userImportDialog}\r\n        onClose={handleCloseImportDialog}\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: \"#fff\",\r\n            boxShadow: \"none\",\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Bulk Upload Required Users\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <StyledTable>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell align=\"left\">Upload File (Excel File)</TableCell>\r\n                    <TableCell align=\"left\">\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        <Button\r\n                          component=\"label\"\r\n                          variant=\"contained\"\r\n                          startIcon={<CloudUploadIcon />}\r\n                        >\r\n                          Upload file\r\n                          <VisuallyHiddenInput\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            accept=\".xls, .xlsx\"\r\n                            onChange={importFileData}\r\n                          />\r\n                        </Button>\r\n                        {noFileError && (\r\n                          <p>Please Select xlsx file to Upload </p>\r\n                        )}\r\n                      </div>\r\n                      {importedFileName && <p>{importedFileName}</p>}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell colSpan={2}>\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        <a\r\n                          // href={sampleFileUrl}\r\n                          onClick={handleDownload}\r\n                          download=\"Example-XLSX-document\"\r\n                          rel=\"noreferrer\"\r\n                          // target=\"_blank\"\r\n                          //style={{ color: \"blue\" }}\r\n                          style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                        >\r\n                          Click Here\r\n                        </a>{\" \"}\r\n                        to download the sample Excel template for bulk user\r\n                        upload.\r\n                        {/* <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={() => { download(sampleFileUrl) }}>\r\n                                                Download sample file\r\n                                            </Button> */}\r\n                        {/* </a> */}\r\n                      </div>\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        <b>Note:</b> Upload file must contain six columns with\r\n                        header labels in following order.\r\n                      </div>\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        1. User Name\r\n                        <br />\r\n                        3. Name\r\n                        <br />\r\n                        4. Email\r\n                        <br />\r\n                        5. Is Authorized\r\n                        <br />\r\n                        6. User Group\r\n                        <br />\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </StyledTable>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleImportFile}>Upload</Button>\r\n          <Button onClick={handleCloseImportDialog}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {openDesc ? (\r\n        <CustomAlertBox\r\n          openAlert={openAlert}\r\n          openDesc={openDesc}\r\n          setOpenAlert={setOpenAlert}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BulkImportUsers;\r\n","import { SimpleCard } from \"app/components\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport { Grid, Box } from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { getUserInfo } from \"@okta/okta-auth-js\";\r\nimport { UserService } from 'services/usersService';\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst BulkExportUsers = ({\r\n  userExportDialog,\r\n  setUserExportDialog,\r\n  userData,\r\n  selectedRows,\r\n}) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [dataToExport, setDataToExport] = useState(userData || []);\r\n  const [value, setValue] = useState(\"allData\");\r\n  const userService = new UserService();\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n\r\n  const handleCloseExportUser = () => {\r\n    setUserExportDialog(false);\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n\r\n  /* export template data start */\r\n  const exportTemplateHandle = () => {\r\n    console.log(userData, \"userData in bulk export inside export template.\");\r\n\r\n    let data = (value !== \"allData\" ? selectedRows : userData) || [];\r\n    let exportData = data?.map((item) => {\r\n      let res = {\r\n        // userId: item.userId,\r\n        \"Name\": item.name,\r\n        \"User Name\": item.userName,\r\n        Email: item.email,\r\n        \"Is Authorized\": item.is_authorized,\r\n        \"User Group\": item.userinfo.join(\", \"), // Convert array to comma-separated string\r\n      };\r\n      return res;\r\n    });\r\n\r\n    console.log(data, 'data')\r\n    userService\r\n      .exportUser({ data: exportData, sheet_name: \"Users\" })\r\n      .then((response) => {\r\n        setExportResponse(response);\r\n        //console.log(response, ';resprespresp')\r\n        handleExportfileBarClick(\"User exported successfully!\", \"success\");\r\n\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n      });\r\n    handleCloseExportUser();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const newValue = event.target.value;\r\n    setValue(newValue);\r\n\r\n    if (newValue === \"allData\") {\r\n      setDataToExport(userData);\r\n    } else {\r\n      setDataToExport(selectedRows);\r\n    }\r\n  };\r\n\r\n\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Dialog open={userExportDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Users\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">\r\n                        Select Data to Export\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"allData\"\r\n                          control={<Radio />}\r\n                          label=\"All Data\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"selectedData\"\r\n                          disabled={selectedRows.length === 0}\r\n                          control={<Radio />}\r\n                          label=\"Selected Data\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseExportUser}>Cancel</Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {openDesc ? (\r\n        <CustomAlertBox\r\n          openAlert={openAlert}\r\n          openDesc={openDesc}\r\n          setOpenAlert={setOpenAlert}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BulkExportUsers;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport BulkImportUsers from \"./bulkImportUsersDialog\";\r\nimport { Box, styled, Grid, TextField } from \"@mui/material\";\r\n\r\nimport { UserService } from \"services/usersService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport BulkExportUsers from \"./bulkExportUsersDialog\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst UserList = () => {\r\n  const location = useLocation();\r\n  let toastState = location.state;\r\n  const [userData, setUserData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const userService = new UserService();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [userImportDialog, setUserImportDialog] = useState(false);\r\n  const [userExportDialog, setUserExportDialog] = useState(false);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap =\r\n    gridRef && gridRef.current && gridRef.current.dataMap\r\n      ? gridRef.current.dataMap\r\n      : null;\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"name\",\r\n      header: \"Name\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.name}</div>,\r\n    },\r\n    {\r\n      name: \"userName\",\r\n      header: \"User Name\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.userName}</div>,\r\n    },\r\n    {\r\n      name: \"email\",\r\n      header: \"Email\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.email}</div>,\r\n    },\r\n    {\r\n      name: \"is_authorized\",\r\n      header: \"Is Authorized\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => (\r\n        <div>{data?.is_authorized === \"Y\" ? \"Yes\" : \"No\"}</div>\r\n      ),\r\n    },\r\n    {\r\n      name: \"userinfo\",\r\n      header: \"User Group\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => (\r\n        <div>\r\n          {data?.userinfo ? data.userinfo.map((item) => item).join(\", \") : \"\"}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteUserDilaog(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditUser(selectedRows[0]);\r\n  };\r\n\r\n  // ===========Import Export Functions==========//\r\n  const handleImportDialog = () => {\r\n    setUserImportDialog(true);\r\n  };\r\n  const handleExportDialog = () => {\r\n    setUserExportDialog(true);\r\n  };\r\n  const handleCloseImportDialog = () => {\r\n    console.log(\"close dialog\");\r\n    setUserImportDialog(false);\r\n  };\r\n  const handleCloseExportDialog = () => {\r\n    setUserExportDialog(false);\r\n  };\r\n  // ===========Import Export Functions==========//\r\n\r\n  // ==============table===========\r\n\r\n  useEffect(() => {\r\n    console.log(userData, \"userData inside useEffect\");\r\n    if (userData.length === 0) {\r\n      setIsLoading(true);\r\n      userService.getAllUsersList().then((result) => {\r\n        setUserData(result.data);\r\n        setInitialData(result.data); // Set initial data\r\n        setIsLoading(false);\r\n      });\r\n    } else {\r\n      setUserData(userData);\r\n    }\r\n  }, []);\r\n  const [filteredBUData, setFilteredBUData] = useState([]);\r\n\r\n// Ensure filteredBUData is an array\r\nconst validFilteredBUData = Array.isArray(filteredBUData) ? filteredBUData : [];\r\nlet sortedUsersData = sortDataByKey([...validFilteredBUData], \"name\");\r\n\r\n  useEffect(() => {\r\n    setFilteredBUData(userData);\r\n    setInitialData(sortedUsersData);\r\n  }, [userData]);\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => { };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleCreateUser = () => {\r\n    setTimeout(() => {\r\n      navigate(\"/addEditUser\", {\r\n        state: { isEdit: false },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleEditUser = (editSelectedUser) => {\r\n    const selectedUserData = editSelectedUser;\r\n    setTimeout(() => {\r\n      navigate(\"/addEditUser\", {\r\n        state: { isEdit: true, selectedUserData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteUserDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteUser = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      setIsLoading(true);\r\n      console.log(selectedRows, \"selectedRows\");\r\n      const selRowsId = selectedRows?.map((item) => item?.id);\r\n      await userService.deleteUser(selRowsId).then((response) => {\r\n        console.log(response, \"delete response\");\r\n        setIsLoading(false);\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete User:\", error);\r\n    }\r\n    userService.getAllUsersList().then((result) => {\r\n      setUserData(result.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails =\r\n      selRowsData && Object.keys(selRowsData).map((key) => selRowsData[key]);\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      const new_FilteredData = userData.filter((subscriber) => {\r\n        return (\r\n          searchValue === \"\" ||\r\n          subscriber.name.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          subscriber.email.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          subscriber.userName.toLowerCase().includes(searchValue.toLowerCase())\r\n        );\r\n      });\r\n      setFilteredBUData(new_FilteredData);\r\n    }\r\n  }, [searchValue, userData]);\r\n  useEffect(() => {\r\n    if (toastState?.status) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: toastState?.status,\r\n        desc: toastState?.message,\r\n      });\r\n      userService.getAllUsersList().then((result) => {\r\n        setUserData(result.data);\r\n        setInitialData(result.data); // Set initial data\r\n      });\r\n    }\r\n    toastState = {};\r\n\r\n    // Clear the state value on page refresh\r\n    window.onbeforeunload = () => {\r\n      window.history.replaceState({}, document.title);\r\n    };\r\n  }, [toastState]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedUserData = sortedExportDataHOC(UserList);\r\n    const sortedData = SortedUserData({ data: userData, sortedUsersData, sortInfo, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setUserData(sortedData.props.data);\r\n    setFilteredBUData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Users\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateUser}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleImportDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Import\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleExportDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Export\r\n            </Button>\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br></br>\r\n            {isLoading ? (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"100vh\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              filteredBUData && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={{ minHeight: 550 }}\r\n                  defaultLimit={100}\r\n                  columns={columns}\r\n                    dataSource={sortInfo === null ? filteredBUData : sortedUsersData}\r\n                  // rowHeight={null}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={(ref) => (gridRef.current = ref ? ref.current : null)}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  onSortInfoChange={handleSortInfoChange}\r\n                  />\r\n              )\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {openDesc ? (\r\n        <CustomAlertBox\r\n          openAlert={openAlert}\r\n          openDesc={openDesc}\r\n          setOpenAlert={setOpenAlert}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Design Organization\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Do you want to delete the seleted User(s)?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteUser}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <BulkExportUsers\r\n        userExportDialog={userExportDialog}\r\n        handleCloseExportDialog={handleCloseExportDialog}\r\n        setUserImportDialog={setUserImportDialog}\r\n        setUserExportDialog={setUserExportDialog}\r\n        selectedRows={selectedRows}\r\n        userData={sortInfo && Object.keys(sortInfo).length === 0 ? sortedUsersData : userData} />\r\n        <BulkImportUsers\r\n        userImportDialog={userImportDialog}\r\n        setUserImportDialog={setUserImportDialog}\r\n        setUserData={setUserData}\r\n\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { is_authorizedOptions } from \"../adminConfig/common\";\r\nimport { userGroupOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { UserService } from \"services/usersService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = {\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n};\r\n\r\nexport default function AddEditUser() {\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const location = useLocation();\r\n  const isEdit = location.state?.isEdit;\r\n  const selectedUser = location.state?.selectedUserData !== undefined ? location.state?.selectedUserData : {};\r\n  const [userForm, setUserFrom] = useState({\r\n    id: selectedUser.userId !== undefined ? selectedUser.userId : Date.now().toString(),\r\n    userName: selectedUser.userName,\r\n    name: selectedUser.name,\r\n    email: selectedUser.email,\r\n    is_authorized: selectedUser.is_authorized !== undefined ? selectedUser.is_authorized : 'Y',\r\n    userinfo: selectedUser.userinfo !== undefined ? selectedUser.userinfo : []\r\n  });\r\n  const classes = useStyles;\r\n  let navigate = useNavigate();\r\n  const userService = new UserService();\r\n\r\n  const handleAddbuName = () => {\r\n    if (\r\n      userForm.userName?.trim() === \"\" ||\r\n      !userForm.userName ||\r\n      userForm.name?.trim() === \"\" ||\r\n      !userForm.name ||\r\n      userForm.email?.trim() === \"\" ||\r\n      !userForm.email ||\r\n      userGroup.length === 0 ||\r\n      userForm.is_authorized?.trim() === \"\" ||\r\n      !userForm.is_authorized\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newbuName = {\r\n      id: userForm.id,\r\n      userName: userForm.userName,\r\n      name: userForm.name,\r\n      email: userForm.email,\r\n      is_authorized: userForm.is_authorized,\r\n      userinfo: userGroup,\r\n    };\r\n    if (isEdit) {\r\n      userService.updateUser({ userData: newbuName }).then((resp) => {\r\n        if (resp.status === 'success') {\r\n          setTimeout(() => {\r\n            navigate(\"/userList\", { state: { message: resp.msg, status: resp.status } });\r\n          }, 200);\r\n        } else if (resp.status === 'error') {\r\n          handlesnackBarClick(resp.msg, resp.status);\r\n        }\r\n      })\r\n    } else {\r\n      userService.addnewUser({ userData: newbuName }).then((resp) => {\r\n        if (resp.status === 'success') {\r\n          setTimeout(() => {\r\n            navigate(\"/userList\", { state: { message: resp.msg, status: resp.status } });\r\n          }, 200);\r\n        } else if (resp.status === 'error') {\r\n          handlesnackBarClick(resp.msg, resp.status);\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleUserFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...userForm,\r\n      [name]: value,\r\n    };\r\n    setUserFrom(updatedForm);\r\n  };\r\n  const [userGroup, setUserGroup] = useState(selectedUser.userinfo || []);\r\n  const handleuserGroupChange = (event) => {\r\n    const selectedValues = event.target.value;\r\n    const userGroupInfo = userGroupOptions.filter((option) =>\r\n      selectedValues.includes(option)\r\n    );\r\n    setUserGroup(userGroupInfo);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: isEdit ? \"Edit User\" : \"Create User\" }]} />\r\n      </Box>\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>{isEdit ? \"Edit User\" : \"Create User\"}</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"name\"\r\n                  value={userForm.name}\r\n                  onChange={handleUserFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  User Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"userName\"\r\n                  // disabled={isEdit}\r\n                  value={userForm.userName}\r\n                  onChange={handleUserFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Email <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  disabled={isEdit}\r\n                  value={userForm.email}\r\n                  onChange={handleUserFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Is Authorized</span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  id=\"is_authorized\"\r\n                  name=\"is_authorized\"\r\n                  fullWidth\r\n                  value={userForm.is_authorized ? userForm.is_authorized : ''}\r\n                  onChange={handleUserFormChange}\r\n                >\r\n                  {is_authorizedOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  User Group <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  multiple\r\n                  value={userGroup.map((item) => item)}\r\n                  onChange={handleuserGroupChange}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                  MenuProps={{\r\n                    sx: {\r\n                      \"&& .Mui-selected\": {\r\n                        backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  {userGroupOptions?.map((option) => (\r\n                    <MenuItem key={option} value={option}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleAddbuName}\r\n                  >\r\n                    {isEdit ? \"Update\" : \"Create\"}\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n      </form>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport USERList from \"./usersList\";\r\nimport AddEditUser from \"./addEditUsers\";\r\n\r\nconst userListRoutes = [\r\n  {\r\n    path: \"/userList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <USERList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/addEditUser\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <AddEditUser />\r\n      </PrivateRoute>\r\n    )\r\n  }\r\n];\r\n\r\nexport default userListRoutes;\r\n","const Constant ={\r\n    \"adminConstant\":{\r\n        \"common\":{\r\n            \"deleteNote\":\"Data will not be romeved from the master data. It will be added to your draft changes only.\",\r\n        },\r\n        \"buplantList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"Plant\": \"PLANT\",\r\n                \"BomStatus\": \"BOM STATUS\",\r\n                \"PoORG\": \"PO ORG\",\r\n                \"RduOuSetORG\": \"RDU OU SET ORG\",\r\n            }\r\n        },\r\n        \"expensemapList\":{\r\n            \"tooltip\":{\r\n                \"EXPENSE_TEMPLATE\": \"Template\",\r\n                \"RDO\": \"Design Organization\",\r\n                \"PlantName\":\"Plant Name\"\r\n            }\r\n        },\r\n        \"mvoallowedchangesList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"mvoTemplatesFrom\": \"MVO Template - From\",\r\n                \"mvoTemplatesTo\": \"MVO Template - To\",\r\n            }\r\n        },\r\n        \"mvoTemplateList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"TemplateOptionMVO\": \"Template MVO\",\r\n                \"HasMBom\":\"Has MBom\",\r\n                \"OnMBom\":\"ON MBom\",\r\n                \"Optional\":\"Optional\",\r\n                \"PoExist\":\"PO Exist\",\r\n                \"EBomAllowed\":\"EBOM Allowed\",\r\n                \"AllowableOrgTemplate\": \"Org Allowed Templates - Status\",\r\n            }\r\n        },\r\n        \"orgAllowedList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"AllowableOrgTemplate\": \"Template Name\",\r\n                \"HasMBom\":\"Has MBOM\",\r\n                \"EBOM\":\"EBOM Allowed\",\r\n                \"Optional\":\"Optional\",\r\n                \"PoCheck\":\"PO Org Check\",\r\n                \"OnMbom\":\"ON MBOM\",\r\n                \"status\":\"status\"\r\n            }\r\n        },\r\n        \"parttypetemplateList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"TemplateOptionsMVO\": \"Enovia Part Type\",\r\n                \"allowableOrgTemplatesExclusive\":\"Org Allowed Templates - Exclusive use\"\r\n            }\r\n        },\r\n        \"setComptempList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"TemplateForOrgExist\": \"Template for Org(s) Existing\",\r\n                \"TemplateForOrgModify\":\"Template for Org Modifying\"\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Constant","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { notOwningDivisionOptions } from \"../../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst OrgAllowedDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  selectedPlants,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddOrgAllowedValues,\r\n  isEdit,\r\n  selectedBU\r\n}) => {\r\n\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnitLists,\r\n  } = useOracleSettings();\r\n  const filteredPlants = () => {\r\n    return bussinessUnitLists?.find((plant) => plant.buName === selectedBU)?.plants || []\r\n  };\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      console.log(tempData, 'tempData tempData tempData')\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo]);\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Org Allowed Templates \" : \"Add OrgAllowed Templates\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Design Organization <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"DataType-select\"\r\n              name=\"BUID\"\r\n              fullWidth\r\n              value={selectedBU}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled\r\n            >\r\n              {filteredBUOptions?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Template Name <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              name=\"ALLOWABLE_ORG_TEMPLATES\"\r\n              fullWidth\r\n              value={orgAllowedForm.ALLOWABLE_ORG_TEMPLATES}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled={isEdit}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Has MBOM <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"Has_MBOM\"\r\n              name=\"Has_MBOM\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.Has_MBOM !== undefined ? orgAllowedForm.Has_MBOM : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              On MBOM <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"On_MBOM\"\r\n              name=\"On_MBOM\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.On_MBOM !== undefined ? orgAllowedForm.On_MBOM : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              EBOM Allowed <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"EBOM_Allowed\"\r\n              name=\"EBOM_Allowed\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.EBOM_Allowed !== undefined ? orgAllowedForm.EBOM_Allowed : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Optional <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"Optional\"\r\n              name=\"Optional\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.Optional !== undefined ? orgAllowedForm.Optional : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              PO Org Check: <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"PO_Org_Exist_Check\"\r\n              name=\"PO_Org_Exist_Check\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.PO_Org_Exist_Check !== undefined ? orgAllowedForm.PO_Org_Exist_Check : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Plants <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              multiple\r\n              name=\"plants\"\r\n              value={selectedPlants}\r\n              onChange={handleorgAllowedFormChange}\r\n              renderValue={(selected) => selected?.join(\", \")}\r\n              MenuProps={{\r\n                sx: {\r\n                  \"&& .Mui-selected\": {\r\n                    backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {filteredPlants()?.map((option) => (\r\n                <MenuItem key={option.plantName} value={option.plantName}>\r\n                  {option.plantName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddOrgAllowedValues}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default OrgAllowedDialog;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class HistoryManagementService {\r\n\r\n  // draftChanges services\r\n  getAlldraftChanges = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/draftChanges/getDraftChanges`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTemplateMapping = (tempMappingId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/draftChanges/deletedraftChanges/${tempMappingId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting deletedraftChanges:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/draftChanges/adddraftChanges`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        //console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"adddraftChanges\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/draftChanges/updatedraftChanges`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updatedraftChanges\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  applyDraftChanges = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/draftChanges/acceptChanges`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"applyDraftChanges\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  discardDraftChanges = (dataId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/draftChanges/deletedraftChanges/${dataId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting discardDraftChanges:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  // mappingHistory services\r\n  getAllmappingHistory = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/mappingHistory/getMappingHistory`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class MVOtempcompService {\r\n  getAlltempcompMappings = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/newtemplateMappings/getTemplateMappings`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTempCompMapping = (tempMappingId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/newtemplateMappings/deleteTemplateMappings/${tempMappingId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting deleteTemplateMappings:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewTempCompMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/addTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTempCompMapping = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/newtemplateMappings/updateTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  softDeleteTempCompMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/softDeleteTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"softDeleteTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from 'shortid';\r\n\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\r\n\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Autocomplete,\r\n} from \"@mui/material\";\r\n\r\n\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport Loader from 'app/components/Loader';\r\n\r\nimport download from 'downloadjs';\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\n\r\nconst ImportMappingsDialog = (props) => {\r\n    const {\r\n        allTemplatesInfo,\r\n        // updateTemplateLists,\r\n        updateRefreshData,\r\n        bussinessUnitLists\r\n    } = useOracleSettings();\r\n\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { importTemplate, setImportTemplate, fetchData } = props;\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n\r\n    const [sampleFileUrl, setSampleFileUrl] = useState(null);\r\n\r\n    const [ERPTypeError, setERPTypeError] = useState(false);\r\n    const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        ERPType: [],\r\n        instance: [],\r\n        BU: [],\r\n    });\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n\r\n    const importFileData = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0])\r\n                setImportedFileName(e.target.files[0].name)\r\n                setNoFileError(false)\r\n            } else {\r\n                setNoFileError(true)\r\n                setImportedFileName(null)\r\n                setImportedFileData(null);\r\n            }\r\n        } else {\r\n            setNoFileError(true)\r\n            setImportedFileName(null)\r\n            setImportedFileData(null);\r\n        }\r\n    }\r\n\r\n    const handleCloseImportTemplate = () => {\r\n        setImportedFileData(null)\r\n        setImportTemplate(false);\r\n    };\r\n\r\n    const handleImportTemplate = () => {\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            return;\r\n        }\r\n\r\n        if (importedFileData === null || importedFileData.length < 1) {\r\n            setNoFileError(true);\r\n            return;\r\n        }\r\n        if (importedFileData !== null) {\r\n            let postData = {\r\n                'file': importedFileData,\r\n                data: {\r\n                    BU: importSelectionValues.BU,\r\n                    MappingType: props?.MappingType,\r\n                }\r\n            };\r\n\r\n            // console.log(importSelectionValues, 'importSelectionValues');\r\n            // console.log(postData, 'postData');\r\n            // return;\r\n            setIsLoading(true);\r\n            templateMappingService.importTemplate(postData).then((response) => {\r\n                // console.log(response, 'response 11111');\r\n                setImportResponse(response)\r\n                setimportfileBar(true);\r\n                setImportedFileData(null)\r\n                setImportedFileName(null)\r\n                setImportTemplate(false);\r\n                let desc = {};\r\n                let severity='';\r\n                if (response && response.status === 'error') {\r\n                    desc = (\r\n                        <div style={{ color: 'red' }}>\r\n                            {response?.msg} <br />\r\n                            {response?.errorInTemplateCount && (\r\n                                <>\r\n                                    Total Template Count: {response.errorInTemplateCount} <br />\r\n                                    Templates are: <br />\r\n                                    <ul>\r\n                                        {response.errorInTemplate.map((eitem) => (\r\n                                            <li key={shortId.generate()}>{eitem}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </>\r\n                            )}\r\n\r\n                            {response?.errorInPlantCount && (\r\n                                <>\r\n                                    Total Plant Count: {response.errorInPlantCount} <br />\r\n                                    Plants are: <br />\r\n                                    <ul>\r\n                                        {response.errorInPlants.map((eitem) => (\r\n                                            <li key={shortId.generate()}>{eitem}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    );\r\n                    severity = 'error';\r\n                } else {\r\n                    if (response.errorCount > 0 || (!response.newTemplateAdded && !response.updateTemplates)) {\r\n                        desc = (\r\n                            <div style={{ color: 'red' }}>\r\n                                Failure <br />\r\n                                New Template Added: {response.newTemplateAdded} <br />\r\n                                Template Updated: {response.updateTemplates} <br />\r\n                                {response.errorCount > 0 && <>Error in Template: {response.errorCount} <br /></>}\r\n                            </div>\r\n                        );\r\n                        severity = 'error';\r\n                    } else {\r\n                        desc = (\r\n                            <div>\r\n                                {response.msg} <br />\r\n                                New Template Added: {response.newTemplateAdded} <br />\r\n                                Template Updated: {response.updateTemplates} <br />\r\n                            </div>\r\n                        );\r\n                        severity = 'success';\r\n                    }\r\n                }\r\n\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: severity,\r\n                    desc: desc,\r\n                });\r\n                setIsLoading(false);\r\n                if (severity === 'error') return; // Stop further execution if there is an error\r\n                if (!response?.errorInTemplateCount || !response?.errorInPlantCount) {\r\n                    updateRefreshData(true);\r\n                    fetchData();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const handleImportfileBarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setimportfileBar(false);\r\n    };\r\n\r\n    const handleImportTemplateSelection = (column, selectedValues) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [column]: selectedValues,\r\n            };\r\n        })\r\n        if (column === 'ERPType') { setERPTypeError(false) }\r\n        if (column === 'instance') { setinstanceError(false) }\r\n        if (column === 'BU') { setBUError(false) }\r\n        console.info(importSelectionValues, 'importSelectionValues')\r\n    }\r\n\r\n    const getUniqueValues = (column) => {\r\n        const values = new Set();\r\n\r\n        // console.log(allTemplatesInfo, 'allTemplatesInfo 11111');\r\n\r\n        // allTemplatesInfo?.forEach((subscriber) => {\r\n        //     if (column === \"plants\") {\r\n        //         subscriber[column]?.forEach((plant) => {\r\n        //             values.add(plant.plantName);\r\n        //         });\r\n        //     } else if (column === \"BU\") {\r\n        //         subscriber[column]?.forEach((BU) => {\r\n        //             values.add(BU);\r\n        //         });\r\n        //     } else {\r\n        //         values.add(subscriber[column]);\r\n        //     }\r\n        // });\r\n        bussinessUnitLists?.forEach(item => {\r\n            values.add(item[column]);\r\n        })\r\n        return Array.from(values);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let getsampleFileUrl = null;\r\n        switch (props?.MappingType) {\r\n            case \"orgallowedvalues\":\r\n                getsampleFileUrl = \"sample-orgAllowedTemplate.xlsx\";\r\n                break;\r\n            case \"mvoTemplateCompatibility\":\r\n                getsampleFileUrl = \"sample-mvotemplatecompatibility.xlsx\";\r\n                break;\r\n            case \"parttypetotemplate\":\r\n                getsampleFileUrl = \"sample-partTypeToTemplate.xlsx\";\r\n                break;\r\n            case \"mvoallowedchanges\":\r\n                getsampleFileUrl = \"sample-mvoallowedchanges.xlsx\";\r\n                break;\r\n            case \"setcompatibletemplates\":\r\n                getsampleFileUrl = \"sample-setcompatibletemplates.xlsx\";\r\n                break;\r\n            case \"buplantmapping\":\r\n                getsampleFileUrl = \"sample-RDOPlantMapping.xlsx\";\r\n                break;\r\n            case \"expensemapping\":\r\n                getsampleFileUrl = \"sample-expensemapping.xlsx\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setSampleFileUrl(getsampleFileUrl);\r\n    }, [props.MappingType]);\r\n\r\n    // useEffect(() => {\r\n    //     templateMappingService.getAlltemplateMappings().then((result) => {\r\n    //         updateTemplateLists(result?.data?.templateMappingList);\r\n    //     });\r\n    // }, [])\r\n    const handleDownload = () => {\r\n        templateMappingService.downloadSampleFile(sampleFileUrl)\r\n    };\r\n    return (\r\n        <>\r\n            <Dialog open={importTemplate}\r\n                style={{\r\n                    zIndex: 999, // Set your desired z-index value\r\n                }}>\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    {props.title}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                Design Organization\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={getUniqueValues(\"buName\")}\r\n                                                // options={getBuList}\r\n                                                value={importSelectionValues.BU}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"BU\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select RDO\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.BU.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                            Upload file\r\n                                            <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                        </Button>\r\n                                        {noFileError && (<p>Please Select xlsx file to Upload </p>)}\r\n                                    </div>\r\n                                    {importedFileName && (<p>{importedFileName}</p>)}\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        {/* <a\r\n                                            href={sampleFileUrl}\r\n                                            download=\"Example-XLSX-document\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noreferrer\"\r\n                                        > */}\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={handleDownload}>\r\n                                            Download sample file\r\n                                        </Button>\r\n                                        {/* </a> */}\r\n                                    </div>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleCloseImportTemplate}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleImportTemplate}>Import</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* <Snackbar\r\n                open={importfileBar}\r\n                autoHideDuration={6000}\r\n                onClose={handleImportfileBarClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleImportfileBarClose}\r\n                    severity={(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"success\" : \"error\"}\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    <AlertTitle>{(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"Success\" : \"Error\"}</AlertTitle>\r\n                    {\r\n                        (importResponse && (importResponse?.errorInTemplate?.length || importResponse?.errorInPlants?.length)) ? (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse?.msg} <br />\r\n                                    {\r\n                                        (importResponse?.errorInTemplateCount) ? (<>\r\n                                            Total Template Count: {importResponse?.errorInTemplateCount} <br />\r\n                                            Templates are: <br />\r\n                                            <ul>\r\n                                                {\r\n                                                    importResponse?.errorInTemplate?.map((eitem) => {\r\n                                                        return (\r\n                                                            <li key={shortId.generate()}>\r\n                                                                {eitem}\r\n                                                            </li>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </ul>\r\n                                        </>) : (<></>)\r\n                                    }\r\n\r\n                                    {\r\n                                        (importResponse?.errorInPlantCount) ? (\r\n                                            <>\r\n                                                Total Plant Count: {importResponse?.errorInPlantCount} <br />\r\n                                                Plants are: <br />\r\n                                                <ul>\r\n                                                    {\r\n                                                        importResponse?.errorInPlants?.map((eitem) => {\r\n                                                            return (\r\n                                                                <li key={shortId.generate()}>\r\n                                                                    {eitem}\r\n                                                                </li>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </ul>\r\n                                            </>\r\n                                        ) : (<></>)\r\n                                    }\r\n\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse.msg} <br />\r\n                                    New Template Added: {importResponse.newTemplateAdded} <br />\r\n                                    Template Updated: {importResponse.updateTemplates} <br />\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </Alert>\r\n            </Snackbar > */}\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} sx={{ '& .MuiAlertTitle-root': { backgroundColor: 'red' } }} />\r\n            ) : (<></>)}\r\n\r\n            {\r\n                isLoading ? (\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <Loader show={isLoading} />\r\n                    </div>\r\n                ) : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImportMappingsDialog;","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst MVOtemplatecompContext = createContext({\r\n    mvotemplatecompInfo: [],\r\n    updateMVOtempcompLists: () => [],\r\n})\r\n\r\nexport const MVOtempcompProvider = ({ children }) => {\r\n    const [mvotemplatecompInfo, setMvotemplatecompInfo] = useState([]);\r\n\r\n    const updateMVOtempcompLists = (values) => {\r\n        setMvotemplatecompInfo(values);\r\n       // console.log(values, \"inside update  333\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(mvotemplatecompInfo, \"templatesContext\");\r\n    }, [mvotemplatecompInfo]);\r\n\r\n    return (\r\n        <MVOtemplatecompContext.Provider\r\n            value={{\r\n                mvotemplatecompInfo,\r\n                updateMVOtempcompLists,\r\n            }}\r\n        >\r\n            {children}\r\n        </MVOtemplatecompContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MVOtemplatecompContext;","import { useContext } from 'react';\r\nimport MVOtemplatecompContext from 'app/contexts/MvoTempCompContext';\r\n\r\nconst useMVOtempComp = () => useContext(MVOtemplatecompContext)\r\n\r\nexport default useMVOtempComp\r\n      ","import { createContext, useState, useEffect } from \"react\";\r\n\r\nconst PartTypeTemplateContext = createContext({\r\n  parttypetemplateinfo: [],\r\n  updateParttypeTemplate: () => [],\r\n});\r\n\r\nexport const ParttypetemplateProvider = ({ children }) => {\r\n  const [parttypetemplateinfo, setPartTypeTemplateinfo] = useState([]);\r\n\r\n  const updateParttypeTemplate = (values) => {\r\n    setPartTypeTemplateinfo(values);\r\n    //console.log(values, \"inside update context 2222\");\r\n  };\r\n\r\n  useEffect(() => {\r\n   // console.log(parttypetemplateinfo, \"templatesContext\");\r\n  }, [parttypetemplateinfo]);\r\n\r\n  return (\r\n    <PartTypeTemplateContext.Provider\r\n      value={{\r\n        parttypetemplateinfo,\r\n        updateParttypeTemplate,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartTypeTemplateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PartTypeTemplateContext;\r\n","import { useContext } from 'react';\r\nimport PartTypeTemplateContext from 'app/contexts/ParttypetemplateContext';\r\n\r\nconst usePartTypeTemplate = () => useContext(PartTypeTemplateContext)\r\n\r\nexport default usePartTypeTemplate\r\n      ","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst MVOallowedchangesContext = createContext({\r\n    mvoallowedchangesinfo: [],\r\n    updateMVOallowedchanges: () => [],\r\n})\r\n\r\nexport const MVOallowedchangesProvider = ({ children }) => {\r\n    const [mvoallowedchangesinfo, setmvoallowedchangesInfo] = useState([]);\r\n\r\n    const updateMVOallowedchanges = (values) => {\r\n        setmvoallowedchangesInfo(values);\r\n       // console.log(values, \"inside update context\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(mvoallowedchangesinfo, \"templatesContext\");\r\n    }, [mvoallowedchangesinfo]);\r\n\r\n    return (\r\n        <MVOallowedchangesContext.Provider\r\n            value={{\r\n                mvoallowedchangesinfo,\r\n                updateMVOallowedchanges,\r\n            }}\r\n        >\r\n            {children}\r\n        </MVOallowedchangesContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MVOallowedchangesContext;","import { useContext } from 'react';\r\n\r\nimport MVOallowedchangesContext from '../contexts/MVOallowedchangesContext'\r\n\r\nconst useMVoallowedchanges = () => useContext(MVOallowedchangesContext)\r\n\r\nexport default useMVoallowedchanges\r\n      ","import { createContext, useState, useEffect } from \"react\";\r\n\r\nconst SetTempCompContext = createContext({\r\n  comptempInfo: [],\r\n  updatecomptempList: () => [],\r\n});\r\n\r\nexport const SetTempCompProvider = ({ children }) => {\r\n  const [comptempInfo, setcomptempInfo] = useState([]);\r\n\r\n  const updatecomptempList = (values) => {\r\n    setcomptempInfo(values);\r\n   // console.log(values, \"inside update context\");\r\n  };\r\n\r\n  useEffect(() => {\r\n   // console.log(comptempInfo, \"templatesContext\");\r\n  }, [comptempInfo]);\r\n\r\n  return (\r\n    <SetTempCompContext.Provider\r\n      value={{\r\n        comptempInfo,\r\n        updatecomptempList,\r\n      }}\r\n    >\r\n      {children}\r\n    </SetTempCompContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SetTempCompContext;\r\n","import { useContext } from 'react';\r\n\r\nimport SetTempCompProvider from '../contexts/SetCompTempContext';\r\n\r\n\r\nconst useCompTemp = () => useContext(SetTempCompProvider)\r\n\r\nexport default useCompTemp\r\n      ","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst BUPlantContext = createContext({\r\n    buplantsInfo: [],\r\n    updatebuplantsInfo: () => [],\r\n})\r\n\r\nexport const BUPlantProvider = ({ children }) => {\r\n    const [buplantsInfo, setBuplantInfo] = useState([]);\r\n\r\n    const updatebuplantsInfo = (values) => {\r\n        setBuplantInfo(values);\r\n       // console.log(values, \"inside update context\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(buplantsInfo, \"templatesContext\");\r\n    }, [buplantsInfo]);\r\n\r\n    return (\r\n        <BUPlantContext.Provider\r\n            value={{\r\n                buplantsInfo,\r\n                updatebuplantsInfo,\r\n            }}\r\n        >\r\n            {children}\r\n        </BUPlantContext.Provider>\r\n    );\r\n};\r\n\r\nexport default BUPlantContext;","import { useContext } from 'react';\r\n\r\nimport BUPlantContext from 'app/contexts/BUPlantContext';\r\n\r\nconst useBUPlant = () => useContext(BUPlantContext)\r\n\r\nexport default useBUPlant\r\n      ","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst ExpenseMappingContext = createContext({\r\n    expensemapInfo: [],\r\n    updateExpenseMap: () => [],\r\n})\r\n\r\nexport const ExpenseMapProvider = ({ children }) => {\r\n    const [expensemapInfo, setExpensemapInfo] = useState([]);\r\n\r\n    const updateExpenseMap = (values) => {\r\n        setExpensemapInfo(values);\r\n       // console.log(values, \"inside update context\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(expensemapInfo, \"templatesContext\");\r\n    }, [expensemapInfo]);\r\n\r\n    return (\r\n        <ExpenseMappingContext.Provider\r\n            value={{\r\n                expensemapInfo,\r\n                updateExpenseMap,\r\n            }}\r\n        >\r\n            {children}\r\n        </ExpenseMappingContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ExpenseMappingContext;","import { useContext } from 'react';\r\n\r\nimport ExpenseMappingContext from 'app/contexts/ExpenseMapContext';\r\n\r\nconst useExpenseMap = () => useContext(ExpenseMappingContext)\r\n\r\nexport default useExpenseMap\r\n      ","import { SimpleCard } from \"app/components\"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport useMVOtempComp from \"app/hooks/useMVOtempComp\";\r\nimport usePartTypeTemplate from \"app/hooks/usePartTypeTemplate\";\r\nimport useMVoallowedchanges from \"app/hooks/useMVOallowedChanges\";\r\nimport useCompTemp from \"app/hooks/useCompTemp\";\r\nimport useBUPlant from \"app/hooks/useBUPlant\";\r\nimport useExpenseMap from \"app/hooks/useExpenseMap\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\nimport { sortAndReorderData } from \"app/utils/utils\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportMappingTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState([]);\r\n  const { templatesInfo, bussinessUnit, mappingTemplatesInfo } = useOracleSettings();\r\n  const { mvotemplatecompInfo } = useMVOtempComp();\r\n  const { parttypetemplateinfo } = usePartTypeTemplate();\r\n  const { mvoallowedchangesinfo } = useMVoallowedchanges();\r\n  const { comptempInfo } = useCompTemp();\r\n  const { buplantsInfo } = useBUPlant();\r\n  const { expensemapInfo } = useExpenseMap();\r\n  const [value, setValue] = useState('allData');\r\n  //const AllTempData = templatesInfo;\r\n  const filteredTempData = props.filterTemplateData;\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  let bu = localStorage.getItem('bussinessUnit');\r\n\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleExportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n  \r\n  function isObjectBlank(obj) { \r\n    return obj && Object.keys(obj).length === 0 && obj.constructor === Object; \r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (mappingTemplatesInfo) {\r\n      mappingTemplatesInfo.forEach(template => {\r\n        const details = template.details;\r\n        if (details) {\r\n          details.allowableOrgTemplates && details.allowableOrgTemplates.sort((a, b) => {\r\n            const key = a.ALLOWABLE_ORG_TEMPLATE ? 'ALLOWABLE_ORG_TEMPLATE' : 'org_allowed_template';\r\n            return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : 0;\r\n          });\r\n\r\n          details.MVO_TEMPLATES_TO && details.MVO_TEMPLATES_TO.sort((a, b) => {\r\n            return a.MVO_TEMPLATE_TO < b.MVO_TEMPLATE_TO ? -1 : a.MVO_TEMPLATE_TO > b.MVO_TEMPLATE_TO ? 1 : 0;\r\n          });\r\n\r\n          details.TEMPLATE_ORG_MODIFYING && details.TEMPLATE_ORG_MODIFYING.sort((a, b) => {\r\n            return a.TEMPLATE_ORG_MODIFYING < b.TEMPLATE_ORG_MODIFYING ? -1 : a.TEMPLATE_ORG_MODIFYING > b.TEMPLATE_ORG_MODIFYING ? 1 : 0;\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    let mappingType = props.MappingType;\r\n\r\n    if (mappingType === \"mvoallowedchanges\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'MVO_TEMPLATE_FROM';\r\n      props.sortInfo.columnName = 'MVO_TEMPLATE_FROM';\r\n    }\r\n    if (mappingType === \"mvoTemplateCompatibility\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'MVO_TEMPLATE_OPTION';\r\n      props.sortInfo.columnName = 'MVO_TEMPLATE_OPTION';\r\n    }\r\n    if (mappingType === \"parttypetotemplate\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'ENGG_ITEM_TYPE';\r\n      props.sortInfo.columnName = 'ENGG_ITEM_TYPE';\r\n    }\r\n    // if (mappingType === \"orgallowedvalues\" && isObjectBlank(props?.sortInfo)) {\r\n    //   props.sortInfo.dir = 1;\r\n    //   props.sortInfo.name = 'ALLOWABLE_ORG_TEMPLATES';\r\n    //   props.sortInfo.columnName = 'ALLOWABLE_ORG_TEMPLATES';\r\n    // }\r\n    if (mappingType === \"setcompatibletemplates\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'TEMPLATE_ORG_EXISTING';\r\n      props.sortInfo.columnName = 'TEMPLATE_ORG_EXISTING';\r\n    }\r\n    if (mappingType === \"expensemapping\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'EXPENSE_TEMPLATE';\r\n      props.sortInfo.columnName = 'EXPENSE_TEMPLATE';\r\n    }\r\n    let AllTempData = mappingType && mappingTemplatesInfo ? mappingTemplatesInfo.filter(\r\n      (item) => item.MappingType === mappingType) : [];\r\n    // switch (mappingType) {\r\n    //   case \"orgallowedvalues\":\r\n    //     AllTempData = templatesInfo\r\n    //   break;\r\n    //   case \"mvoTemplateCompatibility\":\r\n    //     AllTempData = mvotemplatecompInfo\r\n    //   break;\r\n    //   case \"parttypetotemplate\":\r\n    //     AllTempData = parttypetemplateinfo\r\n    //   break;\r\n    //   case \"mvoallowedchanges\":\r\n    //     AllTempData = mvoallowedchangesinfo\r\n    //   break;\r\n    //   case \"setcompatibletemplates\":\r\n    //     AllTempData = comptempInfo\r\n    //   break;\r\n    //   case \"buplantmapping\":\r\n    //     AllTempData = buplantsInfo\r\n    //   break;\r\n    //   case \"expensemapping\":\r\n    //     AllTempData = expensemapInfo\r\n    //   break;\r\n    //   default:  AllTempData = templatesInfo\r\n    //     break;\r\n    // } \r\n    if (value === 'allData' && props.sortInfo) {\r\n      AllTempData.sort((a, b) => {\r\n        const field = props.sortInfo.id || props.sortInfo.name || props.sortInfo.columnName;\r\n        const aValue = a[field]?.toLowerCase() || '';\r\n        const bValue = b[field]?.toLowerCase() || '';\r\n        if (aValue < bValue) {\r\n          return props.sortInfo.dir === 1 ? -1 : 1;\r\n        }\r\n        if (aValue > bValue) {\r\n          return props.sortInfo.dir === 1 ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    \r\n    }\r\n    let data = value === 'allData' ? AllTempData : props?.filterTemplateData;\r\n    data = data?.filter(item => item.BUID === bussinessUnit);\r\n\r\n    let exportData = data.map(item => {\r\n      if (mappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\") {\r\n        let res = {\r\n          \"Template Name\": item?.details?.ALLOWABLE_ORG_TEMPLATES,\r\n          \"Design Organization\": item.BUID,\r\n          \"Has MBOM\": item?.details?.Has_MBOM,\r\n          \"On MBOM\": item?.details?.On_MBOM,\r\n          \"EBOM Allowed\": item?.details?.EBOM_Allowed,\r\n          \"Optional\": item?.details?.Optional,\r\n          \"PO Org Check\": item?.details?.PO_Org_Exist_Check,\r\n          ...item?.details?.Plants\r\n        };\r\n        // // res = {...res, ...item?.details?.Plants}\r\n        //  console.log(res, 'newRes')\r\n        //  console.log(item?.details?.Plants, '...item?.details?.Plants')\r\n        //  //let sorted = {...res, ...item?.details?.Plants}\r\n        //  const addObjectResource = Object.assign(res, item?.details?.Plants);\r\n        //  console.log(addObjectResource, 'addObjectResource')\r\n        return res\r\n      } else if (mappingType === 'mvoTemplateCompatibility' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.allowableOrgTemplates?.map((item1, index) => {\r\n          let res = {\r\n            \"Template MVO\": index === 0 ? item.details.MVO_TEMPLATE_OPTION : null,\r\n            \"Org Allowed Templates\": item1.ALLOWABLE_ORG_TEMPLATE,\r\n            \"Status:\": item1.status,\r\n            \"Design Organization\": index===0?item.BUID:null,\r\n\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'parttypetotemplate' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.allowableOrgTemplates?.map((item1, index) => {\r\n          let res = {\r\n            \"Enovia Part Type\": index === 0 ? item.details.ENGG_ITEM_TYPE : null,\r\n            \"Org Allowed Templates\": item1.org_allowed_template,\r\n            \"Exclusive Use\": item1.exclusive_use,\r\n            \"Design Organization\": index===0?item.BUID:null,\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'mvoallowedchanges' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.MVO_TEMPLATES_TO?.map((item1, index) => {\r\n          let res = {\r\n            \"MVO Template - From\": index === 0 ? item.details.MVO_TEMPLATE_FROM : null,\r\n            \"MVO Template - To\": item1.MVO_TEMPLATE_TO,\r\n            \"Design Organization\": index===0?item.BUID:null,\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'setcompatibletemplates' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.TEMPLATE_ORG_MODIFYING?.map((item1, index) => {\r\n          let res = {\r\n            \"Template for Org(s) Existing\": index === 0 ? item.details.TEMPLATE_ORG_EXISTING : null,\r\n            \"Template for Org Modifying\": item1.TEMPLATE_ORG_MODIFYING,\r\n            \"Design Organization\": index===0?item.BUID:null\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'buplantmapping' && item.actionFlag !== \"Delete\") {\r\n        //console.log(item, 'inside export data')\r\n        let res = {\r\n          // \"Design Organization\": item.BUID,\r\n          // \"Plants\": item.details.PLANT,\r\n          // \"BOM/NOBOM\": item.details.BOM_STATUS,\r\n          // \"PO Org\": item.details.PO_ORG,\r\n          // \"RDO OU Org set\": item.details.RDU_OU_ORG_SET,\r\n          Entity: item.details.Entity,\r\n          ...Object.keys(item.details.PLANT).sort().reduce((acc, key) => {\r\n            acc[key] = item.details.PLANT[key];\r\n            return acc;\r\n          }, {})\r\n        };\r\n        return res\r\n      } else if (mappingType === 'expensemapping' && item.actionFlag !== \"Delete\") {\r\n        let res = {\r\n          \"Template\": item.details.EXPENSE_TEMPLATE,\r\n          \"Design Organization\": bussinessUnit,\r\n          ...item.details.EXPENSE_PLANTS\r\n        }\r\n        return res\r\n      }\r\n    })\r\n\r\nlet filterData = exportData.flat().filter(item => item !== null && item !== undefined);\r\n\r\nsetDataToExport(filterData);\r\n  }, [bussinessUnit,\r\n    templatesInfo,\r\n    mvotemplatecompInfo,\r\n    parttypetemplateinfo,\r\n    mvoallowedchangesinfo,\r\n    comptempInfo,\r\n    buplantsInfo,\r\n    expensemapInfo,\r\n    value,\r\n    mappingTemplatesInfo,\r\n    props.filterTemplateData,\r\n    props.sortInfo\r\n  ])\r\n\r\n  /* export template data start */\r\n  const exportTemplateHandle = () => {\r\n    //console.log(dataToExport, 'dataToExport dataToExport dataToExport')\r\n    if (dataToExport) {\r\n      let dataToPass = dataToExport;\r\n      if (props.title === \"RDO Plant Mapping\") {\r\n        dataToPass = sortAndReorderData(dataToExport);\r\n      }\r\n      if (props.title === \"Org Allowed Templates\") {\r\n        if (props.MappingType === \"orgallowedvalues\" && isObjectBlank(props?.sortInfo)) {\r\n          props.sortInfo.dir = 1;\r\n          props.sortInfo.name = 'ALLOWABLE_ORG_TEMPLATES';\r\n          props.sortInfo.columnName = 'ALLOWABLE_ORG_TEMPLATES';\r\n        }\r\n        if (props.sortInfo) {\r\n          dataToPass.sort((a, b) => {\r\n            let field = props.sortInfo.id || props.sortInfo.name || props.sortInfo.columnName;\r\n            // Check if the field is 'ALLOWABLE_ORG_TEMPLATES' and sort by 'Template Name'\r\n            if (field === 'ALLOWABLE_ORG_TEMPLATES') {\r\n              field = 'Template Name';\r\n            }\r\n            const aValue = a[field]?.toLowerCase() || '';\r\n            const bValue = b[field]?.toLowerCase() || '';\r\n            if (aValue < bValue) {\r\n              return props.sortInfo.dir === 1 ? -1 : 1;\r\n            }\r\n            if (aValue > bValue) {\r\n              return props.sortInfo.dir === 1 ? 1 : -1;\r\n            }\r\n            return 0;\r\n          });\r\n        }\r\n      }\r\n      tempService.exportTemplate({ 'data': dataToPass, 'sheet_name': props.title.substring(0, 26), 'bussiness_unit': bu }).then((response) => {\r\n        setExportResponse(response)\r\n        //console.log(response, ';resprespresp')\r\n        handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n      });\r\n    }\r\n    setExportTemplate(false)\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleExportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleExportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n          \r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportMappingTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport OrgAllowedDialog from \"./orgallowedDialog\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from \"../../../components/importMappingsDialog\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst OrgAllowedValuesList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [selectedPlants, setSelectedPlants] = useState([]);\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [orgallowedData, setorgallowedData] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const gridStyle = { minHeight: 550 };\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [selected, setSelected] = useState({});\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteTempMapping = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    handlesnackBarClick(\"Template Mapping deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  // ****************filters**********************\r\n\r\n  // *********org allowed values dialog methods**********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setSelectedPlants([]);\r\n    }\r\n\r\n    if (name === \"ALLOWABLE_ORG_TEMPLATES\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        'BUID': bussinessUnit,\r\n      });\r\n      setSelectedPlants([]);\r\n    }\r\n\r\n    // If the event comes from the multi-select dropdown\r\n    if (name === \"plants\") {\r\n      setSelectedPlants(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  }\r\n\r\n  const handleAddOrgAllowedValues = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) =>\r\n        template.templateName === orgAllowedForm.ALLOWABLE_ORG_TEMPLATES\r\n    );\r\n    const filteredPlants =\r\n      bussinessUnitLists?.find((plant) => plant.buName === orgAllowedForm.BUID)?.plants ||\r\n      [];\r\n\r\n    const resultPayload = {};\r\n\r\n    // Iterate over filteredPlants\r\n    filteredPlants.forEach((plant) => {\r\n      const plantName = plant.plantName;\r\n      resultPayload[plantName] = selectedPlants?.includes(plantName) ? \"Y\" : \"N\";\r\n    });\r\n    if (\r\n      !orgAllowedForm.ALLOWABLE_ORG_TEMPLATES ||\r\n      !orgAllowedForm.BUID ||\r\n      selectedPlants?.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        BUID: orgAllowedForm.BUID,\r\n        MappingType: \"orgallowedvalues\",\r\n        id: templateid[0].id + \"_\" + orgAllowedForm.BUID.trim(),\r\n        details: {\r\n          ALLOWABLE_ORG_TEMPLATES: orgAllowedForm.ALLOWABLE_ORG_TEMPLATES,\r\n          Has_MBOM: orgAllowedForm.Has_MBOM !== undefined ? orgAllowedForm.Has_MBOM : 'Y',\r\n          EBOM_Allowed: orgAllowedForm.EBOM_Allowed !== undefined ? orgAllowedForm.EBOM_Allowed : 'Y',\r\n          Optional: orgAllowedForm.Optional !== undefined ? orgAllowedForm.Optional : 'Y',\r\n          PO_Org_Exist_Check: orgAllowedForm.PO_Org_Exist_Check !== undefined ? orgAllowedForm.PO_Org_Exist_Check : 'Y',\r\n          On_MBOM: orgAllowedForm.On_MBOM !== undefined ? orgAllowedForm.On_MBOM : 'Y',\r\n          ALLOWABLE_ORG_TEMPLATES_ID: templateid[0].id,\r\n          Plants: resultPayload,\r\n        },\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              handlesnackBarClick(\"Org Allowed Values added successfully\", \"success\");\r\n            } else if (resp?.status === 'error') {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchDraftData();\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              handlesnackBarClick(\r\n                \"Org Allowed Values updated successfully\",\r\n                \"success\"\r\n              );\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setSelectedPlants([]);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedPlants([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditOrgAllowedValues = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n    for (const key in selectedRows[0]?.details?.Plants) {\r\n      if (selectedRows[0]?.details?.Plants[key] === \"Y\") {\r\n        selectedPlants.push(key);\r\n      }\r\n    }\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n\r\n  const prepareTableColumn = (orgallowedData) => {\r\n    let plantColumnsSet = new Set(); // Define it outside\r\n    if (orgallowedData && orgallowedData.length > 0) {\r\n      orgallowedData.forEach((dataItem) => {\r\n        const plants = dataItem.details?.Plants;\r\n        if (plants) {\r\n          const plantKeys = Object.keys(plants);\r\n          plantKeys.forEach((plant) => {\r\n            plantColumnsSet.add(plant);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const plantColumns = Array.from(plantColumnsSet).map((plant) => {\r\n      return {\r\n        name: plant,\r\n        header: plant,\r\n        defaultWidth: 100,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        ),\r\n      };\r\n    });\r\n    const columns = [\r\n      {\r\n        name: \"ALLOWABLE_ORG_TEMPLATES\",\r\n        defaultWidth: 250,\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.AllowableOrgTemplate}>Template Name</Tooltip>,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n\r\n      {\r\n        name: \"BUID\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.RDO}>Design Organization</Tooltip>,\r\n        defaultWidth: 150,\r\n      },\r\n      {\r\n        name: \"Has_MBOM\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.HasMBom}>Has MBOM</Tooltip>,\r\n        defaultWidth: 120,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"On_MBOM\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.OnMbom}>On MBOM</Tooltip>,\r\n        defaultWidth: 120,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"EBOM_Allowed\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.EBOM}>EBOM Allowed</Tooltip>,\r\n        defaultWidth: 100,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"Optional\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.Optional}>Optional</Tooltip>,\r\n        defaultWidth: 100,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"PO_Org_Exist_Check\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.PoCheck}>PO org Check</Tooltip>,\r\n        defaultWidth: 120,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      ...plantColumns,\r\n    ];\r\n\r\n    return columns;\r\n  }\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n\r\n  const sortedFilterOrgAllowedData = sortDataByKey(tableTempData, \"ALLOWABLE_ORG_TEMPLATES\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredOrgAllowedDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"orgallowedvalues\" });\r\n        if (filteredOrgAllowedDraftData.length > 0 && filteredOrgAllowedDraftData[0].MappingType === 'orgallowedvalues') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredOrgAllowedDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['TEMPLATE_MAPPING'] === obj2['id']) {\r\n                obj1.details.draftValue_ALLOWABLE_ORG_TEMPLATES = obj2.details.ALLOWABLE_ORG_TEMPLATES !== obj1.details.ALLOWABLE_ORG_TEMPLATES ? obj2.details.ALLOWABLE_ORG_TEMPLATES : null;\r\n                obj1.details.draftValue_Has_MBOM = obj2.details.Has_MBOM !== obj1.details.Has_MBOM ? obj2.details.Has_MBOM : null;\r\n                obj1.details.draftValue_On_MBOM = obj2.details.On_MBOM !== obj1.details.On_MBOM ? obj2.details.On_MBOM : null;\r\n                obj1.details.draftValue_EBOM_Allowed = obj2.details.EBOM_Allowed !== obj1.details.EBOM_Allowed ? obj2.details.EBOM_Allowed : null;\r\n                obj1.details.draftValue_Optional = obj2.details.Optional !== obj1.details.Optional ? obj2.details.Optional : null;\r\n                obj1.details.draftValue_PO_Org_Exist_Check = obj2.details.PO_Org_Exist_Check !== obj1.details.PO_Org_Exist_Check ? obj2.details.PO_Org_Exist_Check : null;\r\n                obj1.details.draft_Plants = {};\r\n                for (let key in obj1.details.Plants) {\r\n                  obj1.details.draft_Plants[key] = obj2.details.Plants[key] !== obj1.details.Plants[key] ? obj2.details.Plants[key] : null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setorgallowedData(finalTempMapList);\r\n        let data = finalTempMapList.map(item => {\r\n          item[\"ALLOWABLE_ORG_TEMPLATES\"] = item?.details?.draftValue_ALLOWABLE_ORG_TEMPLATES ? item?.details?.draftValue_ALLOWABLE_ORG_TEMPLATES : item?.details?.ALLOWABLE_ORG_TEMPLATES\r\n          item[\"Has_MBOM\"] = item?.details?.draftValue_Has_MBOM\r\n            ? `${item?.details?.draftValue_Has_MBOM} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.Has_MBOM}</span>`\r\n            : item?.details.Has_MBOM;\r\n          item[\"On_MBOM\"] = item?.details?.draftValue_On_MBOM ? `${item?.details?.draftValue_On_MBOM} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.On_MBOM}</span>`\r\n            : item?.details.On_MBOM;\r\n          item[\"EBOM_Allowed\"] = item?.details?.draftValue_EBOM_Allowed ? `${item?.details?.draftValue_EBOM_Allowed} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.EBOM_Allowed}</span>`\r\n            : item?.details.EBOM_Allowed;\r\n          item[\"Optional\"] = item?.details?.draftValue_Optional ? `${item?.details?.draftValue_Optional} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.Optional}</span>`\r\n            : item?.details.Optional;\r\n          item[\"PO_Org_Exist_Check\"] = item?.details?.draftValue_PO_Org_Exist_Check ? `${item?.details?.draftValue_PO_Org_Exist_Check} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.PO_Org_Exist_Check}</span>`\r\n            : item?.details.PO_Org_Exist_Check;\r\n\r\n          Object.keys(item?.details?.Plants).map(plant => {\r\n            item?.details?.draft_Plants ? item[plant] = item?.details?.draft_Plants[plant] ? `${item?.details?.draft_Plants[plant]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.Plants[plant]} <span>` : item?.details?.Plants[plant]\r\n              : item[plant] = item?.details?.Plants[plant]\r\n          }\r\n          )\r\n          return item\r\n        })\r\n        setUnSortTableTempData(finalTempMapList)\r\n        setTableTempData(data);\r\n        setIsLoading(false)\r\n      }, 500)\r\n    }\r\n    else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      if (result.data) {\r\n        let filterData = result.data.filter(element => element.BUID === BUID || element.BUID === 'Another Name');\r\n        setFilteredDraftTabledata(filterData);\r\n      } else {\r\n        setFilteredDraftTabledata([]);\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  // *********org allowed values dialog methods ends**********\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Org Allowed Templates\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    //setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item md={12} sm={12} xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditOrgAllowedValues}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                //onClick={handleDeleteOrgAllowedValues}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true);\r\n                }}\r\n                style={{ margin: \"0 10px 0 10px\" }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Org Allowed Templates\"}\r\n                MappingType={\"orgallowedvalues\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={prepareTableColumn(orgallowedData) || []}\r\n                  //dataSource={orgallowedData}\r\n                  dataSource={sortInfo === null ? unSortTableTempData : sortedFilterOrgAllowedData}\r\n                  rowHeight={null}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard >\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the OrgAllowedTemplates Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteTempMapping}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <OrgAllowedDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddOrgAllowedValues={handleAddOrgAllowedValues}\r\n        selectedPlants={selectedPlants}\r\n        isEdit={isEdit}\r\n        selectedBU={bussinessUnit}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import RDO Allowed Template Mappings\"}\r\n        MappingType={\"orgallowedvalues\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate}\r\n      />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default OrgAllowedValuesList;\r\n","import React from \"react\";\r\nimport OrgAllowedValuesList from \"./orgallowedList\";\r\nconst OrgAllowedValuesWrapper = () => {\r\n    return (\r\n        <OrgAllowedValuesList />\r\n    );\r\n};\r\nexport default OrgAllowedValuesWrapper;\r\n","import React from 'react';\r\nimport OrgAllowedValuesWrapper from \"./orgallowedWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst orgallowedroutes = [\r\n  {\r\n    path: \"/orgallowedList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <OrgAllowedValuesWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default orgallowedroutes;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport Constant from '../../../constant'\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { sortDataByKeyAllowableOrgTemplates } from \"app/utils/mcoUtils/commonUtils\";\r\nconst gridStyle = { minHeight: 248 }\r\nconst MVOtemplCompDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  orgAllowedTempList,\r\n  onSelectionChange,\r\n  selected,\r\n  filteredBUOptions,\r\n  setFilteredBUOptions,\r\n  formError,\r\n  RDO,\r\n  selectedRow,\r\n  handleStatusChange\r\n}) => {\r\n  const [tempData, setTempData] = useState([]);\r\n  const [selectedTemplateValues, setSelectedTemplateValues] = useState({});\r\n  sortDataByKeyAllowableOrgTemplates(tempData, \"ALLOWABLE_ORG_TEMPLATES\");\r\n\r\n  useEffect(() => {\r\n    if (orgAllowedForm?.BUID) {\r\n      let buoption = [orgAllowedForm?.BUID] || [];\r\n      setFilteredBUOptions([RDO])\r\n    } else {\r\n      setFilteredBUOptions([RDO])\r\n    }\r\n\r\n    if (orgAllowedTempList) {\r\n      const newTempList = orgAllowedTempList?.filter((fitem) => {\r\n        return fitem?.BUID === RDO;\r\n      })\r\n      if (selectedRow) {\r\n        newTempList.map(item => {\r\n          selectedRow?.details?.allowableOrgTemplates.map(item1 => {\r\n            if (item.details.ALLOWABLE_ORG_TEMPLATES === item1.ALLOWABLE_ORG_TEMPLATE) {\r\n              item.status = item1.status\r\n            }\r\n          })\r\n          return item;\r\n        })\r\n      }\r\n\r\n      let newdata = newTempList.map(item => {\r\n        const newitem = { ...item, ...item?.details }\r\n        return newitem\r\n      }) || [];\r\n\r\n      console.log(newdata, \"================table data\");\r\n\r\n      setTempData(newdata);\r\n    }\r\n  }, [orgAllowedTempList, orgAllowedForm]);\r\n\r\n  useEffect(() => {\r\n    console.log(formError, 'formError');\r\n  }, [])\r\n\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'number' },\r\n    {\r\n      name: \"ALLOWABLE_ORG_TEMPLATES\",\r\n      defaultWidth: 265,\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.AllowableOrgTemplate}>ALLOWABLE ORG TEMPLATES</Tooltip>,\r\n      render: ({ data }) => <div>{data?.details?.ALLOWABLE_ORG_TEMPLATES}</div>,\r\n    },\r\n    {\r\n      name: \"Has_MBOM\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.HasMBom}>Has MBOM</Tooltip>,\r\n      defaultWidth: 120,\r\n      render: ({ data }) => <div>{data?.details?.Has_MBOM}</div>,\r\n    },\r\n    {\r\n      name: \"EBOM_Allowed\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.EBOM}>EBOM</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.EBOM_Allowed}</div>,\r\n    },\r\n    {\r\n      name: \"Optional\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.Optional}>Optional</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.Optional}</div>,\r\n    },\r\n    {\r\n      name: \"PO_Org_Exist_Check\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.PoCheck}>PO Check</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.PO_Org_Exist_Check}</div>,\r\n    },\r\n    {\r\n      name: \"On_MBOM\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.OnMbom}>On MBOM</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.On_MBOM}</div>,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.status}>Status</Tooltip>,\r\n      defaultWidth: 200,\r\n      render: ({ data }) => {\r\n        return (\r\n          <div>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name={data?.details?.ALLOWABLE_ORG_TEMPLATES}\r\n                // defaultValue={data.status === undefined ? 'active' : data.status}\r\n                value={((selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES]) ? (selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES])?.trim() : \"active\")}\r\n                onChange={(e) => {\r\n                  const updatedStatus = {\r\n                    ...selectedTemplateValues,\r\n                    [e.target.name]: e.target.value,\r\n                  };\r\n                  setSelectedTemplateValues(updatedStatus);\r\n                  handleStatusChange(e);\r\n                }}\r\n              >\r\n                <FormControlLabel value=\"active\" control={<Radio />} label=\"Active\" />\r\n                <FormControlLabel value=\"disabled\" control={<Radio />} label=\"Disable\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>)\r\n      }\r\n    }\r\n  ];\r\n  const transformArray = (array) => {\r\n    let output = {};\r\n    array.forEach(item => {\r\n      output[item?.ALLOWABLE_ORG_TEMPLATE] = item?.status?.toLowerCase();\r\n    });\r\n    return output;\r\n  };\r\n  useEffect(() => {\r\n    if (selectedRow) {\r\n      const getSelTempVal = transformArray(selectedRow?.details?.allowableOrgTemplates);\r\n      setSelectedTemplateValues(getSelTempVal);\r\n    }\r\n  }, [selectedRow])\r\n  return (\r\n    <Dialog open={open}\r\n      fullWidth={true}\r\n      maxWidth='xl'\r\n    >\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit\r\n          ? \"Edit MVO Template Compatibility\"\r\n          : \"Add MVO Template Compatibility\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization:\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={RDO}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={true}\r\n              >\r\n                {filteredBUOptions?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {\r\n                (formError?.RDOError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.RDOError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Template MVO:\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                name=\"MVO_TEMPLATE_OPTION\"\r\n                fullWidth\r\n                value={orgAllowedForm.MVO_TEMPLATE_OPTION}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={isEdit}\r\n              >\r\n                {tempData?.map((option, index) => (\r\n                  <MenuItem key={index} value={option.details.ALLOWABLE_ORG_TEMPLATES}>\r\n                    {option.details.ALLOWABLE_ORG_TEMPLATES}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {\r\n                (formError?.templateError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.templateError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n              Org Allowed Templates:{\" \"}\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              {\r\n                (formError?.AllowableOrgTempError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.AllowableOrgTempError}</p>\r\n                </>) : (<></>)\r\n              }\r\n              <ReactDataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                selected={selected}\r\n                checkboxColumn={true}\r\n                onSelectionChange={onSelectionChange}\r\n                checkboxOnlyRowSelect={true}\r\n                style={{ ...gridStyle, height: '500px' }} // Add height here\r\n                columns={columns}\r\n                dataSource={tempData}\r\n                pagination\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MVOtemplCompDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport MVOtemplCompDialog from \"./mvoDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nimport { sortInsideRowData } from \"app/utils/utils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst MVOtemplateCompatibilityList = () => {\r\n  const {\r\n    refreshData,\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [mvotempcompData, setMVOtempCompData] = useState([]);\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [orgAllowedData, setorgAllowedData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selected, setSelected] = useState({});\r\n  const [formTemplateSelection, setFormTemplateSelection] = useState({});\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([]);\r\n  const [formError, setFormError] = useState({})\r\n  const [RDO, setRDO] = useState(\"\");\r\n  const [statusObject, setStatusObject] = useState({});\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"MVO_TEMPLATE_OPTION\",\r\n      header: <Tooltip title={Constant?.adminConstant?.mvoTemplateList?.tooltip?.TemplateOptionMVO}>Template MVO</Tooltip>,\r\n      defaultWidth: 250,\r\n      render: ({ data }) => <div>{data?.MVO_TEMPLATE_OPTION}</div>,\r\n    },\r\n    {\r\n      name: 'name',\r\n      header: <Tooltip title={Constant?.adminConstant?.mvoTemplateList?.tooltip?.AllowableOrgTemplate}>Org Allowed Templates - Status</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant?.adminConstant?.mvoTemplateList?.tooltip?.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n    },\r\n  ];\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...orgAllowedForm,\r\n      [name]: value,\r\n    };\r\n    setOrgAllowedForm(updatedForm);\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setRDO(value)\r\n      setFormError(prevState => {\r\n        const { RDOError, ...rest } = prevState;\r\n        return rest\r\n      });\r\n    }\r\n\r\n    if (name === \"MVO_TEMPLATE_OPTION\") {\r\n      setFormError(prevState => {\r\n        const { templateError, ...rest } = prevState;\r\n        return rest\r\n      });\r\n    }\r\n  };\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter((template) => template.templateName === orgAllowedForm.MVO_TEMPLATE_OPTION);\r\n    if (orgAllowedForm) {\r\n      if (RDO === undefined || RDO === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"RDOError\": \"Design Organization is required\",\r\n        }));\r\n      }\r\n      if (orgAllowedForm.MVO_TEMPLATE_OPTION === undefined || orgAllowedForm.MVO_TEMPLATE_OPTION === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"templateError\": \"Template Name is required\",\r\n        }));\r\n      }\r\n      let templatedata = [];\r\n      let new_formError = { ...formError };\r\n      delete new_formError[\"AllowableOrgTempError\"];\r\n\r\n      if (Object.keys(formTemplateSelection).length) {\r\n        templatedata = Object.values(formTemplateSelection).map((value) => value)\r\n        templatedata = templatedata.map(item => {\r\n          return {\r\n            ALLOWABLE_ORG_TEMPLATE: item.details.ALLOWABLE_ORG_TEMPLATES,\r\n            status: statusObject[item.details.ALLOWABLE_ORG_TEMPLATES] === undefined ? 'active' : statusObject[item.details.ALLOWABLE_ORG_TEMPLATES],\r\n            id: item.details.ALLOWABLE_ORG_TEMPLATES_ID,\r\n          }\r\n        })\r\n      } else {\r\n        new_formError[\"AllowableOrgTempError\"] = \"Please select at least one template\";\r\n      }\r\n\r\n      setFormError(new_formError);\r\n      if (Object.keys(new_formError).length) {\r\n        return;\r\n      } else {\r\n        const neworgallowedvalue = {\r\n          MappingType: \"mvoTemplateCompatibility\",\r\n          BUID: RDO,\r\n          details: {\r\n            MVO_TEMPLATE_OPTION: orgAllowedForm.MVO_TEMPLATE_OPTION,\r\n            MVO_TEMPLATE_OPTION_ID: templateid[0].id,\r\n            allowableOrgTemplates: templatedata,\r\n          },\r\n          id:\r\n            templateid[0].id +\r\n            \"_\" +\r\n            RDO.trim() +\r\n            \"_\" +\r\n            \"mvoTemplateCompatibility\",\r\n        };\r\n        if (isEdit === false) {\r\n          mvotempcompservice\r\n            .addnewTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp?.status === 'success') {\r\n                fetchData();\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                }, 200);\r\n                handlesnackBarClick(\"MVO template compatibility added successfully\", \"success\");\r\n              } else if (resp?.status === \"error\") {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        } else {\r\n          mvotempcompservice\r\n            .updateTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp.status === \"success\") {\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                  fetchDraftData();\r\n                  fetchData();\r\n                }, 200);\r\n                setIsEdit(false);\r\n                handlesnackBarClick(\"MVO template compatibility updated successfully\", \"success\");\r\n              } else if (resp?.status === \"error\") {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        }\r\n        handleorgAllowedDialogClose();\r\n      }\r\n    } else {\r\n      let orgtemperror = {}\r\n      if (Object.keys(formTemplateSelection).length === 0) {\r\n        orgtemperror = { \"AllowableOrgTempError\": \"Please select at least one template\" }\r\n      }\r\n      setFormError({\r\n        ...orgtemperror,\r\n        \"templateError\": \"Template Name is required\"\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm(\"\");\r\n    setOrgallowedaddDialog(true);\r\n    setRDO(bussinessUnit);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setFormTemplateSelection({});\r\n    setFormError({})\r\n    setIsEdit(false);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n    const thisVal = {\r\n      ...selectedDetails,\r\n      BUID,\r\n    }\r\n    setOrgAllowedForm(thisVal);\r\n    setRDO(BUID)\r\n    const selectedData = selectedRows[0]?.details?.allowableOrgTemplates.map((fitem) => {\r\n      const filterTableData = orgAllowedData?.filter(\r\n        (item) => (item.details.ALLOWABLE_ORG_TEMPLATES === fitem.ALLOWABLE_ORG_TEMPLATE &&\r\n          item.BUID === selectedRows[0].BUID)\r\n      );\r\n      return filterTableData;\r\n    }).flat();\r\n    let object = selectedData.reduce(\r\n      (obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n    setFormTemplateSelection(object);\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false);\r\n        handlesnackBarClick(result?.msg, result?.status);\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      // Filter the data based on MappingType\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"mvoTemplateCompatibility\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      setMVOtempCompData(finalTempMapList);\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"mvoTemplateCompatibility\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'mvoTemplateCompatibility') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_allowableOrgTemplates = obj2.details.allowableOrgTemplates;\r\n                const templateSet = new Set(obj2.details.allowableOrgTemplates.map(i => i.ALLOWABLE_ORG_TEMPLATE));\r\n                const missingFromArrObj1 = obj1.details.allowableOrgTemplates.filter(j => !templateSet.has(j.ALLOWABLE_ORG_TEMPLATE));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_allowableOrgTemplates.filter(item1 => \r\n                    !obj1.details.allowableOrgTemplates.some(item2 => \r\n                        item1.ALLOWABLE_ORG_TEMPLATE === item2.ALLOWABLE_ORG_TEMPLATE && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.allowableOrgTemplates,  ...obj1.details.newTemplateLists]\r\n                obj1.details.allowableOrgTemplates = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n      console.log('finalTempMapList', finalTempMapList);\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"MVO_TEMPLATE_OPTION\"] = item?.details?.MVO_TEMPLATE_OPTION\r\n        item['name'] = item?.details?.allowableOrgTemplates\r\n            .filter((plant, index, self) =>\r\n                index === self.findIndex(p => p.ALLOWABLE_ORG_TEMPLATE === plant.ALLOWABLE_ORG_TEMPLATE)\r\n            )\r\n            .map(plant => {\r\n                const deletedItems = item?.details?.deletedTemplateLists || [];\r\n    \r\n                const deletedText = deletedItems\r\n                    .map(draft_Plant => (\r\n                        plant.ALLOWABLE_ORG_TEMPLATE === draft_Plant.ALLOWABLE_ORG_TEMPLATE\r\n                            ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.ALLOWABLE_ORG_TEMPLATE}</span>`\r\n                            : ''\r\n                    ))\r\n                    .join(' '); // Join deleted items without any separator\r\n    \r\n                const statusText = plant.status ? plant.status.charAt(0).toUpperCase() + plant.status.slice(1) : '';\r\n    \r\n                return `<div>${plant.ALLOWABLE_ORG_TEMPLATE} - ${statusText} &nbsp;&nbsp; ${deletedText}</div>`;\r\n            })\r\n            .join(''); // Join all plant strings without a comma or any separator\r\n    \r\n        return item;\r\n    });\r\n      setUnSortTableTempData(finalTempMapList)\r\n      setTableTempData(data)\r\n      let buFilterData = mappingTemplatesInfo.filter((item) => {\r\n        return item.MappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\"\r\n      });\r\n\r\n      if (bussinessUnit) {\r\n        buFilterData = buFilterData?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        setorgAllowedData(buFilterData)\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n  const onFormSelectionChange = useCallback(({ selected }) => {\r\n    setFormTemplateSelection(selected);\r\n    setFormError(prevState => {\r\n      const { AllowableOrgTempError, ...rest } = prevState;\r\n      return rest\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  const handleStatusChange = (event) => {\r\n    const updatedStatus = {\r\n      ...statusObject,\r\n      [event.target.name]: event.target.value,\r\n    };\r\n    setStatusObject(updatedStatus);\r\n  }\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      height: \"auto !important\",\r\n      whiteSpace: \"normal\"\r\n    }\r\n  }\r\n\r\n  const [localStorageBusinessUnit, setLocalStorageBusinessUnit] = useState(bussinessUnit);\r\n  useEffect(() => {\r\n    setSelected({});\r\n    setSelectedRows([]);\r\n    updateBussinessUnit(bussinessUnit);\r\n    setRDO(bussinessUnit);\r\n    setSearchValue(\"\");\r\n    setSelectedRows([]);\r\n  }, [bussinessUnit]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n\r\n  const sortedByFirstColumnFilteredMVOTempData = sortDataByKey(tableTempData, 'MVO_TEMPLATE_OPTION');\r\n  const sortedFilteredMVOTempData = sortInsideRowData(sortedByFirstColumnFilteredMVOTempData);\r\n  const unSortRowSortTableTempData = sortInsideRowData(unSortTableTempData);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"MVO Template Compatibility\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  // onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setRDO(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                //onClick={handleDeleteMVOtempcomp}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"MVO Template Compatibility\"}\r\n                MappingType={\"mvoTemplateCompatibility\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog\r\n\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortRowSortTableTempData : sortedFilteredMVOTempData}\r\n                  rowHeight={\"auto\"}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  defaultLimit={100}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={() =>  gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the MVOTemplateCompatibility Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <MVOtemplCompDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        isEdit={isEdit}\r\n        onSelectionChange={onFormSelectionChange}\r\n        selected={formTemplateSelection}\r\n        orgAllowedTempList={orgAllowedData}\r\n        filteredBUOptions={filteredBUOptions}\r\n        setFilteredBUOptions={setFilteredBUOptions}\r\n        formError={formError}\r\n        RDO={RDO}\r\n        selectedRow={selectedRows[0]}\r\n        handleStatusChange={handleStatusChange}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import Template Compatibility Mappings\"}\r\n        MappingType={\"mvoTemplateCompatibility\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate}\r\n      />\r\n\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default MVOtemplateCompatibilityList;\r\n","import React from \"react\";\r\nimport MVOtemplateCompatibilityList from \"./mvotemplateList\";\r\nconst MVOtemplateCompatibilityWrapper = () => {\r\n    return (\r\n        <MVOtemplateCompatibilityList />\r\n    );\r\n};\r\n\r\nexport default MVOtemplateCompatibilityWrapper;\r\n","import React from 'react';\r\nimport MVOtemplateCompatibilityWrapper from \"./mvocompatibilityWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst mvocompatibilityRoutes = [\r\n  {\r\n    path: \"/mvotemplateList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <MVOtemplateCompatibilityWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default mvocompatibilityRoutes;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport Constant from '../../../constant'\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { sortDataByKeyAllowableOrgTemplates } from \"app/utils/mcoUtils/commonUtils\";\r\nconst gridStyle = { minHeight: 248 }\r\nconst PartTypeTemplateDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  orgAllowedTempList,\r\n  onSelectionChange,\r\n  selected,\r\n  filteredBUOptions,\r\n  setFilteredBUOptions,\r\n  formError,\r\n  RDO,\r\n  selectedRow,\r\n  handleStatusChange\r\n}) => {\r\n  const [tempData, setTempData] = useState([]);\r\n  const [selectedTemplateValues, setSelectedTemplateValues] = useState({});\r\n  sortDataByKeyAllowableOrgTemplates(tempData, \"ALLOWABLE_ORG_TEMPLATES\");\r\n  \r\n  useEffect(() => {\r\n    if (orgAllowedForm?.BUID) {\r\n      let buoption = [orgAllowedForm?.BUID] || [];\r\n      setFilteredBUOptions(buoption)\r\n    } else {\r\n      setFilteredBUOptions([RDO])\r\n    }\r\n\r\n    if (orgAllowedTempList) {\r\n      const newTempList = orgAllowedTempList?.filter((fitem) => {\r\n        return fitem?.BUID === RDO;\r\n      })\r\n      if (selectedRow) {\r\n        newTempList.map(item => {\r\n          selectedRow?.details?.allowableOrgTemplates.forEach(item1 => {\r\n            if (item.details.ALLOWABLE_ORG_TEMPLATES === item1.org_allowed_template) {\r\n              item.exclusive_use = item1.exclusive_use\r\n            }\r\n          })\r\n          return item;\r\n        })\r\n      }\r\n      setTempData(newTempList);\r\n    }\r\n  }, [orgAllowedTempList, orgAllowedForm]);\r\n\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'number' },\r\n    {\r\n      name: \"ALLOWABLE_ORG_TEMPLATES\",\r\n      defaultWidth: 280,\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.AllowableOrgTemplate}>ALLOWABLE ORG TEMPLATES</Tooltip>,\r\n      render: ({ data }) => <div>{data?.details?.ALLOWABLE_ORG_TEMPLATES}</div>,\r\n    },\r\n    {\r\n      name: \"Exclusive\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.status}>Exclusive Use</Tooltip>,\r\n      defaultWidth: 280,\r\n      render: ({ data }) => {\r\n        return (\r\n          <div>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name={data?.details?.ALLOWABLE_ORG_TEMPLATES}\r\n                // defaultValue={data.exclusive_use === undefined ? 'Yes' : data.exclusive_use}\r\n                value={((selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES]) ? selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES] : \"Yes\")}\r\n                onChange={(e) => {\r\n                  const updatedStatus = {\r\n                    ...selectedTemplateValues,\r\n                    [e.target.name]: e.target.value,\r\n                  };\r\n                  setSelectedTemplateValues(updatedStatus);\r\n                  handleStatusChange(e);\r\n                }}\r\n              >\r\n                <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  ];\r\n\r\n  const transformArray = (array) => {\r\n    let output = {};\r\n    array.forEach(item => {\r\n      output[item.org_allowed_template] = item.exclusive_use;\r\n    });\r\n    return output;\r\n  };\r\n  useEffect(() => {\r\n    if (selectedRow) {\r\n      const getSelTempVal = transformArray(selectedRow?.details?.allowableOrgTemplates);\r\n      setSelectedTemplateValues(getSelTempVal);\r\n    }\r\n  }, [selectedRow])\r\n  return (\r\n    <Dialog open={open}\r\n      fullWidth={true}\r\n      maxWidth='md'>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Part Type to Template \" : \"Add Part Type to Template\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization: {/* <span className={classes.spanRed}>*</span>:*/}\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={RDO}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={true}\r\n              >\r\n                {filteredBUOptions?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {\r\n                (formError?.RDOError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.RDOError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Enovia Part Type:\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <TextField\r\n                name=\"ENGG_ITEM_TYPE\"\r\n                value={orgAllowedForm.ENGG_ITEM_TYPE}\r\n                onChange={handleorgAllowedFormChange}\r\n                fullWidth\r\n                disabled={isEdit}\r\n                margin=\"normal\"\r\n              />\r\n              {\r\n                (formError?.templateError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.templateError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Org Allowed Templates:{\" \"}\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              {\r\n                (formError?.AllowableOrgTempError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.AllowableOrgTempError}</p>\r\n                </>) : (<></>)\r\n              }\r\n              {\r\n                (tempData?.length) ? (\r\n                  <ReactDataGrid\r\n                    idProperty=\"id\"\r\n                    showZebraRows={false}\r\n                    handle={ref => gridRef.current = ref ? ref.current : null}\r\n                    selected={selected}\r\n                    checkboxColumn={true}\r\n                    onSelectionChange={onSelectionChange}\r\n                    checkboxOnlyRowSelect={true}\r\n                    style={gridStyle}\r\n                    columns={columns}\r\n                    dataSource={tempData}\r\n                  />\r\n                ) : (null)\r\n              }\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PartTypeTemplateDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport PartTypeTemplateDialog from \"./parttypetemplateDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst PartTypeToTemplateList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const [orgAllowedData, setOrgAllowedData] = useState([]);\r\n  const [selectedPlants, setSelectedPlants] = useState([]);\r\n  const tempMapService = new TemplateMappingService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [selected, setSelected] = useState({});\r\n  const [formTemplateSelection, setFormTemplateSelection] = useState({});\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [formError, setFormError] = useState({})\r\n  const [RDO, setRDO] = useState(\"\");\r\n  const [statusObject, setStatusObject] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  //********Dialog code ********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    }\r\n    if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    }\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setSelectedPlants([]);\r\n    }\r\n\r\n    if (name === \"ENGG_ITEM_TYPE\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        BUID: \"\",\r\n      });\r\n      setFormError(prevState => {\r\n        const { templateError, ...rest } = prevState;\r\n        return rest\r\n      });\r\n      setSelectedPlants([]);\r\n    }\r\n    if (name === \"plants\") {\r\n      setSelectedPlants(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === newKey\r\n    );\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n    if (!newKey || !newValue) {\r\n      setKeyerror(\"Template and its status required\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      {\r\n        org_allowed_template: newKey,\r\n        exclusive_use: newValue,\r\n        id: templateid[0].id,\r\n      },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === orgAllowedForm.ENGG_ITEM_TYPE\r\n    )\r\n    if (orgAllowedForm) {\r\n      if (RDO === undefined || RDO === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"RDOError\": \"Design Organization is required\",\r\n        }));\r\n      }\r\n      if (orgAllowedForm.ENGG_ITEM_TYPE === undefined || orgAllowedForm.ENGG_ITEM_TYPE === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"templateError\": \"Template Name is required\",\r\n        }));\r\n      }\r\n      let templatedata = [];\r\n      let new_formError = { ...formError };\r\n      delete new_formError[\"AllowableOrgTempError\"];\r\n      if (Object.keys(formTemplateSelection).length) {\r\n        templatedata = Object.values(formTemplateSelection).map((value) => value)\r\n        templatedata = templatedata.map(item => {\r\n          return {\r\n            org_allowed_template: item.details.ALLOWABLE_ORG_TEMPLATES,\r\n            exclusive_use: statusObject[item.details.ALLOWABLE_ORG_TEMPLATES] === undefined ? 'Yes' : statusObject[item.details.ALLOWABLE_ORG_TEMPLATES],\r\n            id: item.details.ALLOWABLE_ORG_TEMPLATES_ID,\r\n          }\r\n        })\r\n      } else {\r\n        new_formError[\"AllowableOrgTempError\"] = \"Please select at least one template\";\r\n      }\r\n      setFormError(new_formError);\r\n      if (Object.keys(new_formError).length || Object.keys(formError).length) {\r\n        console.log(\"Resultant Payload:\", orgAllowedForm);\r\n        return;\r\n      } else {\r\n        const neworgallowedvalue = {\r\n          MappingType: \"parttypetotemplate\",\r\n          BUID: RDO,\r\n          details: {\r\n            ENGG_ITEM_TYPE: orgAllowedForm.ENGG_ITEM_TYPE,\r\n            ENOVIA_PART_TYPE_ID: templateid[0]?.id,\r\n            allowableOrgTemplates: templatedata,\r\n          },\r\n\r\n          id:\r\n            orgAllowedForm.ENGG_ITEM_TYPE +\r\n            \"_\" +\r\n            RDO.trim() +\r\n            \"_\" +\r\n            \"parttypetotemplate\",\r\n        };\r\n        if (isEdit === false) {\r\n          mvotempcompservice\r\n            .addnewTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp?.status === 'success') {\r\n                fetchData();\r\n                setSelected({})\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                }, 200);\r\n                handlesnackBarClick(\"Parttype to Template added successfully\", \"success\");\r\n              } else if (resp?.status === 'error') {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        } else {\r\n          mvotempcompservice\r\n            .updateTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp.status === \"success\") {\r\n                fetchDraftData();\r\n                fetchData();\r\n                setSelected({})\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                }, 200);\r\n                setIsEdit(false);\r\n                handlesnackBarClick(\r\n                  \"MVO template compatibility updated successfully\",\r\n                  \"success\"\r\n                );\r\n              } else if (resp?.status === \"error\") {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        }\r\n        handleorgAllowedDialogClose();\r\n      }\r\n    } else {\r\n      let orgtemperror = {}\r\n      if (Object.keys(formTemplateSelection).length === 0) {\r\n        orgtemperror = { \"AllowableOrgTempError\": \"Please select at least one template\" }\r\n      }\r\n      setFormError({\r\n        ...orgtemperror,\r\n        \"templateError\": \"Template Name is required\"\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedPlants([]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n    setValuesInputList([]);\r\n    setOrgallowedaddDialog(true);\r\n    setRDO(bussinessUnit);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedPlants([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setFormTemplateSelection({});\r\n    setFormError({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n  const handleEditPartTypeTotemplate = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n    setRDO(BUID)\r\n    const selectedData = selectedRows[0]?.details?.allowableOrgTemplates.map((fitem) => {\r\n      const filterTableData = orgAllowedData?.filter(\r\n        (item) => item.details.ALLOWABLE_ORG_TEMPLATES === fitem.org_allowed_template\r\n      );\r\n      return filterTableData;\r\n    }).flat();\r\n    let object = selectedData.reduce(\r\n      (obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n    setFormTemplateSelection(object);\r\n    setValuesInputList(selectedRows[0]?.details?.allowableOrgTemplates);\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleDeletePartTypeToTemplate = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n\r\n    handlesnackBarClick(\"Parttype to Template deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n  const sortedFilterTempData = sortDataByKey(tableTempData, \"ENGG_ITEM_TYPE\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"parttypetotemplate\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"parttypetotemplate\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'parttypetotemplate') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_allowableOrgTemplates = obj2.details.allowableOrgTemplates;\r\n                const templateSet = new Set(obj2.details.allowableOrgTemplates.map(i => i.org_allowed_template));\r\n                const missingFromArrObj1 = obj1.details.allowableOrgTemplates.filter(j => !templateSet.has(j.org_allowed_template));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_allowableOrgTemplates.filter(item1 => \r\n                    !obj1.details.allowableOrgTemplates.some(item2 => \r\n                        item1.org_allowed_template === item2.org_allowed_template && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.allowableOrgTemplates,  ...obj1.details.newTemplateLists]\r\n                obj1.details.allowableOrgTemplates = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"ENGG_ITEM_TYPE\"] = item?.details?.ENGG_ITEM_TYPE\r\n        item['org_allowed_template'] = item?.details?.allowableOrgTemplates\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.org_allowed_template === plant.org_allowed_template)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n\r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.org_allowed_template === draft_Plant.org_allowed_template\r\n                  ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.org_allowed_template}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); // Join deleted items without any separator\r\n\r\n            return `<div>${plant.org_allowed_template} - ${plant.exclusive_use.charAt(0).toUpperCase() + plant.exclusive_use.slice(1)} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); // Join all plant strings without a comma or any separator\r\n        return item\r\n      })\r\n      setTableTempData(data)\r\n      setUnSortTableTempData(finalTempMapList)\r\n      let buFilterData = mappingTemplatesInfo.filter((item) => {\r\n        return item.MappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\"\r\n      });\r\n      if (bussinessUnit) {\r\n        buFilterData = buFilterData?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        setOrgAllowedData(buFilterData)\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n  // *********org allowed values dialog methods ends**********\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n\r\n    {\r\n      name: \"ENGG_ITEM_TYPE\",\r\n      header: <Tooltip title={Constant.adminConstant.parttypetemplateList.tooltip.TemplateOptionsMVO}>Enovia Part Type</Tooltip>,\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>\r\n        {data?.ENGG_ITEM_TYPE}\r\n      </div>,\r\n    },\r\n    {\r\n      name: \"org_allowed_template\",\r\n      header: <Tooltip title={Constant.adminConstant.parttypetemplateList.tooltip.allowableOrgTemplatesExclusive}>Org Allowed Templates - Exclusive use</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      // render: ({ data }) =>\r\n      //   data?.details?.allowableOrgTemplates.map((template, index) => (\r\n      //     <div key={index}>\r\n      //       {template.org_allowed_template} - {template.exclusive_use}\r\n      //     </div>\r\n      //   )),\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.parttypetemplateList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n\r\n      defaultWidth: 50,\r\n    },\r\n  ];\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  const onFormSelectionChange = useCallback(({ selected }) => {\r\n    setFormTemplateSelection(selected);\r\n    setFormError(prevState => {\r\n      const { AllowableOrgTempError, ...rest } = prevState;\r\n      return rest\r\n    });\r\n  }, []);\r\n  const handleStatusChange = (event) => {\r\n    const updatedStatus = {\r\n      ...statusObject,\r\n      [event.target.name]: event.target.value,\r\n    };\r\n    setStatusObject(updatedStatus);\r\n  }\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      height: \"auto !important\",\r\n      whiteSpace: \"normal\"\r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Part Type to Template\" }]} />\r\n      </Box>\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditPartTypeTotemplate}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                //onClick={handleDeletePartTypeToTemplate}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Part Type To Template\"}\r\n                MappingType={\"parttypetotemplate\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  rowStyle={rowStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortTableTempData : sortedFilterTempData}\r\n                  rowHeight={\"auto\"}\r\n                  defaultLimit={100}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the PartTypeToTemplate Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeletePartTypeToTemplate}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <PartTypeTemplateDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        selectedPlants={selectedPlants}\r\n        isEdit={isEdit}\r\n        newKey={newKey}\r\n        newValue={newValue}\r\n        handleAddRow={handleAddRow}\r\n        handleDeleteRow={handleDeleteRow}\r\n        keyerror={keyerror}\r\n        valuesInputList={valuesInputList}\r\n        onSelectionChange={onFormSelectionChange}\r\n        selected={formTemplateSelection}\r\n        orgAllowedTempList={orgAllowedData}\r\n        filteredBUOptions={filteredBUOptions}\r\n        setFilteredBUOptions={setFilteredBUOptions}\r\n        formError={formError}\r\n        RDO={RDO}\r\n        selectedRow={selectedRows[0]}\r\n        handleStatusChange={handleStatusChange}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import Parttype To Template Mappings\"}\r\n        MappingType={\"parttypetotemplate\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default PartTypeToTemplateList;\r\n","import React from \"react\";\r\nimport PartTypeToTemplateList from \"./parttypeToTemplateList\";\r\nconst PartTypeToTemplateWrapper = () => {\r\n    return (\r\n        <PartTypeToTemplateList />\r\n    );\r\n};\r\nexport default PartTypeToTemplateWrapper;\r\n","import React from 'react';\r\nimport PartTypeToTemplateWrapper from \"./parttypetemplateWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst parttypetotemplateroutes = [\r\n  {\r\n    path: \"/parttypeToTemplateList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <PartTypeToTemplateWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\nexport default parttypetotemplateroutes;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button\r\n} from \"@mui/material\";\r\nconst MVOallowedchangesDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  mvotemplatesTo,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  templatesInfo,\r\n  selectedBU\r\n}) => {\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      console.log(tempData, 'tempData tempData tempData')\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo, orgAllowedForm.BUID]);\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit MVO Allowed Changes \" : \"Add MVO Allowed Changes\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n        <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Design Organization <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"DataType-select\"\r\n              name=\"BUID\"\r\n              fullWidth\r\n              value={selectedBU}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled\r\n            >\r\n              {filteredBUOptions?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              MVO Template - From <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              name=\"MVO_TEMPLATE_FROM\"\r\n              fullWidth\r\n              value={orgAllowedForm.MVO_TEMPLATE_FROM}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled={isEdit}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              MVO Template - To <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              multiple\r\n              name=\"MVO_TEMPLATE_TO\"\r\n              value={mvotemplatesTo}\r\n              onChange={handleorgAllowedFormChange}\r\n              renderValue={(selected) => selected?.join(\", \")}\r\n              MenuProps={{\r\n                sx: {\r\n                  \"&& .Mui-selected\": {\r\n                    backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MVOallowedchangesDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport MVOallowedchangesDialog from \"./mvoallowedchangesDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nimport { sortInsideRowData } from \"app/utils/utils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst MVOallowedchangesList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n\r\n  const [mvotemplatesTo, setMVOtemplatesTo] = useState([]);\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    })\r\n  };\r\n\r\n  //********Dialog code ********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    }\r\n    if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    }\r\n\r\n    if (name === \"BUID\") {\r\n      setMVOtemplatesTo([]);\r\n    }\r\n\r\n    if (name === \"MVO_TEMPLATE_FROM\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        BUID: \"\",\r\n      });\r\n      setMVOtemplatesTo([]);\r\n    }\r\n\r\n    // If the event comes from the multi-select dropdown\r\n    if (name === \"MVO_TEMPLATE_TO\") {\r\n      setMVOtemplatesTo(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === newKey\r\n    );\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n    if (!newKey || !newValue) {\r\n      setKeyerror(\"Template and its status required\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      {\r\n        ALLOWABLE_ORG_TEMPLATE: newKey,\r\n        status: newValue,\r\n        id: templateid[0]?.id,\r\n      },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === orgAllowedForm.MVO_TEMPLATE_FROM\r\n    );\r\n    let convertedMVO_TEMPLATES_TO = [];\r\n    // Iterate over filteredPlants\r\n    convertedMVO_TEMPLATES_TO = mvotemplatesTo?.map((item) => {\r\n      const template = templatesInfo.find((t) => t.templateName === item);\r\n      return {\r\n        id: template ? template.id : null,\r\n        MVO_TEMPLATE_TO: item,\r\n      };\r\n    });\r\n\r\n    if (\r\n      !orgAllowedForm.MVO_TEMPLATE_FROM ||\r\n      !orgAllowedForm.BUID ||\r\n      mvotemplatesTo?.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        MappingType: \"mvoallowedchanges\",\r\n        BUID: orgAllowedForm.BUID,\r\n        details: {\r\n          MVO_TEMPLATE_FROM: orgAllowedForm.MVO_TEMPLATE_FROM,\r\n          MVO_TEMPLATE_OPTION_ID: templateid[0]?.id,\r\n          MVO_TEMPLATES_TO: convertedMVO_TEMPLATES_TO,\r\n\r\n        },\r\n\r\n        id:\r\n          templateid[0]?.id +\r\n          \"_\" +\r\n          orgAllowedForm.BUID.trim() +\r\n          \"_\" +\r\n          \"mvoallowedchanges\",\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              handlesnackBarClick(\"MVO allowed changes added successfully\", \"success\");\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchDraftData();\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              handlesnackBarClick(\r\n                \"MVO allowed changes updated successfully\",\r\n                \"success\"\r\n              );\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, resp.status);\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setMVOtemplatesTo([]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n    setValuesInputList([]);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setMVOtemplatesTo([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n    for (const key in selectedRows[0]?.details?.MVO_TEMPLATES_TO) {\r\n      const template = selectedRows[0]?.details?.MVO_TEMPLATES_TO[key];\r\n      mvotemplatesTo.push(template?.MVO_TEMPLATE_TO);\r\n    }\r\n\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n\r\n    handlesnackBarClick(\"MVO allowed changes  deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n  const sortedFilterTempData = sortDataByKey(tableTempData, \"MVO_TEMPLATE_FROM\");\r\n  const unSortRowSortTableTempData = sortInsideRowData(unSortTableTempData);\r\n  const rowSortTableTempData = sortInsideRowData(sortedFilterTempData);\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      // Filter the data based on MappingType\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"mvoallowedchanges\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"mvoallowedchanges\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'mvoallowedchanges') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_MVO_TEMPLATES_TO = obj2.details.MVO_TEMPLATES_TO;\r\n                const templateSet = new Set(obj2.details.MVO_TEMPLATES_TO.map(i => i.MVO_TEMPLATE_TO));\r\n                const missingFromArrObj1 = obj1.details.MVO_TEMPLATES_TO.filter(j => !templateSet.has(j.MVO_TEMPLATE_TO));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_MVO_TEMPLATES_TO.filter(item1 => \r\n                    !obj1.details.MVO_TEMPLATES_TO.some(item2 => \r\n                        item1.MVO_TEMPLATE_TO === item2.MVO_TEMPLATE_TO && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.MVO_TEMPLATES_TO,  ...obj1.details.newTemplateLists]\r\n                obj1.details.MVO_TEMPLATES_TO = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      let unsortedData = [...finalTempMapList].map(item => {\r\n        item[\"MVO_TEMPLATE_FROM\"] = item?.details?.MVO_TEMPLATE_FROM;\r\n        item['MVO_TEMPLATE_TO'] = item?.details?.MVO_TEMPLATES_TO\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.MVO_TEMPLATE_TO === plant.MVO_TEMPLATE_TO)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n      \r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.MVO_TEMPLATE_TO === draft_Plant.MVO_TEMPLATE_TO\r\n                  ? `<span class=\"deleted-text\">${draft_Plant.MVO_TEMPLATE_TO}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); \r\n      \r\n            return `<div>${plant.MVO_TEMPLATE_TO} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); \r\n        return item;\r\n      });\r\n\r\n      let data = finalTempMapList\r\n      .sort((a, b) => a.details.MVO_TEMPLATE_FROM.localeCompare(b.details.MVO_TEMPLATE_FROM))\r\n      .map(item => {\r\n        item[\"MVO_TEMPLATE_FROM\"] = item?.details?.MVO_TEMPLATE_FROM\r\n        item['MVO_TEMPLATE_TO'] = item?.details?.MVO_TEMPLATES_TO\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.MVO_TEMPLATE_TO === plant.MVO_TEMPLATE_TO)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n\r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.MVO_TEMPLATE_TO === draft_Plant.MVO_TEMPLATE_TO\r\n                  ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.MVO_TEMPLATE_TO}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); // Join deleted items without any separator\r\n\r\n            return `<div>${plant.MVO_TEMPLATE_TO} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); // Join all plant strings without a comma or any separator\r\n        return item\r\n      })\r\n      setTimeout(() => {\r\n        setUnSortTableTempData(unsortedData); // Set the unsorted data\r\n        setTableTempData(data)\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n  // *********org allowed values dialog methods ends**********\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n    {\r\n      name: \"MVO_TEMPLATE_FROM\",\r\n      header: <Tooltip title={Constant.adminConstant.mvoallowedchangesList.tooltip.mvoTemplatesFrom}>MVO Template - From</Tooltip>,\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.MVO_TEMPLATE_FROM}</div>,\r\n    },\r\n    {\r\n      name: \"MVO_TEMPLATE_TO\",\r\n      header: <Tooltip title={Constant.adminConstant.mvoallowedchangesList.tooltip.mvoTemplatesTo}>MVO Template - To</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.mvoallowedchangesList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n\r\n      defaultWidth: 50,\r\n    }\r\n  ];\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      height: \"auto !important\",\r\n      whiteSpace: \"normal\"\r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"MVO Allowed Changes \" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"MVO Allowed Changes\"}\r\n                MappingType={\"mvoallowedchanges\"}\r\n                filterTemplateData={selectedRows} \r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog\r\n                />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortRowSortTableTempData : rowSortTableTempData}\r\n                  rowHeight={\"auto\"}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the MVOAllowedChanges Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <MVOallowedchangesDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        mvotemplatesTo={mvotemplatesTo}\r\n        isEdit={isEdit}\r\n        newKey={newKey}\r\n        newValue={newValue}\r\n        handleAddRow={handleAddRow}\r\n        handleDeleteRow={handleDeleteRow}\r\n        keyerror={keyerror}\r\n        valuesInputList={valuesInputList}\r\n        templatesInfo={templatesInfo}\r\n        selectedBU={bussinessUnit}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import MVO Allowed Changes Mappings\"}\r\n        MappingType={\"mvoallowedchanges\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default MVOallowedchangesList;\r\n","import React from \"react\";\r\nimport MVOallowedchangesList from \"./mvoallowedchangesList\";\r\nconst MVOallowedChangesWrapper = () => {\r\n    return (\r\n        <MVOallowedchangesList />\r\n    );\r\n};\r\nexport default MVOallowedChangesWrapper;\r\n","import React from 'react';\r\nimport MVOallowedChangesWrapper from \"./mvoallowedchangeWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst mvoallowedchangesroutes = [\r\n  {\r\n    path: \"/mvoallowedchangesList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <MVOallowedChangesWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default mvoallowedchangesroutes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\nconst SetCompTempDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  modifytempdata,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  templatesInfo,\r\n  selectedBU\r\n}) => {\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo, orgAllowedForm.BUID]);\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Set Compatible Templates\" : \"Add Set Compatible Templates\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Template For Org Existing <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              name=\"TEMPLATE_ORG_EXISTING\"\r\n              fullWidth\r\n              value={orgAllowedForm.TEMPLATE_ORG_EXISTING}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled={isEdit}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Design Organization <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"DataType-select\"\r\n              name=\"BUID\"\r\n              fullWidth\r\n              value={selectedBU}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled\r\n            >\r\n              {filteredBUOptions?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Template For Org Modifying <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              multiple\r\n              name=\"TEMPLATE_ORG_MODIFYING\"\r\n              value={modifytempdata}\r\n              onChange={handleorgAllowedFormChange}\r\n              renderValue={(selected) => selected?.join(\", \")}\r\n              MenuProps={{\r\n                sx: {\r\n                  \"&& .Mui-selected\": {\r\n                    backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SetCompTempDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\n\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport SetCompTempDialog from \"./setcomptempDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst SetCompTempList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const [comptempData, setComptempData] = useState([]);\r\n  const [modifytempdata, setModifytempData] = useState([]);\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n  const handleSearch = () => {\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  //********Dialog code ********\r\n  //console.log(mvoallowedchangesData, \"mvo dta\");\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    }\r\n    if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    }\r\n\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setComptempData([]);\r\n    }\r\n\r\n    if (name === \"TEMPLATE_ORG_EXISTING\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        BUID: \"\",\r\n      });\r\n      setComptempData([]);\r\n    }\r\n\r\n    // If the event comes from the multi-select dropdown\r\n    if (name === \"TEMPLATE_ORG_MODIFYING\") {\r\n      setModifytempData(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === newKey\r\n    );\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n    if (!newKey || !newValue) {\r\n      setKeyerror(\"Template and its status required\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      {\r\n        ALLOWABLE_ORG_TEMPLATE: newKey,\r\n        status: newValue,\r\n        id: templateid[0]?.id,\r\n      },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) =>\r\n        template.templateName === orgAllowedForm.TEMPLATE_ORG_EXISTING\r\n    );\r\n    let convertedTEMPLATE_ORG_MODIFYING = [];\r\n    // Iterate over filteredPlants\r\n    convertedTEMPLATE_ORG_MODIFYING = modifytempdata?.map((item) => {\r\n      const template = templatesInfo.find((t) => t.templateName === item);\r\n      return {\r\n        id: template ? template.id : null,\r\n        TEMPLATE_ORG_MODIFYING: item,\r\n      };\r\n    });\r\n\r\n    if (\r\n      !orgAllowedForm.TEMPLATE_ORG_EXISTING ||\r\n      !orgAllowedForm.BUID ||\r\n      modifytempdata?.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        MappingType: \"setcompatibletemplates\",\r\n        BUID: orgAllowedForm.BUID,\r\n        details: {\r\n          TEMPLATE_ORG_EXISTING: orgAllowedForm.TEMPLATE_ORG_EXISTING,\r\n          MVO_TEMPLATE_OPTION_ID: templateid[0]?.id,\r\n          TEMPLATE_ORG_MODIFYING: convertedTEMPLATE_ORG_MODIFYING,\r\n        },\r\n\r\n        id:\r\n          templateid[0]?.id +\r\n          \"_\" +\r\n          orgAllowedForm.BUID.trim() +\r\n          \"_\" +\r\n          \"setcompatibletemplates\",\r\n      };\r\n\r\n\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setSelected({})\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n\r\n              handlesnackBarClick(\"Set compatible template mapping added successfully\", \"success\");\r\n\r\n            } else if (resp?.status === 'error') {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              fetchDraftData();\r\n              fetchData();\r\n              setSelected({})\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n\r\n              }, 200);\r\n              setIsEdit(false);\r\n              handlesnackBarClick(\r\n                \"Set compatible template mapping updated successfully\",\r\n                \"success\"\r\n              );\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setComptempData([]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n    setValuesInputList([]);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setComptempData([]);\r\n    setModifytempData([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n    for (const key in selectedRows[0]?.details?.TEMPLATE_ORG_MODIFYING) {\r\n      const template = selectedRows[0]?.details?.TEMPLATE_ORG_MODIFYING[key];\r\n      modifytempdata.push(template?.TEMPLATE_ORG_MODIFYING);\r\n    }\r\n\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n\r\n    handlesnackBarClick(\r\n      \"Set compatible template mapping  deleted Successfully\",\r\n      \"success\"\r\n    );\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n\r\n  const sortedFilterSetCompTempData = sortDataByKey(tableTempData, \"TEMPLATE_ORG_EXISTING\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"setcompatibletemplates\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"setcompatibletemplates\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'setcompatibletemplates') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_TEMPLATE_ORG_MODIFYING = obj2.details.TEMPLATE_ORG_MODIFYING;\r\n                const templateSet = new Set(obj2.details.TEMPLATE_ORG_MODIFYING.map(i => i.TEMPLATE_ORG_MODIFYING));\r\n                const missingFromArrObj1 = obj1.details.TEMPLATE_ORG_MODIFYING.filter(j => !templateSet.has(j.TEMPLATE_ORG_MODIFYING));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_TEMPLATE_ORG_MODIFYING.filter(item1 => \r\n                    !obj1.details.TEMPLATE_ORG_MODIFYING.some(item2 => \r\n                        item1.TEMPLATE_ORG_MODIFYING === item2.TEMPLATE_ORG_MODIFYING && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.TEMPLATE_ORG_MODIFYING,  ...obj1.details.newTemplateLists]\r\n                obj1.details.TEMPLATE_ORG_MODIFYING = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"TEMPLATE_ORG_EXISTING\"] = item?.details?.TEMPLATE_ORG_EXISTING\r\n        item['TEMPLATE_ORG_MODIFYING'] = item?.details?.TEMPLATE_ORG_MODIFYING\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.TEMPLATE_ORG_MODIFYING === plant.TEMPLATE_ORG_MODIFYING)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n\r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.TEMPLATE_ORG_MODIFYING === draft_Plant.TEMPLATE_ORG_MODIFYING\r\n                  ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.TEMPLATE_ORG_MODIFYING}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); // Join deleted items without any separator\r\n\r\n            return `<div>${plant.TEMPLATE_ORG_MODIFYING} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); // Join all plant strings without a comma or any separator\r\n        return item\r\n      })\r\n      setTimeout(() => {\r\n        setUnSortTableTempData(finalTempMapList)\r\n        setTableTempData(data)\r\n        setIsLoading(false)\r\n      }, 500);\r\n\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n  // *********org allowed values dialog methods ends**********\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n\r\n    {\r\n      name: \"TEMPLATE_ORG_EXISTING\",\r\n      header: <Tooltip title={Constant.adminConstant.setComptempList.tooltip.TemplateForOrgExist}>Template for Org(s) Existing</Tooltip>,\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.TEMPLATE_ORG_EXISTING}</div>,\r\n    },\r\n    {\r\n      name: \"TEMPLATE_ORG_MODIFYING\",\r\n      header: <Tooltip title={Constant.adminConstant.setComptempList.tooltip.TemplateForOrgModify}>Template for Org Modifying</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.setComptempList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n    },\r\n  ];\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n        height: \"auto !important\",\r\n        whiteSpace: \"normal\"\r\n      \r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Set Compatible Templates\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                // onClick={handleDeleteMVOtempcomp}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Set Compatible Templates\"}\r\n                MappingType={\"setcompatibletemplates\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortTableTempData : sortedFilterSetCompTempData}\r\n                  rowHeight={\"auto\"}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the SetCompatibleTemplate Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <SetCompTempDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        comptempData={comptempData}\r\n        modifytempdata={modifytempdata}\r\n        isEdit={isEdit}\r\n        newKey={newKey}\r\n        newValue={newValue}\r\n        handleAddRow={handleAddRow}\r\n        handleDeleteRow={handleDeleteRow}\r\n        keyerror={keyerror}\r\n        valuesInputList={valuesInputList}\r\n        templatesInfo={templatesInfo}\r\n        selectedBU={bussinessUnit}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import Set Compatible Templates Mappings\"}\r\n        MappingType={\"setcompatibletemplates\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default SetCompTempList;\r\n","import React from \"react\";\r\nimport SetCompTempList from \"./setcomptempList\";\r\nconst SetCompTempWrapper = () => {\r\n    return (\r\n        <SetCompTempList />\r\n    );\r\n};\r\nexport default SetCompTempWrapper;\r\n","import React from 'react';\r\nimport SetCompTempWrapper from \"./SetCompTempWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst setcomptemproutes = [\r\n  {\r\n    path: \"/setcomptempList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <SetCompTempWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\nexport default setcomptemproutes;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport Constant from '../../../constant'\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { unionBy } from 'lodash';\r\nconst gridStyle = { minHeight: 248 }\r\n\r\nconst plantGroupOptions = [\r\n  { name: \"MASTER ORG\", value: \"MASTER ORG\" },\r\n  { name: \"Boulder OU\", value: \"Boulder OU\" },\r\n  { name: \"Nanjing OU\", value: \"Nanjing OU\" },\r\n  { name: \"EDE OU\", value: \"EDE OU\" },\r\n  { name: \"Cluj OU\", value: \"Cluj OU\" },\r\n  { name: \"Others\", value: \"Others\" }\r\n]\r\nconst bomStatusOptions = [\r\n  { name: \"BOM\", value: \"BOM\" },\r\n  { name: \"NO BOM\", value: \"NO BOM\" },\r\n];\r\nconst rduOptions = [\r\n  { name: \"YES\", value: \"YES\" },\r\n  { name: \"NO\", value: \"NO\" },\r\n];\r\nconst entitydropdown = [{ name: \"PlantGroup\", value: \"PlantGroup\" },\r\n{ name: \"BOM or NO BOM\", value: \"BOM or NO BOM\" },\r\n{ name: \"none or PO Org\", value: \"none or PO Org\" },\r\n{ name: \"RDO OU Org Set\", value: \"RDO OU Org Set\" }]\r\nconst BUPlantDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddBuPlant,\r\n  isEdit,\r\n  bussinessUnitLists,\r\n  bussinessUnit,\r\n  setPlantValueList,\r\n  plantValueList,\r\n  setDisplayOrder\r\n}) => {\r\n  const [filteredPlants, setFilteredPlants] = useState([]);\r\n  const [dropdownOptions, setDropdownOptions] = useState([]);\r\n  const [entityOption, setEntityOption] = useState([]);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    const Plants = (\r\n      bussinessUnitLists?.find((plant) => plant.buName === bussinessUnit)?.plants || []\r\n    ).concat({ plantName: \"None\", id: \"None\" });\r\n    let plist = Plants.map((item) => {\r\n      let res = {\r\n        \"name\": item.plantName,\r\n        \"value\": item.plantName\r\n      }\r\n      return res;\r\n    })\r\n    setFilteredPlants(plist)\r\n    let filteredPlantsLeftSide = bussinessUnitLists?.find((plant) => plant.buName === bussinessUnit)?.plants || [];\r\n    filteredPlantsLeftSide.map((plant, index) => {\r\n      plant.value = ''\r\n      plant.id = index\r\n      return Object.assign({}, plant)\r\n    })\r\n    filteredPlantsLeftSide = unionBy(plantValueList, filteredPlantsLeftSide, 'plantName');\r\n    setDataSource(filteredPlantsLeftSide)\r\n    setPlantValueList(filteredPlantsLeftSide)\r\n\r\n    console.log(plantValueList, 'plantValueList plantValueList')\r\n    setEntityOption(entitydropdown)\r\n    if (isEdit) {\r\n      console.log(orgAllowedForm.Entity, 'orgAllowedForm.Entity')\r\n      switch (orgAllowedForm.Entity) {\r\n        case \"PlantGroup\":\r\n          setDropdownOptions(plantGroupOptions)\r\n          setDisplayOrder(1)\r\n          break;\r\n        case \"BOM or NO BOM\":\r\n          setDropdownOptions(bomStatusOptions)\r\n          setDisplayOrder(2)\r\n          break;\r\n        case \"none or PO Org\":\r\n          setDropdownOptions(filteredPlants)\r\n          setDisplayOrder(3)\r\n          break;\r\n        case \"RDO OU Org Set\":\r\n          setDropdownOptions(rduOptions)\r\n          setDisplayOrder(4)\r\n          break;\r\n        default:\r\n          setDropdownOptions([])\r\n          break;\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [bussinessUnit, bussinessUnitLists, orgAllowedForm.Entity, isEdit]);\r\n  const plantColumn = {\r\n    name: 'value',\r\n    header: 'Value',\r\n    defaultFlex: 1, minWidth: 100,\r\n    rendersInlineEditor: true,\r\n    editable: true,\r\n    sortable: false,\r\n    render: ({ value }, { cellProps }) => {\r\n      let v = cellProps.editProps.inEdit\r\n        ? cellProps.editProps.value\r\n        : value;\r\n      return (\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          size=\"small\"\r\n          autoFocus={cellProps.inEdit}\r\n          name={cellProps.data.plantName}\r\n          value={v}\r\n          onBlur={e => {\r\n            cellProps.editProps.onComplete(e);\r\n          }}\r\n          onChange={handleChanges}\r\n          onFocus={() => cellProps.editProps.startEdit()}\r\n        >\r\n          {dropdownOptions?.map((option) => (\r\n            <MenuItem key={option.name} value={option.name}>\r\n              {option.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      );\r\n    }\r\n  };\r\n\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'string' },\r\n    {\r\n      name: \"plantName\",\r\n      defaultWidth: 180,\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.PlantName}>Plant Name</Tooltip>,\r\n      render: ({ data }) => <div>{data?.plantName}</div>,\r\n    },\r\n    plantColumn\r\n  ]\r\n\r\n  const handleChanges = (event) => {\r\n    const data = [...dataSource];\r\n    let newData = data.map(item => {\r\n      if (item.plantName === event.target.name) {\r\n        item.value = event.target.value\r\n      }\r\n      return Object.assign({}, item)\r\n    })\r\n    setDataSource(newData)\r\n    setPlantValueList(newData)\r\n  }\r\n  const handleEntityChange = (event) => {\r\n    handleorgAllowedFormChange(event)\r\n    let dropdownselect = event.target.value;\r\n    switch (dropdownselect) {\r\n      case \"PlantGroup\":\r\n        setDropdownOptions(plantGroupOptions)\r\n        setDisplayOrder(1)\r\n        break;\r\n      case \"BOM or NO BOM\":\r\n        setDropdownOptions(bomStatusOptions)\r\n        setDisplayOrder(2)\r\n        break;\r\n      case \"none or PO Org\":\r\n        setDropdownOptions(filteredPlants)\r\n        setDisplayOrder(3)\r\n        break;\r\n      case \"RDO OU Org Set\":\r\n        setDropdownOptions(rduOptions)\r\n        setDisplayOrder(4)\r\n        break;\r\n      default:\r\n        setDropdownOptions([])\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit RDO Plant Mapping \" : \"Add RDO Plant Mapping\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={bussinessUnit}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled\r\n              >\r\n                {bussinessUnitLists?.map((option) => (\r\n                  <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                    {option.businessUnit}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Entity <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                name=\"Entity\"\r\n                value={orgAllowedForm.Entity}\r\n                onChange={handleEntityChange}\r\n                disabled={isEdit}\r\n              >\r\n                {entityOption?.map((option) => (\r\n                  <MenuItem key={option.name} value={option.value}>\r\n                    {option.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Plant Values <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <ReactDataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                style={gridStyle}\r\n                columns={columns}\r\n                dataSource={dataSource}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddBuPlant}>{isEdit ? \"Update\" : \"Add\"}</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BUPlantDialog;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport BUPlantDialog from \"./buplantDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst BUPlantList = () => {\r\n  const {\r\n    refreshData,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [plantValueList, setPlantValueList] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [displayOrder, setDisplayOrder] = useState(0);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") { return; }\r\n    setsnackBar(false);\r\n  };\r\n\r\n  //********Dialog code ********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...orgAllowedForm,\r\n      [name]: value,\r\n    };\r\n    setOrgAllowedForm(updatedForm);\r\n  };\r\n\r\n  const handleAddBuPlant = () => {\r\n    if (!orgAllowedForm.Entity || !orgAllowedForm.BUID || plantValueList.length < 1) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n    const resultPlantPayload = plantValueList.reduce((acc, curr) => {\r\n      acc[curr.plantName] = curr.value;\r\n      return acc;\r\n    }, {});\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        MappingType: \"buplantmapping\",\r\n        BUID: orgAllowedForm.BUID,\r\n        details: {\r\n          Entity: orgAllowedForm.Entity,\r\n          displayOrder: displayOrder,\r\n          PLANT: resultPlantPayload\r\n        },\r\n        id: `${orgAllowedForm.Entity}_${orgAllowedForm.BUID}_buplantmapping`,\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              setSelected({})\r\n              handlesnackBarClick(\"RDO Plant Mapping added successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status);\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchDraftData();\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              setSelected({})\r\n              handlesnackBarClick(\"RDO Plant Mapping updated successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status);\r\n            }\r\n\r\n          });\r\n      }\r\n    }\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setPlantValueList([])\r\n    setIsEdit(false);\r\n    setSelectedRows([])\r\n    setSelected({})\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const Entity = { Entity: selectedRows[0]?.details?.Entity }\r\n    const BUID = { BUID: bussinessUnit }\r\n    setOrgAllowedForm({\r\n      ...BUID,\r\n      ...Entity\r\n    });\r\n    const plantValuesarr = Object.entries(\r\n      selectedRows[0]?.details?.PLANT\r\n    ).map(([key, value], index) => {\r\n      return { 'plantName': key, 'value': value, 'id': index };\r\n    });\r\n    setDisplayOrder(selectedRows[0]?.details?.displayOrder)\r\n    setPlantValueList(plantValuesarr)\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: result?.status,\r\n          desc: result?.msg,\r\n        })\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    fetchDraftData();\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n\r\n  const [plantColumns, setPlantColumns] = useState([]);\r\n  const [plantMappingList, setPlantMappingList] = useState([])\r\n\r\n  console.log(\"plantMappingList===\",plantMappingList)\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      // Filter the data based on MappingType\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"buplantmapping\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      finalTempMapList = finalTempMapList.sort((a, b) => a.details.displayOrder - b.details.displayOrder)\r\n      if (bussinessUnitLists) {\r\n        // Function to sort an object by its values\r\n        function sortObjectByValues(obj) {\r\n          if (obj) {\r\n            return Object.entries(obj).sort((a, b) => a[1].localeCompare(b[1])).reduce((acc, [key, value]) => {\r\n              acc[key] = value;\r\n              return acc;\r\n            }, {});\r\n          } else {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // Sorting the PLANT data by values\r\n        let sortedList = sortObjectByValues(finalTempMapList[0]?.details?.PLANT);\r\n        let plist = bussinessUnitLists.find(bu => bu.buName === bussinessUnit)?.plants || []\r\n        const newList = Object.keys(sortedList).map(plantName => {\r\n          const originalItem = plist.find(item => item?.plantName === plantName);\r\n          return { plantName, id: originalItem?.id, value: sortedList[plantName] };\r\n        });\r\n        /* mycode start */\r\n        const valueCounts = {};\r\n\r\n        // Iterate over the data to populate valueCounts\r\n        newList.forEach((item) => {\r\n          finalTempMapList.forEach((pdata) => {\r\n            if (pdata?.details?.Entity === \"PlantGroup\" && pdata.BUID === bussinessUnit) {\r\n              const plantValue = pdata?.details?.PLANT[item.plantName];\r\n              console.log(\"plantvalue===\",plantValue)\r\n              valueCounts[plantValue] = (valueCounts[plantValue] || 0) + 1;\r\n            }\r\n          });\r\n        });\r\n        let passedColumn = []\r\n        const headerColumns = newList.map((item) => {\r\n          return {\r\n            name: item.plantName,\r\n            header: item.plantName,\r\n            defaultWidth: 150,\r\n\r\n            // colspan: ({ data }) => {\r\n            //   if (data?.details?.Entity === \"PlantGroup\" && data.BUID === bussinessUnit) {\r\n            //     const plantValue = data?.details?.PLANT[item.plantName];\r\n            //     if (passedColumn?.includes(plantValue)) {\r\n            //       return 0\r\n            //     } else {\r\n            //       passedColumn.push(plantValue);\r\n            //       return valueCounts[plantValue];\r\n            //     }\r\n            //   }\r\n            //   return 1; // Default colspan is 1\r\n            // },\r\n            render: (params) => (\r\n              <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n            )\r\n          };\r\n        });\r\n\r\n        setPlantColumns(headerColumns);\r\n\r\n        /* mycode end */\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredRDODraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"buplantmapping\" });\r\n        if (filteredRDODraftData.length > 0 && filteredRDODraftData[0].MappingType === 'buplantmapping') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredRDODraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] == obj2['id']) {\r\n                // obj1.details.draft_Plants = {\r\n                //   \"MME\": obj2.details.PLANT.MME !== obj1.details.PLANT.MME ? obj2.details.PLANT.MME : null,\r\n                //   \"MMC\": obj2.details.PLANT.MMC !== obj1.details.PLANT.MMC ? obj2.details.PLANT.MMC : null,\r\n                //   \"MVO\": obj2.details.PLANT.MVO !== obj1.details.PLANT.MVO ? obj2.details.PLANT.MVO : null,\r\n                //   \"NA3\": obj2.details.PLANT.NA3 !== obj1.details.PLANT.NA3 ? obj2.details.PLANT.NA3 : null,\r\n                //   \"NAE\": obj2.details.PLANT.NAE !== obj1.details.PLANT.NAE ? obj2.details.PLANT.NAE : null,\r\n                //   \"CL2\": obj2.details.PLANT.CL2 !== obj1.details.PLANT.CL2 ? obj2.details.PLANT.CL2 : null,\r\n                //   \"PVE\": obj2.details.PLANT.PVE !== obj1.details.PLANT.PVE ? obj2.details.PLANT.PVE : null,\r\n                //   \"MMR\": obj2.details.PLANT.MMR !== obj1.details.PLANT.MMR ? obj2.details.PLANT.MMR : null,\r\n                //   \"MFS\": obj2.details.PLANT.MFS !== obj1.details.PLANT.MFS ? obj2.details.PLANT.MFS : null,\r\n                //   \"MET\": obj2.details.PLANT.MET !== obj1.details.PLANT.MET ? obj2.details.PLANT.MET : null,\r\n                //   \"MMB\": obj2.details.PLANT.MMB !== obj1.details.PLANT.MMB ? obj2.details.PLANT.MMB : null\r\n                // }\r\n                obj1.details.draft_Plants = {};\r\n                for (let key in obj1.details.PLANT) {\r\n                  console.log('obj2.details.PLANT[key]', obj2.details.PLANT[key]);\r\n                  console.log('obj1.details.PLANT[key]', obj1.details.PLANT[key]);\r\n                  obj1.details.draft_Plants[key] = obj2.details.PLANT[key].toLocaleLowerCase() !== obj1.details.PLANT[key].toLocaleLowerCase() ? obj2.details.PLANT[key] : null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      setTimeout(() => {\r\n        let data = finalTempMapList.map(item => {\r\n          // Object.keys(item?.details?.PLANT).map(plant => {\r\n          //   item?.details?.draft_Plants ? Object.keys(item?.details?.draft_Plants).map(draft_Plant =>{\r\n          //       //item[plant] = item?.details?.draft_Plants[draft_Plant] ? item?.details?.draft_Plants[draft_Plant] + ' ' + item?.details?.PLANT[plant] : item?.details?.PLANT[plant]\r\n          //       item[\"MME\"] = item?.details?.draft_Plants[\"MME\"] ? `${item?.details?.draft_Plants[\"MME\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MME\"]} <span>` : item?.details?.PLANT[\"MME\"]\r\n          //       item[\"MMC\"]= item?.details?.draft_Plants[\"MMC\"] ? `${item?.details?.draft_Plants[\"MMC\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MMC\"]} <span>` : item?.details?.PLANT[\"MMC\"]\r\n          //       item[\"MVO\"]= item?.details?.draft_Plants[\"MVO\"] ? `${item?.details?.draft_Plants[\"MVO\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MVO\"]} <span>` : item?.details?.PLANT[\"MVO\"]\r\n          //       item[\"NA3\"]= item?.details?.draft_Plants[\"NA3\"] ? `${item?.details?.draft_Plants[\"NA3\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"NA3\"]} <span>` : item?.details?.PLANT[\"NA3\"]\r\n          //       item[\"NAE\"]= item?.details?.draft_Plants[\"NAE\"] ? `${item?.details?.draft_Plants[\"NAE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"NAE\"]} <span>` : item?.details?.PLANT[\"NAE\"]\r\n          //       item[\"CL2\"]= item?.details?.draft_Plants[\"CL2\"] ? `${item?.details?.draft_Plants[\"CL2\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"CL2\"]} <span>` : item?.details?.PLANT[\"CL2\"]\r\n          //       item[\"PVE\"]= item?.details?.draft_Plants[\"PVE\"] ? `${item?.details?.draft_Plants[\"PVE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"PVE\"]} <span>` : item?.details?.PLANT[\"PVE\"]\r\n          //       item[\"MMR\"]= item?.details?.draft_Plants[\"MMR\"] ? `${item?.details?.draft_Plants[\"MMR\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MMR\"]} <span>` : item?.details?.PLANT[\"MMR\"]\r\n          //       item[\"MFS\"]= item?.details?.draft_Plants[\"MFS\"] ? `${item?.details?.draft_Plants[\"MFS\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MFS\"]} <span>` : item?.details?.PLANT[\"MFS\"]\r\n          //       item[\"MET\"]= item?.details?.draft_Plants[\"MET\"] ? `${item?.details?.draft_Plants[\"MET\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MET\"]} <span>` : item?.details?.PLANT[\"MET\"]\r\n          //       item[\"MMB\"]= item?.details?.draft_Plants[\"MMB\"] ? `${item?.details?.draft_Plants[\"MMB\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MMB\"]} <span>`: item?.details?.PLANT[\"MMB\"]\r\n          //     }) : item[plant] = item?.details?.PLANT[plant]          \r\n          //   }            \r\n          // )   \r\n          Object.keys(item?.details?.PLANT).map(plant => {\r\n            item?.details?.draft_Plants ? item[plant] = item?.details?.draft_Plants[plant] ? `${item?.details?.draft_Plants[plant]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[plant]} <span>` : item?.details?.PLANT[plant]\r\n              : item[plant] = item?.details?.PLANT[plant]\r\n          }\r\n          )\r\n          return item\r\n        })\r\n\r\n        setPlantMappingList(data)\r\n        setIsLoading(false)\r\n\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, updateBussinessUnit, bussinessUnitLists, filteredDraftTabledata]);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n    {\r\n      name: \"Entity\",\r\n      header: \"Entity\",\r\n      render: ({ data }) => <div><b>{data?.details?.Entity}</b></div>,\r\n      defaultWidth: 150,\r\n    },\r\n    ...plantColumns\r\n  ];\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      width: 'auto'\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"RDO Plant Mapping \" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                    setPlantValueList([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"RDO Plant Mapping\"}\r\n                MappingType={\"buplantmapping\"}\r\n                filterTemplateData={selectedRows}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  rowStyle={rowStyle}\r\n                  columns={columns}\r\n                  dataSource={plantMappingList}\r\n                  defaultLimit={100}\r\n                  // rowHeight={null}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  sortable={false}\r\n                  onSelectionChange={onSelectionChange}\r\n                  enableColumnAutosize={true}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <Snackbar\r\n        open={snackBar}\r\n        autoHideDuration={3000}\r\n        onClose={handlesnackbarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handlesnackbarClose}\r\n          severity={snackbarseverity}\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {snackbarmessage}\r\n        </Alert>\r\n      </Snackbar>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the RDO Plant Mapping(s) for Design Organization '}<b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <BUPlantDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddBuPlant={handleAddBuPlant}\r\n        isEdit={isEdit}\r\n        bussinessUnitLists={bussinessUnitLists}\r\n        bussinessUnit={bussinessUnit}\r\n        setPlantValueList={setPlantValueList}\r\n        plantValueList={plantValueList}\r\n        setDisplayOrder={setDisplayOrder}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import RDO Plant Mappings\"}\r\n        MappingType={\"buplantmapping\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BUPlantList;","import React from \"react\";\r\nimport BUPlantList from \"./buplantList\";\r\n\r\nconst BUPlantWrapper = () => {\r\n    return (\r\n        <BUPlantList />\r\n    );\r\n};\r\n\r\nexport default BUPlantWrapper;\r\n","import React from 'react';\r\nimport BUPlantWrapper from \"./buplantWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst buplantroutes = [\r\n  {\r\n    path: \"/buplantList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <BUPlantWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default buplantroutes;\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport Constant from '../../../constant'\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { unionBy } from 'lodash';\r\nconst gridStyle = { minHeight: 248 }\r\nconst ExpenseMappingDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddOrgAllowedValues,\r\n  isEdit,\r\n  templatesInfo,\r\n  bussinessUnitLists,\r\n  selectedBU,\r\n  setPlantValueList,\r\n  plantValueList\r\n}) => {\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [orgAllowedForm.EXPENSE_TEMPLATE, selectedBU]);\r\n  useEffect(() => {\r\n    let filteredPlants = bussinessUnitLists?.find((plant) => plant.buName === orgAllowedForm.BUID)?.plants || [];\r\n    filteredPlants.map((plant, index) => {\r\n      plant.expense = ''\r\n      plant.id = index\r\n      return Object.assign({}, plant)\r\n    })\r\n    filteredPlants = unionBy(plantValueList, filteredPlants, 'plantName');\r\n    setDataSource(filteredPlants)\r\n    setPlantValueList(filteredPlants)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [orgAllowedForm.BUID, selectedBU, bussinessUnitLists, setPlantValueList]);\r\n\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo]);\r\n\r\n  const Input = (props) => {\r\n    const inputRef = useRef(null);\r\n    useEffect(() => {\r\n      if (inputRef && inputRef.current) {\r\n        if (props.autoFocus) {\r\n          inputRef.current.focus();\r\n        }\r\n      }\r\n    }, [props.autoFocus]);\r\n\r\n    return <input {...props} inputRef={inputRef} />;\r\n  };\r\n  const expenseColumn = {\r\n    name: 'expense',\r\n    header: 'Expense',\r\n    defaultFlex: 1, minWidth: 100,\r\n    rendersInlineEditor: true,\r\n    editable: true,\r\n    render: ({ value }, { cellProps }) => {\r\n      let v = cellProps.editProps.inEdit\r\n        ? cellProps.editProps.value\r\n        : value;\r\n      return (\r\n        <Input\r\n          type=\"number\"\r\n          autoFocus={cellProps.inEdit}\r\n          value={v}\r\n          onBlur={e => {\r\n            cellProps.editProps.onComplete(e);\r\n          }}\r\n          onChange={cellProps.editProps.onChange}\r\n          onFocus={() => cellProps.editProps.startEdit()}\r\n          onKeyDown={e => {\r\n            if (e.key === 'Escape') {\r\n              cellProps.editProps.onCancel(e);\r\n            }\r\n            if (e.key === 'Enter') {\r\n              cellProps.editProps.onComplete(e);\r\n            }\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'string' },\r\n    {\r\n      name: \"plantName\",\r\n      defaultWidth: 180,\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.PlantName}>Plant Name</Tooltip>,\r\n      render: ({ data }) => <div>{data?.plantName}</div>,\r\n    },\r\n    expenseColumn\r\n  ]\r\n\r\n  const onEditComplete = useCallback(({ value, columnId, rowId }) => {\r\n    const data = [...dataSource];\r\n    data[rowId] = Object.assign({}, data[rowId], { [columnId]: value });\r\n    setDataSource(data);\r\n    setPlantValueList(data)\r\n  }, [dataSource, setPlantValueList])\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Expense Mapping \" : \"Add Expense Mapping\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={selectedBU}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled\r\n              >\r\n                {filteredBUOptions?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Template <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                name=\"EXPENSE_TEMPLATE\"\r\n                fullWidth\r\n                value={orgAllowedForm.EXPENSE_TEMPLATE}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={isEdit}\r\n              >\r\n                {templateOption?.map((option) => (\r\n                  <MenuItem key={option.templateName} value={option.templateName}>\r\n                    {option.templateName}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Plant Expenses <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <ReactDataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                style={gridStyle}\r\n                onEditComplete={onEditComplete}\r\n                columns={columns}\r\n                dataSource={dataSource}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddOrgAllowedValues}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExpenseMappingDialog;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport ExpenseMappingDialog from \"./expensemapDialog\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport ImportMappingsDialog from \"../../../components/importMappingsDialog\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst ExpenseMappingList = () => {\r\n  const {\r\n    refreshData,\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const gridStyle = { minHeight: 550 };\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [expensemapData, setExpenseMapData] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [plantValueList, setPlantValueList] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n\r\n  };\r\n  const handleSearch = () => {\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    })\r\n  };\r\n  let plantColumnsSet = new Set(); // Define it outside\r\n  if (expensemapData && expensemapData.length > 0) {\r\n    expensemapData.forEach((dataItem) => {\r\n      const plants = dataItem.details?.EXPENSE_PLANTS;\r\n      if (plants) {\r\n        const plantKeys = Object.keys(plants);\r\n\r\n        plantKeys.forEach((plant) => {\r\n          plantColumnsSet.add(plant);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  const plantColumns = Array.from(plantColumnsSet).map((plant) => {\r\n    return {\r\n      name: plant,\r\n      header: plant,\r\n      sortable: false,\r\n      defaultWidth: 90,\r\n      //render: ({ data }) => <div>{data?.details?.EXPENSE_PLANTS[plant]}</div>,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    };\r\n  });\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    // If it's a form field change\r\n    const updatedForm = {\r\n      ...orgAllowedForm,\r\n      [name]: value,\r\n    };\r\n    setOrgAllowedForm(updatedForm);\r\n  };\r\n  const handleAddOrgAllowedValues = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === orgAllowedForm.EXPENSE_TEMPLATE\r\n    );\r\n    const resultPlantPayload = plantValueList.reduce((acc, curr) => {\r\n      acc[curr.plantName] = Number(curr.expense) !== 0 && !isNaN(Number(curr.expense)) ? Number(curr.expense) : '';\r\n      return acc;\r\n    }, {});\r\n    if (\r\n      !orgAllowedForm.EXPENSE_TEMPLATE ||\r\n      !orgAllowedForm.BUID ||\r\n      plantValueList.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        BUID: orgAllowedForm.BUID,\r\n        MappingType: \"expensemapping\",\r\n        id:\r\n          templateid[0].id +\r\n          \"_\" +\r\n          orgAllowedForm.BUID.trim() +\r\n          \"_\" +\r\n          \"expensemapping\",\r\n        details: {\r\n          EXPENSE_TEMPLATE: orgAllowedForm.EXPENSE_TEMPLATE,\r\n          EXPENSE_TEMPLATE_ID: templateid[0].id,\r\n          EXPENSE_PLANTS: resultPlantPayload,\r\n        },\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              setSelected({})\r\n              handlesnackBarClick(\"Expense Mapping added successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status)\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              setSelected({})\r\n              handlesnackBarClick(\"Expense Mapping updated successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status)\r\n            }\r\n          });\r\n      }\r\n    }\r\n    handleorgAllowedDialogClose();\r\n  };\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setPlantValueList([])\r\n    setIsEdit(false);\r\n    setSelectedRows([])\r\n    setSelected({})\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditExpenseMapping = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = { BUID: selectedRows[0]?.BUID };\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      ...BUID,\r\n    });\r\n    const plantValuesarr = Object.entries(\r\n      selectedRows[0]?.details?.EXPENSE_PLANTS\r\n    ).map(([key, value], index) => {\r\n      return { 'plantName': key, 'expense': value, 'id': index };\r\n    });\r\n    sortDataByKey(plantValuesarr, \"plantName\");\r\n    setPlantValueList(plantValuesarr)\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n\r\n  const handleDeleteOrgAllowedValues = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    handlesnackBarClick(\"Expense Mapping deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"EXPENSE_TEMPLATE\",\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.EXPENSE_TEMPLATE}>Template</Tooltip>,\r\n      defaultWidth: 250,\r\n      // render: (params) => (\r\n      //   <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      // )\r\n      render: ({ data }) => <div>{data?.EXPENSE_TEMPLATE}</div>,\r\n    },\r\n\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultWidth: 150,\r\n    },\r\n\r\n    ...plantColumns,\r\n\r\n    // Add a custom column for checkboxes\r\n  ];\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true);\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n\r\n  const sortedFilterExpenseMappingData = sortDataByKey(tableTempData, \"EXPENSE_TEMPLATE\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"expensemapping\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredExpenseDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"expensemapping\" });\r\n        if (filteredExpenseDraftData.length > 0 && filteredExpenseDraftData[0].MappingType === 'expensemapping') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredExpenseDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draftValue_EXPENSE_TEMPLATE = obj2.details.EXPENSE_TEMPLATE !== obj1.details.EXPENSE_TEMPLATE ? obj2.details.EXPENSE_TEMPLATE : null;\r\n                obj1.details.draft_Plants = {};\r\n                for (let key in obj1.details.EXPENSE_PLANTS) {\r\n                  obj1.details.draft_Plants[key] = obj2.details.EXPENSE_PLANTS[key] !== obj1.details.EXPENSE_PLANTS[key] ? obj2.details.EXPENSE_PLANTS[key] : null;\r\n                }\r\n                // obj1.details.draft_Plants = {\r\n                //   \"MME\": obj2.details.EXPENSE_PLANTS.MME !== obj1.details.EXPENSE_PLANTS.MME ? obj2.details.EXPENSE_PLANTS.MME : null,\r\n                //   \"MMC\": obj2.details.EXPENSE_PLANTS.MMC !== obj1.details.EXPENSE_PLANTS.MMC ? obj2.details.EXPENSE_PLANTS.MMC : null,\r\n                //   \"MVO\": obj2.details.EXPENSE_PLANTS.MVO !== obj1.details.EXPENSE_PLANTS.MVO ? obj2.details.EXPENSE_PLANTS.MVO : null,\r\n                //   \"NA3\": obj2.details.EXPENSE_PLANTS.NA3 !== obj1.details.EXPENSE_PLANTS.NA3 ? obj2.details.EXPENSE_PLANTS.NA3 : null,\r\n                //   \"NAE\": obj2.details.EXPENSE_PLANTS.NAE !== obj1.details.EXPENSE_PLANTS.NAE ? obj2.details.EXPENSE_PLANTS.NAE : null,\r\n                //   \"CL2\": obj2.details.EXPENSE_PLANTS.CL2 !== obj1.details.EXPENSE_PLANTS.CL2 ? obj2.details.EXPENSE_PLANTS.CL2 : null,\r\n                //   \"PVE\": obj2.details.EXPENSE_PLANTS.PVE !== obj1.details.EXPENSE_PLANTS.PVE ? obj2.details.EXPENSE_PLANTS.PVE : null,\r\n                //   \"MMR\": obj2.details.EXPENSE_PLANTS.MMR !== obj1.details.EXPENSE_PLANTS.MMR ? obj2.details.EXPENSE_PLANTS.MMR : null,\r\n                //   \"MFS\": obj2.details.EXPENSE_PLANTS.MFS !== obj1.details.EXPENSE_PLANTS.MFS ? obj2.details.EXPENSE_PLANTS.MFS : null,\r\n                //   \"MET\": obj2.details.EXPENSE_PLANTS.MET !== obj1.details.EXPENSE_PLANTS.MET ? obj2.details.EXPENSE_PLANTS.MET : null,\r\n                //   \"MMB\": obj2.details.EXPENSE_PLANTS.MMB !== obj1.details.EXPENSE_PLANTS.MMB ? obj2.details.EXPENSE_PLANTS.MMB : null\r\n                // }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n      setExpenseMapData(finalTempMapList);\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"EXPENSE_TEMPLATE\"] = item?.details?.EXPENSE_TEMPLATE;\r\n        // Object.keys(item?.details?.EXPENSE_PLANTS).map(plant => {\r\n        //   item?.details?.draft_Plants ? Object.keys(item?.details?.draft_Plants).map(draft_Plant =>{\r\n        //       item[\"MME\"] = item?.details?.draft_Plants[\"MME\"] ? `${item?.details?.draft_Plants[\"MME\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MME\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MME\"]\r\n        //       item[\"MMC\"]= item?.details?.draft_Plants[\"MMC\"] ? `${item?.details?.draft_Plants[\"MMC\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MMC\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MMC\"]\r\n        //       item[\"MVO\"]= item?.details?.draft_Plants[\"MVO\"] ? `${item?.details?.draft_Plants[\"MVO\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MVO\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MVO\"]\r\n        //       item[\"NA3\"]= item?.details?.draft_Plants[\"NA3\"] ? `${item?.details?.draft_Plants[\"NA3\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"NA3\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"NA3\"]\r\n        //       item[\"NAE\"]= item?.details?.draft_Plants[\"NAE\"] ? `${item?.details?.draft_Plants[\"NAE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"NAE\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"NAE\"]\r\n        //       item[\"CL2\"]= item?.details?.draft_Plants[\"CL2\"] ? `${item?.details?.draft_Plants[\"CL2\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"CL2\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"CL2\"]\r\n        //       item[\"PVE\"]= item?.details?.draft_Plants[\"PVE\"] ? `${item?.details?.draft_Plants[\"PVE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"PVE\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"PVE\"]\r\n        //       item[\"MMR\"]= item?.details?.draft_Plants[\"MMR\"] ? `${item?.details?.draft_Plants[\"MMR\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MMR\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MMR\"]\r\n        //       item[\"MFS\"]= item?.details?.draft_Plants[\"MFS\"] ? `${item?.details?.draft_Plants[\"MFS\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MFS\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MFS\"]\r\n        //       item[\"MET\"]= item?.details?.draft_Plants[\"MET\"] ? `${item?.details?.draft_Plants[\"MET\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MET\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MET\"]\r\n        //       item[\"MMB\"]= item?.details?.draft_Plants[\"MMB\"] ? `${item?.details?.draft_Plants[\"MMB\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MMB\"]} <span>`: item?.details?.EXPENSE_PLANTS[\"MMB\"]\r\n        //     }) : item[plant] = item?.details?.EXPENSE_PLANTS[plant]          \r\n        //   }            \r\n        // )\r\n        Object.keys(item?.details?.EXPENSE_PLANTS).map(plant => {\r\n          item?.details?.draft_Plants ? item[plant] = item?.details?.draft_Plants[plant] ? `${item?.details?.draft_Plants[plant]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[plant]} <span>` : item?.details?.EXPENSE_PLANTS[plant]\r\n            : item[plant] = item?.details?.EXPENSE_PLANTS[plant]\r\n        }\r\n        )\r\n        return item\r\n      })\r\n      setTimeout(() => {\r\n        setTableTempData(data);\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, updateBussinessUnit, filteredDraftTabledata]);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = [];\r\n      if (result.data) {\r\n        filterData = result.data.filter(element => element.BUID === BUID);\r\n      }     \r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n    }\r\n  }\r\n  \r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Expense Mapping\" }]} />\r\n      </Box>\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditExpenseMapping}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true);\r\n                }}\r\n                style={{ margin: \"0 10px 0 10px\" }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Expense Mapping\"}\r\n                MappingType={\"expensemapping\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog \r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? expensemapData : sortedFilterExpenseMappingData}\r\n                  rowHeight={null}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the ExpenseAcctByTemplateAndPlant Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteOrgAllowedValues}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <ExpenseMappingDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddOrgAllowedValues={handleAddOrgAllowedValues}\r\n        isEdit={isEdit}\r\n        templatesInfo={templatesInfo}\r\n        bussinessUnitLists={bussinessUnitLists}\r\n        selectedBU={bussinessUnit}\r\n        setPlantValueList={setPlantValueList}\r\n        plantValueList={plantValueList}\r\n      />\r\n      <ImportMappingsDialog\r\n        title={\"Import Expense Mappings\"}\r\n        MappingType={\"expensemapping\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate}\r\n      />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default ExpenseMappingList;\r\n","import React from \"react\";\r\nimport ExpenseMappingList from \"./expensemapList\";\r\n\r\nconst ExpenseMapWrapper = () => {\r\n  return (\r\n    <ExpenseMappingList />\r\n  );\r\n};\r\n\r\nexport default ExpenseMapWrapper;\r\n","import React from 'react';\r\nimport ExpenseMapWrapper from \"./expensemapWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst expensemaproutes = [\r\n  {\r\n    path: \"/expensemapList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <ExpenseMapWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default expensemaproutes;\r\n","// import { useEffect, useState } from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport {\r\n    Grid,\r\n} from \"@mui/material\";\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    description: yup\r\n        .string()\r\n        .required('This field is required')\r\n        .max(500, 'Input should not exceed 500 characters'),\r\n});\r\n\r\n\r\nconst CommitChangesForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ description: null }}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            onSubmit={(values, { resetForm }) => {\r\n                // handle form submission here\r\n                props.saveApplyChanges(values);\r\n                resetForm();\r\n            }}\r\n        >\r\n            {({\r\n                errors,\r\n                touched,\r\n                submitForm,\r\n                setFieldValue,\r\n                setErrors,\r\n                setTouched\r\n            }) => {\r\n                const closeDialogBox = () => {\r\n                    props?.setApplyChangesDialog(false);\r\n                    setErrors({});\r\n                    setTouched({}, false);\r\n                }\r\n                return (\r\n                    <Form>\r\n                        <Dialog\r\n                            open={props?.applyChangesDialog}\r\n                            maxWidth={'sm'}\r\n                            fullWidth={true}\r\n                        >\r\n                            <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                                Do you want to apply your changes?\r\n                            </DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n\r\n                                    <Grid container spacing={1} alignItems=\"center\">\r\n                                        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n                                            Comments<span style={{ color: \"#FF3D57\" }}>*</span>:\r\n                                        </Grid>\r\n                                        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n                                            <Field as=\"textarea\" id=\"description\" name=\"description\" rows=\"10\" style={{ width: \"100%\", borderRadius: \"10px\" }} />\r\n                                            <ErrorMessage name=\"description\" component=\"div\" style={{ color: \"red\" }} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={closeDialogBox}>Cancel</Button>\r\n                                <Button onClick={submitForm} >Apply</Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik >\r\n    )\r\n}\r\n\r\nexport default CommitChangesForm;","import { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  // styled,\r\n  Grid,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\n\r\nimport { styled } from '@mui/system';\r\n\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\n\r\nimport CustomSelect from \"./../../components/CustomSelect\";\r\nimport { BUOptions } from \"../adminConfig/common\";\r\nimport CommitChangesForm from \"./commitChangesForm\";\r\n\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst DraftChangesList = () => {\r\n  const { bussinessUnit, updateBussinessUnit, updateMappingTemplatesInfo } = useOracleSettings();\r\n\r\n  const [tabledata, setTabledata] = useState([]);\r\n  const [filteredTabledata, setFilteredTabledata] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [applyChangesDialog, setApplyChangesDialog] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n  const historyManagementService = new HistoryManagementService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const columns = [\r\n    {\r\n      name: \"userName\",\r\n      header: \"User Name\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n    },\r\n    {\r\n      name: \"MappingType\",\r\n      header: \"Mapping Type\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.MappingType}</div>,\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: \"Design Organization\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.BUID}</div>,\r\n    },\r\n    // {\r\n    //   name: \"modifiedTemplate\",\r\n    //   header: \"Modified Templates\",\r\n    //   defaultFlex: 1,\r\n    //   render: ({ data }) => <div>{data?.modifiedTemplate.join(\", \")}</div>,\r\n    // },\r\n    {\r\n      name: \"modifiedDateTime\",\r\n      header: \"Modified Date & Time \",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{(data?.modifiedDateTime) ? data?.modifiedDateTime : \"-\"}</div>,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      header: \"Action\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => {\r\n        return (\r\n          <div>\r\n            <Button variant=\"contained\"\r\n              style={{ margin: \"0px 10px 0px 0px\" }}\r\n              onClick={() => {\r\n                setSelectedRows([data]);\r\n                setApplyChangesDialog(true);\r\n              }}\r\n            >\r\n              Apply\r\n            </Button>\r\n            <Button variant=\"contained\"\r\n              onClick={() => {\r\n                discardDraftChanges(data.id);\r\n              }}>\r\n              Discard\r\n            </Button>\r\n          </div>\r\n        )\r\n      }\r\n    },\r\n  ];\r\n\r\n  const handleSearch = () => {\r\n    let filteredData = [];\r\n    // input box filter\r\n    if (searchValue === \"\") {\r\n      filteredData = tabledata;\r\n    } else {\r\n      filteredData = tabledata?.filter((thisItem) => {\r\n        const thisRowData = Object.values(thisItem).join().toLowerCase();\r\n        return thisRowData.includes(searchValue.toLowerCase());\r\n      });\r\n    }\r\n\r\n    // dropdown filter\r\n    filteredData = filteredData?.filter((thisItem) => {\r\n      const thisRowData = Object.values(thisItem).join().toLowerCase();\r\n      return thisRowData.includes(bussinessUnit.toLowerCase());\r\n    });\r\n\r\n    setFilteredTabledata(filteredData);\r\n  };\r\n\r\n  const handleRowClick = (rowData) => {\r\n    const isSelected = selectedRows.some((row) => row.id === rowData.id);\r\n\r\n    if (isSelected) {\r\n      setSelectedRows((prevSelectedRows) =>\r\n        prevSelectedRows.filter((row) => row.id !== rowData.id)\r\n      );\r\n    } else {\r\n      setSelectedRows([rowData]);\r\n    }\r\n  };\r\n\r\n  const updateTemplateMappingData = () => {\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      //setIsLoading(false);\r\n    });\r\n  }\r\n  const saveApplyChanges = (values) => {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      if (!selectedRows.length) {\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: \"error\",\r\n          desc: \"Please select row.\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      const payload = {\r\n        id: selectedRows[0]?.id,\r\n        reason: values.description,\r\n        BUID: selectedRows[0]?.BUID,\r\n        MappingType: selectedRows[0]?.MappingType,\r\n      }\r\n      historyManagementService.applyDraftChanges(payload).then((result) => {\r\n        setApplyChangesDialog(false); // close dialog box\r\n        setSelectedRows([]); // reset selected row value\r\n\r\n        updateTemplateMappingData();\r\n        fetchData();\r\n        setIsLoading(false);\r\n\r\n        if (result?.status === \"success\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: result?.msg,\r\n          });\r\n        } else if (result?.status === \"failed\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"error\",\r\n            desc: result?.msg,\r\n          });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      //console.log(err, 'errors 1 ==================');\r\n    }\r\n  }\r\n  const discardDraftChanges = (rowId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      historyManagementService.discardDraftChanges(rowId).then((result) => {\r\n        setApplyChangesDialog(false); // close dialog box\r\n        setSelectedRows([]); // reset selected row value\r\n\r\n        updateTemplateMappingData();\r\n        fetchData();\r\n        setIsLoading(false);\r\n\r\n        if (result?.status === \"success\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: result?.msg,\r\n          });\r\n        } else if (result?.status === \"failed\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"error\",\r\n            desc: result?.msg,\r\n          });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      //console.log(err, 'errors 1 ==================');\r\n    }\r\n  }\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true);\r\n    historyManagementService.getAlldraftChanges().then((result) => {\r\n      setTabledata(result?.data);\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredTabledata(filterData);\r\n      //setTabledata(result?.data);\r\n      //setFilteredTabledata(result?.data);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, [searchValue, bussinessUnit]);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Draft Changes\" }]} />\r\n      </Box>\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={(e) => {\r\n                    setSearchValue(e.target.value);\r\n                  }}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={5} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\"\r\n              style={{\r\n                // marginLeft: \"198px\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"font-medium\"\r\n                style={{ paddingRight: \"10px\" }}\r\n              >\r\n                <label style={{ textWrap: \"nowrap\", paddingTop: \"10px\" }}>Design Organization:</label>\r\n                <CustomSelect\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"25%\" }}\r\n                  //optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n            {isLoading && (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"100vh\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            )}\r\n            {!isLoading && (\r\n              <DataGrid\r\n                showZebraRows={false}\r\n                defaultLimit={100}\r\n                style={gridStyle}\r\n                columns={columns}\r\n                dataSource={filteredTabledata}\r\n                // rowHeight={null}\r\n                onRowClick={(rowData) => handleRowClick(rowData.data)}\r\n                pagination\r\n                renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <CommitChangesForm applyChangesDialog={applyChangesDialog} setApplyChangesDialog={setApplyChangesDialog} saveApplyChanges={saveApplyChanges} />\r\n\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DraftChangesList;\r\n","import React from \"react\";\r\nimport RequestChangesList from \"./draftChangesList\";\r\n\r\nconst RequestChangesWraper = () => {\r\n    return (\r\n        <RequestChangesList />\r\n    );\r\n};\r\n\r\nexport default RequestChangesWraper;\r\n","import React from 'react';\r\nimport DraftChangesWraper from \"./draftChangesWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst draftChangesroutes = [\r\n  {\r\n    path: \"/draftChanges\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <DraftChangesWraper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default draftChangesroutes;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Table,\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem\r\n} from \"@mui/material\";\r\n\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport CustomSelect from \"../../components/CustomSelect\";\r\nimport { BUOptions } from \"../adminConfig/common\";\r\n\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\n\r\nimport historyData from \"./sampledata.json\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst HistoryLIst = () => {\r\n  const { bussinessUnit, updateBussinessUnit } = useOracleSettings();\r\n  const [tabledata, setTabledata] = useState(historyData);\r\n  const [filteredTabledata, setFilteredTabledata] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [mappingOptions, setMappingOptions] = useState([]);\r\n  const historyManagementService = new HistoryManagementService();\r\n  const [mappingType, setMappingType] = useState('orgallowedvalues')\r\n  const gridRef = useRef(null);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"version\",\r\n      header: \"Version\",\r\n      defaultFlex: 0.6,\r\n      defaultWidth: 20,\r\n      render: ({ data }) => <div>{data?.version}</div>,\r\n    },\r\n    {\r\n      name: \"dateTime\",\r\n      header: \"Change Date\",\r\n      defaultFlex: 2,\r\n      render: ({ data }) => {\r\n        let date = new Date(parseInt(data?.dateTime));\r\n        console.log(date, 'date')\r\n        const year = date.getFullYear();\r\n        const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const hours = String(date.getHours()).padStart(2, '0');\r\n        const minutes = String(date.getMinutes()).padStart(2, '0');\r\n        const seconds = String(date.getSeconds()).padStart(2, '0');\r\n        const meridiem = hours >= 12 ? 'PM' : 'AM';\r\n        const formattedHours = hours % 12 || 12; // Convert 24-hour to 12-hour format\r\n        const formattedDate = `${year}-${month}-${day} ${formattedHours}:${minutes}:${seconds} ${meridiem}`;\r\n        return <div>{formattedDate}</div>\r\n      },\r\n    },\r\n    {\r\n      name: \"userName\",\r\n      header: \"Requested By\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.userName}</div>,\r\n    },\r\n    {\r\n      name: \"MappingType \",\r\n      header: \"Mapping Type\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 200,\r\n      render: ({ data }) => <div>{data?.MappingType}</div>,\r\n    },\r\n    {\r\n      name: \"reason\",\r\n      header: \"Change Details\",\r\n      defaultFlex: 3,\r\n      defaultWidth: 200,\r\n      render: ({ data }) => <div>{data?.reason}</div>,\r\n    },\r\n\r\n  ];\r\n\r\n  const handleSearch = () => {\r\n    let filteredData = [];\r\n    // input box filter\r\n    if (searchValue === \"\") {\r\n      filteredData = tabledata;\r\n    } else {\r\n      filteredData = tabledata?.filter((thisItem) => {\r\n        const thisRowData = Object.values(thisItem).join()?.toLowerCase();\r\n        return thisRowData.includes(searchValue?.toLowerCase());\r\n      });\r\n    }\r\n\r\n    // dropdown filter\r\n    // filteredData = filteredData?.filter((thisItem) => {\r\n    //   const thisRowData = Object.values(thisItem).join()?.toLowerCase();\r\n    //   return thisRowData.includes(bussinessUnit?.toLowerCase());\r\n    // });\r\n    // console.log(filteredData, 'filteredDatafilteredData')\r\n    setFilteredTabledata(filteredData);\r\n  };\r\n\r\n  const handleRowClick = (rowData) => {\r\n    const isSelected = selectedRows.some((row) => row.id === rowData.id);\r\n\r\n    if (isSelected) {\r\n      setSelectedRows((prevSelectedRows) =>\r\n        prevSelectedRows.filter((row) => row.id !== rowData.id)\r\n      );\r\n    } else {\r\n      setSelectedRows([rowData]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    historyManagementService.getAllmappingHistory().then((result) => {\r\n      setTabledata(result?.data);\r\n      setFilteredTabledata(result?.data);\r\n      // setMappingType()\r\n      setIsLoading(false);\r\n      const values = new Set();\r\n      result?.data?.forEach((subscriber) => {\r\n        if (Array.isArray(subscriber['MappingType'])) {\r\n          subscriber['MappingType'].forEach((data) => {\r\n            values.add(data.MappingType);\r\n          });\r\n        } else {\r\n          values.add(subscriber['MappingType']);\r\n        }\r\n      });\r\n      console.log(Array.from(values), 'array of mapping')\r\n      setMappingOptions(Array.from(values))\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, [searchValue, bussinessUnit]);\r\n\r\n\r\n  useEffect(() => {\r\n    // let dataToShow = tabledata;\r\n    // console.log(dropdownFilter, 'dropdownFilter')\r\n    let filteredData = tabledata;\r\n    // dropdown filter\r\n    filteredData = filteredData?.filter((thisItem) => {\r\n      const thisRowData = Object.values(thisItem).join()?.toLowerCase();\r\n      return thisRowData.includes(bussinessUnit?.toLowerCase()) &&\r\n        thisRowData.includes(mappingType?.toLowerCase());\r\n    });\r\n    setFilteredTabledata(filteredData);\r\n  }, [mappingType, bussinessUnit, tabledata])\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Changes History \" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={(e) => {\r\n                    setSearchValue(e.target.value);\r\n                  }}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\"\r\n              style={{\r\n                // marginLeft: \"198px\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"font-medium\"\r\n                style={{ paddingRight: \"10px\" }}\r\n              >\r\n                <label style={{ textWrap: \"nowrap\", paddingTop: \"10px\" }}>Mapping Type:</label>\r\n\r\n                <Select\r\n                  className=\"form-control\"\r\n                  defaultValue={mappingOptions[0]}\r\n                  value={mappingType}\r\n                  onChange={(e) => setMappingType(e.target.value)}\r\n                  style={{ width: \"50%\" }}\r\n                  size={'medium'}\r\n                  displayEmpty // Enable displayEmpty prop\r\n                  renderValue={(selected) => {\r\n                    // Render the selected value\r\n                    let selectedOption = [];\r\n                    selectedOption = mappingOptions?.find(\r\n                      (option) => (option === selected)\r\n                    );\r\n\r\n                    return (selectedOption) ? selectedOption : '';\r\n                  }}\r\n                >\r\n                  {mappingOptions?.map((option, index) => {\r\n                    const listKey = \"dpKey\" + index;\r\n                    return (\r\n                      <MenuItem value={option} key={listKey}>\r\n                        {option}\r\n                      </MenuItem>\r\n                    )\r\n                  })}\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={12} sm={6} xs={12} className=\"font-medium\" style={{ display: \"none\" }}>\r\n            <Grid container alignItems=\"center\"\r\n              style={{\r\n                // marginLeft: \"198px\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"font-medium\"\r\n                style={{ paddingRight: \"10px\" }}\r\n              >\r\n                <label style={{ textWrap: \"nowrap\", paddingTop: \"10px\" }}>Design Organization:</label>\r\n\r\n                <CustomSelect\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"50%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    // handleOptionChange({bu: selectedOptionValue})\r\n                    setSearchValue(\"\");\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n            {isLoading && (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"100vh\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            )}\r\n            {!isLoading && (\r\n              <DataGrid\r\n                showZebraRows={false}\r\n                style={gridStyle}\r\n                columns={columns}\r\n                dataSource={filteredTabledata}\r\n                defaultLimit={100}\r\n                // rowHeight={null}\r\n                onRowClick={(rowData) => handleRowClick(rowData.data)}\r\n                pagination\r\n                renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HistoryLIst;\r\n","import React from \"react\";\r\nimport HistoryList from \"./historyList\";\r\n\r\nconst HistoryWrapper = () => {\r\n    return (\r\n        <HistoryList />\r\n    );\r\n};\r\n\r\nexport default HistoryWrapper;\r\n","import React from 'react';\r\nimport HistoryWrapper from \"./historyWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst historyroutes = [\r\n  {\r\n    path: \"/history\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <HistoryWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  }\r\n];\r\n\r\nexport default historyroutes;\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.systemData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  console.log('props', props);\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.systemData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {        \r\n        'ERP Type': item.ERPType,\r\n        Instance: item.instance,\r\n        'Validation Key 1': item.file1,\r\n        'Validation Key 2': item.file2\r\n      }\r\n      return res\r\n    })\r\n    //console.log(exportData, 'inside template export exportData')\r\n    //return;\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'System Setup' }).then((response) => {\r\n      setExportResponse(response)\r\n      //console.log(response, ';resprespresp')\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.vsystemData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n      //console.log(filteredTempData, 'filteredTempData')\r\n    }\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import React, { useState, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport shortId from 'shortid';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n\r\nconst formData = [\r\n    {\r\n        \"name\": \"ERP Type\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"select\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": [\r\n            {\r\n                \"sap\": \"SAP\",\r\n                \"oracle\": \"Oracle\",\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"name\": \"instance\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"select\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": [\r\n            {\r\n                \"onPrem\": \"OnPrem\",\r\n                \"SaaS\": \"SaaS\",\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"name\": \"Validation Key 1\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"text\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": \"\"\r\n    },\r\n    {\r\n        \"name\": \"Validation Key 2\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"text\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": \"\"\r\n    },\r\n]\r\n\r\nconst SystemSetupForm = forwardRef((props, ref) => {\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const [formAllData, setFormAllData] = useState([]);\r\n    const initialValues = {\r\n        // settingName: '',\r\n        \"ERP Type\": null,\r\n        instance: null,\r\n        \"Validation Key 1\": null,\r\n        \"Validation Key 2\": null,\r\n    };\r\n\r\n    const validate = (values) => {\r\n        console.log(values, \"validate\");\r\n        const errors = {};\r\n        // Validation logic for each field\r\n        // if (!values.settingName) {\r\n        //     errors.settingName = 'Required';\r\n        // }\r\n        if (!values[\"ERP Type\"]) {\r\n            errors[\"ERP Type\"] = 'Required';\r\n        }\r\n        if (!values.instance) {\r\n            errors.instance = 'Required';\r\n        }\r\n        if (!values[\"Validation Key 1\"]) {\r\n            errors[\"Validation Key 1\"] = 'Required';\r\n        }\r\n        if (!values[\"Validation Key 2\"]) {\r\n            errors[\"Validation Key 2\"] = 'Required';\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const onSubmit = (values, isValid, { resetForm }) => {\r\n        // Handle form submission\r\n        console.log(values, 'values 111');\r\n        if (isValid) {\r\n            // Map Validation Key fields to file1 and file2\r\n            const backendValues = {\r\n                ...values,\r\n                ERPType: values[\"ERP Type\"],\r\n                file1: values[\"Validation Key 1\"],\r\n                file2: values[\"Validation Key 2\"],\r\n            };\r\n            delete backendValues[\"ERP Type\"];\r\n            delete backendValues[\"Validation Key 1\"];\r\n            delete backendValues[\"Validation Key 2\"];\r\n\r\n            resetForm(); // Reset the form using the resetForm function from Formik context\r\n            // Check if the entire form has changed\r\n            const isFormChanged = Object.keys(values).some((fieldName) => {\r\n                return values[fieldName] !== initialValues[fieldName];\r\n            });\r\n            if (isFormChanged) {\r\n                props.saveForm({ formisValid: isValid, formData: backendValues }); // Close the modal box after successful submission\r\n            } else {\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"error\",\r\n                    desc: \"No changes made!\",\r\n                });\r\n            }\r\n        } else {\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: \"error\",\r\n                desc: \"Form submitted with invalid data\",\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setFormAllData(formData);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validate={validate}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    onSubmit(values, !Object.keys(validate(values)).length, { resetForm: () => setSubmitting(false) });\r\n                }}\r\n                innerRef={ref}\r\n            >\r\n                {\r\n                    function Showform({ isValid, values, errors, setFieldValue, resetForm, handleSubmit, submitForm }) {\r\n                        useEffect(() => {\r\n                            if (props?.editForm === \"Edit\" && props?.selectedRows?.length) {\r\n                                props?.selectedRows?.forEach(thisItem => {\r\n                                    setFieldValue('ERP Type', thisItem?.ERPType);\r\n                                    setFieldValue('instance', thisItem?.instance);\r\n                                    setFieldValue('Validation Key 1', thisItem?.file1);\r\n                                    setFieldValue('Validation Key 2', thisItem?.file2);\r\n                                });\r\n                            }\r\n                        }, [setFieldValue])\r\n\r\n                        // Expose the submitForm function to the parent component using useImperativeHandle\r\n                        useImperativeHandle(ref, () => ({\r\n                            submitForm() {\r\n                                console.log(\"triggering here\");\r\n                                // Call the submitForm function when triggered from the parent component\r\n                                // return new Promise((resolve, reject) => {\r\n                                //     // Submit the form using the Formik handleSubmit function\r\n                                //     handleSubmit();\r\n                                //     // After the form submission, resolve the promise with the form values\r\n                                //     resolve({ formisValid: isValid, formData: values });\r\n                                // });\r\n\r\n                                // Call the submitForm function when triggered from the parent component\r\n                                handleSubmit();\r\n                            }\r\n                        }));\r\n\r\n                        return (\r\n                            <Form>\r\n                                {\r\n                                    (formAllData).length ? formAllData?.map((item, fkey) => {\r\n                                        const thisInputName = item?.name;\r\n                                        const currentFieldValue = values[thisInputName] || item?.defaultValues;\r\n\r\n                                        let fieldType = item?.inputType;\r\n                                        let fieldkey = values[formAllData[0]?.name];\r\n\r\n                                        return (\r\n                                            <div className=\"attribute-section\" key={fkey}>\r\n                                                <Grid\r\n                                                    container\r\n                                                    spacing={3}\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n                                                        <label htmlFor=\"firstName\">\r\n                                                            <span >\r\n                                                                {item?.name}\r\n                                                                {item?.mandatory === \"Y\" ? <span style={{ color: \"red\" }}>*</span> : ''}\r\n                                                            </span>\r\n                                                        </label>\r\n                                                    </Grid>\r\n                                                    <Grid item md={8} sm={6} xs={12} key={fkey}>\r\n                                                        {\r\n                                                            (fieldType === 'text') && (\r\n                                                                <TextField\r\n                                                                    className={\"mb-4 w-full \"}\r\n                                                                    color={(errors?.[thisInputName] ? ('warning') : (''))}\r\n                                                                    fullWidth\r\n                                                                    size=\"small\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    id={thisInputName}\r\n                                                                    name={thisInputName}\r\n                                                                    value={currentFieldValue}\r\n                                                                    onChange={(e) => {\r\n                                                                        setFieldValue(thisInputName, e.target.value);\r\n                                                                    }}\r\n                                                                    type=\"text\"\r\n                                                                    style={{ marginBottom: '10px' }}\r\n                                                                />\r\n                                                            )\r\n                                                        }\r\n                                                        {\r\n                                                            (fieldType === 'select') && (\r\n                                                                <>\r\n                                                                    <Select\r\n                                                                        disabled={props?.editForm === \"Edit\" && [\"ERP Type\", \"instance\"].includes(thisInputName)}\r\n                                                                        value={currentFieldValue}\r\n                                                                        onChange={(e) => {\r\n                                                                            setFieldValue(thisInputName, e.target.value);\r\n                                                                        }}\r\n                                                                        displayEmpty\r\n                                                                        renderValue={(selected) => {\r\n                                                                            if (!selected) {\r\n                                                                                return <em>--Select--</em>; // Placeholder text\r\n                                                                            }\r\n                                                                            return item?.values.length && item?.values[0][selected];\r\n                                                                        }}\r\n                                                                        style={{ height: '37.13px', marginBottom: '1rem', width: \"100%\" }}\r\n                                                                    >\r\n                                                                        <MenuItem>Select</MenuItem>\r\n                                                                        {\r\n                                                                            item?.values.length && Object.keys(item?.values[0]).map((vitem) => {\r\n                                                                                return (\r\n                                                                                    <MenuItem value={vitem} key={shortId.generate()}>{item?.values[0][vitem]}</MenuItem>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </Select>\r\n                                                                </>\r\n                                                            )\r\n                                                        }\r\n                                                        <ErrorMessage name={thisInputName} component=\"div\" />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </div>\r\n                                        )\r\n                                    }) : (<></>)\r\n                                }\r\n                                {/* <button type=\"submit\" style={{ display: 'none' }}></button> Hidden submit button */}\r\n                            </Form>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>\r\n            {openDesc && (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default SystemSetupForm;","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\nimport Loader from 'app/components/Loader';\r\nimport { Breadcrumb } from \"app/components\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\nimport { SystemSettingsService } from \"services/systemSettingsService\"; // Change UserService to SystemSetupService\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportSetup\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport SystemSetupForm from \"./systemSetupForm\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst SystemSetup = () => {\r\n  const childCompRef = useRef(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [showFormType, setShowFormType] = useState(\"Create\");\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [systemData, setSystemData] = useState([]); // Change userData to systemData\r\n  const [orgSystemData, setOrgSystemData] = useState([]); // Change userData to systemData\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const systemSettingsService = new SystemSettingsService(); // Change userService to systemSettingsService\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [sortInfo, setSortInfo] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\nconst sortedSystemData = systemData.sort((a, b) => {\r\n  if (a.ERPType < b.ERPType) return -1;\r\n  if (a.ERPType > b.ERPType) return 1;\r\n  return 0;\r\n});\r\n\r\n  const columns = [ // Adjust columns according to your system setup data\r\n    {\r\n      name: \"ERPType\",\r\n      header: \"ERP Type\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.ERPType}</div>,\r\n    },\r\n    {\r\n      name: \"instance\",\r\n      header: \"Instance\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.instance}</div>,\r\n    },\r\n    {\r\n      name: \"file1\",\r\n      header: \"Validation Key 1\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.file1}</div>,\r\n    },\r\n    {\r\n      name: \"file2\",\r\n      header: \"Validation Key 2\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.file2}</div>,\r\n    },\r\n  ]\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteSetting = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      setIsLoading(true)\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await systemSettingsService.deleteSystemSettings(selRowsId).then(response => {\r\n        setIsLoading(false)\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete Setting:\", error);\r\n    }\r\n\r\n    systemSettingsService.getAllsystemSetupList().then((result) => {\r\n      console.log(result.data, \"result.data\");\r\n      setSystemData(result.data);\r\n      setInitialData(result.data);\r\n      setOrgSystemData(result.data);\r\n    });\r\n  };\r\n\r\n  // Function to trigger the form submission in the child component\r\n  const saveForm = async (submittedValues) => {\r\n    console.log(submittedValues, 'submittedValues 222');\r\n\r\n\r\n    if (submittedValues) {\r\n      // Update the formValues state only if the submission is successful\r\n      if (submittedValues?.formisValid) {\r\n        setShowForm(false);\r\n        setIsLoading(true);\r\n        setFormValues(submittedValues);\r\n        let updatedData = null;\r\n        if (showFormType === \"Edit\" && selectedRows?.length) {\r\n          updatedData = await systemSettingsService.updateSystemSettings(submittedValues?.formData);\r\n        } else {\r\n          updatedData = await systemSettingsService.addSystemSettings(submittedValues?.formData);\r\n        }\r\n        if (updatedData?.status === \"success\") {\r\n          setSelected({});\r\n          setSelectedRows([]);\r\n          await systemSettingsService.getAllsystemSetupList().then((result) => {\r\n            console.log(result.data, \"result.data\");\r\n            setSystemData(result.data);\r\n            setInitialData(result.data);\r\n            setOrgSystemData(result.data);\r\n          });\r\n\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: updatedData?.msg,\r\n          });\r\n        } else {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"error\",\r\n            desc: updatedData?.msg,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n  const handleSubmitForm = async () => {\r\n    if (childCompRef.current) {\r\n      // Call the submitForm function exposed by the child component\r\n      await childCompRef.current.submitForm();\r\n    }\r\n  };\r\n\r\n  const fetchAllDetails = async () => {\r\n    const listValue = await systemSettingsService.getAllsystemSetupList();\r\n    console.log(listValue, 'listValue');\r\n    if (listValue?.data?.length) {\r\n      setSystemData(listValue?.data);\r\n      setInitialData(listValue?.data);\r\n      setOrgSystemData(listValue?.data);\r\n      return listValue?.data;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n  const applyFilterData = async (searchValue) => {\r\n    let systemDataValue = [];\r\n    setIsLoading(true);\r\n    if (orgSystemData.length === 0) {\r\n      systemDataValue = await fetchAllDetails();\r\n    } else {\r\n      systemDataValue = orgSystemData;\r\n    }\r\n    if (systemDataValue) {\r\n      const newFilteredData = systemDataValue.filter((setting) => {\r\n        return (!searchValue ? true : (JSON.stringify(setting).toLowerCase().includes(searchValue.toLowerCase())))\r\n      }) || [];\r\n      if (newFilteredData.length) {\r\n        setSystemData(newFilteredData);\r\n        setInitialData(newFilteredData);\r\n      } else {\r\n        setSystemData([]);\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const handleBackdropClick = (event) => {\r\n    // Prevent closing the dialog when clicking on the backdrop\r\n    event.stopPropagation();\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAllDetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && (Object.keys(selRowsData)?.map(key => (selRowsData[key])) || []);\r\n    if (selRowsDetails?.length) {\r\n      setSelectedRows(selRowsDetails);\r\n    }\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    console.log(searchValue, 'parent comp 2');\r\n    applyFilterData(searchValue);\r\n  }, [searchValue]);\r\n\r\n  console.log('parent comp');\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedUserData = sortedExportDataHOC(SystemSetup);\r\n    const sortedData = SortedUserData({ data: systemData, sortInfo, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setSystemData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"System Setup\" }]} />\r\n      </Box>\r\n\r\n      <div>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\">\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={() => {\r\n                setShowForm(true);\r\n                setShowFormType(\"Create\");\r\n              }}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={() => {\r\n                setShowForm(true);\r\n                setShowFormType(\"Edit\");\r\n              }}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <ExportDialogBox \r\n             systemData={systemData}\r\n             filterTemplateData={selectedRows} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br />\r\n\r\n        {isLoading ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Loader show={isLoading} />\r\n          </div>\r\n        ) : (\r\n          <DataGrid\r\n            idProperty=\"id\"\r\n            showZebraRows={false}\r\n            style={{ minHeight: 550 }}\r\n            columns={columns}\r\n            defaultLimit={100}\r\n              dataSource={sortInfo === null ? systemData : sortedSystemData}\r\n            // rowHeight={null}\r\n            checkboxColumn\r\n            selected={selected}\r\n            onSelectionChange={onSelectionChange}\r\n            handle={ref => gridRef.current = ref ? ref.current : null}\r\n            pagination\r\n            renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n            onSortInfoChange={handleSortInfoChange}\r\n            />\r\n        )}\r\n      </div>\r\n\r\n      {openDesc && (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      )}\r\n\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Setting\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Do you want to delete the selected Setting(s)?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteSetting}>Delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* MODAL BOX */}\r\n      <Dialog\r\n        open={showForm}\r\n        onClose={() => { setShowForm(false) }}\r\n        scroll={'paper'}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth={'md'}\r\n        fullWidth={true}\r\n        onClick={handleBackdropClick}\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">\r\n          {`${showFormType} system setup`}\r\n        </DialogTitle>\r\n        <DialogContent dividers={true}>\r\n          <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n            {/* Display the form values from the state if they exist */}\r\n            {/* {formValues && (\r\n              <div>\r\n                <h2>Form Values:</h2>\r\n                <pre>{JSON.stringify(formValues, null, 2)}</pre>\r\n              </div>\r\n            )} */}\r\n            <SystemSetupForm ref={childCompRef} saveForm={saveForm} selectedRows={selectedRows} editForm={showFormType} />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => { setShowForm(false) }}>Cancel</Button>\r\n          { }\r\n          <Button onClick={handleSubmitForm}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SystemSetup;\r\n","import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { LoginCallback } from '@okta/okta-react';\r\n\r\nconst RedirectRoute = ({ children }) => {\r\n  const location = useLocation();\r\n  const pathname = location.pathname;\r\n\r\n  if (pathname === \"/\" || pathname === \"/Dev\") {\r\n    return <Navigate to=\"/calist\" />;\r\n  }\r\n\r\n  if (pathname.startsWith(\"/login/callback\")) {\r\n    return <LoginCallback />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default RedirectRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CustomLoginCallback = () => {\r\n  const { oktaAuth, authState } = useOktaAuth();\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    console.log(\"🔄 Current URL after login:\", window.location.href);\r\n\r\n    if (authState?.isAuthenticated) {\r\n      const originalUrl = sessionStorage.getItem(\"original_uwaUrl\");\r\n      console.log(\"🔙 Redirecting back to:\", originalUrl);\r\n      if (originalUrl) {\r\n        window.location.replace(originalUrl); // Ensures widget reloads in same frame\r\n      }\r\n    }\r\n  }, [authState]);\r\n\r\n  const onSuccess = (user) => {\r\n    // Redirect the user to their intended destination or the home page\r\n    oktaAuth.redirect(\"/\");\r\n    // navigate('/');\r\n  };\r\n\r\n  const onError = (error) => {\r\n    // Handle any errors that may occur during the login process\r\n    console.error(\"Error during login callback:\", error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    oktaAuth.handleLoginRedirect().then(onSuccess).catch(onError);\r\n  }, [oktaAuth]);\r\n\r\n  return (\r\n    <div>\r\n      <h4>Loading...</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomLoginCallback;\r\n","import React, { useEffect } from \"react\";\r\nimport { useRoutes } from \"react-router-dom\";\r\n\r\nimport AuthGuard from \"app/auth/AuthGuard\";\r\nimport NotFound from \"app/views/sessions/NotFound\";\r\nimport UnauthorizedPage from \"app/unAuthorizedPage\";\r\nimport Homepage from \"app/homepage\";\r\nimport McoListRoutes from \"app/views/mcolist/McoListRoutes\";\r\n\r\nimport MatxLayout from \"./components/MatxLayout/MatxLayout\";\r\nimport templateRoutes from \"app/views/template/templateRoutes\";\r\nimport plantRoutes from \"app/views/plants/plantRoutes\";\r\nimport sourceListroutes from \"app/views/sourceList/sourceListroutes\";\r\nimport mappingsroutes from \"app/views/mappings/mappingsroutes\";\r\nimport buListRoutes from \"app/views/businessUnit/buRoutes\";\r\nimport userListRoutes from \"app/views/users/usersRoutes\";\r\n\r\n//Mapping pages\r\nimport orgallowedroutes from \"app/views/mappingPages/orgAllowedTemplates/orgallowedroutes\";\r\nimport mvocompatibilityRoutes from \"app/views/mappingPages/mvoTemplateCompatibility/mvocompatibiltyroutes\";\r\nimport parttypetotemplateroutes from \"app/views/mappingPages/partTypeToTemplate/parttypeTotemplateroutes\";\r\nimport mvoallowedchangesroutes from \"app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesroutes\";\r\nimport setcomptemproutes from \"app/views/mappingPages/setCompatibleTemplates/setcomptemproutes\";\r\nimport buplantroutes from \"app/views/mappingPages/buPlantMapping/buplantRoutes\";\r\nimport expensemaproutes from \"app/views/mappingPages/expenseMapping/expensemapRoutes\";\r\n\r\nimport draftChangesroutes from \"app/views/draftChanges/draftChangesroutes\";\r\nimport historyroutes from \"app/views/history/historyroutes\";\r\n\r\nimport systemSetupRoutes from \"app/views/systemSetup/systemSetupRoutes\";\r\n\r\nimport RedirectRoute from \"./RedirectRoute\";\r\nimport CustomLoginCallback from \"./CustomLoginCallback\";\r\n\r\nconst allChildroutes = [\r\n  ...McoListRoutes,\r\n  ...templateRoutes,\r\n  ...plantRoutes,\r\n  ...sourceListroutes,\r\n  ...mappingsroutes,\r\n  ...buListRoutes,\r\n  ...mvocompatibilityRoutes,\r\n  ...parttypetotemplateroutes,\r\n  ...mvoallowedchangesroutes,\r\n  ...setcomptemproutes,\r\n  ...orgallowedroutes,\r\n  ...buplantroutes,\r\n  ...expensemaproutes,\r\n  ...draftChangesroutes,\r\n  ...historyroutes,\r\n  ...userListRoutes,\r\n  ...systemSetupRoutes,\r\n];\r\n\r\nexport default function Router() {\r\n  useEffect(() => {\r\n    console.log(\"🧭 [Router] Routing loaded.\");\r\n  }, []);\r\n  const routes = [\r\n    {\r\n      element: (\r\n        <>\r\n          <AuthGuard>\r\n            <MatxLayout />\r\n          </AuthGuard>\r\n        </>\r\n      ),\r\n      children: allChildroutes,\r\n    },\r\n    {\r\n      path: \"/\",\r\n      element: <RedirectRoute />,\r\n    },\r\n    {\r\n      path: \"/login/callback\",\r\n      element: <CustomLoginCallback />,\r\n    },\r\n    {\r\n      path: \"/accessDenied\",\r\n      element: <UnauthorizedPage />,\r\n    },\r\n    {\r\n      path: \"/homepage\",\r\n      element: <Homepage />,\r\n    },\r\n    {\r\n      path: \"*\",\r\n      element: <NotFound />,\r\n    },\r\n  ];\r\n\r\n  let element = useRoutes(routes);\r\n  return element;\r\n}\r\n","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport SystemSetupList from \"./systemSetupList\";\r\n\r\nconst systemSetupRoutes = [{\r\n  path: \"/systemSetup\",\r\n  element: (\r\n    <PrivateRoute>\r\n      <SystemSetupList />\r\n    </PrivateRoute>\r\n  ),\r\n}];\r\n\r\nexport default systemSetupRoutes;\r\n","import React from \"react\";\r\nimport \"./Fallback.css\";\r\n\r\nconst Fallback = ({ componentStack, error }) => {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    // In production, render null to disable the error message\r\n    return null;\r\n  } else {\r\n    // In development or other environments, render a default error message\r\n    return (<>\r\n      <section className=\"fallback\">\r\n        <header className=\"fallback__header\">\r\n          <h3 className=\"fallback__title\">Oops! An error occured!</h3>\r\n        </header>\r\n        <div className=\"fallback__body\">\r\n          <p>\r\n            <strong>Error:</strong> {error.toString()}\r\n          </p>\r\n          <p>\r\n            <strong>Stacktrace:</strong> {componentStack}\r\n          </p>\r\n        </div>\r\n      </section>\r\n    </>)\r\n  }\r\n};\r\n\r\nexport default Fallback;\r\n","// import React, { useEffect, useState } from \"react\";\r\n// import { Provider } from \"react-redux\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { OktaAuth, toRelativeUrl } from \"@okta/okta-auth-js\";\r\n// import { Security } from \"@okta/okta-react\";\r\n\r\n// import config from \"./../config/config\";\r\n// import { Store } from \"./redux/Store\";\r\n// import Router from \"./routes\";\r\n// import { GlobalCss, MatxSuspense, MatxTheme } from \"app/components\";\r\n// import { ErrorBoundary } from \"react-error-boundary\";\r\n// import Fallback from \"./components/Fallback/Fallback\";\r\n// import { OracleMappingsProvider } from \"./contexts/OracleSettingsContext\";\r\n// import { SettingsProvider } from \"./contexts/SettingsContext\";\r\n// import DragAndDropComponent from \"DragAndDrop/DragAndDrop\";\r\n\r\n// const App = () => {\r\n//   const navigate = useNavigate();\r\n//   const [oktaAuth, setOktaAuth] = useState(null);\r\n//   const [hasDropped, setHasDropped] = useState(false);\r\n\r\n//   // Used by Okta to restore the original route\r\n//   const restoreOriginalUri = async (_oktaAuth, originalUri) => {\r\n//     navigate(toRelativeUrl(originalUri || \"/\", window.location.origin));\r\n//   };\r\n\r\n//   // Triggered when a route is protected and user is not authenticated\r\n//   const onAuthRequired = ({ oktaAuth }) => {\r\n//     oktaAuth.signInWithRedirect();\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const timer = setTimeout(() => {\r\n//       performance.mark(\"FirstContentfulPaint\");\r\n//     }, 1000);\r\n//     console.log(\"ENV:\", process.env.NODE_ENV);\r\n\r\n//     return () => clearTimeout(timer);\r\n//   }, []);\r\n\r\n//   // Show drag-and-drop first\r\n//   if (!hasDropped) {\r\n//     console.log(\r\n//       \"📦 Rendering DragAndDropComponent because hasDropped is false\"\r\n//     );\r\n//     return (\r\n//       <DragAndDropComponent\r\n//         onDropSuccess={(data) => {\r\n//           console.log(\"✅ Dropping complete:\", data);\r\n//           const auth = new OktaAuth(config.oidc);\r\n//           setOktaAuth(auth);\r\n//           setHasDropped(true);\r\n//         }}\r\n//       />\r\n//     );\r\n//   }\r\n\r\n//   // Once dropped but auth not initialized yet\r\n//   if (!oktaAuth) {\r\n//     return <div>Initializing authentication...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <ErrorBoundary FallbackComponent={Fallback} onReset={() => {}}>\r\n//       <Provider store={Store}>\r\n//         <SettingsProvider>\r\n//           <MatxTheme>\r\n//             <GlobalCss />\r\n//             <MatxSuspense>\r\n//               <Security\r\n//                 oktaAuth={oktaAuth}\r\n//                 restoreOriginalUri={restoreOriginalUri}\r\n//                 onAuthRequired={onAuthRequired}\r\n//               >\r\n//                 <OracleMappingsProvider>\r\n//                   <Router />\r\n//                 </OracleMappingsProvider>\r\n//               </Security>\r\n//             </MatxSuspense>\r\n//           </MatxTheme>\r\n//         </SettingsProvider>\r\n//       </Provider>\r\n//     </ErrorBoundary>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter, useNavigate } from \"react-router-dom\";\r\nimport { OktaAuth, toRelativeUrl } from \"@okta/okta-auth-js\";\r\nimport { Security } from \"@okta/okta-react\"; // Import useOktaAuth\r\nimport config from \"./../config/config\";\r\nimport { Store } from \"./redux/Store\";\r\nimport Router from \"./routes\";\r\nimport { GlobalCss, MatxSuspense, MatxTheme } from \"app/components\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport Fallback from \"./components/Fallback/Fallback\";\r\nimport { OracleMappingsProvider } from \"./contexts/OracleSettingsContext\";\r\nimport { SettingsProvider } from \"./contexts/SettingsContext\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport { StyledEngineProvider } from \"@mui/system\";\r\nimport { CssBaseline } from \"@mui/material\";\r\n\r\nconst oktaAuth = new OktaAuth(config.oidc);\r\noktaAuth.options.transformAuthState = async (oktaAuth, authState) => {\r\n  console.log(\"🔍 [OKTA] transformAuthState called\");\r\n  console.log(\"AuthState:\", JSON.stringify(authState, null, 2));\r\n};\r\n\r\noktaAuth.options.devMode = true; // This turns on some internal dev logging\r\nconsole.log(\"🛂 Okta Auth Config:\", JSON.stringify(config.oidc, null, 2));\r\nconsole.log(\"🔐 oktaAuth instance:\", oktaAuth);\r\n\r\nconst App = () => {\r\n  const navigate = useNavigate();\r\n  const restoreOriginalUri = (oktaAuth, originalUri) => {\r\n    console.log(\"✅ [OKTA] restoreOriginalUri fired\");\r\n    console.log(\"➡️ originalUri:\", originalUri);\r\n    console.log(\"➡️ window.location.origin:\", window.location.origin);\r\n    // const relativeUrl = toRelativeUrl(originalUri || \"/\", window.location.origin);\r\n    // console.log(\"➡️ Redirecting to relativeUrl:\", relativeUrl);\r\n  \r\n    navigate(\"/calist\");\r\n  };\r\n  const onAuthRequired = function () {\r\n    console.warn(\"⚠️ [OKTA] onAuthRequired triggered. User is unauthenticated.\");\r\n    console.log(\"🔁 Redirecting to /calist (MemoryRouter safe)\");\r\n    navigate(\"/calist\");\r\n  };\r\n  // if (!sessionStorage.getItem(\"original_uwaUrl\")) {\r\n  //   const currentUrl = window.location.href;\r\n  //   console.log(\"🌐 Initial Widget URL:\", currentUrl);\r\n  //   sessionStorage.setItem(\"original_uwaUrl\", currentUrl);\r\n  // }\r\n\r\n  useEffect(() => {\r\n    console.log(\"🚀 App mounted.\");\r\n    console.log(\"🔗 Current Hash:\", window.location.hash);\r\n    console.log(\"🌐 Current URL:\", window.location.href);\r\n    console.log(\"📦 Process Env:\", process.env.NODE_ENV);\r\n\r\n    const timer = setTimeout(() => {\r\n      const performanceMarkName = \"FirstContentfulPaint\";\r\n      performance.mark(performanceMarkName);\r\n    }, 1000);\r\n\r\n    console.log(process.env.NODE_ENV, \"process.env.NODE_ENV\");\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"🚀 App mounted.\");\r\n    console.log(\"🔗 window.location.hash:\", window.location.hash);\r\n  }, []);\r\n\r\n  return (\r\n    <ErrorBoundary\r\n      FallbackComponent={Fallback}\r\n      onReset={(details) => {\r\n        // Reset the state of your app so the error doesn't happen againn\r\n      }}\r\n    >\r\n      <Provider store={Store}>\r\n        <SettingsProvider>\r\n          <MatxTheme>\r\n            <GlobalCss />\r\n            <MatxSuspense>\r\n              <Security\r\n                oktaAuth={oktaAuth} // Use authService instead of creating a new instance\r\n                restoreOriginalUri={restoreOriginalUri}\r\n                onAuthRequired={onAuthRequired}\r\n              >\r\n                <OracleMappingsProvider>\r\n                  <Router />\r\n                </OracleMappingsProvider>\r\n              </Security>\r\n            </MatxSuspense>\r\n          </MatxTheme>\r\n        </SettingsProvider>\r\n      </Provider>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default App;\r\n// createRoot(document.getElementById(\"root\")).render(\r\n//   <StyledEngineProvider injectFirst>\r\n//     <HashRouter>\r\n//       <CssBaseline />\r\n//       <App />\r\n//     </HashRouter>\r\n//   </StyledEngineProvider>\r\n// );\r\n","// import React from \"react\";\r\n// import ReactDOM from \"react-dom/client\";\r\n// import { BrowserRouter, HashRouter, MemoryRouter } from \"react-router-dom\";\r\n// import { CssBaseline } from \"@mui/material\";\r\n// import { StyledEngineProvider } from \"@mui/styled-engine\";\r\n\r\n// // This function mounts the React app.\r\n// let root = null; // Global React root\r\n\r\n// function start() {\r\n//   if (typeof requirejs === \"undefined\") {\r\n//     console.error(\"❌ requirejs is not defined. PlatformAPI won't load.\");\r\n//     return;\r\n//   }\r\n\r\n//   requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n//     window.PlatformAPI = PlatformAPI;\r\n\r\n//     // ⏬ Dynamically import App after PlatformAPI is loaded\r\n//     import(\"./app/App\").then(({ default: App }) => {\r\n//       // Find the root element within the widget's body (if available)\r\n//       let rootElement =\r\n//         window.widget?.body?.querySelector(\"#root\") ||\r\n//         document.getElementById(\"root\");\r\n\r\n//       console.log(\"Root element is: \", rootElement);\r\n//       // If no root element exists, create one and append it\r\n//       if (!rootElement) {\r\n//         rootElement = document.createElement(\"div\");\r\n//         rootElement.id = \"root\";\r\n//         if (window.widget && window.widget.body) {\r\n//           window.widget.body.appendChild(rootElement);\r\n//         } else {\r\n//           document.body.appendChild(rootElement);\r\n//         }\r\n//       }\r\n\r\n//       // Create or reuse the root\r\n//       if (!root) {\r\n//         root = ReactDOM.createRoot(rootElement);\r\n//       }\r\n\r\n//       root.render(\r\n//         <StyledEngineProvider injectFirst>\r\n//           <HashRouter>\r\n//             <CssBaseline />\r\n//             <App />\r\n//           </HashRouter>\r\n//         </StyledEngineProvider>\r\n//       );\r\n//     });\r\n//   });\r\n// }\r\n\r\n// export default function () {\r\n//   if (window.widget) {\r\n//     let hasOnLoadRun = false;\r\n\r\n//     window.widget.addEvent(\"onLoad\", () => {\r\n//       if (hasOnLoadRun) return;\r\n//       hasOnLoadRun = true;\r\n//       start();\r\n//     });\r\n//   } else {\r\n//     console.error(\r\n//       \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n//     );\r\n//   }\r\n// }\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./app/App\";\r\nimport { BrowserRouter, HashRouter, MemoryRouter } from \"react-router-dom\";\r\n\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport { StyledEngineProvider } from \"@mui/styled-engine\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  const initialEntries = [\"/\"];\r\n\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <StyledEngineProvider injectFirst>\r\n      <MemoryRouter initialEntries={initialEntries}>\r\n        <CssBaseline />\r\n        <App />\r\n      </MemoryRouter>\r\n    </StyledEngineProvider>\r\n  );\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n","\r\nimport {\r\n    REACT_APP_ENOVIA_API_URL,\r\n    REACT_APP_ENOVIA_API_HEADER,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n    BACKEND_API_URL,\r\n    SAP_API_BASE_URL\r\n} from '../config'\r\nimport ApiInstance from './ApiInstance';\r\nimport { Store } from \"app/redux/Store\";\r\n// import BUService from './buService';\r\nimport axios from 'axios';\r\n\r\n\r\n// let buService = new BUService();\r\nlet selectedMCODetailsResponse = []; \r\nexport default class SaaSExecutionService {\r\n    searchCA = (filters) => {\r\n        let searchCAPayload = {\r\n            \"Operation\": \"CA-Search\",\r\n            \"Headers\": {\r\n                \"securityContext\": \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n                \"senderID\": \"EMRPDH\",\r\n                \"TargetID\": \"3DX\",\r\n                \"BusinessGroup\": \"ENOVIA\"\r\n            },\r\n            \"queryParams\": {\r\n                \"searchStr\": `${filters.searchPattern}`,\r\n                \"&$top\": \"10\",\r\n                \"instance\": \"SaaS\"\r\n            },\r\n            \"Requestdata\": \"\"\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/searchCA`, searchCAPayload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n\r\n   \r\n         \r\n    getCARelatedMco = (params) => {  \r\n        let payloadBody = {\r\n            \"queryParams\": {\r\n                \"id\": params?.ca_id,\r\n                \"operation\": \"flowDown\",\r\n                \"instance\": \"SaaS\"\r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caDetails`, payloadBody, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n  \r\n    \r\n    searchMCO = (filters, instance) => { \r\n        let searchCAPayload = {\r\n            \"Operation\": \"CA-Search-flowDown\",\r\n            \"Headers\": {\r\n                \"securityContext\": \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n                \"senderID\": \"EMRPDH\",\r\n                \"TargetID\": \"3DX\",\r\n                \"BusinessGroup\": \"ENOVIA\"\r\n            },\r\n            \"queryParams\": \r\n                {\r\n                    \"searchStr\": `${filters.searchPattern}`,\r\n                    \"&$top\": \"10\",\r\n                    \"instance\": \"SaaS\"\r\n                },\r\n            \r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/searchCA`, searchCAPayload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    \r\n    getMCOdetailById = (params) => {\r\n        let payloadBody = {\r\n            \"queryParams\": {\r\n                \"ids\": [{\"id\":params?.mco_id}],\r\n                \"operation\": \"CA-Details\",\r\n                \"instance\": \"SaaS\",\r\n                \r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caDetails`, payloadBody, headersBody).then((res) => {            \r\n            if (res.status === 200) {\r\n                res.data.map((item) => {\r\n                    if(item.mcoPropeties.id === params?.mco_id){\r\n                        selectedMCODetailsResponse.push(item);\r\n                    }\r\n                })\r\n                // return res.data;\r\n                return selectedMCODetailsResponse[selectedMCODetailsResponse && selectedMCODetailsResponse.length-1];\r\n            }\r\n            throw selectedMCODetailsResponse[0];\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    updateMCOdetails = (data) => {\r\n        return axios.put(`${REACT_APP_ENOVIA_API_URL}/productHierarchy/classify`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    validationByMcoId = (id) => {\r\n        let data = {pass:true};\r\n        return Promise.resolve(data);\r\n        // return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/validate/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n        //     if (res.status === 200) {\r\n        //         return res.data;\r\n        //     }\r\n        //     throw res.data;\r\n        // }).catch((e) => {\r\n        //     return e;\r\n        // });\r\n    };\r\n    getItemDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/erp/item/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBomDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/bom/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    changeStateByMcoId = (id, nextState, obj) => {\r\n        let payload = {            \r\n            \"id\": id,\r\n            \"nextState\": nextState,\r\n            \"instance\": \"SaaS\"\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caMcoPromoteDemote`, payload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data[0];\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    routeStart = (routeId) => {      \r\n        let payload = {\r\n          Operation: \"routeStart\", // Required field\r\n          Headers: {\r\n            securityContext: \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n            senderID: \"EMRPDH\",\r\n            TargetID: \"3DX\",\r\n            BusinessGroup: \"ENOVIA\"\r\n          },\r\n          Requestdata: {\r\n            data: [\r\n              {\r\n                \"id\": routeId  //  Send directly here\r\n              }\r\n            ]\r\n          },\r\n          instance: \"SaaS\" // still needed for backend route mapping\r\n        };\r\n      \r\n        let headersBody = {\r\n          'client_id': 123,\r\n          'client_secret': 456\r\n        };\r\n      \r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/routeStart`, payload, headersBody)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data; \r\n              }\r\n              throw new Error(\"Route start failed or not initiated\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"routeStart error:\", error);\r\n            throw error;\r\n          });\r\n      };\r\n   \r\n    getTaskList = (routeId) => {      \r\n        let payload = {\r\n          Operation: \"taskList\", // Required field\r\n          Headers: {\r\n            securityContext: \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n            senderID: \"EMRPDH\",\r\n            TargetID: \"3DX\",\r\n            BusinessGroup: \"ENOVIA\"\r\n          },\r\n          Requestdata: {\r\n            data: [\r\n              {\r\n                \"id\": routeId  //  Send directly here\r\n              }\r\n            ]\r\n          },\r\n          instance: \"SaaS\" // still needed for backend route mapping\r\n        };\r\n      \r\n        let headersBody = {\r\n          'client_id': 123,\r\n          'client_secret': 456\r\n        };\r\n      \r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/getTaskList`, payload, headersBody)\r\n          .then((res) => {\r\n            if (res.status === 200 && Array.isArray(res.data) && res.data.length > 0) {\r\n                return res.data; \r\n           \r\n              }\r\n              throw new Error(\"No task data found\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching task list:\", error);\r\n            throw error;\r\n          });\r\n      };\r\n\r\n      taskApproval = (taskId) => {\r\n        let payload = {\r\n          Operation: \"taskApproval\",\r\n          Headers: {\r\n            securityContext: \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n            senderID: \"EMRPDH\",\r\n            TargetID: \"3DX\",\r\n            BusinessGroup: \"ENOVIA\"\r\n          },\r\n          Requestdata: {\r\n            data: [\r\n              {\r\n                dataelements: {\r\n                  id: taskId,\r\n                  routeTaskApprovalComments: \"Approve\",\r\n                  routeTaskDueDate: \"\",\r\n                  state: \"Complete\",\r\n                  routeTaskApprovalAction: \"Approve\"\r\n                },\r\n                updateAction: \"MODIFY\"\r\n              }\r\n            ]\r\n          },\r\n          instance: \"SaaS\"\r\n        };\r\n      \r\n        const headersBody = {\r\n          client_id: 123,\r\n          client_secret: 456\r\n        };\r\n      \r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/taskApproval`, payload, headersBody)\r\n          .then(res => {\r\n            if (res.status === 200) return res.data;\r\n            throw res.data;\r\n          })\r\n          .catch(error => {\r\n            console.error(\"❌ Task Approval Error:\", error);\r\n            throw error;\r\n          });\r\n      };\r\n      \r\n      \r\n    updateMCOData = (id, data) => {\r\n        let payload = {            \r\n            \"uriParams\": {\r\n                \"identifier\": id,\r\n                'startDate': data['Start Date'],\r\n                'description': data['description'],\r\n                \"data\": data,\r\n                \"instance\": \"SaaS\"\r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caMcoModify`, payload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };    \r\n    ApproveCAMCO = (data) => {\r\n        let payload = {            \r\n            \"uriParams\": {\r\n                'id': data.id,\r\n                'type': data.type,\r\n                'currentStatus': data.currentStatus\r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caMcoApprove`, payload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    \r\n    getDataForClassificationyMCONames = (data) => {        \r\n        //  Filter out invalid entries (where `name` or `id` is undefined)\r\n        const validData = data.filter(item => item?.name && item?.id);\r\n        if (validData.length === 0) {\r\n            console.error(\"No valid data to send in API request!\");\r\n            return Promise.reject(\"Invalid data - No valid MCO entries.\");\r\n        }\r\n    \r\n\r\n        let payloadBody = {\r\n            \"queryParams\": {\r\n                \"ids\": validData,\r\n                \"operation\": \"CA-Details\",\r\n                \"instance\": \"SaaS\"\r\n            }\r\n        }\r\n     \r\n\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caDetails`, payloadBody, headersBody).then((res) => {            \r\n            if (res.status === 200) {                              \r\n                return res.data;\r\n            }               \r\n            }).then((data)=>{                \r\n                const formattedResponse = {};\r\n                data.forEach(item => {\r\n                    if (item?.mcoPropeties?.name) {\r\n                        formattedResponse[item.mcoPropeties.name] = item;\r\n                    }\r\n                });\r\n                return formattedResponse;\r\n            }).catch((e) => {\r\n                throw e;\r\n            });        \r\n    };\r\n    updateMCOObjects = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMCOObjects/mcoList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRSMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRSMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMRpartList = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMR/partList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSpecDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getSpecDetails/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoPropertyDetails = (mcoName) => {\r\n        let params = {\r\n            mco_id: mcoName,\r\n            isBasics: true\r\n        }\r\n        this.getMCOdetailById(params).then((res)=>{\r\n            if(res){\r\n                return res?.mcoPropeties;\r\n            }\r\n        }).catch((error)=>{\r\n        })\r\n        \r\n        // return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/name/${mcoName}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n        //     if (res.status === 200) {\r\n        //         return res.data;\r\n        //     }\r\n        //     throw res.data;\r\n        // }).catch((e) => {\r\n        //     return e;\r\n        // });\r\n    };\r\n    getMRbyPartAndPlant = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRbyPartAndPlant`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getSourcePlantTemplate = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/sourceList/getSourcePlantTemplate`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getBusinessUnitbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/bu/getBusinessUnitbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getMRRelatedDetailsbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRRelatedDetailsbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    \r\n    getLifeCycleStatusByMCOName = (data) => {\r\n        const validData = data.filter(name => name !== null && name !== undefined);\r\n        if (validData.length === 0) {\r\n            console.error(\"No valid MCO names to send in API request!\");\r\n            return Promise.reject(\"Invalid data - No valid MCO names.\");\r\n        }\r\n        return ApiInstance.post(`${BACKEND_API_URL}/status/getLifeCycleStatusByMCOName`, validData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error(\"API Error:\", e);\r\n            return e;\r\n        });\r\n    };\r\n    getMcoDetailsByName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getMcoDetailsByName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getattributesbyid = (data) => {\r\n        return new Promise(async (reject,resolve)=>{\r\n           await  ApiInstance.post(`${BACKEND_API_URL}/mco/getattributesbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n                if (res.status === 200) {\r\n                    resolve(res.data);\r\n                }\r\n                reject(res.data);\r\n            \r\n        })})\r\n    }\r\n    updateattributesbyid = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updateattributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    sendMCO = (payloadData) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/muleSoftServices/sendMCO`, payloadData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    \r\n}","import {\r\n    REACT_APP_ENOVIA_API_URL,\r\n    REACT_APP_ENOVIA_API_HEADER,\r\n    REACT_APP_ENOVIA_CLOUD_API_URL,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n    BACKEND_API_URL\r\n} from '../config';\r\nimport { Store } from \"app/redux/Store\";\r\nimport ApiInstance from './ApiInstance';\r\nimport axios from 'axios';\r\n\r\nconst getGlobalData = () => {\r\n    const StoreDetails = Store.getState();\r\n    const instanceType = StoreDetails?.globalData?.instanceType;\r\n    const enoviaApi = (instanceType === \"Cloud\") ? REACT_APP_ENOVIA_CLOUD_API_URL : REACT_APP_ENOVIA_API_URL;\r\n    return enoviaApi;\r\n}\r\n\r\nexport default class OnPremExecutionService {\r\n    searchCA = (filters) => {\r\n        return axios.post(`${getGlobalData()}/erp/findObjects`, filters, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    getCARelatedMco = (params) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/CAid/${params?.ca_id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    searchMCO = (filters, instance) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/erp/findMCOObjects`, filters, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    searchMCO_old = (filters) => { //Removed\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/erp/findObjects`, filters, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    getMCOdetailById = (params) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/productHierarchy/classes/${params?.mco_id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMCOdetails = (data) => {\r\n        return axios.put(`${REACT_APP_ENOVIA_API_URL}/productHierarchy/classify`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    validationByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/validate/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getItemDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/erp/item/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBomDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/bom/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    changeStateByMcoId = (id, status, data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/changeState/${id}/${status}`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMCOData = (id, data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMCOData/${id}`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getDataForClassificationyMCONames = (data) => {\r\n        let mcoNames = data?.names;\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/getDataForClassificationyMCONames/mcoList`, mcoNames, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMCOObjects = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMCOObjects/mcoList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRSMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRSMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMRpartList = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMR/partList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            console.log(\"hey vara here===========================================\", res);\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSpecDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getSpecDetails/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoPropertyDetails = (mcoName) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/name/${mcoName}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMRbyPartAndPlant = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRbyPartAndPlant`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getSourcePlantTemplate = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/sourceList/getSourcePlantTemplate`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {                \r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getMRRelatedDetailsbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRRelatedDetailsbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBusinessUnitbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/bu/getBusinessUnitbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getLifeCycleStatusByMCOName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/status/getLifeCycleStatusByMCOName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoDetailsByName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getMcoDetailsByName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getattributesbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getattributesbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    updateattributesbyid = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updateattributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    sendMCO = (payloadData) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/muleSoftServices/sendMCO`, payloadData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n}","\r\nimport {\r\n    BACKEND_API_URL,\r\n    REACT_APP_ENOVIA_API_URL,\r\n    REACT_APP_ENOVIA_CLOUD_API_URL,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n    REACT_APP_ENOVIA_API_HEADER,\r\n    REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n} from '../config'\r\nimport axios from 'axios';\r\nimport ApiInstance from './ApiInstance';\r\nimport partWith100Items from \"app/utils/mcoUtils/100partsdata.json\";\r\nimport partWith50Items from \"app/utils/mcoUtils/50partsdata.json\";\r\nimport SaaSExecutionService from \"./SaaSExecutionService\";\r\nimport OnPremExecutionService from \"./OnPremExecutionService\";\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\n\r\n\r\nlet executionClass;\r\nlet instance;\r\n\r\nexport class MCOService {\r\n    getInstanceDetail = () => {\r\n        instance = localStorage.getItem('instance');        \r\n        switch(instance) {\r\n            case \"onPrem\":\r\n                executionClass = new OnPremExecutionService();\r\n                break;\r\n            case \"SaaS\":\r\n                executionClass = new SaaSExecutionService();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    searchCA = (filters) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.searchCA(filters);\r\n    };\r\n    getCARelatedMco = (params) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getCARelatedMco(params);\r\n    };\r\n    searchMCO = (filters) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.searchMCO(filters, instance);\r\n    };\r\n    getMCOdetailById = (params) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMCOdetailById(params);\r\n    };\r\n    updateMCOdetails = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMCOdetails(data)\r\n    };\r\n    validationByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.validationByMcoId(id);\r\n    };\r\n    getItemDetailsByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getItemDetailsByMcoId(id);\r\n    };\r\n    getBomDetailsByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getBomDetailsByMcoId(id)\r\n    };\r\n    changeStateByMcoId = (id, status, data, action) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.changeStateByMcoId(id, status, data)\r\n    };\r\n    updateMCOData = (id, data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMCOData(id, data);\r\n    };\r\n    getDataForClassificationyMCONames = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getDataForClassificationyMCONames(data);\r\n    };\r\n    updateMCOObjects = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMCOObjects(data);\r\n    };\r\n    getRSMEList = () => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getRSMEList();\r\n    };\r\n    getRMEList = () => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getRMEList();\r\n    };\r\n    updateMRpartList = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMRpartList(data);\r\n    };\r\n    getSpecDetailsByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getSpecDetailsByMcoId(id);\r\n    };\r\n    getMcoPropertyDetails = (mcoName) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMcoPropertyDetails(mcoName);\r\n    };\r\n    ApproveCAMCO = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.ApproveCAMCO(data);\r\n    }\r\n    routeStart = (routeId) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.routeStart(routeId);\r\n    };\r\n    getTaskList = (routeId) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getTaskList(routeId);\r\n    };\r\n\r\n    taskApproval = (taskId) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.taskApproval(taskId);\r\n    };\r\n\r\n    // ==================MULE SERVICE================================\r\n    getMuleToken = () => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/muleSoftServices/getMuleToken`, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    sendMCO = (payloadData) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.sendMCO(payloadData);\r\n    };\r\n    sendAutoReleaseMCOs = (payloadData) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/muleSoftServices/sendAutoReleaseMCOs`, payloadData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };    \r\n    // ================================================\r\n    // =====================PLM BACKEND===============\r\n\r\n    // Attributes\r\n    getattributesbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getattributesbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoDetailsByName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getMcoDetailsByName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    addattributes = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/addattributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    mcoStatusValidation = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/mcoStatusValidation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateattributesbyid = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateattributesbyid(data);\r\n    };\r\n\r\n    updatePartListAndAttributes = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updatePartListAndAttributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    updatePartListAndAddAttributes = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updatePartListAndAddAttributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    getTemplateDetails = () => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/template/gettemplate`, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getPlantData = (data) => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/plant/getplants`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSourceData = (data) => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/sourceList/getSource`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMappingsData = (data) => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/api/mappings`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    itemvalidationbymcoid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/acknowledgement/itemvalidation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    BOMvalidationbymcoid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/acknowledgement/bomValidation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateFinalAcksDetails = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updateFinalAcksDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    callLoggingInfo = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/log/addLogInfo`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    getERPStatus = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/acknowledgement/getacknowledgementByItemId`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSourcePlantTemplate = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getSourcePlantTemplate(data);\r\n    };\r\n    mcoRuleValidation = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/item/validation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMRRelatedDetailsbyid = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMRRelatedDetailsbyid(data);\r\n    };\r\n    addMRRelatedDetails = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/addMRRelatedDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMRRelatedDetails = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mrRelatedDetails/updateMRRelatedDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMRbyPartAndPlant = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMRbyPartAndPlant(data);        \r\n    };\r\n    getMRForCAbyPartAndPlant = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRForCAbyPartAndPlant`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getChildPartDetails = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getChildPartDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBusinessUnitbyid = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getBusinessUnitbyid(data);\r\n    };\r\n    getMRDetailsByPartName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRDetailsByPartName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getLifeCycleStatusByMCOName = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getLifeCycleStatusByMCOName(data);\r\n    };\r\n    updateLifeCycleStatus = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/status/updateLifeCycleStatus`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    massUpdatePartDescription = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/massUpdate/massUpdatePartDescription`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    searchSpecCreationbyKey = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/specCreation/searchSpecCreationbykeyword`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    resendSpecCreation = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/specCreation/resendSpecCreation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    searchObsoletePartbyKey = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/obsoletePart/searchObsoletePartbykeyword`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    resendObsoletePart = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/obsoletePart/resendObsoletePart`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    bulkUploadPartAndTemplate = (data) => {\r\n        return ApiInstance\r\n            .post(\r\n                `${BACKEND_API_URL}/mco/bulkUploadPartAndOracleTemp`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"bulkAddTemplate\", e);\r\n                return [];\r\n            });\r\n    }\r\n    downloadSampleFile = (fileName) => {\r\n        window.open(`${BACKEND_API_URL}/${fileName}`);\r\n    }\r\n    exportMCOData = (data) => {\r\n        return ApiInstance\r\n          .post(\r\n            `${BACKEND_API_URL}/mco/exportMCOData`,\r\n            data,\r\n            REACT_APP_BACKEND_API_HEADER\r\n          )\r\n          .then(async (res) => {\r\n            if (res.status === 200) {\r\n              const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n              try {\r\n                const response = await fetch(fileUrl, {\r\n                  method: 'GET',\r\n                  headers: {\r\n                    'Content-Type': 'application/octet-stream',\r\n                    'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n                  }\r\n                });  \r\n                if (!response.ok) {\r\n                  throw new Error('Failed to fetch the file');\r\n                }  \r\n                const fileBlob = await response.blob();\r\n                const downloadUrl = URL.createObjectURL(fileBlob);\r\n      \r\n                const link = document.createElement('a');\r\n                link.href = downloadUrl;\r\n                link.download = res.data.filePath; \r\n                link.click();\r\n                URL.revokeObjectURL(downloadUrl);\r\n              } catch (error) {\r\n                console.error('Error downloading the file:', error);\r\n              }  \r\n              return res.data;\r\n            }\r\n            throw res.data;\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error in exportTemplate:', error);\r\n            throw error;\r\n          });\r\n    };\r\n    exportTableData = (data) => {\r\n        return ApiInstance\r\n          .post(\r\n            `${BACKEND_API_URL}/exportData/exportTableData`,\r\n            data,\r\n            REACT_APP_BACKEND_API_HEADER\r\n          )\r\n          .then(async (res) => {\r\n            if (res.status === 200) {\r\n              const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n              try {\r\n                const response = await fetch(fileUrl, {\r\n                  method: 'GET',\r\n                  headers: {\r\n                    'Content-Type': 'application/octet-stream',\r\n                    'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n                  }\r\n                });  \r\n                if (!response.ok) {\r\n                  throw new Error('Failed to fetch the file');\r\n                }  \r\n                const fileBlob = await response.blob();\r\n                const downloadUrl = URL.createObjectURL(fileBlob);\r\n      \r\n                const link = document.createElement('a');\r\n                link.href = downloadUrl;\r\n                link.download = res.data.filePath; \r\n                link.click();\r\n                URL.revokeObjectURL(downloadUrl);\r\n              } catch (error) {\r\n                console.error('Error downloading the file:', error);\r\n              }  \r\n              return res.data;\r\n            }\r\n            throw res.data;\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error in exportTemplate:', error);\r\n            throw error;\r\n          });\r\n    };\r\n    getMcoHistorybyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mcoHistory/getMcoHistorybyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n}","import { CircularProgress } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nconst StyledLoading = styled('div')(() => ({\r\n  width: '100%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  '& img': {\r\n    width: 'auto',\r\n    height: '25px',\r\n  },\r\n  '& .circleProgress': {\r\n    position: 'absolute',\r\n    left: -7,\r\n    right: 0,\r\n    top: 'calc(50% - 25px)',\r\n  },\r\n}));\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <StyledLoading>\r\n      <Box position=\"relative\">\r\n        <img src=\"/assets/images/logo-circle.svg\" alt=\"\" />\r\n        <CircularProgress className=\"circleProgress\" />\r\n      </Box>\r\n    </StyledLoading>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","export const topBarHeight = 64\r\nexport const sideNavWidth = 260\r\nexport const navbarHeight = 60\r\nexport const sidenavCompactWidth = 80\r\nexport const containedLayoutWidth = 1200"],"names":["useOracleSettings","useContext","OracleSettingsContext","BreadcrumbRoot","styled","display","flexWrap","alignItems","BreadcrumbName","margin","fontSize","paddingBottom","verticalAlign","textTransform","SubName","_ref","theme","color","palette","text","secondary","StyledIcon","_ref2","marginLeft","hint","Icon","marginBottom","_ref3","routeSegments","useTheme","_jsx","children","_jsxs","Breadcrumbs","separator","sx","position","NavLink","to","map","route","index","length","path","name","shortId","StyledAvatar","Avatar","height","width","StatusCircle","status","bottom","right","borderRadius","border","background","primary","main","error","src","Box","ChatContainer","flexDirection","StyledScrollBar","ScrollBar","flexGrow","ProfileBox","justifyContent","padding","ChatStatus","marginTop","fontWeight","ChatMessage","maxWidth","whiteSpace","wordBreak","MessageTime","_ref4","ChatImgContainer","_ref5","ChatImgBox","_ref6","ChatImg","ChatImgSize","globalMessageList","_ref7","togglePopup","isAlive","setIsAlive","useState","message","setMessage","messageList","setMessageList","currentUserId","chatBottomRef","document","querySelector","dummyReply","async","setTimeout","messageObject","contactId","avatar","push","scrollToBottom","useCallback","scrollTo","top","scrollHeight","behavior","useEffect","time","id","mood","textPrimary","ChatAvatar","H5","Span","IconButton","onClick","item","ind","p","ml","mb","alt","H6","mt","Divider","convertHexToRGB","TextField","placeholder","multiline","rowsMax","fullWidth","InputProps","endAdornment","size","classes","root","value","onChange","e","target","onKeyUp","event","key","shiftKey","tempMessage","trim","tempList","PopupRoot","topBarHeight","breakpoints","down","Popup","spacing","transition","boxShadow","shadows","zIndex","overflow","left","icon","open","setOpen","cloneElement","className","clsx","popupOpen","textAlign","marginRight","paddingTop","Button","paddingLeft","paddingRight","backgroundColor","fallbacks","MenuButton","action","hover","props","anchorEl","setAnchorEl","React","toArray","shouldCloseOnItemClick","horizontalPosition","settings","useSettings","handleClose","Fragment","currentTarget","menuButton","ThemeProvider","themes","activeTheme","Menu","elevation","getContentAnchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","child","LinearProgress","outline","default","Suspense","fallback","MatxLoading","CssBaseline","NavExpandRoot","transform","common","white","BaseButton","ButtonBase","BulletIcon","contrastText","ItemText","BadgeValue","MatxVerticalNavExpansionPanel","mode","collapsed","setCollapsed","elementRef","useRef","componentHeight","pathname","useLocation","iconText","badge","calcaulateHeight","node","current","getAttribute","compactNavItem","_e$target","closest","handleClick","sidenavHoverShow","collapseIcon","expandIcon","ref","style","maxHeight","Alert","MuiAlert","variant","StyledTable","Table","VisuallyHiddenInput","clip","clipPath","Dialog","_importResponse$error","_importResponse$error2","_importResponse$error3","_importResponse$error4","_importResponse$error5","_importResponse$error6","_importResponse$error7","_importResponse$error8","BUService","massUpdate","MassUpdate","importMassupdateFile","setImportMassupdateFile","setOpenAlert","setOpenDesc","setIsLoading","noFileError","setNoFileError","importResponse","setImportResponse","importfileBar","setimportfileBar","importedFileData","setImportedFileData","importedFileName","setImportedFileName","sampleFileUrl","setSampleFileUrl","instance","localStorage","getItem","bussinessUnitLists","BUError","setBUError","importSelectionValues","setImportSelectionValues","BU","handleImportfileBarClose","reason","_Fragment","PaperProps","DialogTitle","cursor","DialogContent","DialogContentText","TableBody","TableRow","TableCell","align","FormControl","InputLabel","Select","labelId","label","prevselectedValues","option","MenuItem","buName","component","startIcon","CloudUploadIcon","type","accept","console","log","file","files","fileType","split","pop","colSpan","handleDownload","downloadSampleFile","download","rel","DialogActions","handleImportFile","hasError","window","confirm","postData","data","Instance","massUpdatePartDescription","then","response","severity","desc","msg","autoFocus","handleCloseImport","Snackbar","autoHideDuration","errorInTemplate","errorInPlants","AlertTitle","errorInTemplateCount","eitem","errorInPlantCount","updateTemplates","templateMappingService","TemplateMappingService","exportAllTempMapping","setExportAllTempMapping","openAlert","openDesc","dataToExport","handleImportOptionSelection","info","RadioGroup","row","defaultValue","FormControlLabel","control","Radio","rdo","exportAllTemplateMapping","CustomAlertBox","exportAllAdminGeneralPropertiesDialog","setExportAllAdminGeneralPropertiesDialog","exportAllAdminGeneralProperties","exportAllAdminSystemSetupsDialog","setExportAllAdminSystemSetupsDialog","exportAllAdminSystemSetups","ListLabel","Paragraph","ExtAndIntCommon","textDecoration","ExternalLink","InternalLink","StyledText","StyledTextforMassUpdate","MatxVerticalNav","items","updateSettings","isLoading","layout1Settings","leftSidebar","isMdScreen","useMediaQuery","handleClickImportButton","handleNavLinkClick","updateSidebarMode","sidebarSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","renderLevels","href","mx","undefined","ExportAllGeneralPropertiesDialogBox","_ref8","isActive","MassUpdatePartDescriptionInEnoviaAndERP","Loader","show","ExportAllSystemSetupsDialogBox","_ref9","ExportAllTemplateMapping","_ref10","CardRoot","Card","CardTitle","subtitle","title","makeStyles","minWidth","minHeight","generateMarginPadding","generateHeightWidh","end","arguments","increament","unit","classList","i","GlobalCss","visibility","opacity","StyledBox","texttransformstyle","ellipsis","textOverflow","lineHeight","MCOService","GET_MCOLIST","GET_MCOINFO","GET_UPDATEMCODETAILS","GET_UPDATE_MCO_RELATED_VALUES","SET_ALL_CA_MCO_DETAILS","SET_UPDATED_ROUTES","RESET_VALUES","setUpdatedRoutes","routes","payload","getMCOLists","dispatch","updateResponseData","updateMcoDetails","update_generalValues","resetValues","BootstrapDialog","BuConfirmationBox","isBUModified","updateBUModifiedData","m","grey","CloseIcon","dividers","Typography","gutterBottom","createContext","userDetails","bussinessUnit","templatesInfo","allTemplatesInfo","mappingTemplatesInfo","refreshData","updateBussinessUnit","updateBussinessUnitLists","updateTemplateLists","updateAllTemplate","updateMappingTemplatesInfo","updateRefreshData","OracleMappingsProvider","authState","authService","useOktaAuth","globalBussinessUnit","useSelector","state","globalBUandInstance","bu","shallowEqual","tempMapService","userService","UserService","navigate","useNavigate","location","setUserDetails","isPageHavingError","setIsPageHavingError","setBussinessUnit","setIsBUModified","setBussinessUnitLists","setTemplatesInfo","setAllTemplatesInfo","setMappingTemplatesInfo","setRefreshData","values","isAuthenticated","getAlltemplateMappings","result","_result$data","_result$data2","_result$data3","_result$data4","templateMappingList","templateList","bulist","getAccessToken","accessToken","validateUser","_result$data5","userInfo","NotAuthorized","catch","err","checkLocalStorage","_location$pathname2","includes","addEventListener","removeEventListener","Provider","SomethingWrong","CircularProgress","_location$pathname","reload","SettingsContext","Layout","MatxLayouts","MatxSuspense","constructor","getAllUsersList","ApiInstance","get","BACKEND_API_URL","REACT_APP_BACKEND_API_HEADER","res","addnewUser","post","updateUser","put","deleteUser","ids","delete","warn","Store","isPageHavingIssue","requestForAccess","importUser","REACT_APP_BACKEND_API_HEADER_FOR_FILE","exportUser","fileUrl","filePath","fetch","method","headers","getOKTAAccessKey","ok","Error","fileBlob","blob","downloadUrl","URL","createObjectURL","link","createElement","replace","click","revokeObjectURL","fileName","templateService","getAllTemplateList","addnewTemplate","getTemplateById","updateTemplate","deleteTemplate","importTemplate","exportTemplate","_parsedToken$accessTo","_parsedToken$accessTo2","_parsedToken$accessTo3","_parsedToken$idToken","getToken","parsedToken","JSON","parse","curruid","claims","uid","userinfo","idToken","exp","Math","floor","Date","now","username","email","token","Buffer","jwt","hex","match","slice","join","c","test","substring","generateRandomId","crypto","msCrypto","array","Uint32Array","getRandomValues","sortInsideRowData","sortedNameDivs","sortedMvoTemplateToDivs","nameDivs","sort","a","b","textA","toUpperCase","textB","localeCompare","MVO_TEMPLATE_TO","mvoTemplateToDivs","sortAndReorderData","filterData","sortObjectValues","obj","Entity","Object","fromEntries","entries","filter","plantGroup","find","sortedPlantGroup","sortedOtherEntities","caseInsensitiveSort","sensitivity","getAllBuList","getBusinessUnitbyid","addnewBU","updateBU","deleteBU","textLight","disabled","errorColor","themeColors","whitePurple","whiteBlue","slateDark1","paper","slateDark2","purple1","light","dark","purple2","purpleDark1","purpleDark2","blue","blueDark","red","themeShadows","components","MuiTable","styleOverrides","tableLayout","MuiTableCell","head","MUIDataTableSelectCell","MUIDataTableHeadCell","MUIDataTableBodyCell","MuiButton","contained","MuiCssBaseline","boxSizing","html","MozOsxFontSmoothing","WebkitFontSmoothing","body","MuiFab","MuiAccordion","MuiTooltip","tooltip","MuiMenuItem","MuiExpansionPanel","MuiCard","typography","body1","danger","MatxLayoutSettings","perfectScrollbar","forEach","createTheme","merge","themeOptions","createMatxThemes","bgimgurl","topbar","fixed","secondarySidebar","footer","SettingsProvider","currentSettings","setCurrentSettings","handleUpdateSettings","update","merged","contextValue","useMemo","formatMessage","template","replaceArray","formattedMessage","_formattedMessage","RegExp","sortDataByKey","Array","isArray","valueA","toString","toLowerCase","valueB","isNaN","parseFloat","sortDataByKeyAllowableOrgTemplates","details","sortByLabel","labelA","labelB","initialState","stepData","RSMEList","RMEList","responseData","itemERPStatus","affectedPartsData","exportAffectedPartsData","currentMcoDetails","isPropertyFormEdited","isMaterialFormEdited","selectedRowData","selectedRowFormdata","selectedRowIndex","templates","source","plants","materialData","masterData","templateMappingsInfo","ORGAllowedTemplateMappings","previousMcosDetails","mrDetails","massUpdateChanges","lifeCycleData","systemSetingsDetail","eachTemplateOptions","bulkPartTemplates","caRelatedEachMCODetails","allCaMCODetails","mcoSearchLists","showMaterialForm","parentMCODetails","caLifeCycleData","updatedRoutes","baseValues","getBasename","currentInstance","segment","instanceType","pathArray","fitem","returnVal","systemName","GET_BU_AND_INSTANSE","combineReducers","mcoDetails","MCODetailsReducer","globalData","GlobalDataReducer","GlobalBUandInstanceReducer","middlewares","thunk","createStore","RootReducer","compose","applyMiddleware","x","layout1","Backdrop","drawer","SystemSettingsService","getAllsystemSetupList","getSystemSettingsbyid","addSystemSettings","updateSystemSettings","deleteSystemSettings","updateGlobalBUandInstance","axios","create","interceptors","request","use","config","Authorization","Promise","reject","_error$response","getMyReport","deleteReport","process","REACT_APP_EMRPDH_OKTA_CLIENT_ID","REACT_APP_EMRPDH_OKTA_ISSUER","REACT_APP_EMRPDH_OKTA_DOMAIN","REACT_APP_ENOVIA_API_URL","REACT_APP_ENOVIA_CLOUD_API_URL","REACT_APP_PLM_API_KEY","SAP_API_BASE_URL","REACT_APP_ENOVIA_API_HEADER","deleteTemplateMapping","tempMappingId","addnewTemplateMapping","updateTemplateMapping","BUOptions","bomusageOptions","ERPtypeOptions","instanceOptions","exportToERPOptions","notOwningDivisionOptions","userGroupOptions","is_authorizedOptions","enableBOSTransferOptions","InstanceOptions","SimpleCard","Grid","container","md","sm","xs","CLIENT_ID","ISSUER","domain","oidc","clientId","issuer","redirectUri","scopes","pkce","disableHttpsCheck","OKTA_TESTING_DISABLEHTTPSCHECK","isInitialised","user","LoginScreen","oktaAuth","fallbackUri","setOriginalUri","signInWithRedirect","login","Outlet","authenticated","FlexBox","JustifyBox","IMG","NotFoundRoot","NotFound","styles","button","UnauthorizedPage","_location$state","_location$state2","_location$state3","_location$state4","_location$state5","requestforAccess","setRequestforAccess","logout","signOut","postLogoutRedirectUri","origin","requestAccess","userData","CustomSelect","isdisabled","selectedvalue","onChangeFunc","displayEmpty","renderValue","selected","_selectedOption","selectedOption","businessUnit","listKey","Homepage","setInstance","instanse","selectedOptionValue","Component","Loading","CaList","Loadable","lazy","CaDetails","McoList","Mcodetails","TrackerProgressBar","SpecCreationList","ObsoletePartList","MyReportList","element","_userDetails$userinfo","Navigate","tempService","setImportTemplate","setTemplateData","ERPTypeError","setERPTypeError","instanceError","setinstanceError","ERPType","handleImportTemplateSelection","column","selectedValues","TableHead","Autocomplete","multiple","options","Set","add","from","getUniqueValues","_","newValue","renderInput","params","disableCloseOnSelect","disableClearable","isOptionEqualToValue","getOptionSelected","ChipProps","CloudDownloadIcon","handleCloseImportTemplate","prev","handleImportTemplate","errorCount","newTemplateAdded","setExportTemplate","setDataToExport","templateData","setValue","exportfileBar","setexportfileBar","exportResponse","setExportResponse","handleExportTemplateDialog","FormLabel","filterTemplateData","handleCloseExportTemplate","exportTemplateHandle","exportData","templateName","WrappedComponent","sortInfo","initialData","sortedData","sortData","field","columnName","direction","dir","aValue","String","bValue","Container","Template","toastState","deleteDialog","setDeleteDialog","setInitialData","selectedDelTemplate","setselectedDelTemplate","searchValue","setSearchValue","filteredTempData","setFilteredTempData","setSortInfo","setSelected","selectedRows","setSelectedRows","gridRef","dataMap","sortedFilterTempData","onSelectionChange","finally","_toastState","_toastState2","_toastState3","onbeforeunload","history","replaceState","templateModeRef","handleEditTemplate","editSelectedTemplate","selectedTempalteData","templateMode","handleDeleteTemplateDialog","Deltemplate","selRowsData","selRowsDetails","keys","new_FilteredData","subscriber","_subscriber$templateN","_subscriber$plants","_subscriber$BU","some","plant","plantName","handleSortInfoChange","sortedExportDataHOC","SortedTemplate","onSortInfoChange","Breadcrumb","newSearchValue","handleSearch","flex","RouterLink","handleCreateTemplate","handleEditMappingDialog","handleDeleteDialog","handleImportTemplateDialog","ExportDialogBox","DataGrid","idProperty","showZebraRows","defaultLimit","columns","header","Tooltip","defaultFlex","defaultWidth","render","dataSource","checkboxColumn","handle","pagination","renderScroller","_gridRef$current","_gridRef$current2","setScrollTop","getScrollTop","handleCloseDelete","selRowsId","ImportDialogBox","TemplateWrapper","PlantService","getAllPlantsList","getPlantById","addnewPlant","updatePlant","deletePlant","handleDialogClose","tempObject","handleAttributeChange","handleAddAttribute","newKey","handleAddRow","handleDeleteRow","keyerror","attributeForm","valuesInputList","mandatory","material_master","dataType","inputType","overflowY","alignContent","Paper","DeleteIcon","defaultValues","useStyles","spanRed","defaultFormValue","CreateTemplate","plantService","plantData","setPlantData","templateForm","setTemplateForm","exportToERP","existInOracle","notOwningDivision","snackBar","setsnackBar","snackbarmessage","setSnackbarMessage","snackbarseverity","setSnackbarSeverity","diabox","setDiabox","attributeData","setAttributeData","setAttributeForm","setTempObject","setValuesInputList","setNewKey","setNewValue","setKeyerror","selectedBU","setSelectedBU","selectedplants","setSelectedPlants","handleTemplateFormChange","updatedForm","plantId","url","port","authkey","SalesOrg","ECN_required","bomusage","ConnectivityDetails","password","handlesnackBarClick","handlesnackbarClose","onBlur","trimmedValue","prevForm","handleSelectChange","extractedInfo","MenuProps","handleAddNewAttribute","attrivar","aindex","_attributeData$index","attindex","valuesArray","handleEditAttribute","EditIcon","handleDeleteAttribute","prevData","updatedData","splice","_templateForm$templat","_templateForm$desc","_templateForm$ERPType","randomid","attributes","resp","_Object$keys","_resp$message","altHtml","citem","handleCancel","AttributeDialog","prevObject","updatedTempObject","reduce","acc","curr","updatedAttributeData","prevAttributeData","keyExists","valueExists","prevList","newList","EditTemplate","useParams","selectedTemplateObj","setSelectedTemplateObj","tempId","_Object$keys2","selectedTemplate","selectedPlantsInfo","_Object$entries","selectedAttribute","PrivateRoute","exact","authRoles","sa","admin","editor","guest","Plant","selectedDelPlant","setSelectedDelPlant","setFilteredPlantData","filteredPlantData","sortedPlanteData","plantModeRef","handleDeletePlantDialog","DeletePlant","handleEditPlant","editSelectedPlant","selectedPlantData","plantMode","SortedPlant","handleCreatePlant","ConnectivityDetailsDialog","connDetails","handleCDChange","handleAddCD","connectivityError","plantForm","sapsysnum","sapclientid","CreatePlant","allPlantData","setallPlantData","diaBox","setPlantForm","orgId","aliasPlant","setconnDetails","setconnectivityError","materialMasterOption","handlePlantFromChange","Formik","initialValues","Connectivitydetails","onSubmit","Form","handleAddPlant","_plantForm$plantName","_plantForm$ERPType","_plantForm$instance","_plantForm$exportToER","_plantForm$plantName2","_plantForm$material_m","_plantForm$bomusage","newPlant","_resp$data","_resp$data$","_resp$data$2","_resp$data$3","EditPlant","setConnDetails","selectedPlant","setSelectedPlant","_selectedPlantObj$Con","_selectedPlantObj$Con2","_selectedPlantObj$Con3","_selectedPlantObj$Con4","_selectedPlantObj$Con5","_selectedPlantObj$Con6","_selectedPlantObj$Con7","_selectedPlantObj$Con8","_selectedPlantObj$Con9","_selectedPlantObj$Con10","_selectedPlantObj$Con11","_selectedPlantObj$Con12","selectedPlantObj","hasOwnProperty","hasValues","Plants","SourceListService","getAllSourceList","deleteSource","addnewSource","updateSource","getSourceById","CreateSourceList","sourceForm","setSourceForm","sourceListService","handleSourceFormChange","environment","handleAddSource","_sourceForm$source","_sourceForm$environme","_sourceForm$instance","_sourceForm$ERPType","newSource","EditSourceList","sourceId","selectedSource","sourceData","Source","Environment","SourceList","setselectedSource","setsourceData","unSortSourceData","setUnSortSourceData","setFilteredSourceData","filteredSourceData","sortedSourceData","handleEditSource","editSelectedSource","selectedSourceData","handleDeleteSourceDilaog","DeleteSource","SortedSource","handleCreateSourceList","MappingsService","getAllMappings","deleteMapping","mappingId","addnewMapping","updateMapping","CreateMapping","mappingForm","setMappingForm","mappingService","handleMappingvalueChange","handleMappingFormChange","Name","handleAddMapping","_mappingForm$Name","_mappingForm$ERPType","newMaping","List","EditMapping","selectedMapping","selectedMappingData","reversedList","Mappings","page","setPage","rowsPerPage","setRowsPerPage","setSelectedMapping","mappingData","setMappingData","filteredRows","setFilteredRows","filteredMappingData","setFilteredMappingData","filterValues","setFilterValues","handleFilterChange","prevFilterValues","dataToShow","filteredData","_subscriber$Name","_subscriber$ERPType","handleCreateMappings","getOptionLabel","editselectedMapping","handleEditMapping","handleDeleteMappingDilaog","TablePagination","px","count","onPageChange","handleChangePage","newPage","rowsPerPageOptions","onRowsPerPageChange","nextIconButtonProps","backIconButtonProps","auth","buData","_data","_a$businessUnit","_b$businessUnit","_item$plants","_item$plants2","exportToERPdisabled","exportToERPbyPassed","enableBOSTransfer","contextDEF","EMRDivisionORGValue","productHierarchy","doNotSendToERP","oracleExisting","makeWithoutBOMList","notOwningDivisionList","BUList","setBUData","buService","setFilteredBUData","filteredBUData","sortedFilteredBuData","selectedBUData","SortedbuList","handleCreateBUList","rowStyle","isSelected","actionFlag","_ref11","_ref12","CreateBU","buForm","setBuFrom","DoNotSendToERP","setDoNotSendToERP","OracleExisting","setOracleExisting","MakeWithoutBOMList","setMakeWithoutBOMList","NotOwningDivisionList","setNotOwningDivisionList","handlebuFormChange","handleTemplateChange","selectedObj","newselectedObj","existing","autoHighlight","handlePlantsChange","renderOption","mr","flexShrink","handleAddbuName","_buForm$buName","newbuName","EditBU","selectBU","setSelectBU","getTemplValues","fieldValue","buId","_resp$data2","_resp$data3","selectBUValue","InfoIcon","userImportDialog","setUserImportDialog","setUserData","mcoService","handleCloseImportDialog","errors","userExportDialog","setUserExportDialog","handleCloseExportUser","userName","Email","is_authorized","sheet_name","UserList","validFilteredBUData","sortedUsersData","handleEditUser","editSelectedUser","selectedUserData","isEdit","handleDeleteUserDilaog","SortedUserData","handleCreateUser","handleImportDialog","handleExportDialog","BulkExportUsers","handleCloseExportDialog","BulkImportUsers","AddEditUser","selectedUser","userForm","setUserFrom","userId","handleUserFormChange","userGroup","setUserGroup","userGroupInfo","_userForm$userName","_userForm$name","_userForm$email","_userForm$is_authoriz","USERList","_filteredPlants","handleorgAllowedDialogClose","selectedPlants","orgAllowedForm","handleorgAllowedFormChange","handleAddOrgAllowedValues","templateOption","setTemplateOption","filteredBUOptions","setFilteredBUOptions","tempData","temp","_temp$BU","ALLOWABLE_ORG_TEMPLATES","Has_MBOM","On_MBOM","EBOM_Allowed","Optional","PO_Org_Exist_Check","filteredPlants","_bussinessUnitLists$f","HistoryManagementService","getAlldraftChanges","applyDraftChanges","discardDraftChanges","dataId","getAllmappingHistory","MVOtempcompService","getAlltempcompMappings","deleteTempCompMapping","addnewTempCompMapping","updateTempCompMapping","softDeleteTempCompMapping","fetchData","getsampleFileUrl","MappingType","MVOtemplatecompContext","mvotemplatecompInfo","updateMVOtempcompLists","useMVOtempComp","PartTypeTemplateContext","parttypetemplateinfo","updateParttypeTemplate","usePartTypeTemplate","MVOallowedchangesContext","mvoallowedchangesinfo","updateMVOallowedchanges","useMVoallowedchanges","SetTempCompContext","comptempInfo","updatecomptempList","useCompTemp","SetTempCompProvider","BUPlantContext","buplantsInfo","updatebuplantsInfo","useBUPlant","ExpenseMappingContext","expensemapInfo","updateExpenseMap","useExpenseMap","isObjectBlank","allowableOrgTemplates","ALLOWABLE_ORG_TEMPLATE","MVO_TEMPLATES_TO","TEMPLATE_ORG_MODIFYING","mappingType","AllTempData","_a$field","_b$field","BUID","_item$details","_item$details2","_item$details3","_item$details4","_item$details5","_item$details6","_item$details7","_item$details8","_item$details8$allowa","_item$details9","_item$details9$allowa","_item$details10","_item$details10$MVO_T","_item$details11","_item$details11$TEMPL","item1","MVO_TEMPLATE_OPTION","ENGG_ITEM_TYPE","org_allowed_template","exclusive_use","MVO_TEMPLATE_FROM","TEMPLATE_ORG_EXISTING","PLANT","EXPENSE_TEMPLATE","EXPENSE_PLANTS","flat","dataToPass","_a$field2","_b$field2","OrgAllowedValuesList","orgallowedaddDialog","setOrgallowedaddDialog","setOrgAllowedForm","mvotempcompservice","draftMapService","selectedDeleteMapping","setSelectedDeleteMapping","setIsEdit","orgallowedData","setorgallowedData","filteredDraftTabledata","setFilteredDraftTabledata","handleSearchInputChange","tableTempData","setTableTempData","unSortTableTempData","setUnSortTableTempData","sortedFilterOrgAllowedData","fetchDraftData","finalTempMapList","_finalTempMapList","_finalTempMapList2","_JSON$stringify","_JSON$stringify2","_JSON$stringify2$toLo","stringify","toLocaleLowerCase","filteredOrgAllowedDraftData","obj1","changes","obj2","draftValue_ALLOWABLE_ORG_TEMPLATES","draftValue_Has_MBOM","draftValue_On_MBOM","draftValue_EBOM_Allowed","draftValue_Optional","draftValue_PO_Org_Exist_Check","draft_Plants","_item$details12","_item$details13","_item$details14","_item$details15","_item$details16","_item$details17","_item$details18","_item$details19","_item$details20","_BUOptions$","justify","optionsValues","handleorgAllowedDialogOpen","handleEditOrgAllowedValues","_selectedRows$","_selectedRows$2","selectedDetails","_selectedRows$3","_selectedRows$3$detai","_selectedRows$4","_selectedRows$4$detai","ExportMappingDialog","plantColumnsSet","dataItem","_dataItem$details","plantColumns","dangerouslySetInnerHTML","__html","Constant","adminConstant","orgAllowedList","AllowableOrgTemplate","RDO","HasMBom","OnMbom","EBOM","PoCheck","prepareTableColumn","rowHeight","deleteNote","OrgAllowedDialog","handleorgAllowedDialogAdd","templateid","resultPayload","neworgallowedvalue","ALLOWABLE_ORG_TEMPLATES_ID","ImportMappingsDialog","OrgAllowedValuesWrapper","gridStyle","handleAddMVOtempComp","orgAllowedTempList","formError","selectedRow","handleStatusChange","setTempData","selectedTemplateValues","setSelectedTemplateValues","newTempList","_selectedRow$details","newdata","defaultVisible","_data$details","_data$details2","_data$details3","_data$details4","_data$details5","_data$details6","_data$details7","_data$details8","_selectedTemplateValu","_data$details9","updatedStatus","_selectedRow$details2","getSelTempVal","output","_item$status","transformArray","Scrollbars","autoHeight","autoHeightMin","autoHeightMax","autoHide","autoHideTimeout","RDOError","templateError","AllowableOrgTempError","ReactDataGrid","checkboxOnlyRowSelect","MVOtemplateCompatibilityList","_Constant$adminConsta","_Constant$adminConsta2","_Constant$adminConsta3","_Constant$adminConsta4","_Constant$adminConsta5","_Constant$adminConsta6","_Constant$adminConsta7","_Constant$adminConsta8","_Constant$adminConsta9","mvotempcompData","setMVOtempCompData","orgAllowedData","setorgAllowedData","formTemplateSelection","setFormTemplateSelection","setFormError","setRDO","statusObject","setStatusObject","mvoTemplateList","TemplateOptionMVO","sortable","filteredMVOTempDraftData","draft_allowableOrgTemplates","templateSet","missingFromArrObj1","j","has","deletedTemplateLists","newTemplate","item2","newTemplateLists","mergeNewOldTemplates","self","findIndex","deletedText","draft_Plant","statusText","charAt","buFilterData","_buFilterData","onFormSelectionChange","prevState","rest","localStorageBusinessUnit","setLocalStorageBusinessUnit","sortedByFirstColumnFilteredMVOTempData","sortedFilteredMVOTempData","unSortRowSortTableTempData","thisVal","object","assign","MVOtemplCompDialog","templatedata","new_formError","MVO_TEMPLATE_OPTION_ID","orgtemperror","MVOtemplateCompatibilityWrapper","buoption","PartTypeToTemplateList","setOrgAllowedData","parttypetemplateList","TemplateOptionsMVO","allowableOrgTemplatesExclusive","handleEditPartTypeTotemplate","PartTypeTemplateDialog","_templateid$","ENOVIA_PART_TYPE_ID","PartTypeToTemplateWrapper","mvotemplatesTo","MVOallowedchangesList","setMVOtemplatesTo","rowSortTableTempData","draft_MVO_TEMPLATES_TO","unsortedData","mvoallowedchangesList","mvoTemplatesFrom","mvoTemplatesTo","MVOallowedchangesDialog","convertedMVO_TEMPLATES_TO","t","_templateid$2","_templateid$3","MVOallowedChangesWrapper","modifytempdata","SetCompTempList","comptempData","setComptempData","setModifytempData","sortedFilterSetCompTempData","draft_TEMPLATE_ORG_MODIFYING","setComptempList","TemplateForOrgExist","TemplateForOrgModify","SetCompTempDialog","convertedTEMPLATE_ORG_MODIFYING","SetCompTempWrapper","plantGroupOptions","bomStatusOptions","rduOptions","entitydropdown","handleAddBuPlant","setPlantValueList","plantValueList","setDisplayOrder","setFilteredPlants","dropdownOptions","setDropdownOptions","entityOption","setEntityOption","setDataSource","_bussinessUnitLists$f2","plist","concat","filteredPlantsLeftSide","unionBy","plantColumn","rendersInlineEditor","editable","cellProps","v","editProps","inEdit","onComplete","handleChanges","onFocus","startEdit","expensemapList","PlantName","newData","BUPlantList","displayOrder","setPlantColumns","plantMappingList","setPlantMappingList","_finalTempMapList$","_finalTempMapList$$de","sortedList","originalItem","valueCounts","pdata","_pdata$details","_pdata$details2","plantValue","headerColumns","filteredRDODraftData","_selectedRows$$detail","_selectedRows$2$detai","plantValuesarr","enableColumnAutosize","BUPlantDialog","resultPlantPayload","BUPlantWrapper","expense","Input","inputRef","focus","expenseColumn","onKeyDown","onCancel","onEditComplete","columnId","rowId","ExpenseMappingList","expensemapData","setExpenseMapData","sortedFilterExpenseMappingData","filteredExpenseDraftData","draftValue_EXPENSE_TEMPLATE","handleEditExpenseMapping","ExpenseMappingDialog","Number","EXPENSE_TEMPLATE_ID","ExpenseMapWrapper","validationSchema","yup","shape","description","required","max","enableReinitialize","validateOnChange","validateOnBlur","resetForm","saveApplyChanges","touched","submitForm","setFieldValue","setErrors","setTouched","applyChangesDialog","Field","as","rows","ErrorMessage","closeDialogBox","setApplyChangesDialog","DraftChangesList","tabledata","setTabledata","filteredTabledata","setFilteredTabledata","historyManagementService","modifiedDateTime","_filteredData","thisItem","updateTemplateMappingData","textWrap","onRowClick","rowData","prevSelectedRows","handleRowClick","CommitChangesForm","RequestChangesWraper","RequestChangesList","DraftChangesWraper","HistoryLIst","historyData","mappingOptions","setMappingOptions","setMappingType","version","date","parseInt","dateTime","year","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","formattedDate","getMinutes","getSeconds","_Object$values$join","_Object$values$join2","thisRowData","HistoryWrapper","HistoryList","systemData","vsystemData","file1","file2","formData","forwardRef","formAllData","setFormAllData","validate","setSubmitting","isValid","backendValues","fieldName","saveForm","formisValid","innerRef","handleSubmit","_props$selectedRows","_props$selectedRows2","editForm","useImperativeHandle","fkey","_formAllData$","thisInputName","currentFieldValue","fieldType","htmlFor","vitem","SystemSetup","childCompRef","showForm","setShowForm","showFormType","setShowFormType","formValues","setFormValues","setSystemData","orgSystemData","setOrgSystemData","systemSettingsService","sortedSystemData","fetchAllDetails","_listValue$data","listValue","systemDataValue","newFilteredData","setting","applyFilterData","scroll","stopPropagation","tabIndex","SystemSetupForm","submittedValues","_updatedData","_updatedData2","_updatedData3","startsWith","LoginCallback","CustomLoginCallback","originalUrl","sessionStorage","onSuccess","redirect","onError","handleLoginRedirect","allChildroutes","McoListRoutes","templateRoutes","plantRoutes","sourceListroutes","mappingsroutes","buListRoutes","mvocompatibilityRoutes","parttypetotemplateroutes","mvoallowedchangesroutes","setcomptemproutes","orgallowedroutes","buplantroutes","expensemaproutes","draftChangesroutes","historyroutes","userListRoutes","SystemSetupList","Router","AuthGuard","MatxLayout","RedirectRoute","useRoutes","componentStack","OktaAuth","transformAuthState","devMode","App","hash","timer","performance","mark","clearTimeout","ErrorBoundary","FallbackComponent","Fallback","onReset","store","MatxTheme","Security","restoreOriginalUri","originalUri","onAuthRequired","widget","hasOnLoadRun","addEvent","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","getElementById","appendChild","ReactDOM","StyledEngineProvider","injectFirst","MemoryRouter","initialEntries","start","selectedMCODetailsResponse","SaaSExecutionService","searchCA","filters","searchCAPayload","searchPattern","getCARelatedMco","payloadBody","ca_id","searchMCO","getMCOdetailById","mco_id","mcoPropeties","updateMCOdetails","validationByMcoId","resolve","pass","getItemDetailsByMcoId","getBomDetailsByMcoId","changeStateByMcoId","nextState","routeStart","routeId","Operation","Headers","securityContext","senderID","TargetID","BusinessGroup","Requestdata","getTaskList","taskApproval","taskId","dataelements","routeTaskApprovalComments","routeTaskDueDate","routeTaskApprovalAction","updateAction","client_id","client_secret","updateMCOData","ApproveCAMCO","currentStatus","getDataForClassificationyMCONames","validData","formattedResponse","_item$mcoPropeties","updateMCOObjects","getRSMEList","getRMEList","updateMRpartList","getSpecDetailsByMcoId","getMcoPropertyDetails","mcoName","isBasics","this","getMRbyPartAndPlant","getSourcePlantTemplate","getMRRelatedDetailsbyid","getLifeCycleStatusByMCOName","getMcoDetailsByName","getattributesbyid","updateattributesbyid","sendMCO","payloadData","OnPremExecutionService","getGlobalData","_StoreDetails$globalD","StoreDetails","getState","searchMCO_old","mcoNames","names","executionClass","getInstanceDetail","getMuleToken","sendAutoReleaseMCOs","addattributes","mcoStatusValidation","updatePartListAndAttributes","updatePartListAndAddAttributes","getTemplateDetails","getPlantData","getSourceData","getMappingsData","itemvalidationbymcoid","BOMvalidationbymcoid","updateFinalAcksDetails","callLoggingInfo","getERPStatus","mcoRuleValidation","addMRRelatedDetails","updateMRRelatedDetails","getMRForCAbyPartAndPlant","getChildPartDetails","getMRDetailsByPartName","updateLifeCycleStatus","searchSpecCreationbyKey","resendSpecCreation","searchObsoletePartbyKey","resendObsoletePart","bulkUploadPartAndTemplate","exportMCOData","exportTableData","getMcoHistorybyid","StyledLoading","sideNavWidth","sidenavCompactWidth"],"sourceRoot":""}