{"version":3,"file":"static/js/549.754bdd9e.chunk.js","mappings":"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","sources":["DragAndDrop/DragAndDrop.jsx","app/utils/helpers.js","app/utils/fetchChangeActionFlow.js","app/App.jsx","index.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\n\r\nconst DragAndDropComponent = ({ onDropSuccess }) => {\r\n  const dropRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleDragOver = (event) => {\r\n      event.preventDefault();\r\n      event.dataTransfer.dropEffect = \"copy\";\r\n    };\r\n\r\n    const handleDrop = (event) => {\r\n      event.preventDefault();\r\n\r\n      const data = event.dataTransfer.getData(\"text/plain\");\r\n\r\n      try {\r\n        const parsed = JSON.parse(data);\r\n        console.log(\"Dropped object:\", parsed);\r\n\r\n        if (onDropSuccess) {\r\n          onDropSuccess(parsed); // Let parent handle further logic\r\n        }\r\n      } catch (error) {\r\n        console.warn(\"Invalid drop data\", error);\r\n      }\r\n    };\r\n\r\n    const dropArea = dropRef.current;\r\n\r\n    if (dropArea) {\r\n      dropArea.addEventListener(\"dragover\", handleDragOver);\r\n      dropArea.addEventListener(\"drop\", handleDrop);\r\n    }\r\n\r\n    return () => {\r\n      if (dropArea) {\r\n        dropArea.removeEventListener(\"dragover\", handleDragOver);\r\n        dropArea.removeEventListener(\"drop\", handleDrop);\r\n      }\r\n    };\r\n  }, [onDropSuccess]);\r\n\r\n  return (\r\n    <div ref={dropRef} className=\"droppable-container mt-4\">\r\n      <img\r\n        style={{ width: \"90px\", height: \"90px\" }}\r\n        src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n        alt=\"Data Collect\"\r\n        className=\"search-icon\"\r\n      />\r\n      <span className=\"drag-and-drop-text\">Drag and Drop your object here</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","export const loadWAFData = async () => {\r\n  return await new Promise((resolve, reject) => {\r\n    window.require(\r\n      [\"DS/WAFData/WAFData\"],\r\n      (module) => {\r\n        resolve(module);\r\n      },\r\n      reject\r\n    );\r\n  });\r\n};\r\n\r\nexport const fetchCsrfToken = async () => {\r\n  try {\r\n    let securityContext1 = \"VPLMAdmin.Company Name.Default\";\r\n    const WAFData = await loadWAFData();\r\n    console.log(\"Security Context is:\", securityContext1);\r\n    const csrfURL =\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/application/CSRF?tenant=OI000186152\";\r\n\r\n    const response = await new Promise((resolve, reject) => {\r\n      WAFData.authenticatedRequest(csrfURL, {\r\n        method: \"GET\",\r\n        type: \"json\",\r\n        onComplete: resolve,\r\n        onFailure: reject,\r\n      });\r\n    });\r\n\r\n    const csrfToken = response.csrf.name;\r\n    const csrfValue = response.csrf.value;\r\n    const securityContextHeader = \"SecurityContext\";\r\n    const securityContextValue = securityContext1;\r\n\r\n    const headers = {\r\n      [csrfToken]: csrfValue,\r\n      [securityContextHeader]: securityContextValue,\r\n    };\r\n    return headers;\r\n  } catch (error) {\r\n    console.error(\"[CSRF] Failed to fetch token:\", error);\r\n    return; // Return empth so that the else block should execute.\r\n  }\r\n};\r\n\r\n// export const fetchCsrfToken = async () => {\r\n//   try {\r\n//     const WAFData = await loadWAFData(); // Load the WAFData module\r\n\r\n//     const securityContext = \"VPLMProjectLeader.0000000001.Micro Motion\";\r\n//     const csrfServiceUrl =\r\n//       \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/application/CSRF?tenant=OI000186152\";\r\n\r\n//     const loginUrl = `https://oi000186152-eu1.iam.3dexperience.3ds.com/login?lt=LT-12443368-yZHMeBvpllYLns4ixigPIsk6ogMBIL&username=emrserviceuser&password=Emerson123&service=${encodeURIComponent(\r\n//       csrfServiceUrl\r\n//     )}`;\r\n\r\n//     // Call login URL using WAFData (not fetch!)\r\n//     const response = await new Promise((resolve, reject) => {\r\n//       WAFData.authenticatedRequest(loginUrl, {\r\n//         method: \"GET\",\r\n//         type: \"json\",\r\n//         onComplete: resolve,\r\n//         onFailure: reject,\r\n//       });\r\n//     });\r\n\r\n//     if (!response || !response.csrf) {\r\n//       throw new Error(\"CSRF token not found in response\");\r\n//     }\r\n\r\n//     const csrfToken = response.csrf.name;\r\n//     const csrfValue = response.csrf.value;\r\n\r\n//     const headers = {\r\n//       [csrfToken]: csrfValue,\r\n//       SecurityContext: securityContext,\r\n//       \"Content-Type\": \"application/json\",\r\n//     };\r\n\r\n//     console.log(\"[CSRF] Token fetched and headers ready:\", headers);\r\n//     return headers;\r\n//   } catch (error) {\r\n//     console.error(\"[CSRF] Failed to fetch token using WAFData:\", error);\r\n//     return null;\r\n//   }\r\n// };\r\n","import { fetchCsrfToken, loadWAFData } from \"./helpers\";\r\n\r\nexport const fetchChangeActionFlow = async (objectId) => {\r\n  try {\r\n    const headers = await fetchCsrfToken();\r\n    if (!headers) throw new Error(\"Missing CSRF headers\");\r\n\r\n    const caUrl = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dslc/changeaction/${objectId}?$fields=flowDown`;\r\n\r\n    const WAFData = await loadWAFData();\r\n\r\n    const response = await new Promise((resolve, reject) => {\r\n      WAFData.authenticatedRequest(caUrl, {\r\n        method: \"GET\",\r\n\r\n        headers: {\r\n          ...headers,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        type: \"json\",\r\n        onComplete: resolve,\r\n        onFailure: reject,\r\n      });\r\n    });\r\n\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"[Change Action] Failed to fetch flowDown:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DragAndDropComponent from \"../DragAndDrop/DragAndDrop\";\r\nimport { fetchChangeActionFlow } from \"./utils/fetchChangeActionFlow\";\r\n\r\nconst App = () => {\r\n  const [iframeUrl, setIframeUrl] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  useEffect(() => {\r\n    // Define the reset function AFTER React is mounted\r\n    window.resetToDropArea = () => {\r\n      console.log(\"[App] Resetting to Drop Area View\");\r\n      setIframeUrl(\"\"); // Clear iframe view\r\n      setError(\"\"); // Clear any error\r\n    };\r\n\r\n    // Track manual refresh click from 3DEXPERIENCE dashboard\r\n    const manualRefreshListener = (e) => {\r\n      const el = e.target?.closest?.(\".refresh, .wux-menuItem-label\");\r\n      if (el && el.innerText?.toLowerCase?.().includes(\"refresh\")) {\r\n        console.log(\"[App] 🖱 Manual refresh clicked\");\r\n        window._lastRefreshWasManual = true;\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"click\", manualRefreshListener);\r\n\r\n    // Handle refresh event from widget API\r\n    if (window.widget && typeof window.widget.addEvent === \"function\") {\r\n      window.widget.addEvent(\"onRefresh\", () => {\r\n        const isManual = !!window._lastRefreshWasManual;\r\n        console.log(`[App] 🔄 onRefresh triggered | Manual: ${isManual}`);\r\n\r\n        if (typeof window.resetToDropArea === \"function\") {\r\n          window.resetToDropArea();\r\n        }\r\n\r\n        // Reset the manual flag after handling\r\n        window._lastRefreshWasManual = false;\r\n      });\r\n    }\r\n\r\n    // Cleanup listeners on unmount\r\n    return () => {\r\n      window.removeEventListener(\"click\", manualRefreshListener);\r\n    };\r\n  }, []);\r\n\r\n  const handleDropSuccess = async (obj) => {\r\n    try {\r\n      const item = obj?.data?.items?.[0];\r\n      if (!item) throw new Error(\"Dropped item is missing\");\r\n\r\n      const { objectType, objectId } = item;\r\n\r\n      if (objectType !== \"Change Action\") {\r\n        alert(\"This functionality is not available for selected type\");\r\n        return;\r\n      }\r\n\r\n      const caFlowResponse = await fetchChangeActionFlow(objectId);\r\n\r\n      const flowDownArray = caFlowResponse?.isFlowDownOf;\r\n\r\n      if (flowDownArray && flowDownArray.length > 0) {\r\n        const targetId = flowDownArray[0].identifier;\r\n        const iUrl = `https://emr-product-datahub-qa.azurewebsites.net/caDetails/${targetId}`;\r\n        setIframeUrl(iUrl);\r\n      } else {\r\n        const iUrlFallback = `https://plmpdh-qa.emerson.com/caDetails/${objectId}`;\r\n        setIframeUrl(iUrlFallback);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Drop handler failed:\", err);\r\n      setError(err.message || \"Unknown error\");\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!iframeUrl ? (\r\n        <DragAndDropComponent onDropSuccess={handleDropSuccess} />\r\n      ) : (\r\n        <iframe\r\n          src={iframeUrl}\r\n          title=\"CA Details\"\r\n          style={{ width: \"100vw\", height: \"100vh\", border: \"none\" }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// import React from \"react\";\r\n// import ReactDOM from \"react-dom/client\";\r\n// import { BrowserRouter, HashRouter, MemoryRouter } from \"react-router-dom\";\r\n// import { CssBaseline } from \"@mui/material\";\r\n// import { StyledEngineProvider } from \"@mui/styled-engine\";\r\n\r\n// // This function mounts the React app.\r\n// let root = null; // Global React root\r\n\r\n// function start() {\r\n//   if (typeof requirejs === \"undefined\") {\r\n//     console.error(\"❌ requirejs is not defined. PlatformAPI won't load.\");\r\n//     return;\r\n//   }\r\n\r\n//   requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n//     window.PlatformAPI = PlatformAPI;\r\n\r\n//     // ⏬ Dynamically import App after PlatformAPI is loaded\r\n//     import(\"./app/App\").then(({ default: App }) => {\r\n//       // Find the root element within the widget's body (if available)\r\n//       let rootElement =\r\n//         window.widget?.body?.querySelector(\"#root\") ||\r\n//         document.getElementById(\"root\");\r\n\r\n//       console.log(\"Root element is: \", rootElement);\r\n//       // If no root element exists, create one and append it\r\n//       if (!rootElement) {\r\n//         rootElement = document.createElement(\"div\");\r\n//         rootElement.id = \"root\";\r\n//         if (window.widget && window.widget.body) {\r\n//           window.widget.body.appendChild(rootElement);\r\n//         } else {\r\n//           document.body.appendChild(rootElement);\r\n//         }\r\n//       }\r\n\r\n//       // Create or reuse the root\r\n//       if (!root) {\r\n//         root = ReactDOM.createRoot(rootElement);\r\n//       }\r\n\r\n//       root.render(\r\n//         <StyledEngineProvider injectFirst>\r\n//           <HashRouter>\r\n//             <CssBaseline />\r\n//             <App />\r\n//           </HashRouter>\r\n//         </StyledEngineProvider>\r\n//       );\r\n//     });\r\n//   });\r\n// }\r\n\r\n// export default function () {\r\n//   if (window.widget) {\r\n//     let hasOnLoadRun = false;\r\n\r\n//     window.widget.addEvent(\"onLoad\", () => {\r\n//       if (hasOnLoadRun) return;\r\n//       hasOnLoadRun = true;\r\n//       start();\r\n//     });\r\n//   } else {\r\n//     console.error(\r\n//       \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n//     );\r\n//   }\r\n// }\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./app/App\";\r\nimport { BrowserRouter, HashRouter, MemoryRouter } from \"react-router-dom\";\r\n\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport { StyledEngineProvider } from \"@mui/styled-engine\";\r\nimport DragAndDropComponent from \"DragAndDrop/DragAndDrop\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n\r\n  const initialEntries = [\"/\"];\r\n\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(<App></App>);\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n"],"names":["_ref","onDropSuccess","dropRef","useRef","useEffect","handleDragOver","event","preventDefault","dataTransfer","dropEffect","handleDrop","data","getData","parsed","JSON","parse","console","log","error","warn","dropArea","current","addEventListener","removeEventListener","_jsxs","ref","className","children","_jsx","style","width","height","src","alt","loadWAFData","async","Promise","resolve","reject","window","require","module","fetchChangeActionFlow","headers","securityContext1","WAFData","csrfURL","response","authenticatedRequest","method","type","onComplete","onFailure","csrfToken","csrf","name","csrfValue","value","securityContextHeader","securityContextValue","fetchCsrfToken","Error","caUrl","objectId","App","iframeUrl","setIframeUrl","useState","setError","resetToDropArea","manualRefreshListener","e","_e$target","_e$target$closest","_el$innerText","_el$innerText$toLower","el","target","closest","call","innerText","toLowerCase","includes","_lastRefreshWasManual","widget","addEvent","isManual","title","border","DragAndDropComponent","_obj$data","_obj$data$items","item","obj","items","objectType","alert","caFlowResponse","flowDownArray","isFlowDownOf","length","targetId","identifier","err","message","root","hasOnLoadRun","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","querySelector","document","getElementById","createElement","id","appendChild","ReactDOM","render","start"],"sourceRoot":""}