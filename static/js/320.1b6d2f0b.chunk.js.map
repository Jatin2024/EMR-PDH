{"version":3,"file":"static/js/320.1b6d2f0b.chunk.js","mappings":"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","sources":["app/hooks/useOracleSettings.js","app/components/Breadcrumb.jsx","app/components/ChatAvatar.jsx","app/components/Chatbox.jsx","app/components/ChatHead.jsx","app/components/ConfirmationDialog.jsx","app/components/MatxMenu.jsx","app/components/MatxProgressBar.jsx","app/components/MatxSearchBox.jsx","app/components/MatxSidenav/MatxSidenav.jsx","app/components/MatxSidenav/MatxSidenavContainer.jsx","app/components/MatxSidenav/MatxSidenavContent.jsx","app/components/MatxSuspense.jsx","app/components/MatxTheme/MatxTheme.jsx","app/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx","app/components/massUpdatePartDescriptionInEnoviaAndERP.jsx","app/components/exportAllTemplateMapping.jsx","app/components/exportAllAdminGeneralProperties.jsx","app/components/exportAllAdminSystemSetups.jsx","app/components/MatxVerticalNav/MatxVerticalNav.jsx","app/components/SimpleCard.jsx","app/styles/utilities/_spacing.js","app/styles/GlobalCss.jsx","app/styles/utilities/_common.js","app/components/Typography.js","app/redux/actions/MCODetailsAction.js","app/components/BuConfirmationBox.jsx","app/contexts/OracleSettingsContext.js","app/redux/reducers/MCODetailsReducer.js","app/redux/reducers/GlobalDataReducer.js","app/redux/reducers/GlobalBUandInstanceReducer.js","app/redux/reducers/RootReducer.js","app/redux/Store.js","app/hooks/useSettings.js","app/components/MatxLayout/MatxLayout.jsx","services/usersService.jsx","services/temlplateService.jsx","app/utils/commonFunctions.js","app/utils/utils.js","app/utils/baseurl.js","services/buService.jsx","app/components/MatxTheme/themeColors.js","app/components/MatxTheme/components.js","app/components/MatxTheme/themeOptions.js","app/components/MatxTheme/initThemes.js","app/components/MatxLayout/settings.js","app/components/MatxLayout/Layout1/Layout1Settings.js","app/contexts/SettingsContext.js","app/contexts/JWTAuthContext.js","app/auth/loginScreen.jsx","app/auth/AuthGuard.jsx","app/views/sessions/NotFound.jsx","app/utils/getBaseUrl.js","app/unAuthorizedPage.js","app/components/CustomSelect.jsx","app/homepage.js","app/components/Loadable.jsx","app/views/mcolist/McoListRoutes.js","app/privateRoutes.js","app/views/template/importDialog.jsx","app/views/template/exportTemplate.jsx","app/components/sortedExportDataHOC.jsx","app/views/template/template.jsx","app/views/template/templateWrapper.jsx","services/plantService.jsx","app/views/template/attributeDialog.jsx","app/views/template/createTemplate.jsx","app/views/template/editTemplate.jsx","app/views/template/templateRoutes.jsx","app/auth/authRoles.js","app/views/plants/exportPlants.jsx","app/views/plants/plants.js","app/views/plants/connectivityDetailsDialog.jsx","app/views/plants/createPlant.jsx","app/views/plants/editPlant.jsx","app/views/plants/plantRoutes.jsx","services/sourceListService.jsx","app/views/sourceList/createSourceList.jsx","app/views/sourceList/editSourceList.jsx","app/views/sourceList/exportSource.jsx","app/views/sourceList/sourceList.jsx","app/views/sourceList/sourceListroutes.jsx","services/mappingsService.jsx","app/views/mappings/createMappings.js","app/views/mappings/editMappings.js","app/views/mappings/mappings.js","app/views/mappings/mappingsroutes.js","app/views/businessUnit/exportBUList.jsx","app/views/businessUnit/buList.jsx","app/views/businessUnit/createBU.jsx","app/views/businessUnit/editBU.jsx","app/views/businessUnit/buRoutes.jsx","app/views/users/bulkImportUsersDialog.jsx","app/views/users/bulkExportUsersDialog.jsx","app/views/users/usersList.jsx","app/views/users/addEditUsers.jsx","app/views/users/usersRoutes.jsx","app/constant.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedDialog.jsx","services/historyManagementService.jsx","services/mvotempcompService.jsx","app/components/importMappingsDialog.jsx","app/contexts/MvoTempCompContext.js","app/hooks/useMVOtempComp.js","app/contexts/ParttypetemplateContext.js","app/hooks/usePartTypeTemplate.js","app/contexts/MVOallowedchangesContext.js","app/hooks/useMVOallowedChanges.js","app/contexts/SetCompTempContext.js","app/hooks/useCompTemp.js","app/contexts/BUPlantContext.js","app/hooks/useBUPlant.js","app/contexts/ExpenseMapContext.js","app/hooks/useExpenseMap.js","app/components/exportMappingTemplate.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedList.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedWrapper.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedroutes.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvoDialog.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvotemplateList.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvocompatibilityWrapper.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvocompatibiltyroutes.jsx","app/views/mappingPages/partTypeToTemplate/parttypetemplateDialog.jsx","app/views/mappingPages/partTypeToTemplate/parttypeToTemplateList.jsx","app/views/mappingPages/partTypeToTemplate/parttypetemplateWrapper.jsx","app/views/mappingPages/partTypeToTemplate/parttypeTotemplateroutes.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesDialog.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesList.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangeWrapper.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesroutes.jsx","app/views/mappingPages/setCompatibleTemplates/setcomptempDialog.jsx","app/views/mappingPages/setCompatibleTemplates/setcomptempList.jsx","app/views/mappingPages/setCompatibleTemplates/SetCompTempWrapper.jsx","app/views/mappingPages/setCompatibleTemplates/setcomptemproutes.jsx","app/views/mappingPages/buPlantMapping/buplantDialog.jsx","app/views/mappingPages/buPlantMapping/buplantList.jsx","app/views/mappingPages/buPlantMapping/buplantWrapper.jsx","app/views/mappingPages/buPlantMapping/buplantRoutes.jsx","app/views/mappingPages/expenseMapping/expensemapDialog.jsx","app/views/mappingPages/expenseMapping/expensemapList.jsx","app/views/mappingPages/expenseMapping/expensemapWrapper.jsx","app/views/mappingPages/expenseMapping/expensemapRoutes.jsx","app/views/draftChanges/commitChangesForm.jsx","app/views/draftChanges/draftChangesList.jsx","app/views/draftChanges/draftChangesWrapper.jsx","app/views/draftChanges/draftChangesroutes.jsx","app/views/history/historyList.jsx","app/views/history/historyWrapper.jsx","app/views/history/historyroutes.jsx","app/views/systemSetup/exportSetup.jsx","app/views/systemSetup/systemSetupForm.jsx","app/views/systemSetup/systemSetupList.jsx","app/RedirectRoute.js","app/CustomLoginCallback.js","app/routes.jsx","app/views/systemSetup/systemSetupRoutes.jsx","app/components/Fallback/Fallback.jsx","DragAndDrop/DragAndDrop.jsx","app/App.jsx","app/utils/mcoUtils/commonUtils.js","app/components/MatxLayout/index.js","app/components/Loader.jsx","services/systemSettingsService.jsx","app/components/McoPages/CustomAlertBox.jsx","app/redux/actions/GlobalBUandInstanceAction.js","services/ApiInstance.js","app/components/CustomAlertBox.jsx","services/massUpdateService.jsx","config/index.js","services/templateMappingService.jsx","app/views/adminConfig/common.jsx","app/components/McoPages/PageError.jsx","services/SaaSExecutionService.jsx","services/OnPremExecutionService.jsx","services/mcoService.jsx","app/components/MatxLoading.jsx","app/utils/constant.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport OracleSettingsContext from 'app/contexts/OracleSettingsContext';\r\n\r\nconst useOracleSettings = () => useContext(OracleSettingsContext)\r\n\r\nexport default useOracleSettings\r\n","import React from 'react';\r\nimport { Breadcrumbs, Hidden, Icon, styled, useTheme } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport shortId from 'shortid';\r\n\r\nconst BreadcrumbRoot = styled('div')(() => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n}));\r\n\r\nconst BreadcrumbName = styled('h4')(() => ({\r\n  margin: 0,\r\n  fontSize: '16px',\r\n  paddingBottom: '1px',\r\n  verticalAlign: 'middle',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubName = styled('span')(({ theme }) => ({\r\n  textTransform: 'capitalize',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst Separator = styled('h4')(({ theme }) => ({\r\n  margin: 0,\r\n  marginLeft: 8,\r\n  paddingBottom: '3px',\r\n  color: theme.palette.text.hint,\r\n}));\r\n\r\nconst StyledIcon = styled(Icon)(() => ({\r\n  marginLeft: 8,\r\n  marginBottom: '4px',\r\n  verticalAlign: 'middle',\r\n}));\r\n\r\nconst Breadcrumb = ({ routeSegments }) => {\r\n  const theme = useTheme();\r\n  const hint = theme.palette.text.hint;\r\n\r\n  return (\r\n    <BreadcrumbRoot>\r\n      {/* {routeSegments ? (\r\n        <Hidden xsDown>\r\n          <BreadcrumbName>{routeSegments[routeSegments.length - 1]['name']}</BreadcrumbName>\r\n          <Separator>|</Separator>\r\n        </Hidden>\r\n      ) : null} */}\r\n\r\n      <Breadcrumbs\r\n        separator={<Icon sx={{ color: hint }}>navigate_next</Icon>}\r\n        sx={{ display: 'flex', alignItems: 'center', position: 'relative' }}\r\n      >\r\n        <NavLink to={\"/calist\"}>\r\n          <StyledIcon color=\"primary\">home</StyledIcon>\r\n        </NavLink>\r\n\r\n        {routeSegments\r\n          ? routeSegments.map((route, index) => {\r\n            return index !== routeSegments.length - 1 ? (\r\n              <NavLink key={shortId.generate()} to={route.path}>\r\n                <SubName key={shortId.generate()}>{route.name}</SubName>\r\n              </NavLink>\r\n            ) : (\r\n              // <SubName key={shortId.generate()}>{route.name}</SubName>\r\n              <BreadcrumbName key={shortId.generate()}>{route.name}</BreadcrumbName>\r\n            );\r\n          })\r\n          : null}\r\n      </Breadcrumbs>\r\n    </BreadcrumbRoot>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { Avatar, Box, styled } from '@mui/material';\r\n\r\nconst StyledAvatar = styled(Avatar)(() => ({\r\n  height: '40px',\r\n  width: '40px',\r\n}));\r\n\r\nconst StatusCircle = styled('div')(({ theme, status }) => ({\r\n  height: '14px',\r\n  width: '14px',\r\n  bottom: '0px',\r\n  right: '-3px',\r\n  borderRadius: '7px',\r\n  position: 'absolute',\r\n  border: '2px solid white',\r\n  background: status === 'online' ? theme.palette.primary.main : theme.palette.error.main,\r\n  color: status !== 'online' && 'white !important',\r\n}));\r\n\r\nconst ChatAvatar = ({ src, status }) => {\r\n  return (\r\n    <Box position=\"relative\">\r\n      <StyledAvatar src={src} />\r\n      <StatusCircle status={status} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatAvatar;\r\n","import { Avatar, Box, Divider, Icon, IconButton, styled, TextField, useTheme } from '@mui/material';\r\nimport { ChatAvatar } from 'app/components';\r\nimport { convertHexToRGB } from 'app/utils/utils';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport { H5, H6, Span } from './Typography';\r\nimport shortId from 'shortid';\r\n\r\nconst ChatContainer = styled('div')(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  background: '#fff',\r\n}));\r\n\r\nconst StyledScrollBar = styled(ScrollBar)(() => ({\r\n  flexGrow: 1,\r\n}));\r\n\r\nconst ProfileBox = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '12px 12px 12px 20px',\r\n  color: theme.palette.primary.main,\r\n  background: '#fafafa',\r\n}));\r\n\r\nconst ChatStatus = styled('div')(({ theme }) => ({\r\n  marginLeft: '12px',\r\n  color: theme.palette.primary.main,\r\n  '& h5': {\r\n    marginTop: 0,\r\n    fontSize: '14px',\r\n    marginBottom: '3px',\r\n  },\r\n  '& span': { fontWeight: '500' },\r\n}));\r\n\r\nconst ChatMessage = styled('div')(({ theme }) => ({\r\n  padding: '8px',\r\n  maxWidth: 240,\r\n  fontSize: '14px',\r\n  borderRadius: '4px',\r\n  marginBottom: '8px',\r\n  whiteSpace: 'pre-wrap',\r\n  wordBreak: 'break-word',\r\n  color: theme.palette.primary.main,\r\n  background: '#fafafa',\r\n}));\r\n\r\nconst MessageTime = styled('span')(({ theme }) => ({\r\n  fontSize: '13px',\r\n  fontWeight: '500',\r\n  color: theme.palette.primary.main,\r\n}));\r\n\r\nconst ChatImgContainer = styled('div')(({ theme }) => ({\r\n  padding: '20px',\r\n  display: 'flex',\r\n  justifyContent: 'flex-end',\r\n}));\r\n\r\nconst ChatImgBox = styled('div')(({ theme }) => ({\r\n  padding: '8px',\r\n  fontSize: '14px',\r\n  maxWidth: 240,\r\n  borderRadius: '4px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  color: theme.palette.primary.main,\r\n  background: '#fafafa',\r\n}));\r\n\r\nconst ChatImg = styled('img')(() => ({ width: '40px' }));\r\nconst ChatImgSize = styled(MessageTime)(() => ({}));\r\n\r\n// for previewing bot message\r\nconst globalMessageList = [];\r\n\r\nconst Chatbox = ({ togglePopup }) => {\r\n  const [isAlive, setIsAlive] = useState(true);\r\n  const [message, setMessage] = useState('');\r\n  const [messageList, setMessageList] = useState([]);\r\n  const currentUserId = '7863a6802ez0e277a0f98534';\r\n  const chatBottomRef = document.querySelector('#chat-scroll');\r\n\r\n  const sendMessageOnEnter = (event) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      let tempMessage = message.trim();\r\n      if (tempMessage !== '') {\r\n        let tempList = [...messageList];\r\n        let messageObject = {\r\n          text: tempMessage,\r\n          contactId: currentUserId,\r\n        };\r\n        tempList.push(messageObject);\r\n        globalMessageList.push(messageObject);\r\n        if (isAlive) setMessageList(tempList);\r\n        dummyReply();\r\n      }\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const dummyReply = async () => {\r\n    setTimeout(() => {\r\n      let tempList = [...messageList];\r\n      let messageObject = {\r\n        text: 'Good to hear from you. enjoy!!!',\r\n        contactId: 'opponents contact id',\r\n        avatar: '/assets/images/faces/13.jpg',\r\n        name: 'Frank Powell',\r\n      };\r\n\r\n      tempList.push(messageObject);\r\n      globalMessageList.push(messageObject);\r\n      if (isAlive) setMessageList(globalMessageList);\r\n    }, 2000);\r\n  };\r\n\r\n  const scrollToBottom = useCallback(() => {\r\n    if (chatBottomRef) {\r\n      chatBottomRef.scrollTo({\r\n        top: chatBottomRef.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [chatBottomRef]);\r\n\r\n  useEffect(() => {\r\n    if (isAlive) {\r\n      setMessageList([\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Do you ever find yourself falling into the “discount trap?”',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Giving away your knowledge or product just to gain clients?',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Yes',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Don’t feel bad. It happens to a lot of us',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Do you ever find yourself falling into the “discount trap?”',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Giving away your knowledge or product just to gain clients?',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Yes',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Don’t feel bad. It happens to a lot of us',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n      ]);\r\n    }\r\n  }, [isAlive]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n    return () => setIsAlive(false);\r\n  }, [messageList, scrollToBottom]);\r\n\r\n  const { palette } = useTheme();\r\n  const primary = palette.primary.main;\r\n  const textPrimary = palette.text.primary;\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ProfileBox>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <ChatAvatar src=\"/assets/images/face-2.jpg\" status=\"online\" />\r\n          <ChatStatus>\r\n            <H5>Ryan Todd</H5>\r\n            <Span>Active</Span>\r\n          </ChatStatus>\r\n        </Box>\r\n        <IconButton onClick={togglePopup}>\r\n          <Icon fontSize=\"small\">clear</Icon>\r\n        </IconButton>\r\n      </ProfileBox>\r\n      <StyledScrollBar id=\"chat-scroll\">\r\n        {messageList.map((item, ind) => (\r\n          <Box\r\n            key={shortId.generate()}\r\n            p=\"20px\"\r\n            display=\"flex\"\r\n            sx={{\r\n              justifyContent: currentUserId === item.contactId && 'flex-end',\r\n            }}\r\n          >\r\n            {currentUserId !== item.contactId && <Avatar src={item.avatar} />}\r\n            <Box ml=\"12px\">\r\n              {currentUserId !== item.contactId && (\r\n                <H5\r\n                  sx={{\r\n                    mb: '4px',\r\n                    fontSize: '14px',\r\n                    color: primary,\r\n                  }}\r\n                >\r\n                  {item.name}\r\n                </H5>\r\n              )}\r\n              <ChatMessage>{item.text}</ChatMessage>\r\n              <MessageTime>1 minute ago</MessageTime>\r\n            </Box>\r\n          </Box>\r\n        ))}\r\n\r\n        {/* example of image sent by current user*/}\r\n        <ChatImgContainer>\r\n          <Box ml=\"12px\">\r\n            <ChatImgBox>\r\n              <ChatImg alt=\"laptop\" src=\"/assets/images/laptop-1.png\" />\r\n              <Box ml=\"12px\">\r\n                <H6 sx={{ mt: 0, mb: '4px' }}>Asus K555LA.png</H6>\r\n                <ChatImgSize>21.5KB</ChatImgSize>\r\n              </Box>\r\n            </ChatImgBox>\r\n            <MessageTime>1 minute ago</MessageTime>\r\n          </Box>\r\n        </ChatImgContainer>\r\n      </StyledScrollBar>\r\n      <div>\r\n        <Divider\r\n          sx={{\r\n            background: `rgba(${convertHexToRGB(textPrimary)}, 0.15)`,\r\n          }}\r\n        />\r\n        <TextField\r\n          placeholder=\"Type here ...\"\r\n          multiline\r\n          rowsMax={4}\r\n          fullWidth\r\n          sx={{ '& textarea': { color: primary } }}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <Box display=\"flex\">\r\n                <IconButton size=\"small\">\r\n                  <Icon>tag_faces</Icon>\r\n                </IconButton>\r\n                <IconButton size=\"small\">\r\n                  <Icon>attachment</Icon>\r\n                </IconButton>\r\n              </Box>\r\n            ),\r\n            classes: { root: 'pl-5 pr-3 py-3 text-body' },\r\n          }}\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyUp={sendMessageOnEnter}\r\n        />\r\n      </div>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n","import { styled } from '@mui/material';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport clsx from 'clsx';\r\nimport { cloneElement, useState } from 'react';\r\n\r\nconst PopupRoot = styled('div')(({ theme }) => ({\r\n  '& .popupOpen': {\r\n    top: topBarHeight + 16,\r\n    [theme.breakpoints.down('sm')]: { bottom: 0 },\r\n  },\r\n  '& .closeIcon': {\r\n    position: 'absolute',\r\n    top: 6,\r\n    right: 6,\r\n  },\r\n}));\r\n\r\nconst Popup = styled('div')(({ theme }) => ({\r\n  position: 'fixed',\r\n  right: theme.spacing(2),\r\n  bottom: theme.spacing(2),\r\n  top: '100vh',\r\n  transition: 'top 250ms ease-in-out',\r\n  boxShadow: theme.shadows[6],\r\n  borderRadius: 6,\r\n  zIndex: 99999,\r\n  width: 360,\r\n  overflow: 'hidden',\r\n  '@media only screen and (max-width: 450px)': {\r\n    width: 'calc(100% - 32px)',\r\n    left: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ChatHead = ({ icon, children }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const togglePopup = async () => {\r\n    setOpen((open) => !open);\r\n  };\r\n\r\n  return (\r\n    <PopupRoot>\r\n      {cloneElement(icon, { onClick: togglePopup })}\r\n      <Popup className={clsx({ popupOpen: open })}>\r\n        {open ? cloneElement(children, { togglePopup }) : null}\r\n      </Popup>\r\n    </PopupRoot>\r\n  );\r\n};\r\n\r\nexport default ChatHead;\r\n","import { Button, Dialog, styled } from '@mui/material';\r\n\r\nconst DialogBox = styled('div')(() => ({\r\n  width: 360,\r\n  padding: '32px',\r\n  textAlign: 'center',\r\n  marginLeft: 'auto',\r\n  marginRight: 'auto',\r\n}));\r\n\r\nconst Title = styled('h4')(() => ({\r\n  margin: 0,\r\n  marginBottom: '8px',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst Controller = styled('div')(() => ({\r\n  margin: '8px',\r\n  paddingTop: '8px',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledButton = styled(Button)(({ theme }) => ({\r\n  margin: '8px',\r\n  paddingLeft: '24px',\r\n  paddingRight: '24px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n  transition: 'all 250ms',\r\n  '&.yesBtn': {\r\n    '&:hover': {\r\n      color: '#ffffff',\r\n      background: `${theme.palette.primary.main} !important`,\r\n      backgroundColor: `${theme.palette.primary.main} !important`,\r\n      fallbacks: [{ color: 'white !important' }],\r\n    },\r\n  },\r\n  '&.noBtn': {\r\n    '&:hover': {\r\n      color: '#ffffff',\r\n      background: `${theme.palette.secondary.main} !important`,\r\n      backgroundColor: `${theme.palette.secondary.main} !important`,\r\n      fallbacks: [{ color: 'white !important' }],\r\n    },\r\n  },\r\n}));\r\n\r\nconst ConfirmationDialog = ({\r\n  open,\r\n  onConfirmDialogClose,\r\n  text,\r\n  title = 'confirm',\r\n  onYesClick,\r\n}) => {\r\n  return (\r\n    <Dialog maxWidth=\"xs\" open={open} onClose={onConfirmDialogClose}>\r\n      <DialogBox>\r\n        <Title>{title}</Title>\r\n        <p>{text}</p>\r\n        <Controller>\r\n          <StyledButton className=\"yesBtn\" variant=\"outlined\" color=\"primary\" onClick={onYesClick}>\r\n            Yes\r\n          </StyledButton>\r\n          <StyledButton\r\n            className=\"noBtn\"\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={onConfirmDialogClose}\r\n          >\r\n            No\r\n          </StyledButton>\r\n        </Controller>\r\n      </DialogBox>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n","import { Menu, ThemeProvider } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport React, { Fragment } from 'react';\r\nimport shortId from 'shortid';\r\n\r\nconst MenuButton = styled(Box)(({ theme }) => ({\r\n  display: 'inline-block',\r\n  color: theme.palette.text.primary,\r\n  '& div:hover': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n}));\r\n\r\nconst MatxMenu = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const children = React.Children.toArray(props.children);\r\n  let { shouldCloseOnItemClick = true, horizontalPosition = 'left' } = props;\r\n  const { settings } = useSettings();\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MenuButton onClick={handleClick}>{props.menuButton}</MenuButton>\r\n      <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n        <Menu\r\n          elevation={8}\r\n          getContentAnchorEl={null}\r\n          anchorEl={anchorEl}\r\n          open={!!anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: horizontalPosition,\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: horizontalPosition,\r\n          }}\r\n        >\r\n          {children.map((child, index) => (\r\n            <div onClick={shouldCloseOnItemClick && handleClose} key={shortId.generate()}>\r\n              {child}\r\n            </div>\r\n          ))}\r\n        </Menu>\r\n      </ThemeProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MatxMenu;\r\n","import { Grid, LinearProgress, Typography } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport { Small } from './Typography';\r\n\r\nconst CustomLinearProgress = styled(LinearProgress)(() => ({\r\n  borderRadius: 2,\r\n  background: 'rgba(0, 0, 0, 0.1)',\r\n}));\r\n\r\nconst MatxProgressBar = ({\r\n  value = 75,\r\n  color = 'primary',\r\n  text = '',\r\n  spacing = 2,\r\n  coloredText = false,\r\n}) => {\r\n  const theme = useTheme();\r\n  const secondary = theme.palette.text.secondary;\r\n\r\n  return (\r\n    <Grid container spacing={spacing} alignItems=\"center\">\r\n      <Grid item xs={text ? 8 : 12}>\r\n        <CustomLinearProgress\r\n          color={color}\r\n          value={value}\r\n          variant=\"determinate\"\r\n        ></CustomLinearProgress>\r\n      </Grid>\r\n      {text !== '' && (\r\n        <Grid item xs={text ? 4 : false}>\r\n          <Typography color={color}>\r\n            <Small sx={{ color: coloredText ? '' : secondary }}>{text}</Small>\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MatxProgressBar;\r\n","import { Icon, IconButton } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport React, { useState } from 'react';\r\n\r\nconst SearchContainer = styled('div')(({ theme }) => ({\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 9,\r\n  width: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  height: topBarHeight,\r\n  background: theme.palette.primary.main,\r\n  color: theme.palette.text.primary,\r\n  '&::placeholder': {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nconst SearchInput = styled('input')(({ theme }) => ({\r\n  width: '100%',\r\n  border: 'none',\r\n  outline: 'none',\r\n  fontSize: '1rem',\r\n  paddingLeft: '20px',\r\n  height: 'calc(100% - 5px)',\r\n  background: theme.palette.primary.main,\r\n  color: theme.palette.text.primary,\r\n  '&::placeholder': { color: theme.palette.text.primary },\r\n}));\r\n\r\nconst MatxSearchBox = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const toggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const { palette } = useTheme();\r\n  const textColor = palette.text.primary;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!open && (\r\n        <IconButton onClick={toggle}>\r\n          <Icon sx={{ color: textColor }}>search</Icon>\r\n        </IconButton>\r\n      )}\r\n\r\n      {open && (\r\n        <SearchContainer>\r\n          <SearchInput type=\"text\" placeholder=\"Search here...\" autoFocus />\r\n          <IconButton onClick={toggle} sx={{ mx: 2, verticalAlign: 'middle' }}>\r\n            <Icon sx={{ color: textColor }}>close</Icon>\r\n          </IconButton>\r\n        </SearchContainer>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MatxSearchBox;\r\n","import { Box, styled, useMediaQuery, useTheme } from '@mui/material';\r\n\r\nconst SideNav = styled('div')(({ theme, width }) => ({\r\n  zIndex: 91,\r\n  width: width,\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  transition: 'width 250ms ease',\r\n  background: theme.palette.background.default,\r\n  [theme.breakpoints.down('sm')]: {\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n  },\r\n}));\r\n\r\nconst SideNavOverlay = styled('div')(() => ({\r\n  zIndex: 90,\r\n  width: '100%',\r\n  height: '100%',\r\n  position: 'absolute',\r\n  background: 'rgba(0, 0, 0, 0.74)',\r\n}));\r\n\r\nconst MatxSidenav = ({ sx, open, children, toggleSidenav, width = '220px' }) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  return (\r\n    <Box height=\"100%\" display=\"flex\">\r\n      <SideNav sx={sx} width={open || !isMobile ? width : '0px'}>\r\n        {children}\r\n      </SideNav>\r\n\r\n      {open && isMobile && <SideNavOverlay onClick={toggleSidenav} />}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MatxSidenav;\r\n","import { styled } from '@mui/material';\r\n\r\nconst Container = styled('div')(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  position: 'relative',\r\n}));\r\n\r\nconst MatxSidenavContainer = ({ children }) => {\r\n  return <Container>{children}</Container>;\r\n};\r\n\r\nexport default MatxSidenavContainer;\r\n","import { styled } from '@mui/material';\r\n\r\nconst Content = styled('div')(() => ({\r\n  flexGrow: 1,\r\n  height: '100%',\r\n  position: 'relative',\r\n}));\r\n\r\nconst MatxSidenavContent = ({ children }) => {\r\n  return <Content>{children}</Content>;\r\n};\r\n\r\nexport default MatxSidenavContent;\r\n","import { MatxLoading } from 'app/components';\r\nimport React, { Suspense } from 'react';\r\n\r\nconst MatxSuspense = ({ children }) => {\r\n  return <Suspense fallback={<MatxLoading />}>{children}</Suspense>;\r\n};\r\n\r\nexport default MatxSuspense;\r\n","import React from 'react';\r\nimport { CssBaseline, ThemeProvider } from '@mui/material';\r\nimport useSettings from 'app/hooks/useSettings';\r\n\r\nconst MatxTheme = ({ children }) => {\r\n  const { settings } = useSettings();\r\n  let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n\r\n  return (\r\n    <ThemeProvider theme={activeTheme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default MatxTheme;\r\n","import { ButtonBase, Icon } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport clsx from 'clsx';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst NavExpandRoot = styled('div')(({ theme }) => ({\r\n  '& .expandIcon': {\r\n    transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\r\n    transform: 'rotate(90deg)',\r\n    color: theme.palette.common.white,\r\n  },\r\n  '& .collapseIcon': {\r\n    transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\r\n    transform: 'rotate(0deg)',\r\n    color: theme.palette.common.white,\r\n  },\r\n  '& .expansion-panel': {\r\n    overflow: 'hidden',\r\n    transition: 'max-height 0.3s cubic-bezier(0, 0, 0.2, 1)',\r\n\r\n  },\r\n  '& .highlight': {\r\n    background: theme.palette.primary.main,\r\n  },\r\n  '&.compactNavItem': {\r\n    width: 44,\r\n    overflow: 'hidden',\r\n    justifyContent: 'center !important',\r\n    '& .itemText': { display: 'none' },\r\n    '& .itemIcon': { display: 'none' },\r\n  },\r\n}));\r\n\r\nconst BaseButton = styled(ButtonBase)(({ theme }) => ({\r\n  height: 44,\r\n  width: '100%',\r\n  whiteSpace: 'pre',\r\n  overflow: 'hidden',\r\n  paddingRight: '16px',\r\n  borderRadius: '4px',\r\n  marginBottom: '8px',\r\n  display: 'flex',\r\n  justifyContent: 'space-between !important',\r\n  color: theme.palette.text.primary,\r\n  //color: theme.palette.common.white,\r\n  '&:hover': { background: 'rgba(255, 255, 255, 0.08)' },\r\n  '& .icon': {\r\n    width: 36,\r\n    fontSize: '18px',\r\n    paddingLeft: '16px',\r\n    paddingRight: '16px',\r\n    verticalAlign: 'middle',\r\n    color: 'white',\r\n  },\r\n}));\r\n\r\nconst BulletIcon = styled('div')(({ theme }) => ({\r\n  width: 4,\r\n  height: 4,\r\n  color: 'inherit',\r\n  overflow: 'hidden',\r\n  marginLeft: '20px',\r\n  marginRight: '8px',\r\n  borderRadius: '300px !important',\r\n  background: theme.palette.primary.contrastText,\r\n\r\n}));\r\n\r\nconst ItemText = styled('span')(({ theme }) => ({\r\n  fontSize: '0.875rem',\r\n  paddingLeft: '0.8rem',\r\n  verticalAlign: 'middle',\r\n  color: theme.palette.common.white,\r\n  //color: 'white',\r\n}));\r\n\r\nconst BadgeValue = styled('div')(() => ({\r\n  padding: '1px 4px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n  //color: 'white',\r\n}));\r\n\r\nconst MatxVerticalNavExpansionPanel = ({ item, children, mode }) => {\r\n  const [collapsed, setCollapsed] = useState(true); // State to manage collapsed/expanded state\r\n  const elementRef = useRef(null); // Ref to track the DOM element\r\n  const componentHeight = useRef(0); // Ref to store the calculated height\r\n  const { pathname } = useLocation(); // To track the current route\r\n  const { name, icon, iconText, badge } = item; // Destructure item props\r\n\r\n  // Toggle collapsed state with additional checks for child clicks\r\n  const handleClick = (e) => {\r\n    // Prevent collapsing if a child is clicked\r\n    const isChildClick = e?.target?.closest('.submenu');\r\n    if (isChildClick) return;\r\n\r\n    componentHeight.current = 0;\r\n    calcaulateHeight(elementRef.current);\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const calcaulateHeight = useCallback((node) => {\r\n    if (node.name !== 'child') {\r\n      for (let child of node.children) {\r\n        calcaulateHeight(child);\r\n      }\r\n    }\r\n\r\n    if (node.name === 'child') componentHeight.current += node.scrollHeight;\r\n    else componentHeight.current += 44; //here 44 is node height\r\n    return;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!elementRef) return;\r\n\r\n    calcaulateHeight(elementRef.current);\r\n\r\n    // OPEN DROPDOWN IF CHILD IS ACTIVE OR NAME IS \"Search\"\r\n    for (let child of elementRef.current.children) {\r\n      if (child.getAttribute('href') === pathname || name === \"Search\") {\r\n        setCollapsed(false);\r\n      }\r\n    }\r\n  }, [pathname, calcaulateHeight, name]);\r\n\r\n  return (\r\n    <NavExpandRoot>\r\n      <BaseButton\r\n        className={clsx({\r\n          'has-submenu compactNavItem': true,\r\n          compactNavItem: mode === 'compact',\r\n          open: !collapsed,\r\n        })}\r\n        onClick={(e) => handleClick(e)} // Pass the event to handleClick\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          {icon && <Icon className=\"icon\">{icon}</Icon>}\r\n          {iconText && <BulletIcon />}\r\n          <ItemText className={`sidenavHoverShow`}>{name}</ItemText>\r\n        </Box>\r\n\r\n        {badge && <BadgeValue className=\"sidenavHoverShow itemIcon\">{badge.value}</BadgeValue>}\r\n\r\n        <div\r\n          className={clsx({\r\n            sidenavHoverShow: true,\r\n            collapseIcon: collapsed,\r\n            expandIcon: !collapsed,\r\n          })}\r\n        >\r\n          <Icon fontSize=\"small\" sx={{ verticalAlign: 'middle' }}>\r\n            chevron_right\r\n          </Icon>\r\n        </div>\r\n      </BaseButton>\r\n\r\n      <div\r\n        ref={elementRef}\r\n        className=\"expansion-panel submenu\"\r\n        style={collapsed ? { maxHeight: '0px' } : { maxHeight: componentHeight.current + 'px' }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </NavExpandRoot>\r\n  );\r\n};\r\n\r\nexport default React.memo(MatxVerticalNavExpansionPanel);","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from 'shortid';\r\nimport { BUService } from \"services/buService\";\r\nimport { MassUpdate } from \"services/massUpdateService\";\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl\r\n} from \"@mui/material\";\r\n\r\n\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\n// import download from 'downloadjs';\r\n// import CustomSelect from \"./CustomSelect\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialog-paper-root': {\r\n        backgroundColor: '#ffffff',\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst MassUpdatePartDescriptionInEnoviaAndERP = (props) => {\r\n    const buService = new BUService();\r\n    const massUpdate = new MassUpdate();\r\n    const { importMassupdateFile, setImportMassupdateFile, setOpenAlert, setOpenDesc, setIsLoading } = props;\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n    const [sampleFileUrl, setSampleFileUrl] = useState(null);\r\n    // const [bussinessUnitLists, setBussinessUnitLists] = useState([]);\r\n    const instance = localStorage.getItem('instance')\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n\r\n    // const [ERPTypeError, setERPTypeError] = useState(false);\r\n    // const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n    });\r\n\r\n    const importFileData = (e) => {\r\n        console.log('file selected')\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0])\r\n                setImportedFileName(e.target.files[0].name)\r\n                setNoFileError(false)\r\n            } else {\r\n                setNoFileError(true)\r\n                setImportedFileName(null)\r\n                setImportedFileData(null)\r\n            }\r\n        } else {\r\n            setNoFileError(true)\r\n            setImportedFileName(null)\r\n            setImportedFileData(null)\r\n        }\r\n    }\r\n    const handleCloseImport = () => {\r\n        setImportedFileData(null)\r\n        setImportMassupdateFile(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n        //console.info(event.target, 'importSelectionValues')\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (importedFileData === null || importedFileData.length < 1) {\r\n            setNoFileError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n\r\n        if (importedFileData !== null) {\r\n            //alert('file is upl7oaded')\r\n            if (window.confirm(`You have requested a report that will take some time to complete. This report will continue to run if you close this browser window. To access this report later, use 'Mass Update Part Description' > My Report.`)) {\r\n                setImportMassupdateFile(false);\r\n                setIsLoading(true);\r\n\r\n                console.log('ok for mass update')\r\n                let postData = {\r\n                    'file': importedFileData,\r\n                    data: {\r\n                        BU: importSelectionValues.BU,\r\n                        Instance: instance,\r\n                    }\r\n                };\r\n\r\n                // console.log(importSelectionValues, 'importSelectionValues');\r\n                console.log(postData, 'postData');\r\n                massUpdate.massUpdatePartDescription(postData).then((response) => {\r\n                    console.log(response, 'response 11111');\r\n                    setImportResponse(response)\r\n                    setimportfileBar(true);\r\n                    setImportedFileData(null)\r\n                    setImportedFileName(null)\r\n                    setImportMassupdateFile(false)\r\n\r\n                    setIsLoading(false);\r\n                    setOpenAlert(false);\r\n                    if (response?.status === \"success\") {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"success\",\r\n                            desc: response?.msg,\r\n                        });\r\n                    } else if (response?.status === \"failed\") {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"error\",\r\n                            desc: response?.msg,\r\n                        });\r\n                    }\r\n\r\n                    // if (!importResponse?.errorInTemplateCount || !importResponse?.errorInPlantCount) {\r\n                    //     updateRefreshData(true);\r\n                    //     fetchData()\r\n                    // }\r\n                });\r\n            }\r\n            console.log('cancle for mass update')\r\n        }\r\n    }\r\n    const handleImportfileBarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setimportfileBar(false);\r\n    };\r\n    const getUniqueValues = (column) => {\r\n        const values = new Set();\r\n        bussinessUnitLists?.forEach(item => {\r\n            values.add(item[column]);\r\n        })\r\n        return Array.from(values);\r\n    };\r\n    useEffect(() => {\r\n        if (bussinessUnitLists?.length === 0) {\r\n            // buService.getAllBuList().then((result) => {\r\n            //   setBussinessUnitLists(result.data)\r\n            // });\r\n        }\r\n    }, [bussinessUnitLists])\r\n    const handleDownload = () => {\r\n        let filelocation = 'massUpdate/sample-massUpdatepartDescription.xlsx'\r\n        massUpdate.downloadSampleFile(filelocation)\r\n    };\r\n    return (\r\n        <>\r\n            <Dialog open={importMassupdateFile}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Mass Update Part Description in Enovia and ERP\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Instance\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel id=\"bussinessUnit\">{instance}</InputLabel>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Upload File (Excel File)\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                                    Upload file\r\n                                                    <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                                </Button>\r\n                                                {noFileError && (<p>Please Select xlsx file to Upload </p>)}\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={2}>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <a\r\n                                                    // href={sampleFileUrl}\r\n                                                    onClick={handleDownload}\r\n                                                    download=\"Example-XLSX-document\"\r\n                                                    rel=\"noreferrer\"\r\n                                                    // target=\"_blank\"\r\n                                                    //style={{ color: \"blue\" }}\r\n                                                    style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                                                >\r\n                                                    Click Here\r\n                                                </a> to download the sample Excel template for the Part Description Update.\r\n\r\n                                                {/* <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={() => { download(sampleFileUrl) }}>\r\n                                                Download sample file\r\n                                            </Button> */}\r\n                                                {/* </a> */}\r\n                                            </div>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <b>Note:</b> Use only the Excel template, downloaded from this page. Other Excel templates\r\n                                                will not be accepted. The Excel file has four columns with Header labels in the\r\n                                                following order. Fields mark with * are the mandatory fields in the input excel.\r\n                                            </div>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                Part Type*<br />\r\n                                                Part Name*<br />\r\n                                                Part Revision*<br />\r\n                                                Part Description*<br />\r\n                                            </div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Snackbar\r\n                open={importfileBar}\r\n                autoHideDuration={6000}\r\n                onClose={handleImportfileBarClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleImportfileBarClose}\r\n                    severity={(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"success\" : \"error\"}\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    <AlertTitle>{(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"Success\" : \"Error\"}</AlertTitle>\r\n                    {\r\n                        (importResponse && (importResponse?.errorInTemplate?.length || importResponse?.errorInPlants?.length)) ? (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse?.msg} <br />\r\n                                    {\r\n                                        (importResponse?.errorInTemplateCount) ? (<>\r\n                                            Total Template Count: {importResponse?.errorInTemplateCount} <br />\r\n                                            Templates are: <br />\r\n                                            <ul>\r\n                                                {\r\n                                                    importResponse?.errorInTemplate?.map((eitem) => {\r\n                                                        return (\r\n                                                            <li key={shortId.generate()}>\r\n                                                                {eitem}\r\n                                                            </li>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </ul>\r\n                                        </>) : (<></>)\r\n                                    }\r\n\r\n                                    {\r\n                                        (importResponse?.errorInPlantCount) ? (\r\n                                            <>\r\n                                                Total Plant Count: {importResponse?.errorInPlantCount} <br />\r\n                                                Plants are: <br />\r\n                                                <ul>\r\n                                                    {\r\n                                                        importResponse?.errorInPlants?.map((eitem) => {\r\n                                                            return (\r\n                                                                <li key={shortId.generate()}>\r\n                                                                    {eitem}\r\n                                                                </li>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </ul>\r\n                                            </>\r\n                                        ) : (<></>)\r\n                                    }\r\n\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse.msg} <br />\r\n                                    Parts Description Updated: {importResponse.updateTemplates} <br />\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                    {/* Template imported successfully! */}\r\n                </Alert>\r\n            </Snackbar >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MassUpdatePartDescriptionInEnoviaAndERP;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { BUService } from \"services/buService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from \"@mui/material\";\r\n\r\n//import MuiAlert from \"@mui/material/Alert\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst ExportAllTemplateMapping = (props) => {\r\n    const buService = new BUService();\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { exportAllTempMapping, setExportAllTempMapping } = props;\r\n    // const [noFileError, setNoFileError] = useState(false);\r\n    // const [importResponse, setImportResponse] = useState(false);\r\n    // const [importfileBar, setimportfileBar] = useState(false);\r\n    // const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n    // const [sampleFileUrl, setSampleFileUrl] = useState(null);\r\n    //const [bussinessUnitLists, setBussinessUnitLists] = useState([]);\r\n    //const instance = localStorage.getItem('instance')\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    // const [ERPTypeError, setERPTypeError] = useState(false);\r\n    // const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n        dataToExport: 'masterData'\r\n    });\r\n\r\n    // const importFileData = (e) => {\r\n    //     console.log('file selected')\r\n    //     if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n    //         setImportedFileData(e.target.files[0])\r\n    //         setImportedFileName(e.target.files[0].name)\r\n    //         setNoFileError(false)\r\n    //     } else {\r\n    //         setNoFileError(true)\r\n    //         setImportedFileName(null)\r\n    //         setImportedFileData(null)\r\n    //     }\r\n    // }\r\n    const handleCloseImport = () => {\r\n        // setImportedFileData(null)\r\n        setExportAllTempMapping(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n        console.info(event.target, 'importSelectionValues')\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n\r\n        //if (importedFileData !== null) {\r\n        //alert('file is upl7oaded')\r\n        //if (window.confirm(`You have requested a report that will take some time to complete. This report will continue to run if you close this browser window. To access this report later, use 'Mass Update Part Description' > My Report.`)) {\r\n        //console.log('ok for mass update')\r\n        let postData = {\r\n            rdo: importSelectionValues.BU,\r\n            dataToExport: importSelectionValues.dataToExport,\r\n        }\r\n\r\n        // console.log(importSelectionValues, 'importSelectionValues');\r\n        console.log(postData, 'postData');\r\n        templateMappingService.exportAllTemplateMapping(postData).then((response) => {\r\n            console.log(response, 'response 11111');\r\n            // setImportResponse(response)\r\n            // setimportfileBar(true);\r\n            // setImportedFileData(null)\r\n            setImportedFileName(null)\r\n            //console.log(response, ';resprespresp')\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n            setExportAllTempMapping(false)\r\n        });\r\n        // }\r\n        // console.log('cancle for mass update')\r\n        //}\r\n    }\r\n\r\n    // const handleImportfileBarClose = (event, reason) => {\r\n    //     if (reason === \"clickaway\") {\r\n    //         return;\r\n    //     }\r\n    //     setimportfileBar(false);\r\n    // };\r\n    // const getUniqueValues = (column) => {\r\n    //     const values = new Set();\r\n    //     bussinessUnitLists?.forEach(item=>{\r\n    //         values.add(item[column]);\r\n    //     })\r\n    //     return Array.from(values);\r\n    // };\r\n    useEffect(() => {\r\n        if (bussinessUnitLists?.length === 0) {\r\n            // buService.getAllBuList().then((result) => {\r\n            //   setBussinessUnitLists(result.data)\r\n            // });\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Dialog open={exportAllTempMapping}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Export All Template Mappings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Data to Export\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <FormControl>\r\n                                                    {/* <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel> */}\r\n                                                    <RadioGroup\r\n                                                        row\r\n                                                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                                                        name=\"dataToExport\"\r\n                                                        defaultValue=\"masterData\"\r\n                                                        // value={value}\r\n                                                        onChange={handleImportOptionSelection}\r\n                                                    >\r\n                                                        <FormControlLabel value=\"masterData\" control={<Radio />} label=\"Master Data\" />\r\n                                                        <FormControlLabel value=\"draftData\" control={<Radio />} label=\"Proposed Changes\" />\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExportAllTemplateMapping;","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { BUService } from \"services/buService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from \"@mui/material\";\r\n\r\n//import MuiAlert from \"@mui/material/Alert\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst ExportAllGeneralPropertiesDialogBox = (props) => {\r\n    const buService = new BUService();\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { exportAllAdminGeneralPropertiesDialog, setExportAllAdminGeneralPropertiesDialog } = props;    \r\n    const [importedFileName, setImportedFileName] = useState(null);    \r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n        dataToExport: 'masterData'\r\n    });\r\n    \r\n    const handleCloseImport = () => {\r\n        // setImportedFileData(null)\r\n        setExportAllAdminGeneralPropertiesDialog(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n        let postData = {\r\n            rdo: importSelectionValues.BU,\r\n            dataToExport: importSelectionValues.dataToExport,\r\n        }\r\n        templateMappingService.exportAllAdminGeneralProperties(postData).then((response) => {\r\n            console.log(response, 'response 11111');\r\n            setImportedFileName(null)\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n            setExportAllAdminGeneralPropertiesDialog(false)\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Dialog open={exportAllAdminGeneralPropertiesDialog}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Export All Admin General Properties\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Data to Export\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <FormControl>\r\n                                                    {/* <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel> */}\r\n                                                    <RadioGroup\r\n                                                        row\r\n                                                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                                                        name=\"dataToExport\"\r\n                                                        defaultValue=\"masterData\"\r\n                                                        // value={value}\r\n                                                        onChange={handleImportOptionSelection}\r\n                                                    >\r\n                                                        <FormControlLabel value=\"masterData\" control={<Radio />} label=\"Master Data\" />\r\n                                                        <FormControlLabel value=\"draftData\" control={<Radio />} label=\"Proposed Changes\" />\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExportAllGeneralPropertiesDialogBox;","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { BUService } from \"services/buService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from \"@mui/material\";\r\n\r\n//import MuiAlert from \"@mui/material/Alert\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst ExportAllSystemSetupsDialogBox = (props) => {\r\n    const buService = new BUService();\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { exportAllAdminSystemSetupsDialog, setExportAllAdminSystemSetupsDialog } = props;    \r\n    const [importedFileName, setImportedFileName] = useState(null);    \r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n        dataToExport: 'masterData'\r\n    });\r\n    \r\n    const handleCloseImport = () => {\r\n        // setImportedFileData(null)\r\n        setExportAllAdminSystemSetupsDialog(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n        let postData = {\r\n            rdo: importSelectionValues.BU,\r\n            dataToExport: importSelectionValues.dataToExport,\r\n        }\r\n        templateMappingService.exportAllAdminSystemSetups(postData).then((response) => {\r\n            console.log(response, 'response 11111');\r\n            setImportedFileName(null)\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n            setExportAllAdminSystemSetupsDialog(false)\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Dialog open={exportAllAdminSystemSetupsDialog}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Export All Admin System System\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Data to Export\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <FormControl>\r\n                                                    {/* <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel> */}\r\n                                                    <RadioGroup\r\n                                                        row\r\n                                                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                                                        name=\"dataToExport\"\r\n                                                        defaultValue=\"masterData\"\r\n                                                        // value={value}\r\n                                                        onChange={handleImportOptionSelection}\r\n                                                    >\r\n                                                        <FormControlLabel value=\"masterData\" control={<Radio />} label=\"Master Data\" />\r\n                                                        <FormControlLabel value=\"draftData\" control={<Radio />} label=\"Proposed Changes\" />\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExportAllSystemSetupsDialogBox;","import { Box, ButtonBase, Icon, styled, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from '@mui/system';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport React, { Fragment, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Paragraph, Span } from '../Typography';\r\nimport MatxVerticalNavExpansionPanel from './MatxVerticalNavExpansionPanel';\r\nimport shortId from 'shortid';\r\n// import { getBasename } from \"app/utils/baseurl\";\r\nimport MassUpdatePartDescriptionInEnoviaAndERP from '../massUpdatePartDescriptionInEnoviaAndERP';\r\nimport ExportAllTemplateMapping from '../exportAllTemplateMapping';\r\nimport ExportAllGeneralPropertiesDialogBox from '../exportAllAdminGeneralProperties';\r\nimport CustomAlertBox from \"app/components/McoPages/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport ExportAllSystemSetupsDialogBox from '../exportAllAdminSystemSetups';\r\nconst ListLabel = styled(Paragraph)(({ theme, mode }) => ({\r\n  fontSize: '12px',\r\n  marginTop: '20px',\r\n  marginLeft: '15px',\r\n  marginBottom: '10px',\r\n  textTransform: 'uppercase',\r\n  display: mode === 'compact' && 'none',\r\n  color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst ExtAndIntCommon = {\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  borderRadius: '4px',\r\n  height: 44,\r\n  whiteSpace: 'pre',\r\n  marginBottom: '8px',\r\n  textDecoration: 'none',\r\n  justifyContent: 'space-between',\r\n  transition: 'all 150ms ease-in',\r\n  '&:hover': { background: 'rgba(255, 255, 255, 0.08)' },\r\n  '&.compactNavItem': {\r\n    overflow: 'hidden',\r\n    justifyContent: 'center !important',\r\n  },\r\n  '& .icon': {\r\n    fontSize: '18px',\r\n    paddingLeft: '16px',\r\n    paddingRight: '16px',\r\n    verticalAlign: 'middle',\r\n  },\r\n};\r\nconst ExternalLink = styled('a')(({ theme }) => ({\r\n  ...ExtAndIntCommon,\r\n  color: theme.palette.text.primary,\r\n}));\r\n\r\nconst InternalLink = styled(Box)(({ theme }) => ({\r\n  '& a': {\r\n    ...ExtAndIntCommon,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  '& .navItemActive': {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.16)',\r\n  },\r\n}));\r\n\r\nconst StyledText = styled(Span)(({ mode, theme }) => ({\r\n  fontSize: '0.875rem',\r\n  paddingLeft: '0.8rem',\r\n  display: mode === 'compact' && 'none',\r\n  color: theme.palette.common.white,\r\n}));\r\n\r\n//for mass update start\r\nconst StyledTextforMassUpdate = styled(Span)(({ mode, theme }) => ({\r\n  fontSize: '0.875rem',\r\n  paddingLeft: '0.8rem',\r\n  display: mode === 'compact' && 'none',\r\n  color: theme.palette.common.white,\r\n}));\r\n//for mass update end\r\nconst BulletIcon = styled('div')(({ theme }) => ({\r\n  padding: '2px',\r\n  marginLeft: '24px',\r\n  marginRight: '8px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n  background: theme.palette.common.white,\r\n}));\r\n\r\nconst BadgeValue = styled('div')(() => ({\r\n  padding: '1px 8px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n}));\r\n\r\nconst MatxVerticalNav = ({ items }) => {\r\n  const { settings, updateSettings } = useSettings();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { mode } = settings.layout1Settings.leftSidebar;\r\n  const theme = useTheme();\r\n  const isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  // const getBasenameVal = getBasename();\r\n  // const routePaths = getBasenameVal?.segment;\r\n  const [importMassupdateFile, setImportMassupdateFile] = useState(false)\r\n  const [exportAllTempMapping, setExportAllTempMapping] = useState(false)\r\n  const [exportAllAdminGeneralPropertiesDialog, setExportAllAdminGeneralPropertiesDialog] = useState(false)\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [exportAllAdminSystemSetupsDialog, setExportAllAdminSystemSetupsDialog] = useState(false)\r\n  const handleClickImportButton = (event) => {\r\n    if (event === 'massUpdate') {\r\n      setImportMassupdateFile(true)\r\n    } else if (event === 'exportAll') {\r\n      setExportAllTempMapping(true)\r\n    } else if (event === 'exportAllAdminGeneralProperties') {\r\n      setExportAllAdminGeneralPropertiesDialog(true)\r\n    } else if (event === 'exportAllAdminSystemSetups') {\r\n      setExportAllAdminSystemSetupsDialog(true)\r\n    }\r\n  }\r\n  // For NavLink components\r\n  const handleNavLinkClick = () => {\r\n    if (isMdScreen) {\r\n      updateSidebarMode({ mode: 'close' }); // Close the sidebar\r\n    }\r\n  };\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    let activeLayoutSettingsName = settings.activeLayout + 'Settings';\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    updateSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const renderLevels = (data) => {\r\n    return data.map((item, index) => {\r\n      if (item.type === 'label')\r\n        return (\r\n          <ListLabel key={shortId.generate()} mode={mode} className=\"sidenavHoverShow\">\r\n            {item.label}\r\n          </ListLabel>\r\n        );\r\n\r\n      if (item.children) {\r\n        return (\r\n          <MatxVerticalNavExpansionPanel mode={mode} item={item}>\r\n            <div style={{ marginLeft: '20px' }}>\r\n              {renderLevels(item.children)}\r\n            </div>\r\n          </MatxVerticalNavExpansionPanel>\r\n        );\r\n      } else if (item.type === 'extLink') {\r\n        return (\r\n          <ExternalLink\r\n            key={shortId.generate()}\r\n            href={item.path}\r\n            className={`${mode === 'compact' && 'compactNavItem'}`}\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n              {(() => {\r\n                if (item.icon) {\r\n                  return <Icon className=\"icon\">{item.icon}</Icon>;\r\n                } else {\r\n                  return <span className=\"item-icon icon-text\">{item.iconText}</span>;\r\n                }\r\n              })()}\r\n              <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                {item.name}\r\n              </StyledText>\r\n              <Box mx=\"auto\"></Box>\r\n              {item.badge && <BadgeValue>{item.badge.value}</BadgeValue>}\r\n            </ButtonBase>\r\n          </ExternalLink>\r\n        );\r\n      } else if (item.type === 'popup3') {\r\n        return (\r\n          <InternalLink key={shortId.generate()}>\r\n            {\r\n              (item.type === undefined || item.type === \"popup3\" || item.type !== \"popup\") ? (\r\n                <>\r\n                  {\r\n                    (item.type === \"popup3\") ? (\r\n                      <>\r\n                        <NavLink>\r\n                          <ButtonBase onClick={() => {\r\n                            handleClickImportButton(item.path)\r\n                          }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                            {item?.icon ? (\r\n                              <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                {item.icon}\r\n                              </Icon>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <BulletIcon\r\n                                  className={`nav-bullet`}\r\n                                  sx={{ display: mode === 'compact' && 'none' }}\r\n                                />\r\n                                <Box\r\n                                  className=\"nav-bullet-text\"\r\n                                  sx={{\r\n                                    ml: '20px',\r\n                                    fontSize: '11px',\r\n                                    display: mode !== 'compact' && 'none',\r\n                                  }}\r\n                                >\r\n                                  {item.iconText}\r\n                                </Box>\r\n                              </Fragment>\r\n                            )}\r\n                            <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledText>\r\n\r\n                            <Box mx=\"auto\" />\r\n\r\n                            {item.badge && (\r\n                              <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                            )}\r\n                          </ButtonBase>\r\n                        </NavLink>\r\n                        <ExportAllGeneralPropertiesDialogBox\r\n                          exportAllAdminGeneralPropertiesDialog={exportAllAdminGeneralPropertiesDialog}\r\n                          setExportAllAdminGeneralPropertiesDialog={setExportAllAdminGeneralPropertiesDialog}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <NavLink\r\n                        onClick={handleNavLinkClick}\r\n                        to={`${item.path}`}\r\n                        className={({ isActive }) =>\r\n                          isActive\r\n                            ? `navItemActive ${mode === 'compact' && 'compactNavItem'}`\r\n                            : `${mode === 'compact' && 'compactNavItem'}`\r\n                        }\r\n                      >\r\n                        <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          {item?.icon ? (\r\n                            <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                              {item.icon}\r\n                            </Icon>\r\n                          ) : (\r\n                            <Fragment>\r\n                              <BulletIcon\r\n                                className={`nav-bullet`}\r\n                                sx={{ display: mode === 'compact' && 'none' }}\r\n                              />\r\n                              <Box\r\n                                className=\"nav-bullet-text\"\r\n                                sx={{\r\n                                  ml: '20px',\r\n                                  fontSize: '11px',\r\n                                  display: mode !== 'compact' && 'none',\r\n                                }}\r\n                              >\r\n                                {item.iconText}\r\n                              </Box>\r\n                            </Fragment>\r\n                          )}\r\n                          <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                            {item.name}\r\n                          </StyledText>\r\n\r\n                          <Box mx=\"auto\" />\r\n\r\n                          {item.badge && (\r\n                            <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                          )}\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    )\r\n                  }\r\n                </>\r\n              ) :\r\n                (\r\n                  <>\r\n                    <InternalLink key={shortId.generate()}>\r\n                      <NavLink>\r\n                        <ButtonBase onClick={() => {\r\n                          handleClickImportButton(item.path)\r\n                        }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          <Fragment>\r\n                            <BulletIcon\r\n                              className={`nav-bullet`}\r\n                              sx={{ display: mode === 'compact' && 'none' }}\r\n                            />\r\n                            <StyledTextforMassUpdate mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledTextforMassUpdate>\r\n                          </Fragment>\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    </InternalLink>\r\n                    <MassUpdatePartDescriptionInEnoviaAndERP\r\n                      importMassupdateFile={importMassupdateFile}\r\n                      setImportMassupdateFile={setImportMassupdateFile}\r\n                      setOpenAlert={setOpenAlert}\r\n                      setOpenDesc={setOpenDesc}\r\n                      setIsLoading={setIsLoading}\r\n                    />\r\n                    {\r\n                      (openDesc) ? (\r\n                        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                      ) : (<></>)\r\n                    }\r\n                    {\r\n                      isLoading ? (\r\n                        <div className=\"textAlignCenter\">\r\n                          <Loader show={isLoading} />\r\n                        </div>\r\n                      ) : <></>\r\n                    }\r\n                  </>\r\n                )\r\n            }\r\n          </InternalLink>\r\n        );\r\n      } else if (item.type === 'popup6') {\r\n        return (\r\n          <InternalLink key={shortId.generate()}>\r\n            {\r\n              (item.type === undefined || item.type === \"popup6\" || item.type !== \"popup\") ? (\r\n                <>\r\n                  {\r\n                    (item.type === \"popup6\") ? (\r\n                      <>\r\n                        <NavLink>\r\n                          <ButtonBase onClick={() => {\r\n                            handleClickImportButton(item.path)\r\n                          }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                            {item?.icon ? (\r\n                              <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                {item.icon}\r\n                              </Icon>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <BulletIcon\r\n                                  className={`nav-bullet`}\r\n                                  sx={{ display: mode === 'compact' && 'none' }}\r\n                                />\r\n                                <Box\r\n                                  className=\"nav-bullet-text\"\r\n                                  sx={{\r\n                                    ml: '20px',\r\n                                    fontSize: '11px',\r\n                                    display: mode !== 'compact' && 'none',\r\n                                  }}\r\n                                >\r\n                                  {item.iconText}\r\n                                </Box>\r\n                              </Fragment>\r\n                            )}\r\n                            <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledText>\r\n\r\n                            <Box mx=\"auto\" />\r\n\r\n                            {item.badge && (\r\n                              <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                            )}\r\n                          </ButtonBase>\r\n                        </NavLink>\r\n                        <ExportAllSystemSetupsDialogBox\r\n                          exportAllAdminSystemSetupsDialog={exportAllAdminSystemSetupsDialog}\r\n                          setExportAllAdminSystemSetupsDialog={setExportAllAdminSystemSetupsDialog}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <NavLink\r\n                        onClick={handleNavLinkClick}\r\n                        to={`${item.path}`}\r\n                        className={({ isActive }) =>\r\n                          isActive\r\n                            ? `navItemActive ${mode === 'compact' && 'compactNavItem'}`\r\n                            : `${mode === 'compact' && 'compactNavItem'}`\r\n                        }\r\n                      >\r\n                        <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          {item?.icon ? (\r\n                            <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                              {item.icon}\r\n                            </Icon>\r\n                          ) : (\r\n                            <Fragment>\r\n                              <BulletIcon\r\n                                className={`nav-bullet`}\r\n                                sx={{ display: mode === 'compact' && 'none' }}\r\n                              />\r\n                              <Box\r\n                                className=\"nav-bullet-text\"\r\n                                sx={{\r\n                                  ml: '20px',\r\n                                  fontSize: '11px',\r\n                                  display: mode !== 'compact' && 'none',\r\n                                }}\r\n                              >\r\n                                {item.iconText}\r\n                              </Box>\r\n                            </Fragment>\r\n                          )}\r\n                          <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                            {item.name}\r\n                          </StyledText>\r\n\r\n                          <Box mx=\"auto\" />\r\n\r\n                          {item.badge && (\r\n                            <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                          )}\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    )\r\n                  }\r\n                </>\r\n              ) :\r\n                (\r\n                  <>\r\n                    <InternalLink key={shortId.generate()}>\r\n                      <NavLink>\r\n                        <ButtonBase onClick={() => {\r\n                          handleClickImportButton(item.path)\r\n                        }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          <Fragment>\r\n                            <BulletIcon\r\n                              className={`nav-bullet`}\r\n                              sx={{ display: mode === 'compact' && 'none' }}\r\n                            />\r\n                            <StyledTextforMassUpdate mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledTextforMassUpdate>\r\n                          </Fragment>\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    </InternalLink>\r\n                    <MassUpdatePartDescriptionInEnoviaAndERP\r\n                      importMassupdateFile={importMassupdateFile}\r\n                      setImportMassupdateFile={setImportMassupdateFile}\r\n                      setOpenAlert={setOpenAlert}\r\n                      setOpenDesc={setOpenDesc}\r\n                      setIsLoading={setIsLoading}\r\n                    />\r\n                    {\r\n                      (openDesc) ? (\r\n                        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                      ) : (<></>)\r\n                    }\r\n                    {\r\n                      isLoading ? (\r\n                        <div className=\"textAlignCenter\">\r\n                          <Loader show={isLoading} />\r\n                        </div>\r\n                      ) : <></>\r\n                    }\r\n                  </>\r\n                )\r\n            }\r\n          </InternalLink>\r\n        );\r\n      } else {\r\n        return (\r\n          <InternalLink key={shortId.generate()}>\r\n            {\r\n              (item.type === undefined || item.type === \"popup2\" || item.type !== \"popup\") ? (\r\n                <>\r\n                  {\r\n                    (item.type === \"popup2\") ? (\r\n                      <>\r\n                        <NavLink>\r\n                          <ButtonBase onClick={() => {\r\n                            handleClickImportButton(item.path)\r\n                          }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                            {item?.icon ? (\r\n                              <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                {item.icon}\r\n                              </Icon>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <BulletIcon\r\n                                  className={`nav-bullet`}\r\n                                  sx={{ display: mode === 'compact' && 'none' }}\r\n                                />\r\n                                <Box\r\n                                  className=\"nav-bullet-text\"\r\n                                  sx={{\r\n                                    ml: '20px',\r\n                                    fontSize: '11px',\r\n                                    display: mode !== 'compact' && 'none',\r\n                                  }}\r\n                                >\r\n                                  {item.iconText}\r\n                                </Box>\r\n                              </Fragment>\r\n                            )}\r\n                            <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledText>\r\n\r\n                            <Box mx=\"auto\" />\r\n\r\n                            {item.badge && (\r\n                              <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                            )}\r\n                          </ButtonBase>\r\n                        </NavLink>\r\n                        <ExportAllTemplateMapping\r\n                          exportAllTempMapping={exportAllTempMapping}\r\n                          setExportAllTempMapping={setExportAllTempMapping}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <NavLink\r\n                        onClick={handleNavLinkClick}\r\n                        to={`${item.path}`}\r\n                        className={({ isActive }) =>\r\n                          isActive\r\n                            ? `navItemActive ${mode === 'compact' && 'compactNavItem'}`\r\n                            : `${mode === 'compact' && 'compactNavItem'}`\r\n                        }\r\n                      >\r\n                        <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          {item?.icon ? (\r\n                            <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                              {item.icon}\r\n                            </Icon>\r\n                          ) : (\r\n                            <Fragment>\r\n                              <BulletIcon\r\n                                className={`nav-bullet`}\r\n                                sx={{ display: mode === 'compact' && 'none' }}\r\n                              />\r\n                              <Box\r\n                                className=\"nav-bullet-text\"\r\n                                sx={{\r\n                                  ml: '20px',\r\n                                  fontSize: '11px',\r\n                                  display: mode !== 'compact' && 'none',\r\n                                }}\r\n                              >\r\n                                {item.iconText}\r\n                              </Box>\r\n                            </Fragment>\r\n                          )}\r\n                          <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                            {item.name}\r\n                          </StyledText>\r\n\r\n                          <Box mx=\"auto\" />\r\n\r\n                          {item.badge && (\r\n                            <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                          )}\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    )\r\n                  }\r\n                </>\r\n              ) :\r\n                (\r\n                  <>\r\n                    <InternalLink key={shortId.generate()}>\r\n                      <NavLink>\r\n                        <ButtonBase onClick={() => {\r\n                          handleClickImportButton(item.path)\r\n                        }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          <Fragment>\r\n                            <BulletIcon\r\n                              className={`nav-bullet`}\r\n                              sx={{ display: mode === 'compact' && 'none' }}\r\n                            />\r\n                            <StyledTextforMassUpdate mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledTextforMassUpdate>\r\n                          </Fragment>\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    </InternalLink>\r\n                    <MassUpdatePartDescriptionInEnoviaAndERP\r\n                      importMassupdateFile={importMassupdateFile}\r\n                      setImportMassupdateFile={setImportMassupdateFile}\r\n                      setOpenAlert={setOpenAlert}\r\n                      setOpenDesc={setOpenDesc}\r\n                      setIsLoading={setIsLoading}\r\n                    />\r\n                    {\r\n                      (openDesc) ? (\r\n                        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                      ) : (<></>)\r\n                    }\r\n                    {\r\n                      isLoading ? (\r\n                        <div className=\"textAlignCenter\">\r\n                          <Loader show={isLoading} />\r\n                        </div>\r\n                      ) : <></>\r\n                    }\r\n                  </>\r\n                )\r\n            }\r\n          </InternalLink>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return <div className=\"navigation\">{renderLevels(items)}</div>;\r\n};\r\n\r\nexport default React.memo(MatxVerticalNav);","import React from 'react';\r\nimport { Card } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nconst CardRoot = styled(Card)(() => ({\r\n  height: '100%',\r\n  padding: '20px 24px',\r\n}));\r\n\r\nconst CardTitle = styled('div')(({ subtitle }) => ({\r\n  fontSize: '1rem',\r\n  fontWeight: '500',\r\n  textTransform: 'capitalize',\r\n  marginBottom: !subtitle && '16px',\r\n}));\r\n\r\nconst SimpleCard = ({ children, title, subtitle, icon }) => {\r\n  return (\r\n    <CardRoot elevation={6}>\r\n      <CardTitle subtitle={subtitle}>{title}</CardTitle>\r\n      {subtitle && <Box sx={{ mb: 2 }}>{subtitle}</Box>}\r\n      {children}\r\n    </CardRoot>\r\n  );\r\n};\r\n\r\nexport default SimpleCard;\r\n","import { styled as makeStyles } from '@mui/material/styles';\r\n\r\nexport const spacingStyles = makeStyles(({ palette, ...theme }) => ({\r\n    '@global': {\r\n        '.px-80': {\r\n            paddingRight: '80px',\r\n            paddingLeft: '80px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingRight: '16px',\r\n                paddingLeft: '16px',\r\n            },\r\n        },\r\n        '.px-sm-30': {\r\n            padding: '0px 30px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: '0px 16px',\r\n            },\r\n        },\r\n        '.p-sm-24': {\r\n            padding: '24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: '16px !important',\r\n            },\r\n        },\r\n        '.px-sm-24': {\r\n            padding: '0px 24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: '0px 12px !important',\r\n            },\r\n        },\r\n        '.pt-sm-24': {\r\n            paddingTop: '24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingTop: '16px !important',\r\n            },\r\n        },\r\n        '.pl-sm-24': {\r\n            paddingLeft: '24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingLeft: '16px !important',\r\n            },\r\n        },\r\n        '.m-auto': { margin: 'auto !important' },\r\n        '.mx-auto': {\r\n            marginLeft: 'auto !important',\r\n            marginRight: 'auto !important',\r\n        },\r\n        '.my-auto': {\r\n            marginTop: 'auto !important',\r\n            marginBottom: 'auto !important',\r\n        },\r\n        '.m-sm-30': {\r\n            margin: '30px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                margin: '16px',\r\n            },\r\n        },\r\n        '.mb-sm-30': {\r\n            marginBottom: '30px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                marginBottom: '16px',\r\n            },\r\n        },\r\n        '.w-full': { width: '100%' },\r\n        '.mui-invalid': { color: '#FF3D57' },\r\n        '.max-w-full': { maxWidth: '100% !important' },\r\n        '.min-w-full': { minWidth: '100% !important' },\r\n        '.min-w-full-screen': { minWidth: '100vw !important' },\r\n        '.w-full-screen': { width: '100vw' },\r\n        '.min-w-600': { minWidth: '600px' },\r\n        '.min-w-750': { minWidth: '750px' },\r\n        '.min-w-1050': { minWidth: '1050px' },\r\n        '.max-w-450': { maxWidth: '450px' },\r\n        '.max-w-550': { maxWidth: '550px' },\r\n        '.max-h-500': { maxHeight: '500px' },\r\n        '.max-w-600': { maxWidth: '600px' },\r\n        '.max-w-770': { maxWidth: '770px' },\r\n        '.max-w-800': { maxWidth: '800px' },\r\n        '.max-w-850': { maxWidth: '850px' },\r\n        '.max-w-900': { maxWidth: '900px' },\r\n        '.max-w-1340': { maxWidth: '1340px' },\r\n        '.h-full': { height: '100% !important' },\r\n        '.min-h-full': { minHeight: '100% !important' },\r\n        '.h-auto': { height: 'auto' },\r\n        '.h-full-screen': { height: '100vh' },\r\n        '.min-h-full-screen': { minHeight: '100vh !important' },\r\n        '.h-150px': { height: '150px !important' },\r\n        '.size-36': { height: '36px !important', width: '36px !important' },\r\n        '.size-24': { height: '24px !important', width: '24px !important' },\r\n        ...generateMarginPadding(0, 25, 0.25, 'rem'),\r\n        ...generateMarginPadding(1, 16, 1, 'px'),\r\n        ...generateMarginPadding(-25, -1, 0.25, 'rem'),\r\n        ...generateMarginPadding(-16, -1, 1, 'px'),\r\n        ...generateHeightWidh(),\r\n    },\r\n}))\r\n\r\nconst generateMarginPadding = (\r\n    start = 0,\r\n    end = 25,\r\n    increament = 0.25,\r\n    unit = 'rem'\r\n) => {\r\n    let classList = {}\r\n\r\n    for (let i = start; i <= end; i++) {\r\n        classList[`.m-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            margin: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mt-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginTop: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mb-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginBottom: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mr-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.ml-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginLeft: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mx-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginLeft: `${i * increament}${unit} !important`,\r\n            marginRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.my-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginTop: `${i * increament}${unit} !important`,\r\n            marginBottom: `${i * increament}${unit} !important`,\r\n        }\r\n\r\n        classList[`.p-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            padding: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pt-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingTop: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pb-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingBottom: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pr-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pl-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingLeft: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.px-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingLeft: `${i * increament}${unit} !important`,\r\n            paddingRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.py-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingTop: `${i * increament}${unit} !important`,\r\n            paddingBottom: `${i * increament}${unit} !important`,\r\n        }\r\n    }\r\n\r\n    return classList\r\n}\r\n\r\nconst generateHeightWidh = (\r\n    start = 0,\r\n    end = 400,\r\n    increament = 4,\r\n    unit = 'px'\r\n) => {\r\n    let classList = {}\r\n\r\n    for (let i = start; i <= end; i += increament) {\r\n        classList[`.w-${i}`] = {\r\n            width: `${i}${unit} !important`,\r\n        }\r\n        classList[`.min-w-${i}`] = {\r\n            minWidth: `${i}${unit} !important`,\r\n        }\r\n        classList[`.max-w-${i}`] = {\r\n            maxWidth: `${i}${unit} !important`,\r\n        }\r\n        classList[`.h-${i}`] = {\r\n            height: `${i}${unit} !important`,\r\n        }\r\n        classList[`.min-h-${i}`] = {\r\n            minHeight: `${i}${unit} !important`,\r\n        }\r\n        classList[`.max-h-${i}`] = {\r\n            maxHeight: `${i}${unit} !important`,\r\n        }\r\n    }\r\n\r\n    return classList\r\n}\r\n","import './VendorCss'\r\nimport React from 'react'\r\n// import { variableStyles } from './_variables'\r\n// import { positioningStyles } from './utilities/_positionings'\r\nimport { spacingStyles } from './utilities/_spacing'\r\n// import { borderStyles } from './utilities/_border'\r\n// import { shadowStyles } from './utilities/_shadows'\r\n// import { colorStyles } from './utilities/_color'\r\n// import { typographyStyles } from './utilities/_typography'\r\nimport { commonStyles } from './utilities/_common'\r\n\r\nconst GlobalCss = ({ children }) => {\r\n    // variableStyles()\r\n    // positioningStyles()\r\n    // spacingStyles()\r\n    // borderStyles()\r\n    // colorStyles()\r\n    // shadowStyles()\r\n    // typographyStyles()\r\n    // commonStyles()\r\n\r\n    return children || null\r\n}\r\n\r\nexport default React.memo(GlobalCss)\r\n","import { styled as makeStyles } from '@mui/material/styles';\r\n\r\nexport const commonStyles = makeStyles(({ palette, ...theme }) => ({\r\n    '@global': {\r\n        '.circular-image-small': {\r\n            height: '48px',\r\n            width: '48px',\r\n            borderRadius: '50%',\r\n            overflow: 'hidden',\r\n        },\r\n        '.card': { transition: 'all 0.3s ease' },\r\n        '.card:hover': { boxShadow: theme.shadows[12] },\r\n        '.card-title': {\r\n            fontSize: '1rem',\r\n            textTransform: 'capitalize',\r\n            fontWeight: '500',\r\n        },\r\n        '.card-subtitle': { fontSize: '0.875rem', color: 'var(--text-muted)' },\r\n        '.theme-dark .card-subtitle': { color: 'rgba(255, 255, 255, 0.54)' },\r\n        '.hide-on-mobile': { display: 'inherit' },\r\n        '@media screen and (max-width: 767px)': {\r\n            '.hide-on-mobile': { display: 'none !important' },\r\n            '.show-on-mobile': { display: 'inherit !important' },\r\n            '.invisible-on-pc': { visibility: 'visible' },\r\n        },\r\n        '@media screen and (min-width: 1200px)': {\r\n            '.hide-on-pc': { display: 'none !important' },\r\n        },\r\n        '@media screen and (max-width: 1200px)': {\r\n            '.show-on-pc': { display: 'none !important' },\r\n        },\r\n        '.VictoryContainer svg': { height: '100% !important' },\r\n        '.box-shadow-none': { boxShadow: 'none !important' },\r\n        '.circle-44': { height: '44px !important', width: '44px !important' },\r\n        '.circle-32': {\r\n            height: '32px !important',\r\n            minHeight: '32px !important',\r\n            width: '32px !important',\r\n        },\r\n        '.circle-32 .MuiFab-root': { minHeight: '32px !important' },\r\n        '.circle-32 .MuiIcon-root': { fontSize: '13px !important' },\r\n        '.show-on-mobile': { display: 'none !important' },\r\n        '.invisible-on-pc': { visibility: 'hidden' },\r\n        '.highlight-js pre': { whiteSpace: 'pre-line' },\r\n        '.cursor-pointer': {\r\n            cursor: 'pointer',\r\n        },\r\n        '.cursor-move': {\r\n            cursor: 'move',\r\n        },\r\n        '.avatar': {\r\n            height: '32px !important',\r\n            width: '32px !important',\r\n        },\r\n        '.face-group .avatar:not(:first-child)': {\r\n            marginLeft: '-0.875rem !important',\r\n        },\r\n        '.opacity-1': {\r\n            opacity: 1,\r\n        },\r\n        '.datatimeInputCls': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}))\r\n","import { Box, styled } from '@mui/material';\r\nimport clsx from 'clsx';\r\n\r\nconst StyledBox = styled(Box)(({ theme, texttransformstyle, ellipsis }) => ({\r\n  textTransform: texttransformstyle || 'none',\r\n  whiteSpace: ellipsis ? 'nowrap' : 'normal',\r\n  overflow: ellipsis ? 'hidden' : '',\r\n  textOverflow: ellipsis ? 'ellipsis' : '',\r\n}));\r\n\r\nexport const H1 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({ [className || '']: true })}\r\n      component=\"h1\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"28px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H2 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({ [className || '']: true })}\r\n      component=\"h2\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"24px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H3 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({ [className || '']: true })}\r\n      component=\"h3\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"18px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H4 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"h4\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"16px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H5 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"h5\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"14px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H6 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"h6\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"13px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Paragraph = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"p\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"14px\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Small = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"small\"\r\n      fontSize=\"12px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Span = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"span\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Tiny = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"small\"\r\n      fontSize=\"10px\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n","import { MCOService } from '../../../services/mcoService';\r\n\r\nexport const mcoService = new MCOService();\r\n\r\nexport const GET_MCOLIST = 'GET_MCOLIST';\r\nexport const GET_MCOINFO = 'GET_MCOINFO';\r\nexport const GET_UPDATEMCODETAILS = 'GET_UPDATEMCODETAILS';\r\nexport const GET_UPDATE_MCO_RELATED_VALUES = 'GET_UPDATE_MCO_RELATED_VALUES';\r\nexport const SET_ALL_CA_MCO_DETAILS = 'SET_ALL_CA_MCO_DETAILS';\r\nexport const SET_UPDATED_ROUTES = \"SET_UPDATED_ROUTES\";\r\n\r\nexport const RESET_VALUES = 'RESET_VALUES';\r\n\r\nexport const setUpdatedRoutes = (routes) => ({\r\n  type: SET_UPDATED_ROUTES,\r\n  payload: routes,\r\n});\r\n\r\nexport const getMCOLists = (data) => async (dispatch) => {\r\n  try {\r\n    // await mcoService.searchMCO(search).then((result) => {\r\n    await dispatch({\r\n      type: GET_MCOLIST,\r\n      payload: data,\r\n    })\r\n    // })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const updateResponseData = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: GET_MCOINFO,\r\n      payload: data,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const updateMcoDetails = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: GET_UPDATEMCODETAILS,\r\n      payload: data,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const update_generalValues = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: GET_UPDATE_MCO_RELATED_VALUES,\r\n      payload: data,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const resetValues = () => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: RESET_VALUES,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\n\r\nexport const setAllCaMCODetails = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: SET_ALL_CA_MCO_DETAILS,\r\n      payload: data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useEffect } from 'react';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function BuConfirmationBox({ isBUModified, updateBUModifiedData }) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = (event, reason) => {\r\n        // Prevent closing on backdrop click or escape key\r\n        if (reason === 'backdropClick' || reason === 'escapeKeyDown') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        updateBUModifiedData();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOpen(isBUModified);\r\n    }, [isBUModified]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <BootstrapDialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={open}\r\n            >\r\n                <DialogTitle sx={{ m: 0, p: 2 }} id=\"customized-dialog-title\">\r\n                    Organization Credentials Updated\r\n                </DialogTitle>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={handleClose}\r\n                    sx={(theme) => ({\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        color: theme.palette.grey[500],\r\n                    })}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                    <Typography gutterBottom>\r\n                        The credentials for the organization have been modified. To ensure you have the latest data,\r\n                        <br></br>\r\n                        <br></br>\r\n                        please click \"Okay\" to proceed.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose}>\r\n                        Okay\r\n                    </Button>\r\n                </DialogActions>\r\n            </BootstrapDialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { useNavigate, useLocation } from \"react-router-dom\"\r\nimport { TemplateMappingService } from \"./../../services/templateMappingService\";\r\nimport { UserService } from \"services/usersService\";\r\nimport Loader from 'app/components/Loader';\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport SomethingWrong from \"app/components/McoPages/PageError\";\r\nimport BuConfirmationBox from \"app/components/BuConfirmationBox\";\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\n\r\nconst OracleSettingsContext = createContext({\r\n    isLoading: false,\r\n    userDetails: null,\r\n    bussinessUnit: null,\r\n    bussinessUnitLists: null,\r\n    templatesInfo: [],\r\n    allTemplatesInfo: [],\r\n    mappingTemplatesInfo: [],\r\n    refreshData: true,\r\n    updateBussinessUnit: () => null,\r\n    updateBussinessUnitLists: () => null,\r\n    updateTemplateLists: () => [],\r\n    updateAllTemplate: () => [],\r\n    updateMappingTemplatesInfo: () => [],\r\n    updateRefreshData: () => null,\r\n})\r\n\r\nexport const OracleMappingsProvider = ({ children }) => {\r\n    const { authState, authService } = useOktaAuth();\r\n    const {\r\n        globalBussinessUnit,\r\n    } = useSelector((state) => ({\r\n        globalBussinessUnit: state.globalBUandInstance.bu,\r\n    }), shallowEqual);\r\n\r\n    // const tempService = new templateService();\r\n    const tempMapService = new TemplateMappingService();\r\n    const userService = new UserService();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [userDetails, setUserDetails] = useState(null);\r\n    const [isPageHavingError, setIsPageHavingError] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [bussinessUnit, setBussinessUnit] = useState(localStorage.getItem('bussinessUnit') || null);\r\n    const [isBUModified, setIsBUModified] = useState(false);\r\n    const [bussinessUnitLists, setBussinessUnitLists] = useState(null);\r\n    const [templatesInfo, setTemplatesInfo] = useState([]);\r\n    const [allTemplatesInfo, setAllTemplatesInfo] = useState([]);\r\n    const [mappingTemplatesInfo, setMappingTemplatesInfo] = useState([]);\r\n    const [refreshData, setRefreshData] = useState(true);\r\n\r\n    const updateBussinessUnit = (values) => {\r\n        setBussinessUnit(values);\r\n    };\r\n    const updateBussinessUnitLists = (values) => {\r\n        setBussinessUnitLists(values);\r\n    };\r\n    const updateTemplateLists = (values) => {\r\n        setTemplatesInfo(values);\r\n        setAllTemplatesInfo(values);\r\n    };\r\n    const updateAllTemplate = (values) => {\r\n        setAllTemplatesInfo(values);\r\n        setTemplatesInfo(values);\r\n    };\r\n    const updateMappingTemplatesInfo = (values) => {\r\n        setMappingTemplatesInfo(values);\r\n    };\r\n    const updateRefreshData = (values) => {\r\n        setRefreshData(values);\r\n    };\r\n\r\n    const updateBUModifiedData = () => {\r\n        if (location?.pathname?.includes(\"mcodetail\")) {\r\n            window.location.reload();\r\n        } else {\r\n            const bu = localStorage.getItem('bussinessUnit');\r\n            if (bu) {\r\n                setBussinessUnit(bu);\r\n            }\r\n        }\r\n        setIsBUModified(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userDetails && mappingTemplatesInfo?.length <= 1) {\r\n            if (authState && authState.isAuthenticated) {\r\n                // tempService.getAllTemplateList().then((result) => {\r\n                //     updateAllTemplate(result.template);\r\n                // });\r\n                updateRefreshData(true);\r\n                tempMapService.getAlltemplateMappings().then((result) => {\r\n                    updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n                    updateTemplateLists(result?.data?.templateList);\r\n                    updateBussinessUnitLists(result?.data?.bulist);\r\n\r\n                    updateAllTemplate(result?.data?.templateList);\r\n\r\n                    updateRefreshData(false);\r\n                });\r\n            }\r\n        }\r\n        if (authState && authState.isAuthenticated && authService) {\r\n            authService.getAccessToken().then((accessToken) => {\r\n                console.log('Access Token: ', accessToken);\r\n            });\r\n        }\r\n    }, [authState, authService, userDetails]);\r\n\r\n    useEffect(() => {\r\n        if (authState?.isAuthenticated && !userDetails) {\r\n            setIsLoading(true);\r\n            userService.validateUser().then((result) => {\r\n                if (result.status === 'error') {\r\n                    navigate(\"/accessDenied\", { state: { userInfo: result?.data[0], NotAuthorized: true } });\r\n                } else {\r\n                    if (result?.data?.length) {\r\n                        setUserDetails(result?.data[0]);\r\n                        setIsLoading(false);\r\n                    }\r\n                }\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setIsPageHavingError(true);\r\n            });\r\n        }\r\n    }, [authState]);\r\n\r\n    useEffect(() => {\r\n        console.log(globalBussinessUnit, \"=====globalBussinessUnit\");\r\n\r\n        const checkLocalStorage = (event) => {\r\n            // for avoid the check for mcodetails screen\r\n            if (location?.pathname?.includes(\"mcodetail\")) {\r\n                return false;\r\n            }\r\n            const bu = localStorage.getItem('bussinessUnit');\r\n\r\n            console.log(bussinessUnit, \"===localStorageBusinessUnit\");\r\n            console.log(bu, \"===localStorageBusinessUnit 2\");\r\n            // if (event.key === 'bussinessUnit') { // Check if the specific key you're interested in changed\r\n            //     return;\r\n            // }\r\n            if (bu && bu !== bussinessUnit) {\r\n                // setBussinessUnit(bu);\r\n                setIsBUModified(true);\r\n                console.log(bu, \"===localStorageBusinessUnit 3\");\r\n            }\r\n        };\r\n\r\n        window.addEventListener('storage', checkLocalStorage);\r\n        // checkLocalStorage(); // Check initially\r\n\r\n        return () => {\r\n            window.removeEventListener('storage', checkLocalStorage);\r\n        };\r\n    });\r\n\r\n\r\n    return (\r\n        <OracleSettingsContext.Provider\r\n            value={{\r\n                isLoading,\r\n                userDetails,\r\n                bussinessUnit,\r\n                bussinessUnitLists,\r\n                templatesInfo,\r\n                allTemplatesInfo,\r\n                mappingTemplatesInfo,\r\n                refreshData,\r\n                updateBussinessUnit,\r\n                updateBussinessUnitLists,\r\n                updateTemplateLists,\r\n                updateAllTemplate,\r\n                updateMappingTemplatesInfo,\r\n                updateRefreshData\r\n            }}\r\n        >\r\n            {\r\n                (!authState?.isAuthenticated) ? (children) : (\r\n                    <>\r\n                        {\r\n                            (!isPageHavingError) ? (\r\n                                <>\r\n                                    {(userDetails && !isLoading) ? children : (\r\n                                        <div style={{ textAlign: \"center\", position: \"absolute\", width: \"100%\", top: \"50%\" }}>\r\n                                            <CircularProgress />\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            ) : (<SomethingWrong />)\r\n                        }\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                (isBUModified) ? (<>\r\n                    <BuConfirmationBox isBUModified={isBUModified} updateBUModifiedData={updateBUModifiedData} />\r\n                </>) : (null)\r\n            }\r\n        </OracleSettingsContext.Provider>\r\n    );\r\n};\r\n\r\nexport default OracleSettingsContext;","import {\r\n  GET_MCOLIST,\r\n  GET_MCOINFO,\r\n  GET_UPDATEMCODETAILS,\r\n  GET_UPDATE_MCO_RELATED_VALUES,\r\n  RESET_VALUES,\r\n  SET_ALL_CA_MCO_DETAILS,\r\n  SET_UPDATED_ROUTES\r\n} from '../actions/MCODetailsAction';\r\n\r\nconst initialState = {\r\n  isPageHavingIssue: false,\r\n  stepData: 'Create',\r\n  RSMEList: {},\r\n  RMEList: {},\r\n  responseData: {\r\n    itemERPStatus: [],\r\n  },\r\n  affectedPartsData: [],\r\n  exportAffectedPartsData: [],\r\n  currentMcoDetails: null,\r\n  isPropertyFormEdited: false,\r\n  isMaterialFormEdited: false,\r\n  selectedRowData: {},\r\n  selectedRowFormdata: {},\r\n  selectedRowIndex: null,\r\n  templates: [],\r\n  source: [],\r\n  plants: [],\r\n  materialData: [],\r\n  masterData: {},\r\n  templateMappingsInfo: [],\r\n  ORGAllowedTemplateMappings: [],\r\n  previousMcosDetails: [],\r\n  // eachPartMRDetails: {},\r\n  mrDetails: [],\r\n  massUpdateChanges: {},\r\n  lifeCycleData: {},\r\n  systemSetingsDetail: [],\r\n  eachTemplateOptions: {},\r\n  bulkPartTemplates: [],\r\n  caRelatedEachMCODetails: {},\r\n  allCaMCODetails: {},\r\n  mcoSearchLists: {},\r\n  showMaterialForm: false,\r\n  parentMCODetails: {},\r\n  caLifeCycleData: {},\r\n};\r\n\r\nconst MCODetailsReducer = function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_UPDATED_ROUTES:\r\n      return {\r\n        ...state,\r\n        updatedRoutes: action.payload,\r\n    };\r\n    case GET_MCOLIST: {\r\n      return { ...action.payload };\r\n    }\r\n    case GET_MCOINFO: {\r\n      return {\r\n        ...state,\r\n        responseData: {\r\n          ...state.responseData,\r\n          ...action.payload\r\n        },\r\n      };\r\n    }\r\n    case GET_UPDATEMCODETAILS: {\r\n      return {\r\n        ...state,\r\n        responseData: {\r\n          ...state.responseData,\r\n          ...action.payload\r\n        },\r\n      };\r\n    }\r\n    case GET_UPDATE_MCO_RELATED_VALUES: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    }\r\n    case SET_ALL_CA_MCO_DETAILS: {\r\n      return {\r\n        ...state,\r\n        allCaMCODetails: action.payload, // Update the Redux state\r\n      };\r\n    }\r\n    case RESET_VALUES:\r\n      return {\r\n        // Reset to initial state\r\n        ...initialState,\r\n        updatedRoutes: state.updatedRoutes,\r\n      };\r\n  \r\n      \r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default MCODetailsReducer;\r\n","import {\r\n  GET_CURRENT_INSTANCE,\r\n} from '../actions/GlobalDataAction';\r\n\r\nimport { getBasename } from \"app/utils/baseurl\";\r\n\r\nconst baseValues = getBasename();\r\n\r\nconst initialState = {\r\n  segment: baseValues?.segment || {},\r\n  instanceType: baseValues?.instanceType || {},\r\n};\r\n\r\nconst GlobalDataReducer = function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CURRENT_INSTANCE: {\r\n      return { ...state };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default GlobalDataReducer;\r\n","import {\r\n  GET_BU_AND_INSTANSE,\r\n} from '../actions/GlobalBUandInstanceAction';\r\n\r\nconst initialState = {\r\n  bu: '',\r\n  instance: '',\r\n  systemName: \"\"\r\n};\r\n\r\nconst GlobalBUandInstanceReducer = function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BU_AND_INSTANSE: {\r\n      return { ...state, ...action.payload };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default GlobalBUandInstanceReducer;","import { combineReducers } from 'redux';\r\n// import NavigationReducer from './NavigationReducer';\r\n// import NotificationReducer from './NotificationReducer';\r\nimport MCODetailsReducer from './MCODetailsReducer';\r\nimport GlobalDataReducer from './GlobalDataReducer';\r\nimport GlobalBUandInstanceReducer from './GlobalBUandInstanceReducer';\r\n\r\nconst RootReducer = combineReducers({\r\n  // notifications: NotificationReducer,\r\n  // navigations: NavigationReducer,\r\n  mcoDetails: MCODetailsReducer,\r\n  globalData: GlobalDataReducer,\r\n  globalBUandInstance: GlobalBUandInstanceReducer\r\n});\r\n\r\nexport default RootReducer;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from './reducers/RootReducer';\r\n\r\nconst initialState = {};\r\nconst middlewares = [thunk];\r\nlet devtools = (x) => x;\r\n\r\nif (\r\n  process &&\r\n  process.env.NODE_ENV !== 'production' &&\r\n  process.browser &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n) {\r\n  devtools = window.__REDUX_DEVTOOLS_EXTENSION__();\r\n}\r\n\r\nexport const Store = createStore(\r\n  RootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middlewares), devtools)\r\n);\r\n","import { useContext } from 'react'\r\nimport SettingsContext from 'app/contexts/SettingsContext'\r\n\r\nconst useSettings = () => useContext(SettingsContext)\r\n\r\nexport default useSettings\r\n","import { MatxSuspense } from 'app/components';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { MatxLayouts } from './index';\r\n\r\nconst MatxLayout = (props) => {\r\n  const { settings } = useSettings();\r\n  const Layout = MatxLayouts[settings.activeLayout];\r\n\r\n  return (\r\n    <MatxSuspense>\r\n      <Layout {...props} />\r\n    </MatxSuspense>\r\n  );\r\n};\r\n\r\nexport default MatxLayout;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE  } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nimport { Store } from \"app/redux/Store\";\r\nimport { update_generalValues } from 'app/redux/actions/MCODetailsAction';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\nexport class UserService {\r\n  getAllUsersList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/users/getUsers`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getUsers\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  addnewUser = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/addUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewUser\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateUser = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/users/updateUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateUser\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteUser = (ids) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/users/deleteUser`,\r\n        { data: { ids } },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting users:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n  validateUser = () => {\r\n    console.log(\"validateUser called with URL:\", `${BACKEND_API_URL}/users/validateUser`);\r\n    console.log(\"Headers being sent:\", REACT_APP_BACKEND_API_HEADER);\r\n  \r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/users/validateUser`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        console.log(\"validateUser response:\", res);\r\n  \r\n        if (res.status === 200) {\r\n          console.log(\"validateUser success:\", res.data);\r\n          return res.data;\r\n        }\r\n  \r\n        console.warn(\"validateUser unexpected status:\", res.status);\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"validateUser request failed:\", error);\r\n  \r\n        Store.dispatch(update_generalValues({\r\n          isPageHavingIssue: true\r\n        }));\r\n  \r\n        throw error;\r\n      });\r\n  };\r\n  \r\n  requestForAccess = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/requestForAccessApp`,\r\n        { data: data },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error requestForAccessApp users:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  importUser = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/bulkAddUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddUser\", e);\r\n        return [];\r\n      });\r\n  };\r\n  exportUser = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/bulkExportUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath.replace(\"downloads/\", \"\") \r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportTemplate:', error);\r\n        throw error;\r\n      });\r\n  };\r\n  downloadSampleFile = (fileName) => {\r\n    window.open(`http://localhost:8086/users/bulkExportUser/${fileName}`);\r\n  }\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\n\r\nexport class templateService {\r\n  // ===============Template=====================\r\n\r\n  // get the templateList\r\n  getAllTemplateList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/template/gettemplate`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTemplateDetails\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  addnewTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/template/addTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n  getTemplateById = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/template/getTemplateById`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTemplateById\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTemplate = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/template/updateTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTemplate = (ids) => {\r\n    return ApiInstance.delete(\r\n      `${BACKEND_API_URL}/template/deleteTemplate`,\r\n      { data: { ids } },\r\n      REACT_APP_BACKEND_API_HEADER\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting plant:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  importTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/template/bulkAddTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddTemplate\", e);\r\n        return [];\r\n      });\r\n  };\r\n  exportTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/bulkExportTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath.replace(\"downloads/\", \"\") \r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportTemplate:', error);\r\n        throw error;\r\n      });\r\n  };\r\n  downloadSampleFile = (fileName) => {\r\n    window.open(`${BACKEND_API_URL}/${fileName}`);\r\n  }\r\n  // ===============Plant=====================\r\n}\r\n","import jwt from 'jwt-simple';\r\nimport { Buffer } from 'buffer';\r\n\r\nexport const getToken = () => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            const getToken = window.localStorage.getItem('okta-token-storage')\r\n            const sessionToken = (getToken) ? JSON.parse(getToken)?.accessToken?.accessToken : null;\r\n            resolve(sessionToken);\r\n        }, 500);\r\n    });\r\n}\r\n\r\nexport const getOKTAAccessKey = () => {\r\n    const getToken = window.localStorage.getItem('okta-token-storage');\r\n    if (!getToken) {\r\n        console.error('Token storage item not found');\r\n        return null;\r\n    }\r\n\r\n    const parsedToken = JSON.parse(getToken);\r\n    const accessToken = parsedToken?.accessToken?.accessToken;\r\n    const curruid = parsedToken?.accessToken?.claims?.uid;\r\n    const userinfo = parsedToken?.idToken?.claims;\r\n\r\n    if (!accessToken || !userinfo) {\r\n        console.error('Access token or userinfo not found in token storage item');\r\n        return null;\r\n    }\r\n\r\n    const payload = {\r\n        exp: Math.floor(Date.now() / 1000) + (60 * 60), // expires in 1 hour\r\n        data: {\r\n            accessToken: accessToken,\r\n            userinfo: {\r\n                username: userinfo?.name,\r\n                email: userinfo?.email,\r\n                uid: curruid\r\n            }\r\n        },\r\n    };\r\n\r\n    const secret = 'EMRPRoDucTDaTa';\r\n    let token = null;\r\n    try {\r\n        window.Buffer = Buffer;\r\n        token = jwt.encode(payload, secret, 'HS512')\r\n    } catch (error) {\r\n        console.error('Error encoding JWT:', error);\r\n        return null;\r\n    }\r\n    return token;\r\n}","import { differenceInSeconds } from 'date-fns';\r\n\r\nexport const convertHexToRGB = (hex) => {\r\n  // check if it's a rgba\r\n  if (hex.match('rgba')) {\r\n    let triplet = hex.slice(5).split(',').slice(0, -1).join(',');\r\n    return triplet;\r\n  }\r\n\r\n  let c;\r\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n    c = hex.substring(1).split('');\r\n    if (c.length === 3) {\r\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n    }\r\n    c = '0x' + c.join('');\r\n\r\n    return [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',');\r\n  }\r\n};\r\n\r\nexport function debounce(func, wait, immediate) {\r\n  let timeout;\r\n  return function () {\r\n    let context = this,\r\n      args = arguments;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    }, wait);\r\n    if (immediate && !timeout) func.apply(context, args);\r\n  };\r\n}\r\n\r\nexport function isMobile() {\r\n  if (window) {\r\n    return window.matchMedia(`(max-width: 767px)`).matches;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isMdScreen() {\r\n  if (window) {\r\n    return window.matchMedia(`(max-width: 1199px)`).matches;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction currentYPosition(elm) {\r\n  if (!window && !elm) {\r\n    return;\r\n  }\r\n  if (elm) return elm.scrollTop;\r\n  // Firefox, Chrome, Opera, Safari\r\n  if (window.pageYOffset) return window.pageYOffset;\r\n  // Internet Explorer 6 - standards mode\r\n  if (document.documentElement && document.documentElement.scrollTop)\r\n    return document.documentElement.scrollTop;\r\n  // Internet Explorer 6, 7 and 8\r\n  if (document.body.scrollTop) return document.body.scrollTop;\r\n  return 0;\r\n}\r\n\r\nfunction elmYPosition(elm) {\r\n  let y = elm.offsetTop;\r\n  let node = elm;\r\n  while (node.offsetParent && node.offsetParent !== document.body) {\r\n    node = node.offsetParent;\r\n    y += node.offsetTop;\r\n  }\r\n  return y;\r\n}\r\n\r\nexport function scrollTo(scrollableElement, elmID) {\r\n  let elm = document.getElementById(elmID);\r\n\r\n  if (!elmID || !elm) {\r\n    return;\r\n  }\r\n\r\n  let startY = currentYPosition(scrollableElement);\r\n  let stopY = elmYPosition(elm);\r\n\r\n  let distance = stopY > startY ? stopY - startY : startY - stopY;\r\n  if (distance < 100) {\r\n    scrollTo(0, stopY);\r\n    return;\r\n  }\r\n  let speed = Math.round(distance / 50);\r\n  if (speed >= 20) speed = 20;\r\n  let step = Math.round(distance / 25);\r\n  let leapY = stopY > startY ? startY + step : startY - step;\r\n  let timer = 0;\r\n  if (stopY > startY) {\r\n    for (let i = startY; i < stopY; i += step) {\r\n      setTimeout(\r\n        (function (leapY) {\r\n          return () => {\r\n            scrollableElement.scrollTo(0, leapY);\r\n          };\r\n        })(leapY),\r\n        timer * speed\r\n      );\r\n      leapY += step;\r\n      if (leapY > stopY) leapY = stopY;\r\n      timer++;\r\n    }\r\n    return;\r\n  }\r\n  for (let i = startY; i > stopY; i -= step) {\r\n    setTimeout(\r\n      (function (leapY) {\r\n        return () => {\r\n          scrollableElement.scrollTo(0, leapY);\r\n        };\r\n      })(leapY),\r\n      timer * speed\r\n    );\r\n    leapY -= step;\r\n    if (leapY < stopY) leapY = stopY;\r\n    timer++;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getTimeDifference(date) {\r\n  let difference = differenceInSeconds(new Date(), date);\r\n\r\n  if (difference < 60) return `${Math.floor(difference)} sec`;\r\n  else if (difference < 3600) return `${Math.floor(difference / 60)} min`;\r\n  else if (difference < 86400) return `${Math.floor(difference / 3660)} h`;\r\n  else if (difference < 86400 * 30) return `${Math.floor(difference / 86400)} d`;\r\n  else if (difference < 86400 * 30 * 12) return `${Math.floor(difference / 86400 / 30)} mon`;\r\n  else return `${(difference / 86400 / 30 / 12).toFixed(1)} y`;\r\n}\r\n\r\nexport function generateRandomId() {\r\n  const crypto = window.crypto || window.msCrypto;\r\n  let array = new Uint32Array(1);\r\n  crypto.getRandomValues(array); // Compliant for security-sensitive use cases\r\n  const uid = array[0];\r\n  return uid;\r\n}\r\n\r\nexport function getQueryParam(prop) {\r\n  let params = {};\r\n  let search = decodeURIComponent(\r\n    window.location.href.slice(window.location.href.indexOf('?') + 1)\r\n  );\r\n  let definitions = search.split('&');\r\n  definitions.forEach(function (val, key) {\r\n    let parts = val.split('=', 2);\r\n    params[parts[0]] = parts[1];\r\n  });\r\n  return prop && prop in params ? params[prop] : params;\r\n}\r\n\r\nexport function classList(classes) {\r\n  return Object.entries(classes)\r\n    .filter((entry) => entry[1])\r\n    .map((entry) => entry[0])\r\n    .join(' ');\r\n}\r\n\r\nexport const flat = (array) => {\r\n  let result = [];\r\n  array.forEach(function (a) {\r\n    result.push(a);\r\n    if (Array.isArray(a.children)) {\r\n      result = result.concat(flat(a.children));\r\n    }\r\n  });\r\n  return result;\r\n};\r\n// Sorted latest data get passed to bulkExport function\r\nexport const sortExportData = (data, sortInfo) => {\r\n  if (!sortInfo || !sortInfo.id) {\r\n    // If sortInfo is null or does not have an id, return original order\r\n    return data;\r\n  }\r\n\r\n  return [...data].sort((a, b) => {\r\n    const field = sortInfo.id || sortInfo.name || sortInfo.columnName;\r\n    const aValue = a[field]?.toLowerCase() || '';\r\n    const bValue = b[field]?.toLowerCase() || '';\r\n    if (aValue < bValue) {\r\n      return sortInfo.dir === 1 ? -1 : 1;\r\n    }\r\n    if (aValue > bValue) {\r\n      return sortInfo.dir === 1 ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const sortInsideRowData = (data) => {\r\n  let sortedNameDivs = [];\r\n  let sortedMvoTemplateToDivs = [];\r\n\r\n  return data.map(item => {\r\n    if (item.name) {\r\n      const nameDivs = item.name.match(/<div>.*?<\\/div>/g) || [];\r\n      sortedNameDivs = nameDivs.sort((a, b) => {\r\n        const textA = a.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        const textB = b.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        return textA.localeCompare(textB);\r\n      });\r\n    }\r\n\r\n    if (item.MVO_TEMPLATE_TO) {\r\n      const mvoTemplateToDivs = item.MVO_TEMPLATE_TO.match(/<div>.*?<\\/div>/g) || [];\r\n      sortedMvoTemplateToDivs = mvoTemplateToDivs.sort((a, b) => {\r\n        const textA = a.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        const textB = b.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        return textA.localeCompare(textB);\r\n      });\r\n    }\r\n\r\n    return {\r\n      ...item,\r\n      name: sortedNameDivs.join(''),\r\n      MVO_TEMPLATE_TO: sortedMvoTemplateToDivs.join('')\r\n    };\r\n  });\r\n};\r\n\r\nexport function sortAndReorderData(filterData) {\r\n  // Function to sort object values alphabetically (excluding \"Entity\")\r\n  function sortObjectValues(obj) {\r\n      return {\r\n          Entity: obj.Entity,\r\n          ...Object.fromEntries(\r\n              Object.entries(obj)\r\n                  .filter(([key]) => key !== \"Entity\")\r\n                  .sort((a, b) => a[1].localeCompare(b[1])) // Sort values alphabetically\r\n          )\r\n      };\r\n  }\r\n\r\n  // Find the \"PlantGroup\" object without removing it\r\n  const plantGroup = filterData.find(item => item.Entity === \"PlantGroup\");\r\n\r\n  // Sort the \"PlantGroup\" object (if found)\r\n  const sortedPlantGroup = plantGroup ? sortObjectValues(plantGroup) : null;\r\n\r\n  // Sort the rest of the objects based on \"Entity\" alphabetically, excluding \"PlantGroup\"\r\n  const sortedOtherEntities = filterData\r\n      .filter(item => item.Entity !== \"PlantGroup\") // Keep everything except \"PlantGroup\"\r\n      .map(sortObjectValues)\r\n      .sort((a, b) => a.Entity.localeCompare(b.Entity));\r\n\r\n  // Return the final array with \"PlantGroup\" on top (if exists)\r\n  return sortedPlantGroup ? [sortedPlantGroup, ...sortedOtherEntities] : sortedOtherEntities;\r\n}\r\n\r\nexport const caseInsensitiveSort = (a, b) => {\r\n  return a.localeCompare(b, undefined, { sensitivity: 'base' });\r\n};","//import React from \"react\";\r\n\r\nexport const getBasename = () => {\r\n    const path = window.location.pathname;\r\n    let currentInstance = \"\";\r\n    if (path === \"/\") {\r\n        return {\r\n            segment: path,\r\n            instanceType: currentInstance,\r\n        };\r\n    }\r\n    if (path.includes(\"login\")) {\r\n        return {\r\n            segment: \"/\",\r\n            instanceType: currentInstance,\r\n        };\r\n    }\r\n\r\n    let pathArray = path.split('/');\r\n    pathArray = pathArray.filter(fitem => fitem !== \"\");\r\n\r\n    let returnVal = '/';\r\n    if (pathArray.length > 1) {\r\n        if (pathArray[1] === \"Cloud\" || pathArray[1] === \"onPrem\") {\r\n            if (pathArray[0] === \"Dev\") {\r\n                currentInstance = pathArray[1];\r\n                returnVal = pathArray[0] + \"/\";\r\n            }\r\n        }\r\n    } else if (pathArray.length === 1 && pathArray[0] === \"Dev\") {\r\n        return {\r\n            segment: \"/\",\r\n            instanceType: currentInstance,\r\n        };\r\n    }\r\n    return {\r\n        segment: returnVal,\r\n        instanceType: currentInstance,\r\n    }\r\n};","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class BUService {\r\n  getAllBuList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/bu/getBusinessUnit`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getAllBuList\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  getBusinessUnitbyid = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/bu/getBusinessUnitbyid`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getBusinessUnitbyid\", e);\r\n        return [];\r\n      });\r\n  };\r\n  addnewBU = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/bu/addBusinessUnit`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewBU\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateBU = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/bu/updateBusinessUnit`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateBU\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteBU = (ids) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/bu/deleteBusinessUnit`,\r\n        { data: { ids } },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting bu:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","const textLight = {\r\n    primary: 'rgba(52, 49, 76, 1)',\r\n    secondary: 'rgba(52, 49, 76, 0.54)',\r\n    disabled: 'rgba(52, 49, 76, 0.38)',\r\n    hint: 'rgba(52, 49, 76, 0.38)',\r\n}\r\n\r\nconst textDark = {\r\n    primary: '#fff',\r\n    secondary: 'rgba(255, 255, 255, 0.7)',\r\n    disabled: 'rgba(255, 255, 255, 0.64)',\r\n    hint: 'rgba(255, 255, 255, 0.64)',\r\n};\r\n\r\nconst secondaryColor = {\r\n    light: '#f9a352',\r\n    main: '#ff9e43',\r\n    dark: '#ff932e',\r\n    contrastText: textLight.primary,\r\n}\r\nconst errorColor = {\r\n    main: '#FF3D57',\r\n}\r\n\r\nexport const themeColors = {\r\n    whitePurple: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#ffffff',\r\n                contrastText: textLight.primary,\r\n            },\r\n            secondary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    whiteBlue: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#ffffff',\r\n                contrastText: textLight.primary,\r\n            },\r\n            secondary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            text: textLight,\r\n        },\r\n    },\r\n    slateDark1: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#005686',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    slateDark2: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#1a2038',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    purple1: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: secondaryColor,\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    purple2: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#6a75c9',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    purpleDark1: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    purpleDark2: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#6a75c9',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    blue: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FFAF38',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    blueDark: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FF4F30',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    red: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#e53935',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FFAF38',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n        },\r\n    },\r\n}\r\n\r\nexport const themeShadows = [\r\n    'none',\r\n    '0px 2px 1px -1px rgba(0, 0, 0, 0.06),0px 1px 1px 0px rgba(0, 0, 0, 0.042),0px 1px 3px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 1px -2px rgba(0, 0, 0, 0.06),0px 2px 2px 0px rgba(0, 0, 0, 0.042),0px 1px 5px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 3px -2px rgba(0, 0, 0, 0.06),0px 3px 4px 0px rgba(0, 0, 0, 0.042),0px 1px 8px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 2px 4px -1px rgba(0, 0, 0, 0.06),0px 4px 5px 0px rgba(0, 0, 0, 0.042),0px 1px 10px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 5px -1px rgba(0, 0, 0, 0.06),0px 5px 8px 0px rgba(0, 0, 0, 0.042),0px 1px 14px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 5px -1px rgba(0, 0, 0, 0.06),0px 6px 10px 0px rgba(0, 0, 0, 0.042),0px 1px 18px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 4px 5px -2px rgba(0, 0, 0, 0.06),0px 7px 10px 1px rgba(0, 0, 0, 0.042),0px 2px 16px 1px rgba(0, 0, 0, 0.036)',\r\n    '0px 5px 5px -3px rgba(0, 0, 0, 0.06),0px 8px 10px 1px rgba(0, 0, 0, 0.042),0px 3px 14px 2px rgba(0, 0, 0, 0.036)',\r\n    '0px 5px 6px -3px rgba(0, 0, 0, 0.06),0px 9px 12px 1px rgba(0, 0, 0, 0.042),0px 3px 16px 2px rgba(0, 0, 0, 0.036)',\r\n    '0px 6px 6px -3px rgba(0, 0, 0, 0.06),0px 10px 14px 1px rgba(0, 0, 0, 0.042),0px 4px 18px 3px rgba(0, 0, 0, 0.036)',\r\n    '0px 6px 7px -4px rgba(0, 0, 0, 0.06),0px 11px 15px 1px rgba(0, 0, 0, 0.042),0px 4px 20px 3px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 8px -4px rgba(0, 0, 0, 0.06),0px 12px 17px 2px rgba(0, 0, 0, 0.042),0px 5px 22px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 8px -4px rgba(0, 0, 0, 0.06),0px 13px 19px 2px rgba(0, 0, 0, 0.042),0px 5px 24px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 9px -4px rgba(0, 0, 0, 0.06),0px 14px 21px 2px rgba(0, 0, 0, 0.042),0px 5px 26px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 9px -5px rgba(0, 0, 0, 0.06),0px 15px 22px 2px rgba(0, 0, 0, 0.042),0px 6px 28px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 10px -5px rgba(0, 0, 0, 0.06),0px 16px 24px 2px rgba(0, 0, 0, 0.042),0px 6px 30px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 11px -5px rgba(0, 0, 0, 0.06),0px 17px 26px 2px rgba(0, 0, 0, 0.042),0px 6px 32px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 9px 11px -5px rgba(0, 0, 0, 0.06),0px 18px 28px 2px rgba(0, 0, 0, 0.042),0px 7px 34px 6px rgba(0, 0, 0, 0.036)',\r\n    '0px 9px 12px -6px rgba(0, 0, 0, 0.06),0px 19px 29px 2px rgba(0, 0, 0, 0.042),0px 7px 36px 6px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n];","import { themeShadows } from './themeColors';\r\n\r\nexport const components = {\r\n  MuiTable: {\r\n    styleOverrides: {\r\n      root: {\r\n        tableLayout: 'fixed',\r\n      },\r\n    },\r\n  },\r\n  MuiTableCell: {\r\n    styleOverrides: {\r\n      head: {\r\n        fontSize: '13px',\r\n        padding: '12px 0px',\r\n      },\r\n      root: {\r\n        fontSize: '14px',\r\n        whiteSpace: 'pre-wrap',\r\n        wordBreak: 'break-all',\r\n        padding: '12px 8px 12px 0px',\r\n      },\r\n    },\r\n  },\r\n  MUIDataTableSelectCell: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: 12,\r\n      },\r\n    },\r\n  },\r\n  MUIDataTableHeadCell: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: 16,\r\n      },\r\n    },\r\n  },\r\n  MUIDataTableBodyCell: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: 8,\r\n      },\r\n    },\r\n  },\r\n  MuiButton: {\r\n    styleOverrides: {\r\n      root: {\r\n        fontSize: '12px',\r\n        textTransform: 'none',\r\n        fontWeight: '400',\r\n      },\r\n      contained: {\r\n        boxShadow: themeShadows[8],\r\n      },\r\n    },\r\n  },\r\n  MuiCssBaseline: {\r\n    styleOverrides: {\r\n      '*': {\r\n        boxSizing: 'border-box',\r\n      },\r\n      html: {\r\n        MozOsxFontSmoothing: 'grayscale',\r\n        WebkitFontSmoothing: 'antialiased',\r\n        height: '100%',\r\n        width: '100%',\r\n      },\r\n      body: {\r\n        height: '100%',\r\n      },\r\n      a: {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      },\r\n      '#root': {\r\n        height: '100%',\r\n      },\r\n      '#nprogress .bar': {\r\n        zIndex: '2000 !important',\r\n      },\r\n    },\r\n  },\r\n  MuiFab: {\r\n    styleOverrides: {\r\n      root: {\r\n        boxShadow: themeShadows[12],\r\n      },\r\n    },\r\n  },\r\n  MuiAccordion: {\r\n    styleOverrides: {\r\n      root: {\r\n        '&:before': {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  MuiTooltip: {\r\n    styleOverrides: {\r\n      tooltip: {\r\n        fontSize: '11px',\r\n      },\r\n    },\r\n  },\r\n  MuiMenuItem: {\r\n    styleOverrides: {\r\n      root: {\r\n        fontSize: '0.875rem',\r\n      },\r\n    },\r\n  },\r\n  MuiExpansionPanel: {\r\n    styleOverrides: {\r\n      root: {\r\n        '&:before': {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  MuiCard: {\r\n    styleOverrides: {\r\n      root: {\r\n        borderRadius: '8px',\r\n        boxShadow:\r\n          '0px 3px 3px -2px rgb(0 0 0 / 6%), 0px 3px 4px 0px rgb(0 0 0 / 4%), 0px 1px 8px 0px rgb(0 0 0 / 4%) !important',\r\n      },\r\n    },\r\n  },\r\n};\r\n","import { red } from '@mui/material/colors';\r\nimport { components } from './components';\r\n\r\nconst themeOptions = {\r\n  typography: {\r\n    fontSize: 14,\r\n    body1: { fontSize: '14px' },\r\n  },\r\n\r\n  status: { danger: red[500] },\r\n  components: { ...components },\r\n};\r\n\r\nexport default themeOptions;\r\n","import { createTheme } from '@mui/material';\r\nimport { forEach, merge } from 'lodash';\r\nimport { themeColors } from './themeColors';\r\nimport themeOptions from './themeOptions';\r\n\r\nfunction createMatxThemes() {\r\n  let themes = {};\r\n\r\n  forEach(themeColors, (value, key) => {\r\n    themes[key] = createTheme(merge({}, themeOptions, value));\r\n  });\r\n\r\n  return themes;\r\n}\r\nexport const themes = createMatxThemes();\r\n","import { themes } from '../MatxTheme/initThemes';\r\nimport layout1Settings from './Layout1/Layout1Settings';\r\n\r\n// UPDATE BELOW CODE\r\nexport const MatxLayoutSettings = {\r\n  activeLayout: 'layout1', // layout1, layout2\r\n  activeTheme: 'blue', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  perfectScrollbar: true,\r\n\r\n  themes: themes,\r\n  layout1Settings, // open Layout1/Layout1Settings.js\r\n\r\n  secondarySidebar: {\r\n    show: true,\r\n    open: false,\r\n    theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  },\r\n  // Footer options\r\n  footer: {\r\n    show: true,\r\n    fixed: false,\r\n    theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  },\r\n};\r\n","const Layout1Settings = {\r\n  leftSidebar: {\r\n    show: true,\r\n    mode: 'full', // full, close, compact, mobile,\r\n    theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n    bgimgurl: '/assets/images/sidebar/sidebar-bg-dark.jpg',\r\n  },\r\n  topbar: {\r\n    show: true,\r\n    fixed: true,\r\n    theme: 'whiteBlue', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  },\r\n};\r\n\r\nexport default Layout1Settings;\r\n","import React, { createContext, useState, useMemo } from 'react'\r\nimport { merge } from 'lodash'\r\nimport { MatxLayoutSettings } from 'app/components/MatxLayout/settings'\r\n\r\nconst SettingsContext = createContext({\r\n    settings: MatxLayoutSettings,\r\n    updateSettings: () => { },\r\n})\r\n\r\nexport const SettingsProvider = ({ settings, children }) => {\r\n    const [currentSettings, setCurrentSettings] = useState(\r\n        settings || MatxLayoutSettings\r\n    )\r\n\r\n    const handleUpdateSettings = (update = {}) => {\r\n        // Fixed typo from \"marged\" to \"merged\"\r\n        const merged = merge({}, currentSettings, update);\r\n        setCurrentSettings(merged);\r\n    }\r\n\r\n    // Use useMemo to ensure the context value object is stable unless currentSettings changes\r\n    const contextValue = useMemo(() => ({\r\n        settings: currentSettings,\r\n        updateSettings: handleUpdateSettings,\r\n    }), [currentSettings]);\r\n\r\n    return (\r\n        <SettingsContext.Provider value={contextValue}>\r\n            {children}\r\n        </SettingsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SettingsContext\r\n","import React, { createContext, useEffect, useReducer } from 'react'\r\nimport jwtDecode from 'jwt-decode'\r\nimport axios from 'axios'\r\nimport { MatxLoading } from 'app/components'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    isInitialised: false,\r\n    user: null,\r\n}\r\n\r\nconst isValidToken = (accessToken) => {\r\n    if (!accessToken) {\r\n        return false\r\n    }\r\n\r\n    const decodedToken = jwtDecode(accessToken)\r\n    const currentTime = Date.now() / 1000\r\n    return decodedToken.exp > currentTime\r\n}\r\n\r\nconst setSession = (accessToken) => {\r\n    if (accessToken) {\r\n        localStorage.setItem('accessToken', accessToken)\r\n        axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`\r\n    } else {\r\n        localStorage.removeItem('accessToken')\r\n        delete axios.defaults.headers.common.Authorization\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INIT': {\r\n            const { isAuthenticated, user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated,\r\n                isInitialised: true,\r\n                user,\r\n            }\r\n        }\r\n        case 'LOGIN': {\r\n            const { user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user,\r\n            }\r\n        }\r\n        case 'LOGOUT': {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: null,\r\n            }\r\n        }\r\n        case 'REGISTER': {\r\n            const { user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user,\r\n            }\r\n        }\r\n        default: {\r\n            return { ...state }\r\n        }\r\n    }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    ...initialState,\r\n    method: 'JWT',\r\n    login: () => Promise.resolve(),\r\n    logout: () => { },\r\n    register: () => Promise.resolve(),\r\n})\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    const login = async (email, password) => {\r\n        const response = await axios.post('/api/auth/login', {\r\n            email,\r\n            password,\r\n        })\r\n        const { accessToken, user } = response.data\r\n\r\n        setSession(accessToken)\r\n\r\n        dispatch({\r\n            type: 'LOGIN',\r\n            payload: {\r\n                user,\r\n            },\r\n        })\r\n    }\r\n\r\n    const register = async (email, username, password) => {\r\n        const response = await axios.post('/api/auth/register', {\r\n            email,\r\n            username,\r\n            password,\r\n        })\r\n\r\n        const { accessToken, user } = response.data\r\n\r\n        setSession(accessToken)\r\n\r\n        dispatch({\r\n            type: 'REGISTER',\r\n            payload: {\r\n                user,\r\n            },\r\n        })\r\n    }\r\n\r\n    const logout = () => {\r\n        setSession(null)\r\n        dispatch({ type: 'LOGOUT' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        ; (async () => {\r\n            try {\r\n                const accessToken = window.localStorage.getItem('accessToken')\r\n\r\n                if (accessToken && isValidToken(accessToken)) {\r\n                    setSession(accessToken)\r\n                    const response = await axios.get('/api/auth/profile')\r\n                    const { user } = response.data\r\n\r\n                    dispatch({\r\n                        type: 'INIT',\r\n                        payload: {\r\n                            isAuthenticated: true,\r\n                            user,\r\n                        },\r\n                    })\r\n                } else {\r\n                    dispatch({\r\n                        type: 'INIT',\r\n                        payload: {\r\n                            isAuthenticated: false,\r\n                            user: null,\r\n                        },\r\n                    })\r\n                }\r\n            } catch (err) {\r\n                console.error(err)\r\n                dispatch({\r\n                    type: 'INIT',\r\n                    payload: {\r\n                        isAuthenticated: false,\r\n                        user: null,\r\n                    },\r\n                })\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    if (!state.isInitialised) {\r\n        return <MatxLoading />\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                ...state,\r\n                method: 'JWT',\r\n                login,\r\n                logout,\r\n                register,\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { toRelativeUrl } from '@okta/okta-auth-js';\r\n\r\nconst LoginScreen = () => {\r\n    const { authState, oktaAuth } = useOktaAuth();\r\n\r\n    const login = async () => {\r\n        // try {\r\n        //     oktaAuth.tokenManager.clear();\r\n        //     const response = await oktaAuth.signInWithRedirect();\r\n        //     // handle successful authentication here\r\n        // } catch (error) {\r\n        //     console.error('Authentication error:', error);\r\n        //     // handle error appropriately, e.g., display error message or redirect to login page\r\n        // }\r\n        try {\r\n            await oktaAuth.signInWithRedirect();\r\n        } catch (error) {\r\n            if (error.name === 'AuthApiError') {\r\n                // Handle AuthApiError\r\n                console.error('Authentication failed:', error.message);\r\n                // Display an error message to the user\r\n            } else {\r\n                // Handle other errors\r\n                console.error('An unexpected error occurred:', error);\r\n                // Display a generic error message to the user\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!authState) {\r\n            return;\r\n        }\r\n\r\n        if (!authState?.isAuthenticated) {\r\n            const originalUri = toRelativeUrl(window.location.href, window.location.origin);\r\n            oktaAuth.setOriginalUri(originalUri);\r\n            // oktaAuth.signInWithRedirect();\r\n\r\n            login();\r\n        }\r\n    }, [oktaAuth, !!authState, authState?.isAuthenticated]);\r\n\r\n    if (!authState || !authState?.isAuthenticated) {\r\n        return null;\r\n    }\r\n\r\n    return (<Outlet />);\r\n}\r\n\r\nexport default LoginScreen;","import React from \"react\";\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\n\r\nimport { useOktaAuth } from '@okta/okta-react'\r\nimport LoginScreen from \"./loginScreen\";\r\n\r\nconst AuthGuard = ({ children }) => {\r\n  const { authState } = useOktaAuth()\r\n\r\n  // let {\r\n  //   isAuthenticated,\r\n  //   // user\r\n  // } = useAuth();\r\n  // const { pathname } = useLocation();\r\n\r\n  // // IF YOU NEED ROLE BASED AUTHENTICATION,\r\n  // // UNCOMMENT ABOVE LINES\r\n  // // AND COMMENT OUT BELOW authenticated VARIABLE\r\n\r\n  // let authenticated = isAuthenticated;\r\n\r\n  const isAuthenticated = authState && authState.isAuthenticated\r\n  let authenticated = isAuthenticated;\r\n\r\n  return (\r\n    <>\r\n      {authenticated ? (\r\n        children\r\n      ) : (\r\n        // <Navigate replace to=\"/session/signin\" state={{ from: pathname }} />\r\n        <LoginScreen />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthGuard;\r\n","import { Box, Button, styled } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n}));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({\r\n  maxWidth: 320,\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst IMG = styled('img')(() => ({\r\n  width: '100%',\r\n  marginBottom: '32px',\r\n}));\r\n\r\nconst NotFoundRoot = styled(FlexBox)(() => ({\r\n  width: '100%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  height: '100vh !important',\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <NotFoundRoot>\r\n      <JustifyBox>\r\n        <IMG src=\"/assets/images/illustrations/404.svg\" alt=\"\" />\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          sx={{ textTransform: 'capitalize' }}\r\n          onClick={() => navigate(-1)}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </JustifyBox>\r\n    </NotFoundRoot>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Store } from \"app/redux/Store\";\r\nimport { getBasename } from \"app/utils/baseurl\";\r\nconst getBaseUrl_bk = () => {\r\n    const getStorevalue = Store.getState();\r\n    const currentPathValue = getStorevalue.globalData.segment || \"\";\r\n    return (currentPathValue === \"/\") ? currentPathValue : \"/\" + currentPathValue;\r\n}\r\nconst getBaseUrl = () => {\r\n    const getStorevalue = getBasename();\r\n   // return (getStorevalue?.segment === \"/\") ? getStorevalue?.segment : \"/\" + getStorevalue?.segment;\r\n    return (getStorevalue?.segment.startsWith(\"/\")) ? getStorevalue?.segment : \"/\" + getStorevalue?.segment;\r\n}\r\n\r\nexport default getBaseUrl;","import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport getBaseUrl from \"app/utils/getBaseUrl\";\r\nimport Button from '@mui/material/Button';\r\nimport { UserService } from \"services/usersService\";\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nconst UnauthorizedPage = () => {\r\n    const userService = new UserService();\r\n    const { authState, oktaAuth } = useOktaAuth();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const userInfo = location.state?.userInfo !== undefined ? location.state?.userInfo : false;\r\n    const NotAuthorized = location.state?.NotAuthorized !== undefined ? location.state?.NotAuthorized : false;\r\n    console.log(location.state?.NotAuthorized, 'location.state?.NotAuthorized')\r\n    console.log(NotAuthorized, 'NotAuthorized')\r\n    const [requestforAccess, setRequestforAccess] = useState(false);\r\n    const requestAccess = () => {\r\n        if (!requestforAccess) {\r\n            userService.requestForAccess({ userData: userInfo }).then((result) => {\r\n                setRequestforAccess(true);\r\n                // setIsLoading(false)\r\n                setTimeout(() => {\r\n                    logout()\r\n                }, 2000);\r\n            });\r\n        }\r\n    }\r\n    const logout = async () => {\r\n        try {\r\n            if (authState.isAuthenticated) {\r\n                // await oktaAuth.signOut();\r\n                await oktaAuth.signOut({\r\n                    postLogoutRedirectUri: window.location.origin,\r\n                });\r\n            }\r\n            // handle successful authentication here\r\n        } catch (error) {\r\n            // handle error appropriately, e.g., display error message or redirect to login page\r\n        }\r\n    };\r\n    return (\r\n        <div style={styles.container}>\r\n            <h1 style={styles.title}>Access Denied</h1>\r\n            {!NotAuthorized ?\r\n                <><p style={styles.message}>Sorry, you don't have permission to access the page.</p>\r\n                    {/* You can optionally add a button to redirect users to another page */}\r\n                    <Button variant=\"contained\" onClick={() => navigate(getBaseUrl() + '/calist')}>Go to Home</Button>\r\n                    {/* <button onClick={() => navigate(getBaseUrl() + '/calist')} style={styles.button}>Go to Home</button> */}\r\n                </>\r\n                :\r\n                <>\r\n                    <p style={styles.message}>Sorry, you don't have permission to access the application.</p>\r\n                    <p style={styles.message}>To access the application Please request by click on the button below.</p>\r\n                    <Button variant=\"contained\" onClick={requestAccess}>Request Access</Button>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100vh',\r\n        backgroundColor: '#f8f9fa',\r\n    },\r\n    title: {\r\n        fontSize: '2rem',\r\n        color: '#333',\r\n    },\r\n    message: {\r\n        fontSize: '1rem',\r\n        color: '#666',\r\n        textAlign: 'center',\r\n        marginTop: '10px',\r\n    },\r\n    // Optional button styles\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '10px 20px',\r\n        fontSize: '1rem',\r\n        backgroundColor: '#007bff',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        transition: 'background-color 0.3s ease',\r\n        textDecoration: 'none',\r\n        outline: 'none',\r\n        ':hover': {\r\n            backgroundColor: '#0056b3',\r\n        },\r\n    },\r\n};\r\n\r\nexport default UnauthorizedPage;\r\n","import React, { useEffect } from 'react';\r\nimport { Select, MenuItem } from '@mui/material';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import {bussinessUnitLists} from '../contexts/OracleSettingsContext'\r\n//export default function CustomSelect({ isdisabled = false, selectedvalue, defaultValue, optionValues, onChangeFunc, style = {} }) {\r\nexport default function CustomSelect({ isdisabled = false, selectedvalue, defaultValue, onChangeFunc, style = {}, size }) {\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    //console.log(bussinessUnitLists, 'bussinessUnitLists')\r\n    useEffect(() => {\r\n        if (defaultValue) {\r\n            onChangeFunc(defaultValue);\r\n        }\r\n    }, [defaultValue]);\r\n\r\n    return (\r\n        <Select\r\n            disabled={isdisabled}\r\n            className=\"form-control\"\r\n            defaultValue={defaultValue}\r\n            value={selectedvalue}\r\n            onChange={(e) => onChangeFunc(e.target.value)}\r\n            style={style}\r\n            size={size?size:'medium'}\r\n            displayEmpty // Enable displayEmpty prop\r\n            renderValue={(selected) => {\r\n                // Render the selected value\r\n                let selectedOption = [];\r\n                selectedOption = bussinessUnitLists?.find(\r\n                    (option) => (option.businessUnit === selected)\r\n                );\r\n\r\n                return (selectedOption?.businessUnit) ? selectedOption.buName : '';\r\n                //return (selectedOption?.value) ? selectedOption.label : '';\r\n            }}\r\n        >\r\n            {bussinessUnitLists?.map((option, index) => {\r\n                const listKey = \"dpKey\" + index;\r\n                return (\r\n                    <MenuItem value={option.businessUnit} key={listKey}>\r\n                        {/* {option.templateName ? option.instance + \"_\" + option.templateName + \"_\" + option.desc : ''} */}\r\n                        {/*option.templateName ? option.desc : ''*/}\r\n                        {option.buName}\r\n                    </MenuItem>\r\n                )\r\n            })}\r\n        </Select>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport CustomSelect from \"./components/CustomSelect\";\r\nimport { Grid, Select, MenuItem } from \"@mui/material\";\r\nimport { useSelector } from 'react-redux';\r\nimport { InstanceOptions } from \"./views/adminConfig/common.jsx\";\r\n\r\nconst Homepage = () => {\r\n  const globalBUandInstance = useSelector((state) => state.globalBUandInstance);\r\n  const [bussinessUnit, setBussinessUnit] = useState('')\r\n  const [instance, setInstance] = useState('')\r\n  const handleSelectChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === 'Instance') {\r\n      setInstance(value)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (globalBUandInstance.bu !== '') {\r\n      setBussinessUnit(globalBUandInstance.bu)\r\n    }\r\n    if (globalBUandInstance.instanse !== '') {\r\n      setInstance(globalBUandInstance.instanse)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n\r\n      <h1 style={styles.title}>Select RDO and Instance</h1>\r\n      <Grid container item md={6} sm={6} xs={12} className=\"font-medium\"\r\n        style={{ backgroundColor: 'lightblue', padding: '20px' }}\r\n      >\r\n        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n          <span>Design Organization:</span>\r\n          <CustomSelect\r\n            selectedvalue={bussinessUnit}\r\n            style={{ width: \"50%\" }}\r\n            // optionsValues={BUOptions}\r\n            defaultValue={bussinessUnit ? bussinessUnit : \"\"}\r\n            onChangeFunc={(selectedOptionValue) => {\r\n              setBussinessUnit(selectedOptionValue);\r\n              console.log(selectedOptionValue, 'selectedOptionValue')\r\n              //handleSelectChange()\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n          <span>Select Instance:</span>\r\n          <Select\r\n            labelId=\"Instance\"\r\n            id=\"Instance\"\r\n            name=\"Instance\"\r\n            fullWidth\r\n            style={{ width: \"50%\" }} // Set the width here\r\n            value={instance ? instance : ''}\r\n            onChange={handleSelectChange}\r\n          >\r\n            {InstanceOptions.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  title: {\r\n    fontSize: '2rem',\r\n    color: '#333',\r\n  },\r\n  message: {\r\n    fontSize: '1rem',\r\n    color: '#666',\r\n    textAlign: 'center',\r\n    marginTop: '10px',\r\n  },\r\n  // Optional button styles\r\n  button: {\r\n    marginTop: '20px',\r\n    padding: '10px 20px',\r\n    fontSize: '1rem',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s ease',\r\n    textDecoration: 'none',\r\n    outline: 'none',\r\n    ':hover': {\r\n      backgroundColor: '#0056b3',\r\n    },\r\n  },\r\n};\r\n\r\nexport default Homepage;\r\n","import { Suspense } from 'react';\r\nimport Loading from './MatxLoading';\r\n\r\nconst Loadable = (Component) => (props) => {\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <Component {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Loadable;\r\n","import Loadable from 'app/components/Loadable';\r\nimport React, { lazy } from 'react';\r\n\r\nconst CaList = Loadable(lazy(() => import('./CaList')));\r\nconst CaDetails = Loadable(lazy(() => import('./CaDetails')));\r\nconst McoList = Loadable(lazy(() => import('./McoList')));\r\nconst Mcodetails = Loadable(lazy(() => import('./Mcodetails')));\r\nconst TrackerProgressBar = Loadable(lazy(() => import('./TrackerProgressBar')));\r\nconst SpecCreationList = Loadable(lazy(() => import('./SpecCreationList')));\r\nconst ObsoletePartList = Loadable(lazy(() => import('./ObsoletePartList')));\r\nconst MyReportList = Loadable(lazy(() => import('./MyReports')));\r\n\r\nconst McoListRoutes = [\r\n    { path: '/calist', element: <CaList /> },\r\n    { path: '/caDetails/:ca_id', element: <CaDetails /> },\r\n    { path: '/mcolist', element: <McoList /> },\r\n    { path: '/mcodetail/:mco_id?', element: <Mcodetails /> },\r\n    { path: '/:mcoName/tracker', element: <TrackerProgressBar /> },\r\n    { path: '/specCreationList', element: <SpecCreationList /> },\r\n    { path: '/obsoletePartList', element: <ObsoletePartList /> },\r\n    { path: '/myreport', element: <MyReportList /> }\r\n];\r\n\r\nexport default McoListRoutes;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n    const { userDetails } = useOracleSettings();\r\n    const { authState } = useOktaAuth();\r\n    return (\r\n        (authState?.isAuthenticated && userDetails?.userinfo?.includes(\"admin\")) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n        // (authState?.isAuthenticated && userRoles?.includes(\"admin\")) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n        // (authState?.isAuthenticated && authState?.idToken?.claims?.userinfo?.includes(\"admin\")) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n        // (authState?.isAuthenticated) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\r\n\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Autocomplete,\r\n    Select,\r\n    MenuItem\r\n} from \"@mui/material\";\r\n\r\n\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nimport { templateService } from \"services/temlplateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n// import * as sampleTemplate from '../../../assets/sample-template.xlsx';\r\n\r\nimport download from 'downloadjs';\r\nimport {\r\n    instanceOptions,\r\n    ERPtypeOptions,\r\n    existInOracleOptions,\r\n    exportToERPOptions,\r\n    notOwningDivisionOptions,\r\n    BUOptions,\r\n} from \"../adminConfig/common\";\r\nimport { textAlign } from \"@mui/system\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\n\r\nconst ImportDialogBox = (props) => {\r\n    const { allTemplatesInfo, updateAllTemplate, bussinessUnitLists } = useOracleSettings();\r\n\r\n    const tempService = new templateService();\r\n    const { importTemplate, setImportTemplate, setTemplateData, setIsLoading } = props;\r\n    const [ERPTypeError, setERPTypeError] = useState(false);\r\n    const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null)\r\n\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        ERPType: [],\r\n        instance: [],\r\n        BU: [],\r\n    });\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const fileName = 'sample-template.xlsx';\r\n    const handleDownload = () => {\r\n        tempService.downloadSampleFile(fileName)\r\n    };\r\n\r\n    const handleImportTemplateSelection = (column, selectedValues) => {\r\n        console.log(column, '==values ==', selectedValues)\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [column]: column === 'BU' ? selectedValues : selectedValues.value,\r\n            };\r\n        })\r\n        if (column === 'ERPType') { setERPTypeError(false) }\r\n        if (column === 'instance') { setinstanceError(false) }\r\n        if (column === 'BU') { setBUError(false) }\r\n        console.info(importSelectionValues, 'importSelectionValues')\r\n    }\r\n\r\n    const getUniqueValues = (column) => {\r\n        const values = new Set();\r\n\r\n        //console.log(allTemplatesInfo, 'allTemplatesInfo vvvvv');\r\n\r\n        /*  allTemplatesInfo?.forEach((subscriber) => {\r\n             if (column === \"plants\") {\r\n                 subscriber[column]?.forEach((plant) => {\r\n                     values.add(plant.plantName);\r\n                 });\r\n             } else if (column === \"BU\") {\r\n                 subscriber[column]?.forEach((BU) => {\r\n                     values.add(BU);\r\n                 });\r\n             } else {\r\n                 values.add(subscriber[column]);\r\n             }\r\n         });\r\n         return Array.from(values); */\r\n        bussinessUnitLists?.forEach(item => {\r\n            values.add(item[column]);\r\n        })\r\n        return Array.from(values);\r\n    };\r\n\r\n    const importFileData = (e) => {\r\n        //  console.log(e.target.files[0].name, 'rowData')\r\n        //  console.log(e.target.files[0].type, 'rowData')\r\n        //  console.log(e.target.files[0].name.split('.').pop(), 'file name')\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0]);\r\n                setImportedFileName(e.target.files[0].name);\r\n                setNoFileError(false);\r\n            } else {\r\n                setNoFileError(true);\r\n                setImportedFileName(null);\r\n                setImportedFileData(null);\r\n            }\r\n        } else {\r\n            setNoFileError(true);\r\n            setImportedFileName(null);\r\n            setImportedFileData(null);\r\n        }\r\n    }\r\n\r\n    const handleCloseImportTemplate = () => {\r\n        setImportSelectionValues((prev) => {\r\n            return {\r\n                ERPType: [],\r\n                instance: [],\r\n                BU: []\r\n            }\r\n        })\r\n        setImportedFileData(null)\r\n        setImportTemplate(false)\r\n        setImportedFileName(null)\r\n        setNoFileError(false)\r\n        setERPTypeError(false)\r\n        setinstanceError(false)\r\n        setBUError(false)\r\n    };\r\n    const handleImportfileBarClick = () => {\r\n        setimportfileBar(true);\r\n    };\r\n\r\n    const handleImportTemplate = () => {\r\n        if (importSelectionValues.ERPType === null || importSelectionValues.ERPType.length < 1) { setERPTypeError(true) }\r\n        if (importSelectionValues.instance === null || importSelectionValues.instance.length < 1) { setinstanceError(true) }\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) { setBUError(true) }\r\n        if (importedFileData === null || importedFileData.length < 1) { setNoFileError(true) }\r\n        // console.log(importSelectionValues, 'importSelectionValueshandleImportTemplate')\r\n        if (importSelectionValues.ERPType.length > 1 && importSelectionValues.instance.length > 1 && importSelectionValues.BU.length > 1 && importedFileData !== null) {\r\n            let postData = { 'file': importedFileData, data: importSelectionValues };\r\n            setIsLoading(true);\r\n            setImportTemplate(false)\r\n            tempService.importTemplate(postData).then(async (response) => {\r\n                setImportResponse(response)\r\n                let desc;\r\n                let severity;\r\n                if (response.errorCount > 0) {\r\n                    desc = (\r\n                        <div style={{ color: 'red' }}>\r\n                            {/* Failure <br /> */}\r\n                            New Template Added: {response.newTemplateAdded} <br />\r\n                            Template Updated: {response.updateTemplates} <br />\r\n                            Error in Template: {response.errorCount} <br />\r\n                        </div>\r\n                    );\r\n                    severity = 'error';\r\n                    setOpenAlert(true);\r\n                    setOpenDesc({\r\n                        severity: severity,\r\n                        desc: desc,\r\n                    });\r\n                    setIsLoading(false);\r\n                } else {\r\n                    desc = (\r\n                        <div>\r\n                            Success <br />\r\n                            New Template Added: {response.newTemplateAdded} <br />\r\n                            Template Updated: {response.updateTemplates} <br />\r\n                            Error in Template: {response.errorCount} <br />\r\n                        </div>\r\n                    );\r\n                    severity = 'success';\r\n                    setIsLoading(false);\r\n\r\n                }\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: severity,\r\n                    desc: desc,\r\n                });\r\n                setImportSelectionValues((prev) => {\r\n                    return {\r\n                        ERPType: [],\r\n                        instance: [],\r\n                        BU: []\r\n                    }\r\n                })\r\n                setImportedFileData(null)\r\n                setImportedFileName(null)\r\n                // setTimeout(() => {\r\n                //     setImportTemplate(false)\r\n                // }, 200);\r\n\r\n                await tempService.getAllTemplateList().then((result) => {\r\n                    setTemplateData(result.template);\r\n                    updateAllTemplate(result.template);\r\n                });\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n    }\r\n    const handleImportfileBarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setImportSelectionValues((prev) => {\r\n            return {\r\n                ERPType: [],\r\n                instance: [],\r\n                BU: []\r\n            }\r\n        })\r\n        setimportfileBar(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(allTemplatesInfo, 'allTemplatesInfo cccc');\r\n    }, [allTemplatesInfo])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={importTemplate}>\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Import Template\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                Design Organization\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={getUniqueValues(\"buName\")}\r\n                                                value={importSelectionValues.BU}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"BU\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select RDO\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.BU.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {BUError && (<p style={{ textAlign: \"left\", color: \"red\" }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                ERP Type\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={ERPtypeOptions}\r\n                                                value={importSelectionValues.ERPType}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"ERPType\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select ERP Type\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.ERPType.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {ERPTypeError && (<p style={{ textAlign: \"left\", color: \"red\" }}>please select ERP Type</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                Instance\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={instanceOptions}\r\n                                                value={importSelectionValues.instance}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"instance\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select Instance\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                // getOptionLabel={(option) => option}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.instance.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {instanceError && (<p style={{ textAlign: \"left\", color: \"red\" }}>please select Instance</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                            Upload file\r\n                                            <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                        </Button>\r\n                                        {noFileError && (<p style={{ textAlign: \"left\", color: \"red\" }}>Please Select xlsx file to Upload </p>)}\r\n                                    </div>\r\n                                    {importedFileName && (<p>{importedFileName}</p>)}\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        {/* <a\r\n                                            href={sampleTemplate}\r\n                                            download=\"Example-XLSX-document\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noreferrer\"\r\n                                        > */}\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={handleDownload}>\r\n                                            Download sample file\r\n                                        </Button>\r\n                                        {/* </a> */}\r\n                                    </div>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleCloseImportTemplate}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleImportTemplate}>Import</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* <Snackbar\r\n                open={importfileBar}\r\n                autoHideDuration={3000}\r\n                onClose={handleImportfileBarClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleImportfileBarClose}\r\n                    severity=\"success\"\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    {importResponse && (\r\n                        <div>\r\n                            {importResponse.msg} <br />\r\n                            New Template Added: {importResponse.newTemplateAdded} <br />\r\n                            Template Updated: {importResponse.updateTemplates} <br />\r\n                            Error in Template: {importResponse.errorCount} <br />\r\n                        </div>\r\n                    )}\r\n                </Alert>\r\n            </Snackbar> */}\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} sx={{ '& .MuiAlertTitle-root': { backgroundColor: 'red' } }} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImportDialogBox;","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.templateData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n\r\n\r\n  /* export template data start */\r\n  //const [exportResponse, setExportResponse] = useState('');\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    //console.log(dataToExport, 'vdataToExport')\r\n    console.log(props?.filterTemplateData, 'filterTemplateData')\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.templateData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        'Template Name': item.templateName,\r\n        'Description': item.desc,\r\n        'ERP Type': item.ERPType,\r\n         Instance: item.instance,\r\n        'Design Organization': Array.isArray(item?.BU) && item?.BU.length > 0\r\n          ? item?.BU.join(', ')\r\n          : null,\r\n        // attributes: typeof item.attributes == \"object\"? JSON.stringify(item.attributes):null,\r\n        //RDO: typeof item.BU == \"object\" && item.BU.length>0 ? JSON.stringify(item.BU.join(', ')):null,\r\n        // ExportToERP: item.exportToERP,\r\n        // ExistInOracle: item.existInOracle,\r\n        // NotOwningDivision: item.notOwningDivision,\r\n        //Name: item.Name\r\n      }\r\n      return res\r\n    })\r\n    //console.log(exportData, 'inside template export exportData')\r\n    //return;\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Template' }).then((response) => {\r\n      setExportResponse(response)\r\n      //console.log(response, ';resprespresp')\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.templateData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n      //console.log(filteredTempData, 'filteredTempData')\r\n    }\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import React from 'react';\r\n\r\nconst sortedExportDataHOC = (WrappedComponent) => {\r\n    return ({ data = [], sortInfo = {}, initialData = [], ...props }) => {\r\n        const sortData = (data, sortInfo) => {\r\n            if (!Array.isArray(data)) {\r\n                return [];\r\n            }\r\n\r\n            if (!sortInfo || !sortInfo.id) {\r\n                return initialData; // Return initial data if sortInfo is null or empty\r\n            }\r\n\r\n            const field = sortInfo.id || sortInfo.name || sortInfo.columnName;\r\n            const direction = sortInfo.dir === 1 ? 1 : -1;\r\n\r\n            return [...data].sort((a, b) => {\r\n                const aValue = String(a[field] || '').toLowerCase();\r\n                const bValue = String(b[field] || '').toLowerCase();\r\n\r\n                if (aValue < bValue) return -direction;\r\n                if (aValue > bValue) return direction;\r\n                return 0;\r\n            });\r\n        };\r\n\r\n        const sortedData = sortData(data, sortInfo);\r\n        return <WrappedComponent data={sortedData} sortInfo={sortInfo} {...props} />;\r\n    };\r\n};\r\n\r\nexport default sortedExportDataHOC;","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport Loader from 'app/components/Loader';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Box,\r\n  styled,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport ImportDialogBox from \"./importDialog\";\r\nimport ExportDialogBox from \"./exportTemplate\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst Template = () => {\r\n  const location = useLocation();\r\n  let toastState = location.state;\r\n  const { updateAllTemplate } = useOracleSettings();\r\n  const tempService = new templateService();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [templateData, setTemplateData] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [selectedDelTemplate, setselectedDelTemplate] = useState();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filteredTempData, setFilteredTempData] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const sortedFilterTempData = sortDataByKey(filteredTempData, \"templateName\");\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteTemplateDialog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditTemplate(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    tempService.getAllTemplateList()\r\n      .then((result) => {\r\n        setTemplateData(result.template);\r\n        setInitialData(result.template); // Set initial data\r\n        setFilteredTempData(result.template);\r\n        updateAllTemplate(result.template);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFilteredTempData(templateData);\r\n  }, [templateData]);\r\n\r\n  useEffect(() => {\r\n    if (toastState?.status) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: toastState?.status,\r\n        desc: toastState?.message,\r\n      });\r\n    }\r\n    toastState = {};\r\n\r\n    // Clear the state value on page refresh\r\n    window.onbeforeunload = () => {\r\n      window.history.replaceState({}, document.title);\r\n    };\r\n  }, [toastState]);\r\n\r\n  //************Search code************* */\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n  // *************Search code ends *******/\r\n  const navigate = useNavigate();\r\n  const templateModeRef = useRef(\"initialValue\");\r\n  const handleCreateTemplate = () => {\r\n    templateModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createTemplate\");\r\n    }, 200);\r\n  };\r\n  const handleEditTemplate = (editSelectedTemplate) => {\r\n    templateModeRef.current = \"edit\";\r\n    const selectedTempalteData = editSelectedTemplate;\r\n    setTimeout(() => {\r\n      navigate(`/editTemplate/${selectedTempalteData?.id}`, {\r\n        state: { templateMode: templateModeRef.current, selectedTempalteData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteTemplateDialog = (Deltemplate) => {\r\n    setDeleteDialog(true);\r\n    setselectedDelTemplate(Deltemplate);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setselectedDelTemplate(null);\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteTemplate = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      setIsLoading(true);\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await tempService.deleteTemplate(selRowsId).then(async (response) => {\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n\r\n        await tempService.getAllTemplateList().then((result) => {\r\n          setTemplateData(result.template);\r\n          setInitialData(result.template); // Set initial data\r\n          setFilteredTempData(result.template);\r\n          updateAllTemplate(result.template);\r\n        });\r\n      })\r\n    } catch (error) {\r\n      return error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleImportTemplateDialog = () => {\r\n    setImportTemplate(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    if (templateData) {\r\n      const new_FilteredData = templateData.filter((subscriber) => {\r\n        return (searchValue === \"\" ||\r\n          subscriber?.templateName?.toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          subscriber.desc\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          subscriber.plants?.some((plant) =>\r\n            plant.plantName\r\n              .toLowerCase()\r\n              .includes(searchValue.toLowerCase())\r\n          ) ||\r\n          subscriber.BU?.some((BU) =>\r\n            BU.toLowerCase().includes(searchValue.toLowerCase())\r\n          ) ||\r\n          subscriber.instance\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          subscriber.ERPType.toLowerCase().includes(\r\n            searchValue.toLowerCase()\r\n          ))\r\n      })\r\n      setFilteredTempData(new_FilteredData);\r\n    }\r\n  }, [searchValue, templateData]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedTemplate = sortedExportDataHOC(Template);\r\n    // const sortedData = SortedTemplate({ data: templateData, sortInfo, filteredTempData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    const sortedData = SortedTemplate({ data: templateData, sortInfo, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setTemplateData(sortedData.props.data);\r\n    //setFilteredTempData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Template\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateTemplate}\r\n              style={{ marginRight: \"10px\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 10px 0 0px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 0px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleImportTemplateDialog}\r\n              style={{ marginRight: '10px' }}\r\n            >\r\n              Import\r\n            </Button>\r\n\r\n            <ExportDialogBox templateData={templateData} filterTemplateData={selectedRows} />\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br></br>\r\n            <DataGrid\r\n              idProperty=\"id\"\r\n              showZebraRows={false}\r\n              style={{ minHeight: 550 }}\r\n              defaultLimit={100}\r\n              columns={[\r\n                {\r\n                  name: \"templateName\",\r\n                  header: <Tooltip title={'Name'}>Template Name</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                  render: ({ data }) => <div>{data?.templateName}</div>,\r\n                },\r\n                {\r\n                  name: \"desc\",\r\n                  header: <Tooltip title={\"Description\"}>Description</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                  render: ({ data }) => <div>{data?.desc}</div>,\r\n                },\r\n                {\r\n                  name: \"ERPType\",\r\n                  header: <Tooltip title={\"ERP Type\"}>ERP Type</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                },\r\n                {\r\n                  name: \"instance\",\r\n                  header: <Tooltip title={\"Instance\"}>Instance</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                },\r\n                {\r\n                  name: \"BU\",\r\n                  header: <Tooltip title={\"Design Organization\"}>Design Organization</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                  render: ({ data }) => <div>{(data?.BU) ? data.BU.sort().map((item) => item).join(\", \") : ''}</div>,\r\n                },\r\n              ]}\r\n              dataSource={sortedFilterTempData}\r\n              checkboxColumn\r\n              selected={selected}\r\n              onSelectionChange={onSelectionChange}\r\n              handle={ref => gridRef.current = ref ? ref.current : null}\r\n              pagination\r\n              renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n              onSortInfoChange={handleSortInfoChange}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the template{\" \"}\r\n                <b>{selectedDelTemplate?.templateName}</b> with instance{\" \"}\r\n                <b>{selectedDelTemplate?.instance}</b>\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted templates?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteTemplate}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <ImportDialogBox\r\n        importTemplate={importTemplate}\r\n        setImportTemplate={setImportTemplate}\r\n        setTemplateData={setTemplateData}\r\n        setIsLoading={setIsLoading}\r\n      />\r\n\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n\r\n      {\r\n        isLoading ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Loader show={isLoading} />\r\n          </div>\r\n        ) : <></>\r\n      }\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Template;","import React from \"react\";\r\nimport Template from \"./template\";\r\n// import { TemplateProvider } from \"app/contexts/\";\r\n\r\nconst TemplateWrapper = () => {\r\n    return (\r\n        <>\r\n            {/* <TemplateProvider> */}\r\n            <Template />\r\n            {/* </TemplateProvider> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TemplateWrapper;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class PlantService {\r\n  getAllPlantsList = () => {\r\n    return ApiInstance\r\n      .get(`${BACKEND_API_URL}/plant/getplants`, REACT_APP_BACKEND_API_HEADER)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getAllPlantsList\", e);\r\n        return [];\r\n      });\r\n  };\r\n  getPlantById = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/plant/getPlantById`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getPlantById\", e);\r\n        return [];\r\n      });\r\n  };\r\n  addnewPlant = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/plant/addPlant`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updatePlant = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/plant/updatePlant`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deletePlant = (ids) => {\r\n    return ApiInstance.delete(\r\n      `${BACKEND_API_URL}/plant/deletePlant`,\r\n      { data: { ids } },\r\n      REACT_APP_BACKEND_API_HEADER\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting plant:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst AttributeDialog = ({\r\n  open,\r\n  handleDialogClose,\r\n  tempObject,\r\n  handleAttributeChange,\r\n  handleAddAttribute,\r\n  newKey,\r\n  newValue,\r\n  handleAddRow,\r\n  handleDeleteRow,\r\n  keyerror,\r\n  attributeForm,\r\n  valuesInputList,\r\n}) => {\r\n  const InputTypeOptions = [\r\n    { value: \"text\", label: \"text\" },\r\n    { value: \"select\", label: \"select\" },\r\n  ];\r\n  const DataTypeOptions = [\r\n    { value: \"int\", label: \"int\" },\r\n    { value: \"string\", label: \"string\" },\r\n    { value: \"long\", label: \"long\" },\r\n    { value: \"bool\", label: \"bool\" },\r\n  ];\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {attributeForm === null ? \"Add Attribute\" : \"Edit Attribute\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Name:\r\n              {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              name=\"name\"\r\n              value={tempObject.name || \"\"}\r\n              onChange={handleAttributeChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Mandatory: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                value={tempObject.mandatory || \"YES\"}\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"mandatory\"\r\n                onChange={handleAttributeChange}\r\n              >\r\n                <FormControlLabel value=\"Y\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"N\" control={<Radio />} label=\"No\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Material master:{\" \"}\r\n              {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                value={tempObject.material_master || \"Y\"}\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"material_master\"\r\n                onChange={handleAttributeChange}\r\n              >\r\n                <FormControlLabel value=\"Y\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"N\" control={<Radio />} label=\"No\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Data type: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              labelId=\"DataType-label\"\r\n              id=\"DataType-select\"\r\n              name=\"dataType\"\r\n              fullWidth\r\n              value={tempObject.dataType || \"\"}\r\n              onChange={handleAttributeChange}\r\n            >\r\n              {DataTypeOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.value}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Input Type: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              labelId=\"InputType-label\"\r\n              id=\"InputType-select\"\r\n              name=\"inputType\"\r\n              fullWidth\r\n              value={tempObject.inputType || \"\"}\r\n              onChange={handleAttributeChange}\r\n            >\r\n              {InputTypeOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          {tempObject.inputType === \"select\" && (\r\n            <>\r\n              <Grid item md={3} sm={4} xs={12}>\r\n                <span>\r\n                  Values: {/* <span className={classes.spanRed}>*</span>:*/}\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={3} style={{ marginLeft: \"3px\" }}>\r\n                    <TextField\r\n                      name=\"newKey\"\r\n                      label=\"value\"\r\n                      value={newKey}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleAttributeChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      name=\"newValue\"\r\n                      label=\"display value\"\r\n                      value={newValue}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleAttributeChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      style={{ fontSize: \"30px\", marginTop: \"6px\" }}\r\n                      onClick={handleAddRow}\r\n                    >\r\n                      <b>+</b>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{ color: \"red\" }}>{keyerror}</p>\r\n                <div\r\n                  style={{\r\n                    height: \"100px\",\r\n                    overflowY: \"auto\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    alignContent: \"center\",\r\n                  }}\r\n                >\r\n                  {valuesInputList.map((row, index) => (\r\n                    <Paper\r\n                      key={index}\r\n                      style={{\r\n                        paddingLeft: \"50px\",\r\n                        marginBottom: \"8px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginLeft: \"2px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <p>\r\n                            <b>{row.key}</b>:<b>{row.value}</b>\r\n                          </p>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                          <IconButton onClick={() => handleDeleteRow(index)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Default values: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              name=\"defaultValues\"\r\n              value={tempObject.defaultValues || \"\"}\r\n              onChange={handleAttributeChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddAttribute}>\r\n          {attributeForm === null ? \"Add\" : \"Update\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AttributeDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  IconButton,\r\n  Grid,\r\n  TextField,\r\n  Paper,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { styled as makeStyles } from \"@mui/material/styles\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { templateService } from \"services/temlplateService\";\r\nimport { PlantService } from \"services/plantService\";\r\n\r\nimport AttributeDialog from \"./attributeDialog\";\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  existInOracleOptions,\r\n  exportToERPOptions,\r\n  notOwningDivisionOptions,\r\n  BUOptions,\r\n} from \"../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { caseInsensitiveSort, generateRandomId } from \"../../utils/utils\";\r\nimport shortId from 'shortid';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nconst defaultFormValue = {\r\n  name: null,\r\n  mandatory: null,\r\n  material_master: null,\r\n  dataType: null,\r\n  inputType: null,\r\n  values: null,\r\n  defaultValues: null,\r\n};\r\n\r\nexport default function CreateTemplate() {\r\n  const tempService = new templateService();\r\n  const { bussinessUnitLists } = useOracleSettings();\r\n  const plantService = new PlantService();\r\n  const [plantData, setPlantData] = useState();\r\n\r\n  const [templateForm, setTemplateForm] = useState({\r\n    exportToERP: \"Y\",\r\n    existInOracle: \"N\",\r\n    notOwningDivision: \"Y\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n\r\n  //**********AttributeComplete States************************** */\r\n  const [diabox, setDiabox] = useState(false);\r\n  const [attributeData, setAttributeData] = useState([]);\r\n  const [attributeForm, setAttributeForm] = useState(null);\r\n  const [tempObject, setTempObject] = useState({});\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  //**********AttributeComplete States end ************************** */\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n    });\r\n  }, []);\r\n\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  // const handleBUChange = (event) => {\r\n  //   setSelectedBU(event.target.value);\r\n  // };\r\n\r\n  const handleSelectChange = (event, type) => {\r\n    const selectedValues = event.target.value;\r\n\r\n    if (type === \"BU\") {\r\n      setSelectedBU(selectedValues);\r\n    } else if (type === \"plants\") {\r\n      const selectedPlantsInfo = plantData.filter((option) =>\r\n        selectedValues.includes(option.plantName)\r\n      );\r\n\r\n      const extractedInfo = selectedPlantsInfo.map((option) => ({\r\n        plantName: option.plantName,\r\n        id: option.id,\r\n      }));\r\n\r\n      setSelectedPlants(extractedInfo);\r\n    }\r\n  };\r\n\r\n  //********all atrribute functions */\r\n  const handleAttributeChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddAttribute = () => {\r\n    const updatedTempObject = {\r\n      ...tempObject,\r\n      values: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n\r\n    if (updatedTempObject.material_master === \"\") {\r\n      updatedTempObject[\"material_master\"] = \"Y\";\r\n    }\r\n    if (updatedTempObject.mandatory === \"\") {\r\n      updatedTempObject[\"mandatory\"] = \"Y\";\r\n    }\r\n    if (Object.keys(updatedTempObject.values).length) {\r\n      updatedTempObject[\"values\"] = [updatedTempObject.values];\r\n    }\r\n\r\n    if (attributeForm !== null) {\r\n      const updatedAttributeData = [...attributeData];\r\n      updatedAttributeData[attributeForm] = updatedTempObject;\r\n      setAttributeData(updatedAttributeData);\r\n    } else {\r\n      setAttributeData((prevAttributeData) => [\r\n        ...prevAttributeData,\r\n        updatedTempObject,\r\n      ]);\r\n    }\r\n\r\n    setDiabox(false);\r\n    setTempObject(defaultFormValue);\r\n    setValuesInputList([]);\r\n    setAttributeForm(null);\r\n  };\r\n\r\n  const handleDeleteAttribute = (index) => {\r\n    setAttributeData((prevData) => {\r\n      const updatedData = [...prevData];\r\n      updatedData.splice(index, 1);\r\n      return updatedData;\r\n    });\r\n  };\r\n  const handleEditAttribute = (index) => {\r\n    if (index >= 0 && index < attributeData.length) {\r\n      setAttributeForm(index);\r\n      setDiabox(true);\r\n      setTempObject({ ...attributeData[index] });\r\n\r\n      const attindex = attributeData[index]?.values[0];\r\n      const valuesArray = Object.entries(attindex || {}).map(\r\n        ([key, value]) => ({\r\n          key,\r\n          value,\r\n        })\r\n      );\r\n\r\n      setValuesInputList(valuesArray);\r\n    }\r\n  };\r\n\r\n  const handleAddNewAttribute = () => {\r\n    setAttributeForm(null);\r\n    setDiabox(true);\r\n    setTempObject({\r\n      name: \"\",\r\n      mandatory: \"\",\r\n      material_master: \"\",\r\n      dataType: \"\",\r\n      inputType: \"\",\r\n      defaultValues: \"\",\r\n    });\r\n    setValuesInputList([]);\r\n  };\r\n\r\n  //********all atrribute functions ends */\r\n\r\n  const handleTemplateFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    let updatedForm = {};\r\n  \r\n    if (name === \"ERPtype\") {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: null,\r\n        plants: null,\r\n        url: null,\r\n        username: null,\r\n        port: null,\r\n        authkey: null,\r\n        material_master: null,\r\n        SalesOrg: null,\r\n        ECN_required: null,\r\n        bomusage: null,\r\n  \r\n        [name]: value,\r\n      };\r\n    } else if (name === \"plant\") {\r\n      const {\r\n        id,\r\n        plantName,\r\n        material_master,\r\n        SalesOrg,\r\n        ECN_required,\r\n        bomusage,\r\n        ConnectivityDetails,\r\n      } = value;\r\n  \r\n      const { url, username, password, port, authkey } = ConnectivityDetails;\r\n  \r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: id,\r\n        plantName: plantName,\r\n        SalesOrg: SalesOrg,\r\n        url: url,\r\n        material_master: material_master,\r\n        username: username,\r\n        password: password,\r\n        port: port,\r\n        authkey: authkey,\r\n        ECN_required: ECN_required,\r\n        bomusage: bomusage,\r\n      };\r\n    } else {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        [name]: value,\r\n      };\r\n    }\r\n    // if (updatedForm.ERPType === \"SAP\") {\r\n    //   updatedForm.exportToERP = \"\";\r\n    //   updatedForm.existInOracle = \"\";\r\n    //   updatedForm.notOwningDivision = \"\";\r\n    // }\r\n    setTemplateForm(updatedForm);\r\n  };\r\n  \r\n  const handleTemplateNameBlur = (event) => {\r\n    const { name, value } = event.target;\r\n    const trimmedValue = value.trim().replace(/\\s+/g, ' '); // Trim and replace multiple spaces\r\n    setTemplateForm((prevForm) => ({\r\n      ...prevForm,\r\n      [name]: trimmedValue,\r\n    }));\r\n  };\r\n\r\n  const filteredPlant = plantData?.filter(\r\n    (plant) =>\r\n      plant.ERPType === templateForm.ERPType &&\r\n      plant.instance === templateForm.instance\r\n  );\r\n  //console.log(filteredPlant, \"2323232 plant \");\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    // setSnackbarMessage(message);\r\n    // setSnackbarSeverity(severity);\r\n    // setsnackBar(true);\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  const handleSubmitTempForm = async () => {\r\n    const randomid = Math.floor(100000 + generateRandomId() * 900000);\r\n\r\n    if (\r\n      templateForm.templateName?.trim() === \"\" ||\r\n      !templateForm.templateName ||\r\n      templateForm.desc?.trim() === \"\" ||\r\n      !templateForm.desc ||\r\n      // templateForm.plantName?.trim() === \"\" ||\r\n      // !templateForm.plantName ||\r\n      templateForm.ERPType?.trim() === \"\" ||\r\n      !templateForm.ERPType ||\r\n      (templateForm.ERPType === \"SAP\" && !templateForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the required details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const updatedForm = {\r\n      ...templateForm,\r\n      id: randomid.toString(),\r\n      attributes: attributeData,\r\n      BU: selectedBU,\r\n      plants: selectedplants,\r\n    };\r\n\r\n    tempService.addnewTemplate(updatedForm).then((resp) => {\r\n      if (resp && Object.keys(resp)?.length && resp?.status === \"failed\") {\r\n        const altHtml = resp?.message?.map((citem) => {\r\n          return (<li key={shortId.generate()}>{citem}</li>)\r\n        });\r\n        handlesnackBarClick(altHtml, \"error\");\r\n        return;\r\n      }\r\n      // handlesnackBarClick(\"Template added successfully!\", \"success\");\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/template\", { state: { message: 'Template added successfully', status: \"success\" } });\r\n      }, 200);\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  const sortedBusinessUnitList = sortDataByKey(bussinessUnitLists, \"businessUnit\");\r\n  \r\n  // console.log(templateForm, \"tempform data\");\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Template\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid item md={9} sm={6} xs={6}>\r\n          <form>\r\n            <h4>Create Template</h4>\r\n\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Template Name</span> <span className={classes.spanRed}>*</span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"templateName\"\r\n                  value={templateForm.templateName}\r\n                  onChange={handleTemplateFormChange}\r\n                  onBlur={handleTemplateNameBlur}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Description</span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"desc\"\r\n                  value={templateForm.desc}\r\n                  onChange={handleTemplateFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={templateForm.ERPType}\r\n                  onChange={handleTemplateFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              {(templateForm.ERPType === \"SAP\" ||\r\n                templateForm.ERPType === \"ORACLE\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Instance</span>{\" \"}\r\n                      <span className={classes.spanRed}>*</span>\r\n                      {/* <span className={classes.spanRed}>*</span> */}\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        // label=\"instance\"\r\n                        id=\"instance\"\r\n                        name=\"instance\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={templateForm.instance}\r\n                        onChange={handleTemplateFormChange}\r\n                      >\r\n                        {instanceOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n              {/* {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Export to ERP </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"exportToERP\"\r\n                      name=\"exportToERP\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.exportToERP}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {exportToERPOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Exist in Oracle </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"existInOracle\"\r\n                      name=\"existInOracle\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.existInOracle}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {existInOracleOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Not Owning Division </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"notOwningDivision\"\r\n                      name=\"notOwningDivision\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.notOwningDivision}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {notOwningDivisionOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )} */}\r\n\r\n              {(templateForm.ERPType === \"ORACLE\" ||\r\n                templateForm.ERPType === \"SAP\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Design Organization <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        style={{ width: \"100%\" }}\r\n                        multiple\r\n                        name=\"BU\"\r\n                      value={selectedBU.sort(caseInsensitiveSort)}\r\n                        onChange={(e) => handleSelectChange(e, \"BU\")}\r\n                      renderValue={(selected) => selected.sort(caseInsensitiveSort).join(\", \")}\r\n                        MenuProps={{\r\n                          sx: {\r\n                            \"&& .Mui-selected\": {\r\n                              backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        {bussinessUnitLists.map((option) => (\r\n                          <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                            {option.businessUnit}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n              {/* <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Plant</span> <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  multiple\r\n                  name=\"plants\"\r\n                  value={selectedplants.map((item) => item.plantName)}\r\n                  onChange={(e) => handleSelectChange(e, \"plants\")}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                >\r\n                  {filteredPlant?.map((option) => (\r\n                    <MenuItem key={option.id} value={option.plantName}>\r\n                      {option.plantName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid> */}\r\n\r\n              {(templateForm.ERPType === \"SAP\") && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Attributes</span>\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <span>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        margin=\"2px\"\r\n                        onClick={handleAddNewAttribute}\r\n                      >\r\n                        Add Attribute\r\n                      </Button>\r\n                    </span>\r\n                    <br />\r\n                    &nbsp;\r\n                    <Grid md={4}>\r\n                      <span>\r\n                        <div\r\n                          style={{\r\n                            height: \"154px\",\r\n                            overflowY: \"auto\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            width: \"500px\",\r\n                          }}\r\n                        >\r\n                          {attributeData.map((attrivar, aindex) => (\r\n                            <Paper\r\n                              key={aindex}\r\n                              style={{\r\n                                paddingLeft: \"50px\",\r\n                                marginBottom: \"8px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                alignItems: \"center\",\r\n                                height: \"46px\",\r\n                              }}\r\n                            >\r\n                              <Grid container alignItems=\"center\" spacing={3}>\r\n                                <Grid item md={9} sm={8} xs={12}>\r\n                                  <p>\r\n                                    <b>Name:</b> {attrivar.name}\r\n                                    <IconButton\r\n                                      onClick={() => handleEditAttribute(aindex)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteAttribute(aindex)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </p>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Paper>\r\n                          ))}\r\n                        </div>\r\n                      </span>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleSubmitTempForm}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </form>\r\n\r\n          <Snackbar\r\n            open={snackBar}\r\n            autoHideDuration={3000}\r\n            onClose={handlesnackbarClose}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n          >\r\n            <Alert\r\n              onClose={handlesnackbarClose}\r\n              severity={snackbarseverity}\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              {snackbarmessage}\r\n            </Alert>\r\n          </Snackbar>\r\n          {(openDesc) ? (\r\n            <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n          ) : (<></>)}\r\n          {/* add attribute dialog box code */}\r\n          <AttributeDialog\r\n            open={diabox}\r\n            handleDialogClose={handleDialogClose}\r\n            attributeForm={attributeForm}\r\n            tempObject={tempObject}\r\n            handleAttributeChange={handleAttributeChange}\r\n            handleAddAttribute={handleAddAttribute}\r\n            newKey={newKey}\r\n            newValue={newValue}\r\n            handleAddRow={handleAddRow}\r\n            handleDeleteRow={handleDeleteRow}\r\n            keyerror={keyerror}\r\n            valuesInputList={valuesInputList}\r\n          />\r\n        </Grid>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  IconButton,\r\n  Grid,\r\n  TextField,\r\n  Paper,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport AttributeDialog from \"./attributeDialog\";\r\nimport Loader from 'app/components/Loader';\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  existInOracleOptions,\r\n  exportToERPOptions,\r\n  notOwningDivisionOptions,\r\n  BUOptions,\r\n} from \"../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport shortId from 'shortid';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nimport { caseInsensitiveSort } from \"app/utils/utils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\nconst defaultFormValue = {\r\n  name: null,\r\n  mandatory: null,\r\n  material_master: null,\r\n  dataType: null,\r\n  inputType: null,\r\n  values: null,\r\n  defaultValues: null,\r\n};\r\n\r\nexport default function EditTemplate() {\r\n  const tempService = new templateService();\r\n  const { refreshData, bussinessUnitLists } = useOracleSettings();\r\n  const plantService = new PlantService();\r\n  const [plantData, setPlantData] = useState();\r\n  const classes = useStyles();\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n\r\n  //**********AttributeComplete States************************** */\r\n  const [diabox, setDiabox] = useState(false);\r\n\r\n  const [attributeForm, setAttributeForm] = useState(null);\r\n  const [tempObject, setTempObject] = useState({});\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  //**********AttributeComplete States end ************************** */\r\n  let navigate = useNavigate();\r\n  const location = useLocation();\r\n  const params = useParams();\r\n\r\n  const [selectedTemplateObj, setSelectedTemplateObj] = useState();\r\n  const [templateForm, setTemplateForm] = useState({});\r\n  const [attributeData, setAttributeData] = useState([]);\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n    });\r\n  }, []);\r\n\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  //********all atrribute functions */\r\n  const handleAttributeChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddAttribute = () => {\r\n    const updatedTempObject = {\r\n      ...tempObject,\r\n      values: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n\r\n    if (updatedTempObject.material_master === \"\") {\r\n      updatedTempObject[\"material_master\"] = selectedTemplateObj;\r\n    }\r\n    if (updatedTempObject.mandatory === \"\") {\r\n      updatedTempObject[\"mandatory\"] = \"Y\";\r\n    }\r\n\r\n    if (Object.keys(updatedTempObject.values).length) {\r\n      updatedTempObject[\"values\"] = [updatedTempObject.values];\r\n    }\r\n\r\n    if (attributeForm !== null) {\r\n      const updatedAttributeData = [...attributeData];\r\n      updatedAttributeData[attributeForm] = updatedTempObject;\r\n      setAttributeData(updatedAttributeData);\r\n    } else {\r\n      if (attributeData) {\r\n        setAttributeData((prevAttributeData) => [\r\n          ...prevAttributeData,\r\n          updatedTempObject,\r\n        ]);\r\n      } else {\r\n        const newAttr = [updatedTempObject]\r\n        setAttributeData(newAttr);\r\n      }\r\n    }\r\n\r\n    setDiabox(false);\r\n    setTempObject(defaultFormValue);\r\n    setValuesInputList([]);\r\n    setAttributeForm(null);\r\n  };\r\n\r\n  const handleDeleteAttribute = (index) => {\r\n    if (index >= 0 && index < attributeData.length) {\r\n      const updatedAttributeData = [...attributeData];\r\n      updatedAttributeData.splice(index, 1);\r\n      setAttributeData(updatedAttributeData);\r\n    }\r\n  };\r\n  const handleEditAttribute = (index) => {\r\n    if (index >= 0 && index < attributeData.length) {\r\n      setAttributeForm(index);\r\n      setDiabox(true);\r\n\r\n      const selectedAttribute = { ...attributeData[index] };\r\n\r\n      const attindex = attributeData[index]?.values[0];\r\n      const valuesArray = Object.entries(attindex || {})?.map(\r\n        ([key, value]) => ({\r\n          key,\r\n          value,\r\n        })\r\n      );\r\n\r\n      setValuesInputList(valuesArray);\r\n\r\n      setTempObject(selectedAttribute);\r\n    }\r\n  };\r\n\r\n  const handleAddNewAttribute = () => {\r\n    setAttributeForm(null);\r\n    setDiabox(true);\r\n    setTempObject({\r\n      name: \"\",\r\n      mandatory: \"\",\r\n      material_master: \"\",\r\n      dataType: \"\",\r\n      inputType: \"\",\r\n      defaultValues: \"\",\r\n    });\r\n    setValuesInputList([]);\r\n  };\r\n\r\n  //********all atrribute functions ends */\r\n\r\n  const handleSelectChange = (event, type) => {\r\n    const selectedValues = event.target.value;\r\n\r\n    if (type === \"BU\") {\r\n      setSelectedBU(selectedValues);\r\n    } else if (type === \"plants\") {\r\n      const selectedPlantsInfo = plantData?.filter((option) =>\r\n        selectedValues.includes(option.plantName)\r\n      );\r\n\r\n      const extractedInfo = selectedPlantsInfo?.map((option) => ({\r\n        plantName: option.plantName,\r\n        id: option.id,\r\n      }));\r\n\r\n      setSelectedPlants(extractedInfo);\r\n    }\r\n  };\r\n\r\n  const handleTemplateFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    let updatedForm = {};\r\n\r\n    if (name === \"ERPtype\") {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: null,\r\n        plants: null,\r\n        url: null,\r\n        username: null,\r\n        port: null,\r\n        authkey: null,\r\n        material_master: null,\r\n        SalesOrg: null,\r\n        ECN_required: null,\r\n        bomusage: null,\r\n        //oracle changes\r\n        // exportToERP: null,\r\n        // existInOracle: null,\r\n        // notOwningDivision: null,\r\n        BU: null,\r\n\r\n        [name]: value,\r\n      };\r\n    } else if (name === \"plant\") {\r\n      const {\r\n        id,\r\n        plantName,\r\n        material_master,\r\n        ECN_required,\r\n        bomusage,\r\n        SalesOrg,\r\n        ConnectivityDetails,\r\n      } = value;\r\n\r\n      const { url, username, password, port, authkey } = ConnectivityDetails;\r\n\r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: id,\r\n        plantName: plantName,\r\n        ECN_required: ECN_required,\r\n        bomusage: bomusage,\r\n        SalesOrg: SalesOrg,\r\n        url: url,\r\n        material_master: material_master,\r\n        username: username,\r\n        password: password,\r\n        port: port,\r\n        authkey: authkey,\r\n      };\r\n    } else {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        [name]: value,\r\n      };\r\n    }\r\n\r\n    // if (updatedForm.ERPType === \"SAP\") {\r\n    //   updatedForm.exportToERP = \"\";\r\n    //   updatedForm.existInOracle = \"\";\r\n    //   updatedForm.notOwningDivision = \"\";\r\n    // }\r\n\r\n    setTemplateForm(updatedForm);\r\n  };\r\n\r\n  const filteredPlant = plantData?.filter(\r\n    (plant) =>\r\n      plant.ERPType === templateForm.ERPType &&\r\n      plant.instance === templateForm.instance\r\n  );\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    // setSnackbarMessage(message);\r\n    // setSnackbarSeverity(severity);\r\n    // setsnackBar(true);\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  const handleSubmitTempForm = async () => {\r\n    if (\r\n      templateForm.templateName?.trim() === \"\" ||\r\n      !templateForm.templateName ||\r\n      templateForm.desc?.trim() === \"\" ||\r\n      !templateForm.desc ||\r\n      // templateForm.plantName?.trim() === \"\" ||\r\n      // !templateForm.plantName ||\r\n      templateForm.ERPType?.trim() === \"\" ||\r\n      !templateForm.ERPType ||\r\n      (templateForm.ERPType === \"SAP\" && !templateForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the required details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    setTemplateForm((prevData) => {\r\n      const updatedForm = {\r\n        ...prevData,\r\n        id: templateForm.id,\r\n        templates: templateForm.templates,\r\n        attributes: attributeData,\r\n        BU: selectedBU,\r\n        plants: selectedplants,\r\n      };\r\n\r\n      tempService.updateTemplate(updatedForm).then((resp) => {\r\n        if (resp && Object.keys(resp)?.length && resp?.status === \"failed\") {\r\n          const altHtml = resp?.message?.map((citem) => {\r\n            return (<li key={shortId.generate()}>{citem}</li>)\r\n          });\r\n          handlesnackBarClick(altHtml, \"error\");\r\n          return;\r\n        }\r\n        // handlesnackBarClick(\"Template updated successfully\", \"success\");\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/template\", { state: { message: resp.msg, status: resp.status } });\r\n        }, 200);\r\n      });\r\n\r\n      return updatedForm;\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (params?.tempId) {\r\n      setIsLoading(true);\r\n      tempService.getTemplateById({ id: params?.tempId }).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp && Object?.keys(resp)?.length) {\r\n          const selectedTemplate = resp;\r\n\r\n          setSelectedTemplateObj(selectedTemplate);\r\n\r\n          setSelectedBU(\r\n            selectedTemplate.BU\r\n          );\r\n          setAttributeData(\r\n            selectedTemplate.attributes\r\n          );\r\n          setSelectedPlants(\r\n            selectedTemplate.plants\r\n          );\r\n          setTemplateForm({\r\n            id: selectedTemplate.id,\r\n            templates: selectedTemplate.templates,\r\n            templateName: selectedTemplate.templateName,\r\n            desc: selectedTemplate.desc,\r\n            ERPType: selectedTemplate.ERPType,\r\n            instance: selectedTemplate.instance,\r\n            plantId: selectedTemplate.plantId,\r\n            plantName: selectedTemplate.plantName,\r\n            port: selectedTemplate.port,\r\n            url: selectedTemplate.url,\r\n            username: selectedTemplate.username,\r\n            attributes: selectedTemplate.attributes,\r\n            ECN_required: selectedTemplate.ECN_required,\r\n            bomusage: selectedTemplate.bomusage,\r\n            //oracle changes\r\n            BU: selectedTemplate.BU,\r\n            // exportToERP: selectedTemplate.exportToERP,\r\n            // existInOracle: selectedTemplate.existInOracle,\r\n            // notOwningDivision: selectedTemplate.notOwningDivision,\r\n          });\r\n        } else {\r\n          navigate(\"/template\", { state: { message: \"Template not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/template\", { state: { message: \"Template not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n sortDataByKey(bussinessUnitLists, \"businessUnit\");\r\n  \r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Template\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid item md={9} sm={6} xs={6}>\r\n          <form>\r\n            <h4>Edit Template</h4>\r\n\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Template Name</span>\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"templateName\"\r\n                  value={templateForm.templateName}\r\n                  onChange={handleTemplateFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  disabled\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Description</span>\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"desc\"\r\n                  value={templateForm.desc}\r\n                  onChange={handleTemplateFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              {(templateForm.ERPType === \"SAP\" ||\r\n                templateForm.ERPType === \"ORACLE\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>ERP Type </span>\r\n                      <span className={classes.spanRed}>*</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        labelId=\"ERPType-label\"\r\n                        id=\"ERPType-select\"\r\n                        name=\"ERPType\"\r\n                        fullWidth\r\n                        value={templateForm?.ERPType}\r\n                        onChange={handleTemplateFormChange}\r\n                      >\r\n                        {ERPtypeOptions?.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Instance</span>\r\n                      <span className={classes.spanRed}>*</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        label=\"instance\"\r\n                        id=\"instance\"\r\n                        name=\"instance\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={templateForm.instance}\r\n                        onChange={handleTemplateFormChange}\r\n                      >\r\n                        {instanceOptions?.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n              {/* {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Export to ERP </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"exportToERP\"\r\n                      name=\"exportToERP\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.exportToERP}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {exportToERPOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Exist in Oracle </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"existInOracle\"\r\n                      name=\"existInOracle\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.existInOracle}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {existInOracleOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Not Owning Division </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"notOwningDivision\"\r\n                      name=\"notOwningDivision\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.notOwningDivision}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {notOwningDivisionOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )} */}\r\n\r\n              {(templateForm.ERPType === \"ORACLE\" || templateForm.ERPType === \"SAP\") && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>\r\n                      Design Organization <span className={classes.spanRed}>*</span>\r\n                    </span>\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      style={{ width: \"100%\" }}\r\n                      multiple\r\n                      name=\"BU\"\r\n                      value={selectedBU.sort(caseInsensitiveSort)}\r\n                      onChange={(e) => handleSelectChange(e, \"BU\")}\r\n                      renderValue={(selected) => selected.sort(caseInsensitiveSort).join(\", \")}\r\n                      MenuProps={{\r\n                        sx: {\r\n                          \"&& .Mui-selected\": {\r\n                            backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                          }\r\n                        }\r\n                      }}\r\n                    >\r\n                      {bussinessUnitLists?.map((option) => (\r\n                        <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                          {option.businessUnit}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {/* <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Plants</span>\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  multiple\r\n                  name=\"plants\"\r\n                  value={selectedplants.map((item) => item.plantName)}\r\n                  onChange={(e) => handleSelectChange(e, \"plants\")}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                >\r\n                  {filteredPlant?.map((option) => (\r\n                    <MenuItem key={option.id} value={option.plantName}>\r\n                      {option.plantName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid> */}\r\n\r\n              {(templateForm.ERPType === \"SAP\") && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Attributes</span>\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <span>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        margin=\"2px\"\r\n                        onClick={handleAddNewAttribute}\r\n                      >\r\n                        Add Attribute\r\n                      </Button>\r\n                    </span>\r\n                    <br />\r\n                    &nbsp;\r\n                    <Grid md={4}>\r\n                      <span>\r\n                        <div\r\n                          style={{\r\n                            height: \"154px\",\r\n                            overflowY: \"auto\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            width: \"500px\",\r\n                          }}\r\n                        >\r\n                          {attributeData?.map((attrivar, aindex) => (\r\n                            <Paper\r\n                              key={aindex}\r\n                              style={{\r\n                                paddingLeft: \"50px\",\r\n                                marginBottom: \"8px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                alignItems: \"center\",\r\n                                height: \"46px\",\r\n                              }}\r\n                            >\r\n                              <Grid container alignItems=\"center\" spacing={3}>\r\n                                <Grid item md={9} sm={8} xs={12}>\r\n                                  <p>\r\n                                    <b>Name:</b> {attrivar.name}\r\n                                    <IconButton\r\n                                      onClick={() => handleEditAttribute(aindex)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteAttribute(aindex)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </p>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Paper>\r\n                          ))}\r\n                        </div>\r\n                      </span>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleSubmitTempForm}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n\r\n          <Snackbar\r\n            open={snackBar}\r\n            autoHideDuration={3000}\r\n            onClose={handlesnackbarClose}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n          >\r\n            <Alert\r\n              onClose={handlesnackbarClose}\r\n              severity={snackbarseverity}\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              {snackbarmessage}\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          {(openDesc) ? (\r\n            <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n          ) : (<></>)}\r\n          {\r\n            (refreshData || isLoading) ? (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <Loader show={true} />\r\n              </div>\r\n            ) : <></>\r\n          }\r\n\r\n          {/* add attribute dialog box code */}\r\n          <AttributeDialog\r\n            open={diabox}\r\n            handleDialogClose={handleDialogClose}\r\n            attributeForm={attributeForm}\r\n            tempObject={tempObject}\r\n            handleAttributeChange={handleAttributeChange}\r\n            handleAddAttribute={handleAddAttribute}\r\n            newKey={newKey}\r\n            newValue={newValue}\r\n            handleAddRow={handleAddRow}\r\n            handleDeleteRow={handleDeleteRow}\r\n            keyerror={keyerror}\r\n            valuesInputList={valuesInputList}\r\n          />\r\n        </Grid>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\n// import { authRoles } from \"../../auth/authRoles\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport TemplateWrapper from \"./templateWrapper\";\r\nimport CreateTemplate from \"./createTemplate\";\r\nimport EditTemplate from \"./editTemplate\";\r\n\r\nconst templateRoutes = [\r\n  {\r\n    path: \"/template\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <TemplateWrapper />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n\r\n  {\r\n    path: \"/createTemplate\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateTemplate />\r\n      </PrivateRoute>\r\n    ),\r\n    // auth: authRoles.admin,\r\n  },\r\n\r\n  {\r\n    path: \"/editTemplate/:tempId\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditTemplate />\r\n      </PrivateRoute>\r\n    ),\r\n    // auth: authRoles.admin,\r\n  },\r\n];\r\n\r\nexport default templateRoutes;\r\n","export const authRoles = {\r\n    sa: ['SA'], // Only Super Admin has access\r\n    admin: ['SA', 'ADMIN'], // Only SA & Admin has access\r\n    editor: ['SA', 'ADMIN', 'EDITOR'], // Only SA & Admin & Editor has access\r\n    guest: ['SA', 'ADMIN', 'EDITOR', 'GUEST'], // Everyone has access\r\n}\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.plantData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.plantData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        'Plant Name': item.plantName,\r\n        'ERP Type': item.ERPType,\r\n        Instance: item.instance,\r\n        \"Export To ERP\": item.exportToERP,\r\n      }\r\n      return res\r\n    })\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Plants' }).then((response) => {\r\n      setExportResponse(response)\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.plantData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n    }\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportPlants\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst Plant = () => {\r\n  const plantService = new PlantService();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [plantData, setPlantData] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [selectedDelPlant, setSelectedDelPlant] = useState();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const handleDeleteDialog = () => {\r\n    handleDeletePlantDialog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditPlant(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n\r\n  const fetchPlants = () => {\r\n    setIsLoading(true);\r\n    plantService.getAllPlantsList()\r\n      .then((result) => {\r\n        setPlantData(result);\r\n        setInitialData(result); // Set initial data\r\n        setFilteredPlantData(result);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlants();\r\n  }, []);\r\n\r\n  const [filteredPlantData, setFilteredPlantData] = useState([]);\r\n  let sortedPlanteData = sortDataByKey([...filteredPlantData], \"plantName\");\r\n    \r\n  useEffect(() => {\r\n    setFilteredPlantData(plantData);\r\n  }, [plantData]);\r\n  // ***** Global search functionality ********\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  // ***** Global search functionality ends********\r\n\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n  const handleCreatePlant = () => {\r\n    plantModeRef.current = \"create\"; // Update the ref with the new value of plantMode\r\n    setTimeout(() => {\r\n      navigate(\"/createPlant\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n  const handleDeletePlantDialog = (DeletePlant) => {\r\n    setDeleteDialog(true);\r\n    setSelectedDelPlant(DeletePlant);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeletePlant = async () => {\r\n    setDeleteDialog(false);\r\n\r\n    try {\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await plantService.deletePlant(selRowsId);\r\n      setSelected({});\r\n      setSelectedRows([]);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n    });\r\n    handlesnackBarClick(\"Plant deleted successfully\", \"success\");\r\n  };\r\n\r\n  const handleEditPlant = (editSelectedPlant) => {\r\n    plantModeRef.current = \"edit\";\r\n    const selectedPlantData = editSelectedPlant;\r\n    setTimeout(() => {\r\n      navigate(`/editPlant/${selectedPlantData?.id}`, {\r\n        state: { plantMode: plantModeRef.current, selectedPlantData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    const new_FilteredData = plantData.filter((subscriber) => {\r\n      return (searchValue === \"\" ||\r\n        subscriber.plantName\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.instance\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.ERPType.toLowerCase().includes(\r\n          searchValue.toLowerCase()\r\n        ))\r\n    });\r\n    setFilteredPlantData(new_FilteredData);\r\n  }, [searchValue, plantData]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedPlant = sortedExportDataHOC(Plant);\r\n    const sortedData = SortedPlant({ data: plantData, sortInfo, sortedPlanteData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setPlantData(sortedData.props.data);\r\n    setFilteredPlantData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Plant\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreatePlant}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <ExportDialogBox\r\n              plantData={sortInfo && Object.keys(sortInfo).length === 0 ? sortedPlanteData : plantData}\r\n              filterTemplateData={selectedRows} />\r\n          </Grid>\r\n\r\n\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br />\r\n            {isLoading ? (\r\n              // Display loading spinner while data is being fetched\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  minHeight: 550\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              // Render DataGrid once data is loaded\r\n              <DataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                style={{ minHeight: 550 }}\r\n                defaultLimit={100}\r\n                columns={[\r\n                  {\r\n                    name: \"plantName\",\r\n                    header: <Tooltip title={'Name'}>Plant Name</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.plantName}</div>,\r\n                  },\r\n                  {\r\n                    name: \"ERPType\",\r\n                    header: <Tooltip title={\"ERP Type\"}>ERP Type</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.ERPType}</div>,\r\n                  },\r\n                  {\r\n                    name: \"instance\",\r\n                    header: <Tooltip title={\"instance\"}>Instance</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"exportToERP\",\r\n                    header: <Tooltip title={\"Export To ERP\"}>Export To ERP</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  // {\r\n                  //   name: \"orgId\",\r\n                  //   header: <Tooltip title={\"Org Id\"}>Org Id</Tooltip>,\r\n                  //   defaultFlex: 1,\r\n                  //   defaultWidth: 50,\r\n                  // },\r\n                  // {\r\n                  //   name: \"BU\",\r\n                  //   header: <Tooltip title={\"Design Organization\"}>Design Organization</Tooltip>,\r\n                  //   defaultFlex: 1,\r\n                  //   defaultWidth: 50,\r\n                  //   render: ({ data }) => <div>{(data?.BU) ? data.BU.map((item) => item).join(\", \") : ''}</div>,\r\n                  // },\r\n                ]}\r\n                  dataSource={sortInfo === null ? filteredPlantData : sortedPlanteData}\r\n                // rowHeight={null}\r\n                checkboxColumn\r\n                selected={selected}\r\n                onSelectionChange={onSelectionChange}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                pagination\r\n                renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                onSortInfoChange={handleSortInfoChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Plant\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the plant <b>{selectedDelPlant?.plantName}</b>{\" \"}\r\n                with instance <b>{selectedDelPlant?.instance}</b> having Design Organizations{\" \"}\r\n                {/* <b>\r\n                  {selectedDelPlant?.BU.map((buname) => {\r\n                    return buname;\r\n                  }).join(\",\")}\r\n                </b> */}\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted plants?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeletePlant}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Plant;","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\nexport default function ConnectivityDetailsDialog({\r\n  open,\r\n  connDetails,\r\n  handleCDChange,\r\n  handleAddCD,\r\n  connectivityError,\r\n  handleDialogClose,\r\n  plantForm,\r\n}) {\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>Add Connectivity details</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>URL :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"URL\"\r\n              name=\"url\"\r\n              value={connDetails.url}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>Username :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              value={connDetails.username}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>Password :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              value={connDetails?.password || \"\"}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>AuthKey :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Authkey\"\r\n              name=\"authkey\"\r\n              value={connDetails.authkey}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>Port :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Port\"\r\n              name=\"port\"\r\n              value={connDetails.port}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          {plantForm.ERPType === \"SAP\" && (\r\n            <>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>sapsysnum :</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"sapsysnum\"\r\n                  name=\"sapsysnum\"\r\n                  value={connDetails.sapsysnum}\r\n                  onChange={handleCDChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>sapclientid :</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"sapclientid\"\r\n                  name=\"sapclientid\"\r\n                  value={connDetails.sapclientid}\r\n                  onChange={handleCDChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <p style={{ color: \"red\" }}>{connectivityError}</p>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddCD}>Add</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { Formik, Form } from \"formik\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  styled\r\n} from \"@mui/material\";\r\nimport ConnectivityDetailsDialog from \"./connectivityDetailsDialog\";\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  bomusageOptions,\r\n  exportToERPOptions,\r\n} from \"../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\nexport default function CreatePlant() {\r\n  const plantService = new PlantService();\r\n  const { bussinessUnitLists } = useOracleSettings();\r\n  const [allPlantData, setallPlantData] = useState();\r\n  const [diaBox, setDiabox] = useState(false);\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    id: \"\",\r\n    plants: \"\",\r\n    ERPType: \"\",\r\n    instance: \"\",\r\n    Connectivitydetails: {},\r\n  };\r\n  const [plantForm, setPlantForm] = useState({\r\n    BU: [],\r\n    exportToERP: \"Y\", // Initialize BU as an empty array\r\n    ERPType: \"\",\r\n    instance: \"\",\r\n    orgId: \"\",\r\n    plantName: \"\",\r\n    SalesOrg: \"\",\r\n    aliasPlant: \"\",\r\n    material_master: \"\",\r\n    ECN_required: \"\",\r\n    bomusage: \"\",\r\n    // ... other fields\r\n  });\r\n  const [connDetails, setconnDetails] = useState({});\r\n  const [connectivityError, setconnectivityError] = useState();\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  let navigate = useNavigate();\r\n\r\n  const materialMasterOption = [\r\n    {\r\n      value: \"Y\",\r\n      label: \"Yes\",\r\n    },\r\n    {\r\n      value: \"N\",\r\n      label: \"No\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setallPlantData(result.plant);\r\n    });\r\n  }, []);\r\n\r\n  //console.log(diaBox, \"dialogbox status\");\r\n\r\n  const handleAddPlant = () => {\r\n    const newPlant = {\r\n      id:\r\n        plantForm.plantName +\r\n        \"_\" +\r\n        plantForm.ERPType +\r\n        \"_\" +\r\n        plantForm.instance,\r\n      plants: plantForm.plantName + \"_\" + plantForm.ERPType,\r\n      plantName: plantForm.plantName,\r\n      ERPType: plantForm.ERPType,\r\n      orgId: plantForm.orgId,\r\n      SalesOrg: plantForm.SalesOrg,\r\n      aliasPlant: plantForm.aliasPlant,\r\n      material_master: plantForm.material_master,\r\n      ECN_required: plantForm.ECN_required,\r\n      bomusage: plantForm.bomusage,\r\n      // BU: plantForm.ERPType === \"SAP\" ? \"\" : selectedBU,\r\n      // exportToERP: plantForm.ERPType === \"SAP\" ? \"\" : plantForm.exportToERP,\r\n      exportToERP: plantForm.exportToERP,\r\n      ConnectivityDetails: connDetails,\r\n    };\r\n\r\n    if (plantForm?.instance) {\r\n      newPlant[\"instance\"] = plantForm?.instance;\r\n      newPlant[\"id\"] =\r\n        plantForm.plantName +\r\n        \"_\" +\r\n        plantForm.ERPType +\r\n        \"_\" +\r\n        plantForm.instance;\r\n      newPlant[\"plants\"] =\r\n        plantForm.plantName +\r\n        \"_\" +\r\n        plantForm.ERPType +\r\n        \"_\" +\r\n        plantForm.instance;\r\n    }\r\n\r\n    if (\r\n      plantForm.plantName?.trim() === \"\" || !plantForm.plantName ||\r\n      plantForm.ERPType?.trim() === \"\" || !plantForm.ERPType ||\r\n      plantForm.instance?.trim() === \"\" || !plantForm.instance ||\r\n      plantForm.exportToERP?.trim() === \"\" || !plantForm.exportToERP ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.plantName?.trim() === \"\" || !plantForm.plantName)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.material_master?.trim() === \"\" || !plantForm.material_master)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.bomusage?.trim() === \"\" || !plantForm.bomusage)) ||\r\n      (plantForm.ERPType === \"SAP\" && !plantForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill required details \", \"error\");\r\n    } else {\r\n      plantService.addnewPlant(newPlant).then((resp) => {\r\n        if (resp && resp?.data && resp?.data?.length) {\r\n          if (resp?.data[0]?.id) {\r\n            handlesnackBarClick(\"Plant added successfully!\", \"success\");\r\n\r\n            setTimeout(() => {\r\n              navigate(\"/plants\");\r\n            }, 2000);\r\n          } else if (resp?.data[0]?.msg) {\r\n            handlesnackBarClick(resp?.data[0]?.msg, \"error\");\r\n          }\r\n        } else {\r\n          //console.log(\"No data in resp.\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCDChange = (e) => {\r\n    setconnDetails({\r\n      ...connDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddCD = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  const handlePlantFromChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...plantForm,\r\n      [name]: value,\r\n    };\r\n    setPlantForm(updatedForm);\r\n  };\r\n\r\n  const handleBUChange = (event) => {\r\n    setSelectedBU(event.target.value);\r\n  };\r\n  //connectivity form methods\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n    setconnectivityError(\"\");\r\n    setconnDetails(\"\");\r\n  };\r\n\r\n  // snackbar code\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  //console.log(plantForm, \"plantform\");\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Plant\" }]} />\r\n      </Box>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={() => {\r\n        }}\r\n      >\r\n        <Form>\r\n          <SimpleCard>\r\n            <Grid item md={9} sm={6} xs={6}>\r\n              <h4>Create Plant</h4>\r\n\r\n              <Grid container spacing={3} alignItems=\"center\">\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    Plant Name <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                </Grid>\r\n\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <TextField\r\n                    name=\"plantName\"\r\n                    value={plantForm.plantName}\r\n                    onChange={handlePlantFromChange}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n\r\n\r\n\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    ERP Type <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                </Grid>\r\n\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <Select\r\n                    id=\"ERPType\"\r\n                    name=\"ERPType\"\r\n                    fullWidth\r\n                    displayEmpty\r\n                    value={plantForm.ERPType}\r\n                    onChange={handlePlantFromChange}\r\n                  >\r\n                    {ERPtypeOptions.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n\r\n                {(plantForm.ERPType === \"SAP\" || plantForm.ERPType === \"ORACLE\" || plantForm.ERPType === \"JDE\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Organization Id<span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <TextField\r\n                        label=\"Organization Id\"\r\n                        name=\"orgId\"\r\n                        value={plantForm.orgId}\r\n                        onChange={handlePlantFromChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {(plantForm.ERPType === \"SAP\" ||\r\n                  plantForm.ERPType === \"ORACLE\" || plantForm.ERPType === \"JDE\") && (\r\n                    <>\r\n                      <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                        <span>\r\n                          Instance <span className={classes.spanRed}>*</span>\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item md={9} sm={8} xs={12}>\r\n                        <Select\r\n                          id=\"instance\"\r\n                          name=\"instance\"\r\n                          fullWidth\r\n                          displayEmpty\r\n                          value={plantForm.instance}\r\n                          onChange={handlePlantFromChange}\r\n                        >\r\n                          {instanceOptions.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n\r\n                {[\"ORACLE\", \"SAP\", \"JDE\"]?.includes(plantForm.ERPType) && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Export to ERP</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"exportToERP\"\r\n                        name=\"exportToERP\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.exportToERP}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {exportToERPOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {/* {plantForm.ERPType === \"ORACLE\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Design Organization <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        style={{ width: \"100%\" }}\r\n                        multiple\r\n                        value={selectedBU}\r\n                        onChange={handleBUChange}\r\n                        renderValue={(selected) => selected.join(\", \")}\r\n                        MenuProps={{\r\n                          sx: {\r\n                            \"&& .Mui-selected\": {\r\n                              backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        {bussinessUnitLists.map((option) => (\r\n                          <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                            {option.businessUnit}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )} */}\r\n\r\n                {plantForm.ERPType === \"SAP\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Default Sales Org<span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <TextField\r\n                        label=\"Sales Org\"\r\n                        name=\"SalesOrg\"\r\n                        value={plantForm.SalesOrg}\r\n                        onChange={handlePlantFromChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Material Master <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"material_master\"\r\n                        name=\"material_master\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.material_master}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    {plantForm.material_master === \"Y\" && (\r\n                      <>\r\n                        <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                          <span>\r\n                            Plant Alias Name\r\n                            <span className={classes.spanRed}>*</span>\r\n                          </span>\r\n                        </Grid>\r\n\r\n                        <Grid item md={9} sm={8} xs={12}>\r\n                          <TextField\r\n                            name=\"aliasPlant\"\r\n                            value={plantForm.aliasPlant}\r\n                            onChange={handlePlantFromChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        ECN Required <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"ECN_required\"\r\n                        name=\"ECN_required\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.ECN_required}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        BOM Usage <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"bomusage\"\r\n                        name=\"bomusage\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.bomusage}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {bomusageOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    {console.log(plantForm.ERPType, 'plantForm.ERPType')}\r\n                    {plantForm.ERPType === \"SAP\" && (\r\n                      <>\r\n                        <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                          <span>Connectivity Details </span>\r\n                        </Grid>\r\n\r\n                        <Grid item md={9} sm={8} xs={12}>\r\n                          <span>\r\n                            {Object.keys(connDetails).length === 0 && (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                margin=\"2px\"\r\n                                onClick={() => {\r\n                                  setDiabox(true);\r\n                                }}\r\n                              >\r\n                                Add Connectivity Details\r\n                              </Button>\r\n                            )}\r\n                            {Object.keys(connDetails).length > 0 && (\r\n                              <Grid item md={12} sm={8} xs={12}>\r\n                                <>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <p>\r\n                                      <b>URL :</b> {connDetails.url}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Username :</b> {connDetails.username}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Pass :</b> {connDetails.password}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>AuthKey :</b> {connDetails.authkey}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Port :</b> {connDetails.port}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    {plantForm.ERPType === \"SAP\" && (\r\n                                      <>\r\n                                        <p>\r\n                                          <b>sapsysnum :</b> {connDetails.sapsysnum}\r\n                                        </p>{\" \"}\r\n                                        &nbsp;\r\n                                        <p>\r\n                                          <b>sapclientid :</b> {connDetails.sapclientid}\r\n                                        </p>{\" \"}\r\n                                      </>\r\n                                    )}\r\n                                    <p>\r\n                                      {\" \"}\r\n                                      <EditIcon\r\n                                        onClick={() => {\r\n                                          setDiabox(true);\r\n                                        }}\r\n                                      />\r\n                                    </p>\r\n                                  </div>\r\n                                </>\r\n                              </Grid>\r\n                            )}\r\n                          </span>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleAddPlant}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleCancel}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </SimpleCard>\r\n        </Form>\r\n      </Formik>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      {/* dialogBox */}\r\n\r\n      <ConnectivityDetailsDialog\r\n        open={diaBox}\r\n        onClose={handleDialogClose}\r\n        connDetails={connDetails}\r\n        handleDialogClose={handleDialogClose}\r\n        handleCDChange={handleCDChange}\r\n        handleAddCD={handleAddCD}\r\n        connectivityError={connectivityError}\r\n        plantForm={plantForm}\r\n        classes={classes}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { Formik, Form } from \"formik\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  bomusageOptions,\r\n  BUOptions,\r\n  exportToERPOptions,\r\n} from \"../adminConfig/common\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport ConnectivityDetailsDialog from \"./connectivityDetailsDialog\";\r\nimport { Grid, TextField, Select, MenuItem, Box, styled } from \"@mui/material\";\r\nimport Loader from 'app/components/Loader';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\nexport default function EditPlant() {\r\n  const { refreshData } = useOracleSettings();\r\n  const plantService = new PlantService();\r\n  const [allPlantData, setallPlantData] = useState();\r\n  const [diaBox, setDiabox] = useState(false);\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    id: \"\",\r\n    plants: \"\",\r\n    ERPType: \"\",\r\n    instance: \"\",\r\n    Connectivitydetails: {},\r\n  };\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [connectivityError, setconnectivityError] = useState();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  // const selectedPlant = location.state?.selectedPlantData;\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [plantForm, setPlantForm] = useState({});\r\n  const [connDetails, setConnDetails] = useState({});\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [selectedPlant, setSelectedPlant] = useState({});\r\n\r\n  const materialMasterOption = [\r\n    {\r\n      value: \"Y\",\r\n      label: \"Yes\",\r\n    },\r\n    {\r\n      value: \"N\",\r\n      label: \"No\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setallPlantData(result.plant);\r\n    });\r\n  }, []);\r\n\r\n  //plantform methods\r\n\r\n  const handleAddPlant = async () => {\r\n    setIsLoading(true);\r\n    const newPlant = {\r\n      id: plantForm.id,\r\n      plants: plantForm.plants,\r\n      plantName: plantForm.plantName,\r\n      ERPType: plantForm.ERPType,\r\n      SalesOrg: plantForm.SalesOrg,\r\n      aliasPlant: plantForm.aliasPlant,\r\n      material_master: plantForm.material_master,\r\n      ECN_required: plantForm.ECN_required,\r\n      bomusage: plantForm.bomusage,\r\n      ConnectivityDetails: connDetails,\r\n      // BU: plantForm.ERPType === \"SAP\" ? \"\" : selectedBU,\r\n      // exportToERP: plantForm.ERPType === \"SAP\" ? \"\" : plantForm.exportToERP,\r\n      exportToERP: plantForm.exportToERP,\r\n    };\r\n\r\n    if (plantForm?.instance) {\r\n      newPlant[\"instance\"] = plantForm?.instance;\r\n    }\r\n    if (\r\n      plantForm.plantName?.trim() === \"\" || !plantForm.plantName ||\r\n      plantForm.ERPType?.trim() === \"\" || !plantForm.ERPType ||\r\n      plantForm.instance?.trim() === \"\" || !plantForm.instance ||\r\n      plantForm.exportToERP?.trim() === \"\" || !plantForm.exportToERP ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.plantName?.trim() === \"\" || !plantForm.plantName)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.material_master?.trim() === \"\" || !plantForm.material_master)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.bomusage?.trim() === \"\" || !plantForm.bomusage)) ||\r\n      (plantForm.ERPType === \"SAP\" && !plantForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill required details \", \"error\");\r\n      setIsLoading(false);\r\n    } else {\r\n      setIsLoading(true);\r\n      await plantService.updatePlant(newPlant).then((resp) => {\r\n        if (resp?.data?.id) {\r\n          handlesnackBarClick(\"Plant updated successfully\", \"success\");\r\n          setTimeout(() => {\r\n            setIsLoading(false);\r\n            navigate(\"/plants\");\r\n          }, 2000);\r\n        } else if (resp.msg) {\r\n          setIsLoading(false);\r\n          // console.log(resp.msg, \"res.msg\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCDChange = (e) => {\r\n    setConnDetails({\r\n      ...connDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddCD = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  const handlePlantFromChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...plantForm,\r\n      [name]: value,\r\n    };\r\n    setPlantForm(updatedForm);\r\n  };\r\n\r\n  const handleBUChange = (event) => {\r\n    setSelectedBU(event.target.value);\r\n  };\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n    setconnectivityError(\"\");\r\n  };\r\n\r\n  // snackbar code\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  function hasValues(obj) {\r\n    for (let key in obj) {\r\n      if (obj.hasOwnProperty(key) && obj[key] !== \"\" && obj[key] !== undefined) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (params?.plantId) {\r\n      setIsLoading(true);\r\n      plantService.getPlantById({ id: params?.plantId }).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp?.data && Object?.keys(resp?.data)?.length) {\r\n          const selectedPlantObj = resp?.data;\r\n          setSelectedPlant(\r\n            selectedPlantObj\r\n          );\r\n          setSelectedBU(\r\n            selectedPlantObj?.BU\r\n          );\r\n          setPlantForm({\r\n            id: selectedPlantObj?.id,\r\n            plants: selectedPlantObj?.plants,\r\n            plantName: selectedPlantObj?.plantName,\r\n            SalesOrg: selectedPlantObj?.SalesOrg,\r\n            aliasPlant: selectedPlantObj?.aliasPlant,\r\n            ERPType: selectedPlantObj?.ERPType,\r\n            instance: selectedPlantObj?.instance,\r\n            material_master: selectedPlantObj?.material_master,\r\n            ECN_required: selectedPlantObj?.ECN_required,\r\n            bomusage: selectedPlantObj?.bomusage,\r\n            exportToERP: selectedPlantObj?.exportToERP,\r\n\r\n            Connectivitydetails: {\r\n              url: selectedPlantObj?.ConnectivityDetails?.url,\r\n              username: selectedPlantObj?.ConnectivityDetails?.username,\r\n              password: selectedPlantObj?.ConnectivityDetails?.password,\r\n              authkey: selectedPlantObj?.ConnectivityDetails?.authkey,\r\n              port: selectedPlantObj?.ConnectivityDetails?.port,\r\n            },\r\n          });\r\n          setConnDetails({\r\n            url: selectedPlantObj?.ConnectivityDetails?.url,\r\n            username: selectedPlantObj?.ConnectivityDetails?.username,\r\n            password: selectedPlantObj?.ConnectivityDetails?.password,\r\n            authkey: selectedPlantObj?.ConnectivityDetails?.authkey,\r\n            port: selectedPlantObj?.ConnectivityDetails?.port,\r\n            sapsysnum: selectedPlantObj?.ConnectivityDetails?.sapsysnum,\r\n            sapclientid: selectedPlantObj?.ConnectivityDetails?.sapclientid,\r\n          });\r\n        } else {\r\n          navigate(\"/plants\", { state: { message: \"Plant not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/plants\", { state: { message: \"Plant not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Plant\" }]} />\r\n      </Box>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={() => {\r\n        }}\r\n      >\r\n        <Form>\r\n          <SimpleCard>\r\n            <Grid item md={9} sm={6} xs={6}>\r\n              <h4>Edit Plant</h4>\r\n\r\n              <Grid container spacing={3} alignItems=\"center\">\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    Plant Name <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                </Grid>\r\n\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <TextField\r\n                    disabled\r\n                    name=\"plantName\"\r\n                    value={plantForm.plantName}\r\n                    onChange={handlePlantFromChange}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    ERP Type <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                  {/* <span className={classes.spanRed}>*</span> */}\r\n                </Grid>\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <Select\r\n                    id=\"ERPType\"\r\n                    name=\"ERPType\"\r\n                    label=\"ERPType\"\r\n                    fullWidth\r\n                    disabled\r\n                    displayEmpty\r\n                    value={[plantForm?.ERPType]}\r\n                    onChange={handlePlantFromChange}\r\n                  >\r\n                    {ERPtypeOptions.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n\r\n                {(plantForm.ERPType === \"SAP\" ||\r\n                  plantForm.ERPType === \"ORACLE\") && (\r\n                    <>\r\n                      <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                        <span>\r\n                          Instance <span className={classes.spanRed}>*</span>\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item md={9} sm={8} xs={12}>\r\n                        <Select\r\n                          label=\"instance\"\r\n                          id=\"instance\"\r\n                          name=\"instance\"\r\n                          disabled\r\n                          fullWidth\r\n                          displayEmpty\r\n                          value={plantForm.instance}\r\n                          onChange={handlePlantFromChange}\r\n                        >\r\n                          {instanceOptions.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n\r\n                {[\"ORACLE\", \"SAP\"]?.includes(plantForm.ERPType) && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Export To ERP</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"exportToERP\"\r\n                        name=\"exportToERP\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.exportToERP}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {exportToERPOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {/* {plantForm.ERPType === \"ORACLE\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Design Organization\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        style={{ width: \"100%\" }}\r\n                        multiple\r\n                        value={selectedBU}\r\n                        onChange={handleBUChange}\r\n                        renderValue={(selected) => selected.join(\", \")}\r\n                        MenuProps={{\r\n                          sx: {\r\n                            \"&& .Mui-selected\": {\r\n                              backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        {BUOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )} */}\r\n\r\n                {plantForm.ERPType === \"SAP\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Default Sales Org\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <TextField\r\n                        label=\"SalesOrg\"\r\n                        name=\"SalesOrg\"\r\n                        defaultValue={plantForm.SalesOrg}\r\n                        onChange={handlePlantFromChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Material Master\r\n                      </span>\r\n                      {/* <span className={classes.spanRed}>*</span> */}\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"material_master\"\r\n                        name=\"material_master\"\r\n                        label=\"material_master\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.material_master}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    {plantForm.material_master === \"Y\" && (\r\n                      <>\r\n                        <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                          <span>\r\n                            Plantname Alias\r\n                          </span>\r\n                        </Grid>\r\n\r\n                        <Grid item md={9} sm={8} xs={12}>\r\n                          <TextField\r\n                            label=\"aliasPlant\"\r\n                            name=\"aliasPlant\"\r\n                            value={plantForm.aliasPlant}\r\n                            onChange={handlePlantFromChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        ECN Required\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"ECN_required\"\r\n                        name=\"ECN_required\"\r\n                        label=\"ECN_required\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.ECN_required}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        BOM Usage\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"bomusage\"\r\n                        name=\"bomusage\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.bomusage}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {bomusageOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    {hasValues(connDetails) && (<>\r\n\r\n                      <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                        <span>Connectivity Details </span>\r\n                      </Grid>\r\n\r\n                      <Grid item md={9} sm={8} xs={12}>\r\n                        <span>\r\n                          {Object.keys(connDetails).length === 0 ||\r\n                            (selectedPlant?.ConnectivityDetails === null && (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                margin=\"2px\"\r\n                                onClick={() => {\r\n                                  setDiabox(true);\r\n                                }}\r\n                              >\r\n                                Add Connectivity Details\r\n                              </Button>\r\n                            ))}\r\n                          {(Object.keys(connDetails).length > 0 ||\r\n                            selectedPlant?.ConnectivityDetails !== null) && (\r\n                              <Grid item md={12} sm={8} xs={12}>\r\n                                <>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <p>\r\n                                      <b>URL :</b> {connDetails.url}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Username :</b> {connDetails.username}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Pass :</b> {connDetails.password}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>authkey :</b> {connDetails.authkey}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Port :</b> {connDetails.port}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    {plantForm.ERPType === \"SAP\" && (\r\n                                      <>\r\n                                        <p>\r\n                                          <b>sapsysnum :</b> {connDetails.sapsysnum}\r\n                                        </p>{\" \"}\r\n                                        &nbsp;\r\n                                        <p>\r\n                                          <b>sapclientid :</b> {connDetails.sapclientid}\r\n                                        </p>{\" \"}\r\n                                      </>\r\n                                    )}\r\n                                    <p>\r\n                                      {\" \"}\r\n                                      <EditIcon\r\n                                        onClick={() => {\r\n                                          setDiabox(true);\r\n                                        }}\r\n                                      />\r\n                                    </p>\r\n                                  </div>\r\n                                </>\r\n                              </Grid>\r\n                            )}\r\n                        </span>\r\n                      </Grid>\r\n                    </>)}\r\n                  </>\r\n                )}\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleAddPlant}\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleCancel}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </SimpleCard>\r\n        </Form>\r\n      </Formik>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n\r\n      {\r\n        (refreshData || isLoading) ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Loader show={true} />\r\n          </div>\r\n        ) : <></>\r\n      }\r\n\r\n      {/* dialogBox */}\r\n      <ConnectivityDetailsDialog\r\n        open={diaBox}\r\n        onClose={handleDialogClose}\r\n        connDetails={connDetails}\r\n        handleDialogClose={handleDialogClose}\r\n        handleCDChange={handleCDChange}\r\n        handleAddCD={handleAddCD}\r\n        connectivityError={connectivityError}\r\n        plantForm={plantForm}\r\n        classes={classes}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { authRoles } from \"../../auth/authRoles\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nimport Plants from \"./plants\";\r\nimport CreatePlant from \"./createPlant\";\r\nimport EditPlant from \"./editPlant\";\r\n\r\nconst plantRoutes = [\r\n  {\r\n    path: \"/plants\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <Plants />\r\n      </PrivateRoute>\r\n    )\r\n    // auth: authRoles.admin,\r\n  },\r\n  {\r\n    path: \"/createPlant\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreatePlant />\r\n      </PrivateRoute>\r\n    )\r\n    // auth: authRoles.admin,\r\n  },\r\n  {\r\n    path: \"/editPlant/:plantId\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditPlant />\r\n      </PrivateRoute>\r\n    )\r\n    // auth: authRoles.admin,\r\n  },\r\n];\r\n\r\nexport default plantRoutes;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class SourceListService {\r\n  getAllSourceList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/sourceList/getSource`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getSourceDetails\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteSource = (ids) => {\r\n    return ApiInstance.delete(\r\n      `${BACKEND_API_URL}/sourceList/deleteSource`,\r\n      { data: { ids } },\r\n      REACT_APP_BACKEND_API_HEADER\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting source:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewSource = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/sourceList/addSource`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewSource\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateSource = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/sourceList/updateSource`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  getSourceById = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/sourceList/getSourceById`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getPlantById\", e);\r\n        return [];\r\n      });\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function CreateSourceList() {\r\n  const [sourceForm, setSourceForm] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const sourceListService = new SourceListService();\r\n  const handleAddSource = () => {\r\n    if (\r\n      sourceForm.source?.trim() === \"\" ||\r\n      !sourceForm.source ||\r\n      sourceForm.environment?.trim() === \"\" ||\r\n      !sourceForm.environment ||\r\n      sourceForm.instance?.trim() === \"\" ||\r\n      !sourceForm.instance ||\r\n      sourceForm.ERPType?.trim() === \"\" ||\r\n      !sourceForm.ERPType\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newSource = {\r\n      source: sourceForm.source,\r\n      environment: sourceForm.environment,\r\n      instance: sourceForm.instance,\r\n      ERPType: sourceForm.ERPType,\r\n    };\r\n    sourceListService.addnewSource(newSource).then((resp) => {\r\n      if (resp?.data?.id) {\r\n        handlesnackBarClick(\"Source added successfully!\", \"success\");\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/sourceList\");\r\n        }, 2000);\r\n      } else if (resp?.data[0]?.msg) {\r\n        //console.log(resp?.data[0]?.msg, \"res.msg\");\r\n\r\n        handlesnackBarClick(resp.data[0].msg, \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSourceFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...sourceForm,\r\n      [name]: value,\r\n    };\r\n    setSourceForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Source\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Create Source</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Source <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"source\"\r\n                  value={sourceForm.source}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Instance <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"instance\"\r\n                  value={sourceForm.instance}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Environment <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"environment\"\r\n                  value={sourceForm.environment}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={sourceForm.ERPType}\r\n                  onChange={handleSourceFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleAddSource}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={2} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function EditSourceList() {\r\n  const { refreshData } = useOracleSettings();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const sourceListService = new SourceListService();\r\n  // const selectedSource = location.state?.selectedSourceData;\r\n  const [sourceForm, setSourceForm] = useState({});\r\n\r\n  const handleAddSource = async () => {\r\n    setIsLoading(true);\r\n    if (\r\n      sourceForm.source?.trim() === \"\" ||\r\n      !sourceForm.source ||\r\n      sourceForm.environment?.trim() === \"\" ||\r\n      !sourceForm.environment ||\r\n      sourceForm.instance?.trim() === \"\" ||\r\n      !sourceForm.instance ||\r\n      sourceForm.ERPType?.trim() === \"\" ||\r\n      !sourceForm.ERPType\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    const newSource = {\r\n      source: sourceForm.source,\r\n      environment: sourceForm.environment,\r\n      instance: sourceForm.instance,\r\n      ERPType: sourceForm.ERPType,\r\n    };\r\n    sourceListService.updateSource(newSource).then((resp) => {\r\n      handlesnackBarClick(\"Source updated successfully\", \"success\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n        navigate(\"/sourceList\");\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const handleSourceFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...sourceForm,\r\n      [name]: value,\r\n    };\r\n    setSourceForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  useEffect(() => {\r\n    if (params?.sourceId) {\r\n      setIsLoading(true);\r\n      sourceListService.getSourceById({ id: params?.sourceId }).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp?.data && Object?.keys(resp?.data)?.length) {\r\n          const selectedSource = resp?.data;\r\n          setSourceForm({\r\n            source: selectedSource.source,\r\n            environment: selectedSource.environment,\r\n            instance: selectedSource.instance,\r\n            ERPType: selectedSource.ERPType,\r\n          });\r\n        } else {\r\n          navigate(\"/sourceList\", { state: { message: \"Source not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/sourceList\", { state: { message: \"Source not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Source\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Edit Source</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Source <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"source\"\r\n                  disabled\r\n                  value={sourceForm.source}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Instance <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"instance\"\r\n                  disabled\r\n                  value={sourceForm.instance}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Environment <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"environment\"\r\n                  value={sourceForm.environment}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  disabled\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={[sourceForm.ERPType]}\r\n                  onChange={handleSourceFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleAddSource}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={2} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n\r\n        {\r\n          (refreshData || isLoading) ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Loader show={true} />\r\n            </div>\r\n          ) : <></>\r\n        }\r\n\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.sourceData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  console.log('props', props);\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.sourceData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        Source: item.source,\r\n        Instance: item.instance,\r\n        Environment: item.environment,\r\n        'ERP Type': item.ERPType\r\n      }\r\n      return res\r\n    })\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Source' }).then((response) => {\r\n      setExportResponse(response)\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.sourceData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n    }\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\n\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportSource\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst SourceList = () => {\r\n  const [selectedSource, setselectedSource] = useState();\r\n  const [sourceData, setsourceData] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const sourceListService = new SourceListService();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n  const [unSortSourceData, setUnSortSourceData] = useState([])\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteSourceDilaog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditSource(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    sourceListService.getAllSourceList()\r\n      .then((result) => {\r\n        setsourceData(result);\r\n        setInitialData(result); // Set initial data\r\n        setFilteredSourceData(result);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const [filteredSourceData, setFilteredSourceData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredSourceData(sourceData);\r\n  }, [sourceData]);\r\n\r\n  let sortedSourceData = sortDataByKey([...filteredSourceData], \"source\");\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n  const handleSearch = () => {\r\n  };\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n  const handleCreateSourceList = () => {\r\n    plantModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createSourceList\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleEditSource = (editSelectedSource) => {\r\n    plantModeRef.current = \"edit\";\r\n    const selectedSourceData = editSelectedSource;\r\n    setTimeout(() => {\r\n      navigate(`/editSourceList/${selectedSourceData?.id}`, {\r\n        state: { plantMode: plantModeRef.current, selectedSourceData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteSourceDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n    setselectedSource(DeleteSource);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteSource = async () => {\r\n    setDeleteDialog(false);\r\n\r\n    try {\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await sourceListService.deleteSource(selRowsId).then(result => {\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: result?.status,\r\n          desc: result?.msg,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n    sourceListService.getAllSourceList().then((result) => {\r\n      setsourceData(result);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    const new_FilteredData = sourceData.filter((subscriber) => {\r\n      return (searchValue === \"\" ||\r\n        subscriber.source\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.environment\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.instance\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.ERPType.toLowerCase().includes(\r\n          searchValue.toLowerCase()\r\n        ))\r\n    })\r\n\r\n    setFilteredSourceData(new_FilteredData);\r\n  }, [searchValue, sourceData]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedSource = sortedExportDataHOC(SourceList);\r\n    const sortedData = SortedSource({ data: sourceData, sortInfo, sortedSourceData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setsourceData(sortedData.props.data);\r\n    setFilteredSourceData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Source\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateSourceList}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <ExportDialogBox sourceData={sourceData} filterTemplateData={selectedRows} />\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br></br>\r\n            {isLoading ? (\r\n              // Display loading spinner while data is being fetched\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  minHeight: 550\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              // Render DataGrid once data is loaded\r\n              <DataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                style={{ minHeight: 550 }}\r\n                defaultLimit={100}\r\n                columns={[\r\n                  {\r\n                    name: \"source\",\r\n                    header: <Tooltip title={'Name'}>Source</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.source}</div>,\r\n                  },\r\n                  {\r\n                    name: \"instance\",\r\n                    header: <Tooltip title={\"Instance\"}>Instance</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"environment\",\r\n                    header: <Tooltip title={\"Environment\"}>Environment</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"ERPType\",\r\n                    header: <Tooltip title={\"ERP Type\"}>ERP Type</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.ERPType}</div>,\r\n                  }\r\n                ]}\r\n                dataSource={sortInfo==null ? filteredSourceData : sortedSourceData}\r\n                checkboxColumn\r\n                selected={selected}\r\n                onSelectionChange={onSelectionChange}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                pagination\r\n                renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                onSortInfoChange={handleSortInfoChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Source\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the source <b>{selectedSource?.source}</b>{\" \"}\r\n                having instance <b>{selectedSource?.instance}</b> and ERPType{\" \"}\r\n                <b>{selectedSource?.ERPType}</b>\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted sources?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteSource}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SourceList;","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport CreateSourceList from \"./createSourceList\";\r\nimport EditSourceList from \"./editSourceList\";\r\nimport SourceList from \"./sourceList\";\r\n\r\nconst sourceListRoutes = [\r\n  {\r\n    path: \"/sourceList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <SourceList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/createSourceList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateSourceList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/editSourceList/:sourceId\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditSourceList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n];\r\n\r\nexport default sourceListRoutes;\r\n","import {\r\n    BACKEND_API_URL,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n} from '../config'\r\nimport ApiInstance from './ApiInstance';\r\n\r\n\r\nexport class MappingsService {\r\n\r\n\r\n    getAllMappings = () => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/mappings/getMappings`, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error(\"getSourceDetails\", e);\r\n            return [];\r\n        });\r\n    };\r\n\r\n    deleteMapping = (mappingId) => {\r\n        return ApiInstance.delete(`${BACKEND_API_URL}/mappings/deleteMapping/${mappingId}`, REACT_APP_BACKEND_API_HEADER)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting source:', error);\r\n                throw error;\r\n            });\r\n    };\r\n\r\n    addnewMapping = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mappings/addMapping`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            // console.log(data, 'data in post call');\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error('addnewSource', e);\r\n            return [];\r\n        });\r\n    };\r\n\r\n    updateMapping = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mappings/updateMapping`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            //console.log(data, 'data in post call');\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error('addnewPlant', e);\r\n            return [];\r\n        });\r\n    };\r\n}","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Paper,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\n\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport { MappingsService } from \"services/mappingsService\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function CreateMapping() {\r\n  const [sourceForm, setSourceForm] = useState({});\r\n  const [mappingForm, setMappingForm] = useState({});\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [tempObject, setTempObject] = useState({});\r\n\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const sourceListService = new SourceListService();\r\n  const mappingService = new MappingsService();\r\n  const handleAddMapping = () => {\r\n    if (\r\n      mappingForm.Name?.trim() === \"\" ||\r\n      !mappingForm.Name ||\r\n      mappingForm.ERPType?.trim() === \"\" ||\r\n      !mappingForm.ERPType ||\r\n      valuesInputList.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newMaping = {\r\n      Name: mappingForm.Name,\r\n      ERPType: mappingForm.ERPType,\r\n      List: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n    mappingService.addnewMapping(newMaping).then((resp) => {\r\n      if (resp && resp?.data && resp?.data?.length) {\r\n        if (resp?.data[0]?.id) {\r\n          handlesnackBarClick(\"Mapping added successfully!\", \"success\");\r\n\r\n          setTimeout(() => {\r\n            navigate(\"/mappings\");\r\n          }, 200);\r\n        } else if (resp?.data[0]?.msg) {\r\n          handlesnackBarClick(resp?.data[0]?.msg, \"error\");\r\n        }\r\n      } else {\r\n        console.log(\"No data in resp.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //*********mapping values*******/\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleMappingvalueChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // console.log(\r\n  //   valuesInputList,\r\n  //   \"values\"\r\n  // );\r\n  //**********values code end******/\r\n\r\n  const handleMappingFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...mappingForm,\r\n      [name]: value,\r\n    };\r\n    setMappingForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setSnackbarMessage(message);\r\n    setSnackbarSeverity(severity);\r\n    setsnackBar(true);\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  //console.log(mappingForm, \"mappingForm\");\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Mapping\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Create Mapping</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  name=\"Name\"\r\n                  value={mappingForm.Name}\r\n                  onChange={handleMappingFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={mappingForm.ERPType}\r\n                  onChange={handleMappingFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Mapping values <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={3} style={{ marginLeft: \"3px\" }}>\r\n                    <TextField\r\n                      name=\"newKey\"\r\n                      label=\"key\"\r\n                      value={newKey}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      name=\"newValue\"\r\n                      label=\"value\"\r\n                      value={newValue}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      style={{ fontSize: \"30px\", marginTop: \"6px\" }}\r\n                      onClick={handleAddRow}\r\n                    >\r\n                      <b>+</b>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{ color: \"red\" }}>{keyerror}</p>\r\n                <div\r\n                  style={{\r\n                    height: \"100px\",\r\n                    overflowY: \"auto\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    alignContent: \"center\",\r\n                    width: \"51%\",\r\n                  }}\r\n                >\r\n                  {valuesInputList.map((row, index) => (\r\n                    <Paper\r\n                      key={index}\r\n                      style={{\r\n                        paddingLeft: \"50px\",\r\n                        marginBottom: \"8px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginLeft: \"2px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <p>\r\n                            <b>{row.key}</b>:<b>{row.value}</b>\r\n                          </p>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                          <IconButton onClick={() => handleDeleteRow(index)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n              <span>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddMapping}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </span>\r\n              {/* <span className={classes.spanRed}>*</span> */}\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        <Snackbar\r\n          open={snackBar}\r\n          autoHideDuration={3000}\r\n          onClose={handlesnackbarClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        >\r\n          <Alert\r\n            onClose={handlesnackbarClose}\r\n            severity={snackbarseverity}\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            {snackbarmessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Paper,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { MappingsService } from \"services/mappingsService\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function EditMapping() {\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [tempObject, setTempObject] = useState({});\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const location = useLocation();\r\n  const mappingService = new MappingsService();\r\n  const selectedMapping = location.state?.selectedMappingData;\r\n  //console.log(selectedMapping, \"selected from list to edit \");\r\n  const [mappingForm, setMappingForm] = useState({\r\n    Name: selectedMapping.Name,\r\n    ERPType: selectedMapping.ERPType,\r\n  });\r\n\r\n  const reversedList = Object.entries(selectedMapping.List).map(([key, value]) => ({ key, value }));\r\n  //console.log(reversedList, \"reversed list    \")\r\n  const [valuesInputList, setValuesInputList] = useState(reversedList);\r\n\r\n\r\n  const handleAddMapping = () => {\r\n    if (\r\n      mappingForm.Name?.trim() === \"\" ||\r\n      !mappingForm.Name ||\r\n      mappingForm.ERPType?.trim() === \"\" ||\r\n      !mappingForm.ERPType ||\r\n      valuesInputList.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newMaping = {\r\n      Name: mappingForm.Name,\r\n      ERPType: mappingForm.ERPType,\r\n      List: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n    mappingService.updateMapping(newMaping).then((resp) => {\r\n      setTimeout(() => {\r\n        navigate(\"/mappings\");\r\n      }, 200);\r\n    });\r\n\r\n    handlesnackBarClick(\"Mapping updated successfully\", \"success\");\r\n  };\r\n\r\n  //*********mapping values*******/\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleMappingvalueChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  //**********values code end******/\r\n\r\n  const handleMappingFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...mappingForm,\r\n      [name]: value,\r\n    };\r\n    setMappingForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setSnackbarMessage(message);\r\n    setSnackbarSeverity(severity);\r\n    setsnackBar(true);\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  //console.log(mappingForm, \"mappingForm\");\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Mapping\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Edit Mapping</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  name=\"Name\"\r\n                  disabled\r\n                  value={mappingForm.Name}\r\n                  onChange={handleMappingFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={mappingForm.ERPType}\r\n                  onChange={handleMappingFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Mapping values <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={3} style={{ marginLeft: \"3px\" }}>\r\n                    <TextField\r\n                      name=\"newKey\"\r\n                      label=\"key\"\r\n                      value={newKey}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      name=\"newValue\"\r\n                      label=\"value\"\r\n                      value={newValue}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      style={{ fontSize: \"30px\", marginTop: \"6px\" }}\r\n                      onClick={handleAddRow}\r\n                    >\r\n                      <b>+</b>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{ color: \"red\" }}>{keyerror}</p>\r\n                <div\r\n                  style={{\r\n                    height: \"100px\",\r\n                    overflowY: \"auto\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    alignContent: \"center\",\r\n                    width: \"51%\",\r\n                  }}\r\n                >\r\n                  {valuesInputList.map((row, index) => (\r\n                    <Paper\r\n                      key={index}\r\n                      style={{\r\n                        paddingLeft: \"50px\",\r\n                        marginBottom: \"8px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginLeft: \"2px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <p>\r\n                            <b>{row.key}</b>:<b>{row.value}</b>\r\n                          </p>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                          <IconButton onClick={() => handleDeleteRow(index)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n              <span>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddMapping}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </span>\r\n              {/* <span className={classes.spanRed}>*</span> */}\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        <Snackbar\r\n          open={snackBar}\r\n          autoHideDuration={3000}\r\n          onClose={handlesnackbarClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        >\r\n          <Alert\r\n            onClose={handlesnackbarClose}\r\n            severity={snackbarseverity}\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            {snackbarmessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\n\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nimport {\r\n  Box,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  InputLabel,\r\n  Grid,\r\n  TextField,\r\n  Autocomplete,\r\n} from \"@mui/material\";\r\n\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { MappingsService } from \"services/mappingsService\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst Mappings = () => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [selectedMapping, setSelectedMapping] = useState();\r\n  const [mappingData, setMappingData] = useState();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filteredRows, setFilteredRows] = useState([]);\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const mappingService = new MappingsService();\r\n  useEffect(() => {\r\n    mappingService.getAllMappings().then((result) => {\r\n      setMappingData(result);\r\n    });\r\n  }, []);\r\n  //console.log(mappingData, \"mappingData\");\r\n\r\n  const [filteredMappingData, setFilteredMappingData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredMappingData(mappingData);\r\n  }, [mappingData]);\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n\r\n    if (newSearchValue === \"\") {\r\n      setFilteredMappingData(mappingData);\r\n    } else {\r\n      const filteredData = mappingData?.filter(\r\n        (subscriber) =>\r\n          subscriber?.Name?.toLowerCase().includes(\r\n            newSearchValue.toLowerCase()\r\n          ) ||\r\n          subscriber.ERPType?.toLowerCase().includes(\r\n            newSearchValue.toLowerCase()\r\n          )\r\n      );\r\n      setFilteredMappingData(filteredData);\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (searchValue === \"\") {\r\n      setFilteredMappingData(mappingData);\r\n    } else {\r\n      const filteredData = mappingData.filter((subscriber) =>\r\n        subscriber?.Name.toLowerCase().includes(searchValue.toLowerCase())\r\n      );\r\n      setFilteredMappingData(filteredData);\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n\r\n  const handleCreateMappings = () => {\r\n    plantModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createMappings\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleEditMapping = (editselectedMapping) => {\r\n    plantModeRef.current = \"edit\";\r\n\r\n    const selectedMappingData = editselectedMapping;\r\n    setTimeout(() => {\r\n      navigate(\"/editMappings\", {\r\n        state: { plantMode: plantModeRef.current, selectedMappingData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteMappingDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n\r\n    setSelectedMapping(DeleteSource);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteMapping = async () => {\r\n    setDeleteDialog(false);\r\n    // console.log(selectedMapping.id, \" selected deleted plant \");\r\n\r\n    try {\r\n      await mappingService.deleteMapping(selectedMapping.id);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete plant:\", error);\r\n    }\r\n\r\n    mappingService.getAllMappings().then((result) => {\r\n      setMappingData(result);\r\n    });\r\n\r\n    handlesnackBarClick();\r\n  };\r\n\r\n  const handlesnackBarClick = () => {\r\n    setsnackBar(true);\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n  // ****************filters**********************\r\n  const [filterValues, setFilterValues] = useState({\r\n    Name: [],\r\n\r\n    ERPType: [],\r\n  });\r\n\r\n  const handleFilterChange = (column, selectedValues) => {\r\n    setFilterValues((prevFilterValues) => ({\r\n      ...prevFilterValues,\r\n      [column]: selectedValues,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let dataToShow = mappingData;\r\n\r\n    if (filterValues[\"Name\"].length > 0) {\r\n      dataToShow = dataToShow.filter((row) =>\r\n        filterValues[\"Name\"].includes(row[\"Name\"])\r\n      );\r\n    }\r\n\r\n    if (filterValues[\"ERPType\"].length > 0) {\r\n      dataToShow = dataToShow.filter((row) =>\r\n        filterValues[\"ERPType\"].includes(row[\"ERPType\"])\r\n      );\r\n    }\r\n\r\n    setFilteredRows(dataToShow);\r\n  }, [filterValues]);\r\n\r\n  const getUniqueValues = (column) => {\r\n    const values = new Set();\r\n    mappingData?.forEach((subscriber) => values.add(subscriber[column]));\r\n    return Array.from(values);\r\n  };\r\n\r\n  // *******filters end***********\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Mappings\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateMappings}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <StyledTable>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {/* <TableCell align=\"left\">Id</TableCell> */}\r\n                  {/*<TableCell align=\"left\">ID</TableCell>*/}\r\n                  <TableCell align=\"left\">\r\n                    <InputLabel\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        color: \"rgba(52, 49, 76, 1)\",\r\n                      }}\r\n                    >\r\n                      Mapping Name\r\n                    </InputLabel>\r\n\r\n                    <br />\r\n                    <Autocomplete\r\n                      style={{ width: \"70%\" }}\r\n                      multiple\r\n                      options={getUniqueValues(\"Name\")}\r\n                      value={filterValues.Name}\r\n                      onChange={(_, newValue) =>\r\n                        handleFilterChange(\"Name\", newValue)\r\n                      }\r\n                      renderValue={() => null}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          variant=\"outlined\"\r\n                          label=\"Filter Name\"\r\n                          placeholder=\"Search...\"\r\n                        />\r\n                      )}\r\n                      PaperProps={{\r\n                        style: {\r\n                          maxHeight: \"200px\",\r\n                        },\r\n                      }}\r\n                      disableCloseOnSelect\r\n                      isOptionEqualToValue={(option, value) => option === value}\r\n                      getOptionLabel={(option) => option}\r\n                      getOptionSelected={(option, value) =>\r\n                        filterValues.Name.includes(value)\r\n                      }\r\n                      ChipProps={{\r\n                        style: {\r\n                          fontSize: \"8px\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    <InputLabel\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        color: \"rgba(52, 49, 76, 1)\",\r\n                      }}\r\n                    >\r\n                      ERP Type\r\n                    </InputLabel>\r\n\r\n                    <br />\r\n                    <Autocomplete\r\n                      style={{ width: \"70%\" }}\r\n                      multiple\r\n                      options={getUniqueValues(\"ERPType\")}\r\n                      value={filterValues.ERPType}\r\n                      onChange={(_, newValue) =>\r\n                        handleFilterChange(\"ERPType\", newValue)\r\n                      }\r\n                      renderValue={() => null}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          variant=\"outlined\"\r\n                          label=\"Filter ERP Type\"\r\n                          placeholder=\"Search...\"\r\n                        />\r\n                      )}\r\n                      PaperProps={{\r\n                        style: {\r\n                          maxHeight: \"200px\",\r\n                        },\r\n                      }}\r\n                      disableCloseOnSelect\r\n                      isOptionEqualToValue={(option, value) => option === value}\r\n                      getOptionLabel={(option) => option}\r\n                      getOptionSelected={(option, value) =>\r\n                        filterValues.ERPType.includes(value)\r\n                      }\r\n                      ChipProps={{\r\n                        style: {\r\n                          fontSize: \"8px\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <InputLabel\r\n                      style={{\r\n                        paddingBottom: \"85px\",\r\n                        fontWeight: \"bold\",\r\n                        color: \"rgba(52, 49, 76, 1)\",\r\n                      }}\r\n                    >\r\n                      Actions\r\n                    </InputLabel>\r\n                  </TableCell>\r\n\r\n                  {/* <TableCell align=\"right\">Action</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {filteredMappingData?.length > 0 ? (\r\n                  filteredMappingData\r\n                    .filter(\r\n                      (subscriber) =>\r\n                        (searchValue === \"\" ||\r\n                          subscriber.Name.toLowerCase().includes(\r\n                            searchValue.toLowerCase()\r\n                          ) ||\r\n                          subscriber?.ERPType.toLowerCase().includes(\r\n                            searchValue.toLowerCase()\r\n                          )) &&\r\n                        (filterValues.Name.length === 0 ||\r\n                          filterValues.Name.includes(subscriber.Name)) &&\r\n                        (filterValues.ERPType.length === 0 ||\r\n                          filterValues.ERPType.includes(subscriber.ERPType))\r\n                    )\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((subscriber, index) => {\r\n                      return (\r\n                        <TableRow key={index}>\r\n                          {/* <TableCell align=\"left\">{subscriber.id}</TableCell>*/}\r\n                          {/* <TableCell align=\"left\">{subscriber.name}</TableCell> */}\r\n                          <TableCell\r\n                            align=\"left\"\r\n                            style={{ textTransform: \"none\" }}\r\n                          >\r\n                            {subscriber.Name}\r\n                          </TableCell>\r\n\r\n                          <TableCell\r\n                            align=\"left\"\r\n                            style={{ textTransform: \"none\" }}\r\n                          >\r\n                            {subscriber.ERPType}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            align=\"left\"\r\n                            style={{ textTransform: \"none\" }}\r\n                          >\r\n                            <EditIcon\r\n                              id={subscriber.id}\r\n                              onClick={() => handleEditMapping(subscriber)}\r\n                            />{\" \"}\r\n                            <DeleteIcon\r\n                              onClick={() =>\r\n                                handleDeleteMappingDilaog(subscriber)\r\n                              }\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })\r\n                ) : (\r\n                  <>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      colSpan={5}\r\n                      style={{ textAlign: \"center\" }}\r\n                    >\r\n                      {\"No result found!\"}\r\n                    </TableCell>\r\n                  </>\r\n                )}\r\n              </TableBody>\r\n            </StyledTable>\r\n            {mappingData?.length ? (\r\n              <TablePagination\r\n                sx={{ px: 2 }}\r\n                page={page}\r\n                component=\"div\"\r\n                rowsPerPage={rowsPerPage}\r\n                count={mappingData?.length}\r\n                onPageChange={handleChangePage}\r\n                rowsPerPageOptions={[10, 25, 50]}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\r\n                backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <Snackbar\r\n        open={snackBar}\r\n        autoHideDuration={3000}\r\n        onClose={handlesnackbarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handlesnackbarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          Mapping deleted successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Do you want to delete the source <b>{selectedMapping?.Name}</b>{\" \"}\r\n            having ERP type <b>{selectedMapping?.ERPType}</b>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteMapping}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Mappings;\r\n","import React from 'react';\r\nimport { authRoles } from \"../../auth/authRoles\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport CreateMapping from \"./createMappings\";\r\nimport EditMapping from \"./editMappings\";\r\n\r\nimport Mappings from \"./mappings\";\r\n\r\nconst mappingsroutes = [\r\n  {\r\n    path: \"/mappings\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <Mappings />\r\n      </PrivateRoute>\r\n    ),\r\n    auth: authRoles.admin\r\n  },\r\n  {\r\n    path: \"/createMappings\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateMapping />\r\n      </PrivateRoute>\r\n    ),\r\n    auth: authRoles.admin,\r\n  },\r\n  {\r\n    path: \"/editMappings\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditMapping />\r\n      </PrivateRoute>\r\n    ),\r\n    auth: authRoles.admin,\r\n  },\r\n];\r\n\r\nexport default mappingsroutes;\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.buData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false);\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.buData) || [];\r\n\r\n    // Check if props.sortInfo is an empty object\r\n    if (!props.sortInfo || Object.keys(props.sortInfo).length === 0) {\r\n      data = data.sort((a, b) => {\r\n        const aValue = a.businessUnit?.toLowerCase() || '';\r\n        const bValue = b.businessUnit?.toLowerCase() || '';\r\n        if (aValue < bValue) return -1;\r\n        if (aValue > bValue) return 1;\r\n        return 0;\r\n      });\r\n    }\r\n   \r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        'Design Organization': item.businessUnit,\r\n        'Export To ERP Disabled': item.exportToERPdisabled,\r\n        'Export To ERP Bypassed': item.exportToERPbyPassed,\r\n        'Enable BOS Transfer': item.enableBOSTransfer,\r\n        'Context DFF': item.contextDEF,\r\n        'EMR Division ARG': item.EMRDivisionORGValue,\r\n        'Product Hierarchy': item.productHierarchy,\r\n        'Plant Name': item?.plants?.length > 0 ? item?.plants?.map(plant => plant?.plantName).join(\"\\n\") : null,\r\n        'Do Not Send To ERP': item.doNotSendToERP.join(\"\\n\"),\r\n        'Oracle Existing': item.oracleExisting.join(\"\\n\"),\r\n        'Make Without BOM List': item.makeWithoutBOMList.join(\"\\n\"),\r\n        'Not Owning Division List': item.notOwningDivisionList.join(\"\\n\"),\r\n        //ERPType: item.ERPType,\r\n        //Instance: item.instance,\r\n        // attributes: typeof item.attributes == \"object\"? JSON.stringify(item.attributes):null,\r\n        //RDO: typeof item.BU == \"object\" && item.BU.length>0 ? JSON.stringify(item.BU.join(', ')):null,\r\n        // ExportToERP: item.exportToERP,\r\n        // ExistInOracle: item.existInOracle,\r\n        // NotOwningDivision: item.notOwningDivision,\r\n        //Name: item.Name\r\n      }\r\n      return res\r\n    })\r\n    //console.log(exportData, 'inside template export exportData')\r\n    //return;\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Design Organization' }).then((response) => {\r\n      setExportResponse(response)\r\n      //console.log(response, ';resprespresp')\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.buData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n      //console.log(filteredTempData, 'filteredTempData')\r\n    }\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { BUService } from \"services/buService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportBUList\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst BUList = () => {\r\n  const { bussinessUnitLists, updateBussinessUnitLists } = useOracleSettings();\r\n  const location = useLocation();\r\n  let toastState = location.state;\r\n  const [selectedSource, setselectedSource] = useState();\r\n  const [buData, setBUData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const buService = new BUService();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // State to keep track of sorting information\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [initialData, setInitialData] = useState([]);\r\n  \r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    const styles = \r\n    {\r\n          backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n          zIndex: 99,\r\n          background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n          height: \"auto !important\",\r\n          whiteSpace: \"normal\"\r\n        }\r\n    return styles;\r\n  };\r\n \r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteSourceDilaog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditSource(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (!bussinessUnitLists) {\r\n      buService.getAllBuList()\r\n        .then((result) => {\r\n          setBUData(result.data);\r\n          updateBussinessUnitLists(result.data);\r\n          setInitialData(result.data); // Set initial data\r\n          setFilteredBUData(result.data);\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setTimeout(() => {\r\n        setBUData(bussinessUnitLists);\r\n        setInitialData(bussinessUnitLists);\r\n        setIsLoading(false);\r\n      }, 500);\r\n\r\n    }\r\n  }, [bussinessUnitLists]);\r\n  const [filteredBUData, setFilteredBUData] = useState([]);\r\n  useEffect(() => {\r\n    setFilteredBUData(buData);\r\n  }, [buData]);\r\n\r\n  const sortedFilteredBuData =  sortDataByKey([...filteredBUData], \"buName\");\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n  const handleCreateBUList = () => {\r\n    plantModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createBU\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n  const handleEditSource = (editSelectedSource) => {\r\n    plantModeRef.current = \"edit\";\r\n    const selectedBUData = editSelectedSource;\r\n    setTimeout(() => {\r\n      navigate(`/editBU/${selectedBUData?.id}`, {\r\n        state: { plantMode: plantModeRef.current, selectedBUData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteSourceDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n    setselectedSource(DeleteSource);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteSource = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await buService.deleteBU(selRowsId).then(response => {\r\n        console.log(response, 'delete response')\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete BU:\", error);\r\n    }\r\n    buService.getAllBuList().then((result) => {\r\n      setBUData(result.data);\r\n      updateBussinessUnitLists(result.data)\r\n      setInitialData(result.data);\r\n    });\r\n  };\r\n\r\n  // ****************filters**********************\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    if (buData) {\r\n      const new_FilteredData = buData.filter((subscriber) => {\r\n        return (searchValue === \"\" ||\r\n          subscriber.buName\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase())\r\n        )\r\n      })\r\n      setFilteredBUData(new_FilteredData);\r\n    }\r\n  }, [searchValue, buData]);\r\n  useEffect(() => {\r\n    if (toastState?.status) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: toastState?.status,\r\n        desc: toastState?.message,\r\n      });\r\n      buService.getAllBuList().then((result) => {\r\n        setBUData(result.data);\r\n        updateBussinessUnitLists(result.data)\r\n        setInitialData(result.data); \r\n      });\r\n    }\r\n    toastState = {};\r\n\r\n    // Clear the state value on page refresh\r\n    window.onbeforeunload = () => {\r\n      window.history.replaceState({}, document.title);\r\n    };\r\n  }, [toastState]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedbuList = sortedExportDataHOC(BUList);\r\n    const sortedData = SortedbuList({ data: buData, sortInfo, sortedFilteredBuData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setBUData(sortedData.props.data);\r\n    setFilteredBUData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Design Organization\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateBUList}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <ExportDialogBox sortInfo={sortInfo} buData={buData} filterTemplateData={selectedRows} />\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br />\r\n            {isLoading ? (\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  minHeight: 550,\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              <DataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                defaultLimit={100}\r\n                rowStyle={rowStyle}\r\n                // style={{ minHeight: 550 }}\r\n                columns={[\r\n                  {\r\n                    name: \"buName\",\r\n                    header: <Tooltip title={'Design Organization'}>Design Organization</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.buName}</div>,\r\n                  },\r\n                  {\r\n                    name: \"exportToERPdisabled\",\r\n                    header: <Tooltip title={\"Export To ERP Disabled\"}>Export To ERP Disabled</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"exportToERPbyPassed\",\r\n                    header: <Tooltip title={\"Export To ERP Bypassed\"}>Export To ERP Bypassed</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"enableBOSTransfer\",\r\n                    header: <Tooltip title={\"Enable BOS Transfer\"}>Enable BOS Transfer</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"contextDFF\",\r\n                    header: <Tooltip title={\"Context DFF\"}>Context DFF</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.contextDEF}</div>,\r\n                  },\r\n                  {\r\n                    name: \"EMRDivisionORGValue\",\r\n                    header: <Tooltip title={\"EMR Division ORG Value\"}>EMR Division ARG</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.EMRDivisionORGValue}</div>,\r\n                  },\r\n                  {\r\n                    name: \"productHierarchy\",\r\n                    header: <Tooltip title={\"Product Hierarchy\"}>Product Hierarchy</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.productHierarchy}</div>,\r\n                  },\r\n                  {\r\n                    name: \"plants\",\r\n                    header: <Tooltip title={\"Plant Name\"}>Plant Name</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.plants\r\n                          .sort((a, b) => a.plantName.localeCompare(b.plantName))\r\n                          .map((item, index) => (\r\n                            <div key={index}>{item?.plantName}</div>\r\n                          ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"DoNotSendToERP\",\r\n                    header: <Tooltip title={\"DoNotSendToERP\"}>Do Not Send To ERP</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.doNotSendToERP\r\n                          .sort((a, b) => a.localeCompare(b)) \r\n                          .map((item, index) => (\r\n                            <div key={index}>{item}</div>\r\n                          ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"OracleExisting\",\r\n                    header: <Tooltip title={\"OracleExisting\"}>Oracle Existing</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.oracleExisting.sort((a, b)=>a.localeCompare(b))\r\n                        .map((item, index) => (\r\n                          <div key={index}>{item}</div> \r\n                        ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"MakeWithoutBOMList\",\r\n                    header: <Tooltip title={\"Make Without BOMList\"}>Make Without BOM List</Tooltip>,\r\n                    defaultFlex: 0,\r\n                    defaultWidth: 170,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.makeWithoutBOMList.sort((a, b)=>a.localeCompare(b))\r\n                        .map((item, index) => (\r\n                          <div key={index}>{item}</div>\r\n                        ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"NotOwningDivisionList\",\r\n                    header: <Tooltip title={\"Not Owning DivisionList\"}>Not Owning Division List</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 100,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.notOwningDivisionList.sort((a, b)=>a.localeCompare(b))\r\n                        .map((item, index) => (\r\n                          <div key={index}>{item}</div> \r\n                        ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ]}\r\n                dataSource={sortedFilteredBuData}\r\n                // rowHeight={null}\r\n                checkboxColumn\r\n                selected={selected}\r\n                onSelectionChange={onSelectionChange}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                pagination\r\n                renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                onSortInfoChange={handleSortInfoChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Design Organization\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the RDO <b>{selectedSource?.buName}</b> having\r\n                plants{\" \"}\r\n                <b>\r\n                  {\" \"}\r\n                  {selectedSource?.plants\r\n                    .map((plant) => {\r\n                      return plant.plantName;\r\n                    })\r\n                    .join(\",\")}{\" \"}\r\n                </b>\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted Design Organization?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteSource}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BUList;","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { exportToERPOptions, enableBOSTransferOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { BUService } from \"services/buService\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nexport default function CreateBU() {\r\n  const {\r\n    refreshData,\r\n    templatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [buForm, setBuFrom] = useState({\r\n    exportToERPdisabled: \"N\",\r\n    exportToERPbyPassed: \"N\",\r\n    enableBOSTransfer: \"Y\",\r\n  });\r\n  const [plantData, setPlantData] = useState([]);\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n  const [DoNotSendToERP, setDoNotSendToERP] = useState([]);\r\n  const [OracleExisting, setOracleExisting] = useState([]);\r\n  const [MakeWithoutBOMList, setMakeWithoutBOMList] = useState([]);\r\n  const [NotOwningDivisionList, setNotOwningDivisionList] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  let navigate = useNavigate();\r\n  const buService = new BUService();\r\n\r\n  const plantService = new PlantService();\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  const handleAddbuName = () => {\r\n    if (\r\n      buForm.buName?.trim() === \"\" ||\r\n      !buForm.buName ||\r\n      selectedplants.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n    const newbuName = {\r\n      id: buForm.buName,\r\n      buName: buForm.buName,\r\n      exportToERPdisabled: buForm.exportToERPdisabled,\r\n      contextDEF: buForm.contextDEF,\r\n      EMRDivisionORGValue: buForm.EMRDivisionORGValue,\r\n      productHierarchy: buForm.productHierarchy,\r\n      exportToERPbyPassed: buForm.exportToERPbyPassed,\r\n      enableBOSTransfer: buForm.enableBOSTransfer,\r\n      plants: selectedplants?.map((option) => {\r\n        return {\r\n          id: option?.id,\r\n          plantName: option?.plantName\r\n        }\r\n      }) || [],\r\n      doNotSendToERP: DoNotSendToERP?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      oracleExisting: OracleExisting?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      makeWithoutBOMList: MakeWithoutBOMList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      notOwningDivisionList: NotOwningDivisionList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n    };\r\n    setIsLoading(true);\r\n    buService.addnewBU(newbuName).then((resp) => {\r\n      setIsLoading(false);\r\n      if (resp.status === 'success') {\r\n        setTimeout(() => {\r\n          navigate(\"/buList\", { state: { message: resp.msg, status: resp.status } });\r\n        }, 200);\r\n      } else if (resp.status === 'error') {\r\n        handlesnackBarClick(resp.msg, \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlebuFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...buForm,\r\n      [name]: value,\r\n    };\r\n    setBuFrom(updatedForm);\r\n  };\r\n  const handlePlantsChange = (selectedObj) => {\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => plantData.some((existing) => existing.plantName === item.plantName)\r\n    ) || [];\r\n    setSelectedPlants(newselectedObj);\r\n  };\r\n\r\n  const handleTemplateChange = (name, selectedObj) => {\r\n    console.log(`New Value: ${name} - `, selectedObj);\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => templatesInfo.some((existing) => existing.templateName === item.templateName)\r\n    ) || [];\r\n    if (name === 'DoNotSendToERP') {\r\n      setDoNotSendToERP(newselectedObj)\r\n    }\r\n    else if (name === 'OracleExisting') {\r\n      setOracleExisting(newselectedObj);\r\n    }\r\n    else if (name === 'MakeWithoutBOMList') {\r\n      setMakeWithoutBOMList(newselectedObj)\r\n    }\r\n    else if (name === 'NotOwningDivisionList') {\r\n      setNotOwningDivisionList(newselectedObj)\r\n    }\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  sortDataByKey(plantData, 'plantName');\r\n  sortDataByKey(templatesInfo, 'templateName');\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Design Organization\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Create Design Organization</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                Design Organization <span style={{ color: \"#FF3D57\" }}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"buName\"\r\n                  value={buForm.buName}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Export to ERP Disabled </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"exportToERPdisabled\"\r\n                  id=\"exportToERPdisabled\"\r\n                  name=\"exportToERPdisabled\"\r\n                  fullWidth\r\n                  value={buForm.exportToERPdisabled}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Export To ERP Bypassed\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"exportToERPbyPassed\"\r\n                  id=\"exportToERPbyPassed\"\r\n                  name=\"exportToERPbyPassed\"\r\n                  fullWidth\r\n                  value={buForm.exportToERPbyPassed}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Enable BOS Transfer </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"enableBOSTransfer\"\r\n                  id=\"enableBOSTransfer\"\r\n                  name=\"enableBOSTransfer\"\r\n                  fullWidth\r\n                  value={'Y'}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {enableBOSTransferOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Context DFF\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"contextDEF\"\r\n                  value={buForm.contextDEF}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  EMR Division ARG\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"EMRDivisionORGValue\"\r\n                  value={buForm.EMRDivisionORGValue}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Product Hierarchy\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"productHierarchy\"\r\n                  value={buForm.productHierarchy}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Plant Name <span style={{ color: \"#FF3D57\" }}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={selectedplants}\r\n                  getOptionLabel={(option) => option.plantName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handlePlantsChange(newValue)\r\n                  }}\r\n                  options={plantData}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.plantName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* add templates  */}\r\n              {/* DoNotSendToERP */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Do Not Send To ERP\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={DoNotSendToERP}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"DoNotSendToERP\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* OracleExisting */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Oracle Existing\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={OracleExisting}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"OracleExisting\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* MakeWithoutBOMList */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Make Without BOM List\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={MakeWithoutBOMList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"MakeWithoutBOMList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* NotOwningDivisionList */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Not Owning Division List\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={NotOwningDivisionList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"NotOwningDivisionList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* add templates  */}\r\n              <Grid item md={12} sm={12} xs={12} className=\"font-medium\" style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleCancel}\r\n                  style={{ marginRight: \"20px\" }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddbuName}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n\r\n        {\r\n          (refreshData || isLoading) ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Loader show={refreshData} />\r\n            </div>\r\n          ) : <></>\r\n        }\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { exportToERPOptions, enableBOSTransferOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { BUService } from \"services/buService\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function EditBU() {\r\n  const {\r\n    refreshData,\r\n    templatesInfo,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n  const [plantData, setPlantData] = useState([]);\r\n  const location = useLocation();\r\n  // const selectBU = location.state?.selectedBUData;\r\n  const [selectBU, setSelectBU] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [buForm, setBuFrom] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const buService = new BUService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const plantService = new PlantService();\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const handleAddbuName = () => {\r\n    if (\r\n      buForm.buName?.trim() === \"\" ||\r\n      !buForm.buName ||\r\n      selectedplants.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newbuName = {\r\n      id: buForm.id,\r\n      buName: buForm.buName,\r\n      exportToERPdisabled: buForm.exportToERPdisabled,\r\n      contextDEF: buForm.contextDEF,\r\n      EMRDivisionORGValue: buForm.EMRDivisionORGValue,\r\n      productHierarchy: buForm.productHierarchy,\r\n      exportToERPbyPassed: buForm.exportToERPbyPassed,\r\n      enableBOSTransfer: buForm.enableBOSTransfer,\r\n      plants: selectedplants?.map((option) => {\r\n        return {\r\n          id: option?.id,\r\n          plantName: option?.plantName\r\n        }\r\n      }) || [],\r\n      doNotSendToERP: DoNotSendToERP?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      oracleExisting: OracleExisting?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      makeWithoutBOMList: MakeWithoutBOMList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      notOwningDivisionList: NotOwningDivisionList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n    };\r\n    setIsLoading(true);\r\n    buService.updateBU(newbuName).then((resp) => {\r\n      setIsLoading(false);\r\n      if (resp.status === 'success') {\r\n        setIsLoading(false);\r\n        tempMapService.getAlltemplateMappings().then((result) => {\r\n          updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n          setIsLoading(true);\r\n        });\r\n        setTimeout(() => {\r\n          navigate(\"/buList\", { state: { message: resp.msg, status: resp.status } });\r\n        }, 200);\r\n      } else if (resp.status === 'error') {\r\n        handlesnackBarClick(resp.msg, resp.status);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlebuFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...buForm,\r\n      [name]: value,\r\n    };\r\n    console.log(updatedForm, \"===================updatedForm\");\r\n    setBuFrom(updatedForm);\r\n  };\r\n\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n  const [DoNotSendToERP, setDoNotSendToERP] = useState([]);\r\n  const [OracleExisting, setOracleExisting] = useState([]);\r\n  const [MakeWithoutBOMList, setMakeWithoutBOMList] = useState([]);\r\n  const [NotOwningDivisionList, setNotOwningDivisionList] = useState([]);\r\n  const handlePlantsChange = (selectedObj) => {\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => plantData.some((existing) => existing.plantName === item.plantName)\r\n    ) || [];\r\n    setSelectedPlants(newselectedObj);\r\n  };\r\n  const handleTemplateChange = (name, selectedObj) => {\r\n    console.log(\"New Value:\", selectedObj);\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => templatesInfo.some((existing) => existing.templateName === item.templateName)\r\n    ) || [];\r\n    if (name === 'DoNotSendToERP') {\r\n      setDoNotSendToERP(newselectedObj)\r\n    }\r\n    else if (name === 'OracleExisting') {\r\n      setOracleExisting(newselectedObj);\r\n    }\r\n    else if (name === 'MakeWithoutBOMList') {\r\n      setMakeWithoutBOMList(newselectedObj)\r\n    }\r\n    else if (name === 'NotOwningDivisionList') {\r\n      setNotOwningDivisionList(newselectedObj)\r\n    }\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  const getTemplValues = (fieldValue) => {\r\n    const newselectedObj = templatesInfo?.filter(\r\n      (item) => fieldValue.some((templateName) => templateName === item.templateName)\r\n    ) || [];\r\n    return newselectedObj;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (selectBU?.plants) {\r\n      const newselectedObj = plantData?.filter(\r\n        (item) => selectBU?.plants.some((eitem) => eitem?.plantName === item?.plantName)\r\n      ) || [];\r\n      setSelectedPlants(newselectedObj)\r\n    }\r\n    if (selectBU?.doNotSendToERP) {\r\n      const newselectedObj = getTemplValues(selectBU?.doNotSendToERP);\r\n      setDoNotSendToERP(newselectedObj)\r\n    }\r\n    if (selectBU?.oracleExisting) {\r\n      const newselectedObj = getTemplValues(selectBU?.oracleExisting);\r\n      setOracleExisting(newselectedObj)\r\n    }\r\n    if (selectBU?.makeWithoutBOMList) {\r\n      const newselectedObj = getTemplValues(selectBU.makeWithoutBOMList);\r\n      setMakeWithoutBOMList(newselectedObj)\r\n    }\r\n    if (selectBU?.notOwningDivisionList) {\r\n      const newselectedObj = getTemplValues(selectBU.notOwningDivisionList);\r\n      setNotOwningDivisionList(newselectedObj)\r\n    }\r\n  }, [selectBU, plantData, templatesInfo]);\r\n\r\n  useEffect(() => {\r\n    if (params?.buId) {\r\n      setIsLoading(true);\r\n      buService.getBusinessUnitbyid([{ id: params?.buId }]).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp?.data?.length && (resp?.data?.[0] && Object?.keys(resp?.data?.[0])?.length)) {\r\n          setSelectBU(resp?.data[0]);\r\n          const selectBUValue = resp?.data[0];\r\n          setBuFrom({\r\n            id: selectBUValue.id,\r\n            buName: selectBUValue.buName,\r\n            exportToERPdisabled: selectBUValue.exportToERPdisabled,\r\n            exportToERPbyPassed: selectBUValue.exportToERPbyPassed,\r\n            enableBOSTransfer: selectBUValue.enableBOSTransfer,\r\n            contextDEF: selectBUValue.contextDEF,\r\n            EMRDivisionORGValue: selectBUValue.EMRDivisionORGValue,\r\n            productHierarchy: selectBUValue.productHierarchy,\r\n          });\r\n        } else {\r\n          navigate(\"/buList\", { state: { message: \"Design Organization not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/buList\", { state: { message: \"Design Organization not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n  sortDataByKey(plantData, 'plantName');\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Design Organization\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Edit Design Organization</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Design Organization <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"buName\"\r\n                  disabled\r\n                  value={buForm.buName}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Export to ERP Disabled </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  id=\"exportToERPdisabled\"\r\n                  name=\"exportToERPdisabled\"\r\n                  fullWidth\r\n                  value={buForm?.exportToERPdisabled ? buForm?.exportToERPdisabled : \"N\"}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Export To ERP ByPassed\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  id=\"exportToERPbyPassed\"\r\n                  name=\"exportToERPbyPassed\"\r\n                  fullWidth\r\n                  value={buForm?.exportToERPbyPassed ? buForm?.exportToERPbyPassed : \"N\"}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Enable BOS Transfer </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"enableBOSTransfer\"\r\n                  id=\"enableBOSTransfer\"\r\n                  name=\"enableBOSTransfer\"\r\n                  fullWidth\r\n                  value={buForm?.enableBOSTransfer ? buForm?.enableBOSTransfer : 'Y'}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {enableBOSTransferOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Context DFF\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"contextDEF\"\r\n                  value={buForm.contextDEF}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  EMR Division ARG\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"EMRDivisionORGValue\"\r\n                  value={buForm.EMRDivisionORGValue}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Product Hierarchy\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"productHierarchy\"\r\n                  value={buForm.productHierarchy}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Plant Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={selectedplants}\r\n                  getOptionLabel={(option) => option.plantName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handlePlantsChange(newValue)\r\n                  }}\r\n                  options={plantData}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.plantName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <InfoIcon style={{ marginTop: '5px' }} color=\"secondary\" fontSize=\"small\" /><span style={{ marginBottom: '20px' }}> Changing Plants will affect the Template Mappings.</span>\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Do Not Send To ERP\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={DoNotSendToERP}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"DoNotSendToERP\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Oracle Existing\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={OracleExisting}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"OracleExisting\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Make Without BOM List\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={MakeWithoutBOMList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"MakeWithoutBOMList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Not Owning Division List\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={NotOwningDivisionList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"NotOwningDivisionList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={12} sm={12} xs={12} className=\"font-medium\" style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleCancel}\r\n                  style={{ marginRight: \"20px\" }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddbuName}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n\r\n        {\r\n          (refreshData || isLoading) ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Loader show={true} />\r\n            </div>\r\n          ) : <></>\r\n        }\r\n      </form>\r\n    </Container >\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport BUList from \"./buList\";\r\nimport CreateBU from \"./createBU\";\r\nimport EditBU from \"./editBU\";\r\n\r\nconst buListRoutes = [\r\n  {\r\n    path: \"/buList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <BUList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/createBU\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateBU />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/editBU/:buId\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditBU />\r\n      </PrivateRoute>\r\n    )\r\n  }\r\n];\r\nexport default buListRoutes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from \"shortid\";\r\nimport { MCOService } from \"services/mcoService\";\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Box,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { UserService } from \"services/usersService\";\r\n// import download from 'downloadjs';\r\n// import CustomSelect from \"./CustomSelect\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled(\"input\")({\r\n  clip: \"rect(0 0 0 0)\",\r\n  clipPath: \"inset(50%)\",\r\n  height: 1,\r\n  overflow: \"hidden\",\r\n  position: \"absolute\",\r\n  bottom: 0,\r\n  left: 0,\r\n  whiteSpace: \"nowrap\",\r\n  width: 1,\r\n});\r\n\r\nconst BulkImportUsers = ({\r\n  userImportDialog,\r\n  setUserImportDialog,\r\n  setUserData,\r\n}) => {\r\n  const mcoService = new MCOService();\r\n  // const { importBulkUpdateFile, setImportBulkUpdateFile, savePartAndOracleTempInRedux } = props;\r\n  const userService = new UserService();\r\n  const [noFileError, setNoFileError] = useState(false);\r\n  const [importResponse, setImportResponse] = useState(false);\r\n  const [importfileBar, setimportfileBar] = useState(false);\r\n  const [importedFileData, setImportedFileData] = useState(null);\r\n  const [importedFileName, setImportedFileName] = useState(null);\r\n  const instance = localStorage.getItem(\"instance\");\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const importFileData = (e) => {\r\n    console.log(\"file selected\");\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const fileType = file.name.split('.').pop();\r\n      if (fileType === 'xlsx' || fileType === 'xls') {\r\n        // if (\r\n        //   e.target.files[0].name.split(\".\").pop() == \"xlsx\" ||\r\n        //   e.target.files[0].name.split(\".\").pop() === \"xls\"\r\n        // ) {\r\n        setImportedFileData(e.target.files[0]);\r\n        setImportedFileName(e.target.files[0].name);\r\n        setNoFileError(false);\r\n      } else {\r\n        setNoFileError(true);\r\n        setImportedFileName(null);\r\n        setImportedFileData(null);\r\n      }\r\n    } else {\r\n      setNoFileError(true);\r\n      setImportedFileName(null);\r\n      setImportedFileData(null);\r\n    }\r\n  };\r\n\r\n  // const handleCloseImport = () => {\r\n  //     setImportedFileData(null)\r\n  //     setImportBulkUpdateFile(false);\r\n  // };\r\n  const handleImportFile1 = () => {\r\n    let hasError = false;\r\n    if (importedFileData === null || importedFileData.length < 1) {\r\n      setNoFileError(true);\r\n      hasError = true;\r\n    }\r\n    if (hasError) {\r\n      return;\r\n    }\r\n\r\n    if (importedFileData !== null) {\r\n      //alert('file is upl7oaded')\r\n      let postData = {\r\n        file: importedFileData,\r\n        data: {\r\n          Instance: instance,\r\n        },\r\n      };\r\n\r\n      // console.log(importSelectionValues, 'importSelectionValues');\r\n      console.log(postData, \"postData\");\r\n      userService.importUser(postData).then((response) => {\r\n        console.log(response, \"response 11111\");\r\n        if (response.status === \"success\") {\r\n          console.log(\r\n            response,\r\n            \"response 22222 file uploaded successfully and user added\"\r\n          );\r\n        }\r\n        setImportResponse(response);\r\n        setimportfileBar(true);\r\n        setImportedFileData(null);\r\n        setImportedFileName(null);\r\n        //   setImportBulkUpdateFile(false)\r\n        handleCloseImportDialog();\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n      });\r\n      userService.getAllUsersList().then((result) => {\r\n        setUserData(result.data);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleImportFile = async () => {\r\n    if (!importedFileData || importedFileData.length < 1) {\r\n      setNoFileError(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const postData = {\r\n        file: importedFileData,\r\n        data: {\r\n          Instance: instance,\r\n        },\r\n      };\r\n\r\n      console.log(postData, \"postData\");\r\n\r\n      const response = await userService.importUser(postData);\r\n      console.log(response, \"response 11111\");\r\n\r\n      // Determine the status from the response\r\n      const status = response.status || \"error\";\r\n\r\n      // Common tasks for both success and failure cases\r\n      setImportResponse(response);\r\n      setimportfileBar(true);\r\n      setImportedFileData(null);\r\n      setImportedFileName(null);\r\n      handleCloseImportDialog();\r\n\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: status,\r\n        desc: status === \"success\" ? response?.msg : response.errors.join(\", \"),\r\n      });\r\n\r\n      if (status === \"success\") {\r\n        console.log(\r\n          response,\r\n          \"response 22222 file uploaded successfully and user added\"\r\n        );\r\n        const result = await userService.getAllUsersList();\r\n        setUserData(result.data);\r\n      } else {\r\n        console.log(status, \"response status\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error importing file:\", error);\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: \"error\",\r\n        desc: \"An error occurred while importing the file.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    let filelocation = \"sample-bulkUserUpload.xlsx\";\r\n    mcoService.downloadSampleFile(filelocation);\r\n  };\r\n  const handleCloseImportDialog = () => {\r\n    setUserImportDialog(false);\r\n    setImportedFileData(null);\r\n    setImportedFileName(null);\r\n  };\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={userImportDialog}\r\n        onClose={handleCloseImportDialog}\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: \"#fff\",\r\n            boxShadow: \"none\",\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Bulk Upload Required Users\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <StyledTable>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell align=\"left\">Upload File (Excel File)</TableCell>\r\n                    <TableCell align=\"left\">\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        <Button\r\n                          component=\"label\"\r\n                          variant=\"contained\"\r\n                          startIcon={<CloudUploadIcon />}\r\n                        >\r\n                          Upload file\r\n                          <VisuallyHiddenInput\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            accept=\".xls, .xlsx\"\r\n                            onChange={importFileData}\r\n                          />\r\n                        </Button>\r\n                        {noFileError && (\r\n                          <p>Please Select xlsx file to Upload </p>\r\n                        )}\r\n                      </div>\r\n                      {importedFileName && <p>{importedFileName}</p>}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell colSpan={2}>\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        <a\r\n                          // href={sampleFileUrl}\r\n                          onClick={handleDownload}\r\n                          download=\"Example-XLSX-document\"\r\n                          rel=\"noreferrer\"\r\n                          // target=\"_blank\"\r\n                          //style={{ color: \"blue\" }}\r\n                          style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                        >\r\n                          Click Here\r\n                        </a>{\" \"}\r\n                        to download the sample Excel template for bulk user\r\n                        upload.\r\n                        {/* <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={() => { download(sampleFileUrl) }}>\r\n                                                Download sample file\r\n                                            </Button> */}\r\n                        {/* </a> */}\r\n                      </div>\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        <b>Note:</b> Upload file must contain six columns with\r\n                        header labels in following order.\r\n                      </div>\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        1. User Name\r\n                        <br />\r\n                        3. Name\r\n                        <br />\r\n                        4. Email\r\n                        <br />\r\n                        5. Is Authorized\r\n                        <br />\r\n                        6. User Group\r\n                        <br />\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </StyledTable>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleImportFile}>Upload</Button>\r\n          <Button onClick={handleCloseImportDialog}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {openDesc ? (\r\n        <CustomAlertBox\r\n          openAlert={openAlert}\r\n          openDesc={openDesc}\r\n          setOpenAlert={setOpenAlert}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BulkImportUsers;\r\n","import { SimpleCard } from \"app/components\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport { Grid, Box } from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { getUserInfo } from \"@okta/okta-auth-js\";\r\nimport { UserService } from 'services/usersService';\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst BulkExportUsers = ({\r\n  userExportDialog,\r\n  setUserExportDialog,\r\n  userData,\r\n  selectedRows,\r\n}) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [dataToExport, setDataToExport] = useState(userData || []);\r\n  const [value, setValue] = useState(\"allData\");\r\n  const userService = new UserService();\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n\r\n  const handleCloseExportUser = () => {\r\n    setUserExportDialog(false);\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n\r\n  /* export template data start */\r\n  const exportTemplateHandle = () => {\r\n    console.log(userData, \"userData in bulk export inside export template.\");\r\n\r\n    let data = (value !== \"allData\" ? selectedRows : userData) || [];\r\n    let exportData = data?.map((item) => {\r\n      let res = {\r\n        // userId: item.userId,\r\n        \"Name\": item.name,\r\n        \"User Name\": item.userName,\r\n        Email: item.email,\r\n        \"Is Authorized\": item.is_authorized,\r\n        \"User Group\": item.userinfo.join(\", \"), // Convert array to comma-separated string\r\n      };\r\n      return res;\r\n    });\r\n\r\n    console.log(data, 'data')\r\n    userService\r\n      .exportUser({ data: exportData, sheet_name: \"Users\" })\r\n      .then((response) => {\r\n        setExportResponse(response);\r\n        //console.log(response, ';resprespresp')\r\n        handleExportfileBarClick(\"User exported successfully!\", \"success\");\r\n\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n      });\r\n    handleCloseExportUser();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const newValue = event.target.value;\r\n    setValue(newValue);\r\n\r\n    if (newValue === \"allData\") {\r\n      setDataToExport(userData);\r\n    } else {\r\n      setDataToExport(selectedRows);\r\n    }\r\n  };\r\n\r\n\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Dialog open={userExportDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Users\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">\r\n                        Select Data to Export\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"allData\"\r\n                          control={<Radio />}\r\n                          label=\"All Data\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"selectedData\"\r\n                          disabled={selectedRows.length === 0}\r\n                          control={<Radio />}\r\n                          label=\"Selected Data\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseExportUser}>Cancel</Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {openDesc ? (\r\n        <CustomAlertBox\r\n          openAlert={openAlert}\r\n          openDesc={openDesc}\r\n          setOpenAlert={setOpenAlert}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BulkExportUsers;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport BulkImportUsers from \"./bulkImportUsersDialog\";\r\nimport { Box, styled, Grid, TextField } from \"@mui/material\";\r\n\r\nimport { UserService } from \"services/usersService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport BulkExportUsers from \"./bulkExportUsersDialog\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst UserList = () => {\r\n  const location = useLocation();\r\n  let toastState = location.state;\r\n  const [userData, setUserData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const userService = new UserService();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [userImportDialog, setUserImportDialog] = useState(false);\r\n  const [userExportDialog, setUserExportDialog] = useState(false);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap =\r\n    gridRef && gridRef.current && gridRef.current.dataMap\r\n      ? gridRef.current.dataMap\r\n      : null;\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"name\",\r\n      header: \"Name\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.name}</div>,\r\n    },\r\n    {\r\n      name: \"userName\",\r\n      header: \"User Name\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.userName}</div>,\r\n    },\r\n    {\r\n      name: \"email\",\r\n      header: \"Email\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.email}</div>,\r\n    },\r\n    {\r\n      name: \"is_authorized\",\r\n      header: \"Is Authorized\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => (\r\n        <div>{data?.is_authorized === \"Y\" ? \"Yes\" : \"No\"}</div>\r\n      ),\r\n    },\r\n    {\r\n      name: \"userinfo\",\r\n      header: \"User Group\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => (\r\n        <div>\r\n          {data?.userinfo ? data.userinfo.map((item) => item).join(\", \") : \"\"}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteUserDilaog(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditUser(selectedRows[0]);\r\n  };\r\n\r\n  // ===========Import Export Functions==========//\r\n  const handleImportDialog = () => {\r\n    setUserImportDialog(true);\r\n  };\r\n  const handleExportDialog = () => {\r\n    setUserExportDialog(true);\r\n  };\r\n  const handleCloseImportDialog = () => {\r\n    console.log(\"close dialog\");\r\n    setUserImportDialog(false);\r\n  };\r\n  const handleCloseExportDialog = () => {\r\n    setUserExportDialog(false);\r\n  };\r\n  // ===========Import Export Functions==========//\r\n\r\n  // ==============table===========\r\n\r\n  useEffect(() => {\r\n    console.log(userData, \"userData inside useEffect\");\r\n    if (userData.length === 0) {\r\n      setIsLoading(true);\r\n      userService.getAllUsersList().then((result) => {\r\n        setUserData(result.data);\r\n        setInitialData(result.data); // Set initial data\r\n        setIsLoading(false);\r\n      });\r\n    } else {\r\n      setUserData(userData);\r\n    }\r\n  }, []);\r\n  const [filteredBUData, setFilteredBUData] = useState([]);\r\n\r\n// Ensure filteredBUData is an array\r\nconst validFilteredBUData = Array.isArray(filteredBUData) ? filteredBUData : [];\r\nlet sortedUsersData = sortDataByKey([...validFilteredBUData], \"name\");\r\n\r\n  useEffect(() => {\r\n    setFilteredBUData(userData);\r\n    setInitialData(sortedUsersData);\r\n  }, [userData]);\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => { };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleCreateUser = () => {\r\n    setTimeout(() => {\r\n      navigate(\"/addEditUser\", {\r\n        state: { isEdit: false },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleEditUser = (editSelectedUser) => {\r\n    const selectedUserData = editSelectedUser;\r\n    setTimeout(() => {\r\n      navigate(\"/addEditUser\", {\r\n        state: { isEdit: true, selectedUserData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteUserDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteUser = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      setIsLoading(true);\r\n      console.log(selectedRows, \"selectedRows\");\r\n      const selRowsId = selectedRows?.map((item) => item?.id);\r\n      await userService.deleteUser(selRowsId).then((response) => {\r\n        console.log(response, \"delete response\");\r\n        setIsLoading(false);\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete User:\", error);\r\n    }\r\n    userService.getAllUsersList().then((result) => {\r\n      setUserData(result.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails =\r\n      selRowsData && Object.keys(selRowsData).map((key) => selRowsData[key]);\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      const new_FilteredData = userData.filter((subscriber) => {\r\n        return (\r\n          searchValue === \"\" ||\r\n          subscriber.name.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          subscriber.email.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          subscriber.userName.toLowerCase().includes(searchValue.toLowerCase())\r\n        );\r\n      });\r\n      setFilteredBUData(new_FilteredData);\r\n    }\r\n  }, [searchValue, userData]);\r\n  useEffect(() => {\r\n    if (toastState?.status) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: toastState?.status,\r\n        desc: toastState?.message,\r\n      });\r\n      userService.getAllUsersList().then((result) => {\r\n        setUserData(result.data);\r\n        setInitialData(result.data); // Set initial data\r\n      });\r\n    }\r\n    toastState = {};\r\n\r\n    // Clear the state value on page refresh\r\n    window.onbeforeunload = () => {\r\n      window.history.replaceState({}, document.title);\r\n    };\r\n  }, [toastState]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedUserData = sortedExportDataHOC(UserList);\r\n    const sortedData = SortedUserData({ data: userData, sortedUsersData, sortInfo, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setUserData(sortedData.props.data);\r\n    setFilteredBUData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Users\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateUser}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleImportDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Import\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleExportDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Export\r\n            </Button>\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br></br>\r\n            {isLoading ? (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"100vh\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              filteredBUData && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={{ minHeight: 550 }}\r\n                  defaultLimit={100}\r\n                  columns={columns}\r\n                    dataSource={sortInfo === null ? filteredBUData : sortedUsersData}\r\n                  // rowHeight={null}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={(ref) => (gridRef.current = ref ? ref.current : null)}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  onSortInfoChange={handleSortInfoChange}\r\n                  />\r\n              )\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {openDesc ? (\r\n        <CustomAlertBox\r\n          openAlert={openAlert}\r\n          openDesc={openDesc}\r\n          setOpenAlert={setOpenAlert}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Design Organization\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Do you want to delete the seleted User(s)?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteUser}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <BulkExportUsers\r\n        userExportDialog={userExportDialog}\r\n        handleCloseExportDialog={handleCloseExportDialog}\r\n        setUserImportDialog={setUserImportDialog}\r\n        setUserExportDialog={setUserExportDialog}\r\n        selectedRows={selectedRows}\r\n        userData={sortInfo && Object.keys(sortInfo).length === 0 ? sortedUsersData : userData} />\r\n        <BulkImportUsers\r\n        userImportDialog={userImportDialog}\r\n        setUserImportDialog={setUserImportDialog}\r\n        setUserData={setUserData}\r\n\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { is_authorizedOptions } from \"../adminConfig/common\";\r\nimport { userGroupOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { UserService } from \"services/usersService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = {\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n};\r\n\r\nexport default function AddEditUser() {\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const location = useLocation();\r\n  const isEdit = location.state?.isEdit;\r\n  const selectedUser = location.state?.selectedUserData !== undefined ? location.state?.selectedUserData : {};\r\n  const [userForm, setUserFrom] = useState({\r\n    id: selectedUser.userId !== undefined ? selectedUser.userId : Date.now().toString(),\r\n    userName: selectedUser.userName,\r\n    name: selectedUser.name,\r\n    email: selectedUser.email,\r\n    is_authorized: selectedUser.is_authorized !== undefined ? selectedUser.is_authorized : 'Y',\r\n    userinfo: selectedUser.userinfo !== undefined ? selectedUser.userinfo : []\r\n  });\r\n  const classes = useStyles;\r\n  let navigate = useNavigate();\r\n  const userService = new UserService();\r\n\r\n  const handleAddbuName = () => {\r\n    if (\r\n      userForm.userName?.trim() === \"\" ||\r\n      !userForm.userName ||\r\n      userForm.name?.trim() === \"\" ||\r\n      !userForm.name ||\r\n      userForm.email?.trim() === \"\" ||\r\n      !userForm.email ||\r\n      userGroup.length === 0 ||\r\n      userForm.is_authorized?.trim() === \"\" ||\r\n      !userForm.is_authorized\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newbuName = {\r\n      id: userForm.id,\r\n      userName: userForm.userName,\r\n      name: userForm.name,\r\n      email: userForm.email,\r\n      is_authorized: userForm.is_authorized,\r\n      userinfo: userGroup,\r\n    };\r\n    if (isEdit) {\r\n      userService.updateUser({ userData: newbuName }).then((resp) => {\r\n        if (resp.status === 'success') {\r\n          setTimeout(() => {\r\n            navigate(\"/userList\", { state: { message: resp.msg, status: resp.status } });\r\n          }, 200);\r\n        } else if (resp.status === 'error') {\r\n          handlesnackBarClick(resp.msg, resp.status);\r\n        }\r\n      })\r\n    } else {\r\n      userService.addnewUser({ userData: newbuName }).then((resp) => {\r\n        if (resp.status === 'success') {\r\n          setTimeout(() => {\r\n            navigate(\"/userList\", { state: { message: resp.msg, status: resp.status } });\r\n          }, 200);\r\n        } else if (resp.status === 'error') {\r\n          handlesnackBarClick(resp.msg, resp.status);\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleUserFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...userForm,\r\n      [name]: value,\r\n    };\r\n    setUserFrom(updatedForm);\r\n  };\r\n  const [userGroup, setUserGroup] = useState(selectedUser.userinfo || []);\r\n  const handleuserGroupChange = (event) => {\r\n    const selectedValues = event.target.value;\r\n    const userGroupInfo = userGroupOptions.filter((option) =>\r\n      selectedValues.includes(option)\r\n    );\r\n    setUserGroup(userGroupInfo);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: isEdit ? \"Edit User\" : \"Create User\" }]} />\r\n      </Box>\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>{isEdit ? \"Edit User\" : \"Create User\"}</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"name\"\r\n                  value={userForm.name}\r\n                  onChange={handleUserFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  User Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"userName\"\r\n                  // disabled={isEdit}\r\n                  value={userForm.userName}\r\n                  onChange={handleUserFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Email <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  disabled={isEdit}\r\n                  value={userForm.email}\r\n                  onChange={handleUserFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Is Authorized</span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  id=\"is_authorized\"\r\n                  name=\"is_authorized\"\r\n                  fullWidth\r\n                  value={userForm.is_authorized ? userForm.is_authorized : ''}\r\n                  onChange={handleUserFormChange}\r\n                >\r\n                  {is_authorizedOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  User Group <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  multiple\r\n                  value={userGroup.map((item) => item)}\r\n                  onChange={handleuserGroupChange}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                  MenuProps={{\r\n                    sx: {\r\n                      \"&& .Mui-selected\": {\r\n                        backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  {userGroupOptions?.map((option) => (\r\n                    <MenuItem key={option} value={option}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleAddbuName}\r\n                  >\r\n                    {isEdit ? \"Update\" : \"Create\"}\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n      </form>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport USERList from \"./usersList\";\r\nimport AddEditUser from \"./addEditUsers\";\r\n\r\nconst userListRoutes = [\r\n  {\r\n    path: \"/userList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <USERList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/addEditUser\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <AddEditUser />\r\n      </PrivateRoute>\r\n    )\r\n  }\r\n];\r\n\r\nexport default userListRoutes;\r\n","const Constant ={\r\n    \"adminConstant\":{\r\n        \"common\":{\r\n            \"deleteNote\":\"Data will not be romeved from the master data. It will be added to your draft changes only.\",\r\n        },\r\n        \"buplantList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"Plant\": \"PLANT\",\r\n                \"BomStatus\": \"BOM STATUS\",\r\n                \"PoORG\": \"PO ORG\",\r\n                \"RduOuSetORG\": \"RDU OU SET ORG\",\r\n            }\r\n        },\r\n        \"expensemapList\":{\r\n            \"tooltip\":{\r\n                \"EXPENSE_TEMPLATE\": \"Template\",\r\n                \"RDO\": \"Design Organization\",\r\n                \"PlantName\":\"Plant Name\"\r\n            }\r\n        },\r\n        \"mvoallowedchangesList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"mvoTemplatesFrom\": \"MVO Template - From\",\r\n                \"mvoTemplatesTo\": \"MVO Template - To\",\r\n            }\r\n        },\r\n        \"mvoTemplateList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"TemplateOptionMVO\": \"Template MVO\",\r\n                \"HasMBom\":\"Has MBom\",\r\n                \"OnMBom\":\"ON MBom\",\r\n                \"Optional\":\"Optional\",\r\n                \"PoExist\":\"PO Exist\",\r\n                \"EBomAllowed\":\"EBOM Allowed\",\r\n                \"AllowableOrgTemplate\": \"Org Allowed Templates - Status\",\r\n            }\r\n        },\r\n        \"orgAllowedList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"AllowableOrgTemplate\": \"Template Name\",\r\n                \"HasMBom\":\"Has MBOM\",\r\n                \"EBOM\":\"EBOM Allowed\",\r\n                \"Optional\":\"Optional\",\r\n                \"PoCheck\":\"PO Org Check\",\r\n                \"OnMbom\":\"ON MBOM\",\r\n                \"status\":\"status\"\r\n            }\r\n        },\r\n        \"parttypetemplateList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"TemplateOptionsMVO\": \"Enovia Part Type\",\r\n                \"allowableOrgTemplatesExclusive\":\"Org Allowed Templates - Exclusive use\"\r\n            }\r\n        },\r\n        \"setComptempList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"TemplateForOrgExist\": \"Template for Org(s) Existing\",\r\n                \"TemplateForOrgModify\":\"Template for Org Modifying\"\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Constant","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { notOwningDivisionOptions } from \"../../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst OrgAllowedDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  selectedPlants,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddOrgAllowedValues,\r\n  isEdit,\r\n  selectedBU\r\n}) => {\r\n\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnitLists,\r\n  } = useOracleSettings();\r\n  const filteredPlants = () => {\r\n    return bussinessUnitLists?.find((plant) => plant.buName === selectedBU)?.plants || []\r\n  };\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      console.log(tempData, 'tempData tempData tempData')\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo]);\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Org Allowed Templates \" : \"Add OrgAllowed Templates\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Design Organization <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"DataType-select\"\r\n              name=\"BUID\"\r\n              fullWidth\r\n              value={selectedBU}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled\r\n            >\r\n              {filteredBUOptions?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Template Name <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              name=\"ALLOWABLE_ORG_TEMPLATES\"\r\n              fullWidth\r\n              value={orgAllowedForm.ALLOWABLE_ORG_TEMPLATES}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled={isEdit}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Has MBOM <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"Has_MBOM\"\r\n              name=\"Has_MBOM\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.Has_MBOM !== undefined ? orgAllowedForm.Has_MBOM : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              On MBOM <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"On_MBOM\"\r\n              name=\"On_MBOM\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.On_MBOM !== undefined ? orgAllowedForm.On_MBOM : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              EBOM Allowed <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"EBOM_Allowed\"\r\n              name=\"EBOM_Allowed\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.EBOM_Allowed !== undefined ? orgAllowedForm.EBOM_Allowed : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Optional <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"Optional\"\r\n              name=\"Optional\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.Optional !== undefined ? orgAllowedForm.Optional : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              PO Org Check: <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"PO_Org_Exist_Check\"\r\n              name=\"PO_Org_Exist_Check\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.PO_Org_Exist_Check !== undefined ? orgAllowedForm.PO_Org_Exist_Check : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Plants <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              multiple\r\n              name=\"plants\"\r\n              value={selectedPlants}\r\n              onChange={handleorgAllowedFormChange}\r\n              renderValue={(selected) => selected?.join(\", \")}\r\n              MenuProps={{\r\n                sx: {\r\n                  \"&& .Mui-selected\": {\r\n                    backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {filteredPlants()?.map((option) => (\r\n                <MenuItem key={option.plantName} value={option.plantName}>\r\n                  {option.plantName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddOrgAllowedValues}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default OrgAllowedDialog;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class HistoryManagementService {\r\n\r\n  // draftChanges services\r\n  getAlldraftChanges = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/draftChanges/getDraftChanges`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTemplateMapping = (tempMappingId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/draftChanges/deletedraftChanges/${tempMappingId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting deletedraftChanges:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/draftChanges/adddraftChanges`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        //console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"adddraftChanges\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/draftChanges/updatedraftChanges`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updatedraftChanges\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  applyDraftChanges = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/draftChanges/acceptChanges`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"applyDraftChanges\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  discardDraftChanges = (dataId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/draftChanges/deletedraftChanges/${dataId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting discardDraftChanges:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  // mappingHistory services\r\n  getAllmappingHistory = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/mappingHistory/getMappingHistory`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class MVOtempcompService {\r\n  getAlltempcompMappings = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/newtemplateMappings/getTemplateMappings`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTempCompMapping = (tempMappingId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/newtemplateMappings/deleteTemplateMappings/${tempMappingId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting deleteTemplateMappings:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewTempCompMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/addTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTempCompMapping = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/newtemplateMappings/updateTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  softDeleteTempCompMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/softDeleteTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"softDeleteTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from 'shortid';\r\n\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\r\n\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Autocomplete,\r\n} from \"@mui/material\";\r\n\r\n\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport Loader from 'app/components/Loader';\r\n\r\nimport download from 'downloadjs';\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\n\r\nconst ImportMappingsDialog = (props) => {\r\n    const {\r\n        allTemplatesInfo,\r\n        // updateTemplateLists,\r\n        updateRefreshData,\r\n        bussinessUnitLists\r\n    } = useOracleSettings();\r\n\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { importTemplate, setImportTemplate, fetchData } = props;\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n\r\n    const [sampleFileUrl, setSampleFileUrl] = useState(null);\r\n\r\n    const [ERPTypeError, setERPTypeError] = useState(false);\r\n    const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        ERPType: [],\r\n        instance: [],\r\n        BU: [],\r\n    });\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n\r\n    const importFileData = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0])\r\n                setImportedFileName(e.target.files[0].name)\r\n                setNoFileError(false)\r\n            } else {\r\n                setNoFileError(true)\r\n                setImportedFileName(null)\r\n                setImportedFileData(null);\r\n            }\r\n        } else {\r\n            setNoFileError(true)\r\n            setImportedFileName(null)\r\n            setImportedFileData(null);\r\n        }\r\n    }\r\n\r\n    const handleCloseImportTemplate = () => {\r\n        setImportedFileData(null)\r\n        setImportTemplate(false);\r\n    };\r\n\r\n    const handleImportTemplate = () => {\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            return;\r\n        }\r\n\r\n        if (importedFileData === null || importedFileData.length < 1) {\r\n            setNoFileError(true);\r\n            return;\r\n        }\r\n        if (importedFileData !== null) {\r\n            let postData = {\r\n                'file': importedFileData,\r\n                data: {\r\n                    BU: importSelectionValues.BU,\r\n                    MappingType: props?.MappingType,\r\n                }\r\n            };\r\n\r\n            // console.log(importSelectionValues, 'importSelectionValues');\r\n            // console.log(postData, 'postData');\r\n            // return;\r\n            setIsLoading(true);\r\n            templateMappingService.importTemplate(postData).then((response) => {\r\n                // console.log(response, 'response 11111');\r\n                setImportResponse(response)\r\n                setimportfileBar(true);\r\n                setImportedFileData(null)\r\n                setImportedFileName(null)\r\n                setImportTemplate(false);\r\n                let desc = {};\r\n                let severity='';\r\n                if (response && response.status === 'error') {\r\n                    desc = (\r\n                        <div style={{ color: 'red' }}>\r\n                            {response?.msg} <br />\r\n                            {response?.errorInTemplateCount && (\r\n                                <>\r\n                                    Total Template Count: {response.errorInTemplateCount} <br />\r\n                                    Templates are: <br />\r\n                                    <ul>\r\n                                        {response.errorInTemplate.map((eitem) => (\r\n                                            <li key={shortId.generate()}>{eitem}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </>\r\n                            )}\r\n\r\n                            {response?.errorInPlantCount && (\r\n                                <>\r\n                                    Total Plant Count: {response.errorInPlantCount} <br />\r\n                                    Plants are: <br />\r\n                                    <ul>\r\n                                        {response.errorInPlants.map((eitem) => (\r\n                                            <li key={shortId.generate()}>{eitem}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    );\r\n                    severity = 'error';\r\n                } else {\r\n                    if (response.errorCount > 0 || (!response.newTemplateAdded && !response.updateTemplates)) {\r\n                        desc = (\r\n                            <div style={{ color: 'red' }}>\r\n                                Failure <br />\r\n                                New Template Added: {response.newTemplateAdded} <br />\r\n                                Template Updated: {response.updateTemplates} <br />\r\n                                {response.errorCount > 0 && <>Error in Template: {response.errorCount} <br /></>}\r\n                            </div>\r\n                        );\r\n                        severity = 'error';\r\n                    } else {\r\n                        desc = (\r\n                            <div>\r\n                                {response.msg} <br />\r\n                                New Template Added: {response.newTemplateAdded} <br />\r\n                                Template Updated: {response.updateTemplates} <br />\r\n                            </div>\r\n                        );\r\n                        severity = 'success';\r\n                    }\r\n                }\r\n\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: severity,\r\n                    desc: desc,\r\n                });\r\n                setIsLoading(false);\r\n                if (severity === 'error') return; // Stop further execution if there is an error\r\n                if (!response?.errorInTemplateCount || !response?.errorInPlantCount) {\r\n                    updateRefreshData(true);\r\n                    fetchData();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const handleImportfileBarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setimportfileBar(false);\r\n    };\r\n\r\n    const handleImportTemplateSelection = (column, selectedValues) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [column]: selectedValues,\r\n            };\r\n        })\r\n        if (column === 'ERPType') { setERPTypeError(false) }\r\n        if (column === 'instance') { setinstanceError(false) }\r\n        if (column === 'BU') { setBUError(false) }\r\n        console.info(importSelectionValues, 'importSelectionValues')\r\n    }\r\n\r\n    const getUniqueValues = (column) => {\r\n        const values = new Set();\r\n\r\n        // console.log(allTemplatesInfo, 'allTemplatesInfo 11111');\r\n\r\n        // allTemplatesInfo?.forEach((subscriber) => {\r\n        //     if (column === \"plants\") {\r\n        //         subscriber[column]?.forEach((plant) => {\r\n        //             values.add(plant.plantName);\r\n        //         });\r\n        //     } else if (column === \"BU\") {\r\n        //         subscriber[column]?.forEach((BU) => {\r\n        //             values.add(BU);\r\n        //         });\r\n        //     } else {\r\n        //         values.add(subscriber[column]);\r\n        //     }\r\n        // });\r\n        bussinessUnitLists?.forEach(item => {\r\n            values.add(item[column]);\r\n        })\r\n        return Array.from(values);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let getsampleFileUrl = null;\r\n        switch (props?.MappingType) {\r\n            case \"orgallowedvalues\":\r\n                getsampleFileUrl = \"sample-orgAllowedTemplate.xlsx\";\r\n                break;\r\n            case \"mvoTemplateCompatibility\":\r\n                getsampleFileUrl = \"sample-mvotemplatecompatibility.xlsx\";\r\n                break;\r\n            case \"parttypetotemplate\":\r\n                getsampleFileUrl = \"sample-partTypeToTemplate.xlsx\";\r\n                break;\r\n            case \"mvoallowedchanges\":\r\n                getsampleFileUrl = \"sample-mvoallowedchanges.xlsx\";\r\n                break;\r\n            case \"setcompatibletemplates\":\r\n                getsampleFileUrl = \"sample-setcompatibletemplates.xlsx\";\r\n                break;\r\n            case \"buplantmapping\":\r\n                getsampleFileUrl = \"sample-RDOPlantMapping.xlsx\";\r\n                break;\r\n            case \"expensemapping\":\r\n                getsampleFileUrl = \"sample-expensemapping.xlsx\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setSampleFileUrl(getsampleFileUrl);\r\n    }, [props.MappingType]);\r\n\r\n    // useEffect(() => {\r\n    //     templateMappingService.getAlltemplateMappings().then((result) => {\r\n    //         updateTemplateLists(result?.data?.templateMappingList);\r\n    //     });\r\n    // }, [])\r\n    const handleDownload = () => {\r\n        templateMappingService.downloadSampleFile(sampleFileUrl)\r\n    };\r\n    return (\r\n        <>\r\n            <Dialog open={importTemplate}\r\n                style={{\r\n                    zIndex: 999, // Set your desired z-index value\r\n                }}>\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    {props.title}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                Design Organization\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={getUniqueValues(\"buName\")}\r\n                                                // options={getBuList}\r\n                                                value={importSelectionValues.BU}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"BU\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select RDO\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.BU.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                            Upload file\r\n                                            <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                        </Button>\r\n                                        {noFileError && (<p>Please Select xlsx file to Upload </p>)}\r\n                                    </div>\r\n                                    {importedFileName && (<p>{importedFileName}</p>)}\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        {/* <a\r\n                                            href={sampleFileUrl}\r\n                                            download=\"Example-XLSX-document\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noreferrer\"\r\n                                        > */}\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={handleDownload}>\r\n                                            Download sample file\r\n                                        </Button>\r\n                                        {/* </a> */}\r\n                                    </div>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleCloseImportTemplate}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleImportTemplate}>Import</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* <Snackbar\r\n                open={importfileBar}\r\n                autoHideDuration={6000}\r\n                onClose={handleImportfileBarClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleImportfileBarClose}\r\n                    severity={(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"success\" : \"error\"}\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    <AlertTitle>{(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"Success\" : \"Error\"}</AlertTitle>\r\n                    {\r\n                        (importResponse && (importResponse?.errorInTemplate?.length || importResponse?.errorInPlants?.length)) ? (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse?.msg} <br />\r\n                                    {\r\n                                        (importResponse?.errorInTemplateCount) ? (<>\r\n                                            Total Template Count: {importResponse?.errorInTemplateCount} <br />\r\n                                            Templates are: <br />\r\n                                            <ul>\r\n                                                {\r\n                                                    importResponse?.errorInTemplate?.map((eitem) => {\r\n                                                        return (\r\n                                                            <li key={shortId.generate()}>\r\n                                                                {eitem}\r\n                                                            </li>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </ul>\r\n                                        </>) : (<></>)\r\n                                    }\r\n\r\n                                    {\r\n                                        (importResponse?.errorInPlantCount) ? (\r\n                                            <>\r\n                                                Total Plant Count: {importResponse?.errorInPlantCount} <br />\r\n                                                Plants are: <br />\r\n                                                <ul>\r\n                                                    {\r\n                                                        importResponse?.errorInPlants?.map((eitem) => {\r\n                                                            return (\r\n                                                                <li key={shortId.generate()}>\r\n                                                                    {eitem}\r\n                                                                </li>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </ul>\r\n                                            </>\r\n                                        ) : (<></>)\r\n                                    }\r\n\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse.msg} <br />\r\n                                    New Template Added: {importResponse.newTemplateAdded} <br />\r\n                                    Template Updated: {importResponse.updateTemplates} <br />\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </Alert>\r\n            </Snackbar > */}\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} sx={{ '& .MuiAlertTitle-root': { backgroundColor: 'red' } }} />\r\n            ) : (<></>)}\r\n\r\n            {\r\n                isLoading ? (\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <Loader show={isLoading} />\r\n                    </div>\r\n                ) : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImportMappingsDialog;","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst MVOtemplatecompContext = createContext({\r\n    mvotemplatecompInfo: [],\r\n    updateMVOtempcompLists: () => [],\r\n})\r\n\r\nexport const MVOtempcompProvider = ({ children }) => {\r\n    const [mvotemplatecompInfo, setMvotemplatecompInfo] = useState([]);\r\n\r\n    const updateMVOtempcompLists = (values) => {\r\n        setMvotemplatecompInfo(values);\r\n       // console.log(values, \"inside update  333\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(mvotemplatecompInfo, \"templatesContext\");\r\n    }, [mvotemplatecompInfo]);\r\n\r\n    return (\r\n        <MVOtemplatecompContext.Provider\r\n            value={{\r\n                mvotemplatecompInfo,\r\n                updateMVOtempcompLists,\r\n            }}\r\n        >\r\n            {children}\r\n        </MVOtemplatecompContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MVOtemplatecompContext;","import { useContext } from 'react';\r\nimport MVOtemplatecompContext from 'app/contexts/MvoTempCompContext';\r\n\r\nconst useMVOtempComp = () => useContext(MVOtemplatecompContext)\r\n\r\nexport default useMVOtempComp\r\n      ","import { createContext, useState, useEffect } from \"react\";\r\n\r\nconst PartTypeTemplateContext = createContext({\r\n  parttypetemplateinfo: [],\r\n  updateParttypeTemplate: () => [],\r\n});\r\n\r\nexport const ParttypetemplateProvider = ({ children }) => {\r\n  const [parttypetemplateinfo, setPartTypeTemplateinfo] = useState([]);\r\n\r\n  const updateParttypeTemplate = (values) => {\r\n    setPartTypeTemplateinfo(values);\r\n    //console.log(values, \"inside update context 2222\");\r\n  };\r\n\r\n  useEffect(() => {\r\n   // console.log(parttypetemplateinfo, \"templatesContext\");\r\n  }, [parttypetemplateinfo]);\r\n\r\n  return (\r\n    <PartTypeTemplateContext.Provider\r\n      value={{\r\n        parttypetemplateinfo,\r\n        updateParttypeTemplate,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartTypeTemplateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PartTypeTemplateContext;\r\n","import { useContext } from 'react';\r\nimport PartTypeTemplateContext from 'app/contexts/ParttypetemplateContext';\r\n\r\nconst usePartTypeTemplate = () => useContext(PartTypeTemplateContext)\r\n\r\nexport default usePartTypeTemplate\r\n      ","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst MVOallowedchangesContext = createContext({\r\n    mvoallowedchangesinfo: [],\r\n    updateMVOallowedchanges: () => [],\r\n})\r\n\r\nexport const MVOallowedchangesProvider = ({ children }) => {\r\n    const [mvoallowedchangesinfo, setmvoallowedchangesInfo] = useState([]);\r\n\r\n    const updateMVOallowedchanges = (values) => {\r\n        setmvoallowedchangesInfo(values);\r\n       // console.log(values, \"inside update context\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(mvoallowedchangesinfo, \"templatesContext\");\r\n    }, [mvoallowedchangesinfo]);\r\n\r\n    return (\r\n        <MVOallowedchangesContext.Provider\r\n            value={{\r\n                mvoallowedchangesinfo,\r\n                updateMVOallowedchanges,\r\n            }}\r\n        >\r\n            {children}\r\n        </MVOallowedchangesContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MVOallowedchangesContext;","import { useContext } from 'react';\r\n\r\nimport MVOallowedchangesContext from '../contexts/MVOallowedchangesContext'\r\n\r\nconst useMVoallowedchanges = () => useContext(MVOallowedchangesContext)\r\n\r\nexport default useMVoallowedchanges\r\n      ","import { createContext, useState, useEffect } from \"react\";\r\n\r\nconst SetTempCompContext = createContext({\r\n  comptempInfo: [],\r\n  updatecomptempList: () => [],\r\n});\r\n\r\nexport const SetTempCompProvider = ({ children }) => {\r\n  const [comptempInfo, setcomptempInfo] = useState([]);\r\n\r\n  const updatecomptempList = (values) => {\r\n    setcomptempInfo(values);\r\n   // console.log(values, \"inside update context\");\r\n  };\r\n\r\n  useEffect(() => {\r\n   // console.log(comptempInfo, \"templatesContext\");\r\n  }, [comptempInfo]);\r\n\r\n  return (\r\n    <SetTempCompContext.Provider\r\n      value={{\r\n        comptempInfo,\r\n        updatecomptempList,\r\n      }}\r\n    >\r\n      {children}\r\n    </SetTempCompContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SetTempCompContext;\r\n","import { useContext } from 'react';\r\n\r\nimport SetTempCompProvider from '../contexts/SetCompTempContext';\r\n\r\n\r\nconst useCompTemp = () => useContext(SetTempCompProvider)\r\n\r\nexport default useCompTemp\r\n      ","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst BUPlantContext = createContext({\r\n    buplantsInfo: [],\r\n    updatebuplantsInfo: () => [],\r\n})\r\n\r\nexport const BUPlantProvider = ({ children }) => {\r\n    const [buplantsInfo, setBuplantInfo] = useState([]);\r\n\r\n    const updatebuplantsInfo = (values) => {\r\n        setBuplantInfo(values);\r\n       // console.log(values, \"inside update context\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(buplantsInfo, \"templatesContext\");\r\n    }, [buplantsInfo]);\r\n\r\n    return (\r\n        <BUPlantContext.Provider\r\n            value={{\r\n                buplantsInfo,\r\n                updatebuplantsInfo,\r\n            }}\r\n        >\r\n            {children}\r\n        </BUPlantContext.Provider>\r\n    );\r\n};\r\n\r\nexport default BUPlantContext;","import { useContext } from 'react';\r\n\r\nimport BUPlantContext from 'app/contexts/BUPlantContext';\r\n\r\nconst useBUPlant = () => useContext(BUPlantContext)\r\n\r\nexport default useBUPlant\r\n      ","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst ExpenseMappingContext = createContext({\r\n    expensemapInfo: [],\r\n    updateExpenseMap: () => [],\r\n})\r\n\r\nexport const ExpenseMapProvider = ({ children }) => {\r\n    const [expensemapInfo, setExpensemapInfo] = useState([]);\r\n\r\n    const updateExpenseMap = (values) => {\r\n        setExpensemapInfo(values);\r\n       // console.log(values, \"inside update context\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(expensemapInfo, \"templatesContext\");\r\n    }, [expensemapInfo]);\r\n\r\n    return (\r\n        <ExpenseMappingContext.Provider\r\n            value={{\r\n                expensemapInfo,\r\n                updateExpenseMap,\r\n            }}\r\n        >\r\n            {children}\r\n        </ExpenseMappingContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ExpenseMappingContext;","import { useContext } from 'react';\r\n\r\nimport ExpenseMappingContext from 'app/contexts/ExpenseMapContext';\r\n\r\nconst useExpenseMap = () => useContext(ExpenseMappingContext)\r\n\r\nexport default useExpenseMap\r\n      ","import { SimpleCard } from \"app/components\"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport useMVOtempComp from \"app/hooks/useMVOtempComp\";\r\nimport usePartTypeTemplate from \"app/hooks/usePartTypeTemplate\";\r\nimport useMVoallowedchanges from \"app/hooks/useMVOallowedChanges\";\r\nimport useCompTemp from \"app/hooks/useCompTemp\";\r\nimport useBUPlant from \"app/hooks/useBUPlant\";\r\nimport useExpenseMap from \"app/hooks/useExpenseMap\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\nimport { sortAndReorderData } from \"app/utils/utils\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportMappingTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState([]);\r\n  const { templatesInfo, bussinessUnit, mappingTemplatesInfo } = useOracleSettings();\r\n  const { mvotemplatecompInfo } = useMVOtempComp();\r\n  const { parttypetemplateinfo } = usePartTypeTemplate();\r\n  const { mvoallowedchangesinfo } = useMVoallowedchanges();\r\n  const { comptempInfo } = useCompTemp();\r\n  const { buplantsInfo } = useBUPlant();\r\n  const { expensemapInfo } = useExpenseMap();\r\n  const [value, setValue] = useState('allData');\r\n  //const AllTempData = templatesInfo;\r\n  const filteredTempData = props.filterTemplateData;\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  let bu = localStorage.getItem('bussinessUnit');\r\n\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleExportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n  \r\n  function isObjectBlank(obj) { \r\n    return obj && Object.keys(obj).length === 0 && obj.constructor === Object; \r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (mappingTemplatesInfo) {\r\n      mappingTemplatesInfo.forEach(template => {\r\n        const details = template.details;\r\n        if (details) {\r\n          details.allowableOrgTemplates && details.allowableOrgTemplates.sort((a, b) => {\r\n            const key = a.ALLOWABLE_ORG_TEMPLATE ? 'ALLOWABLE_ORG_TEMPLATE' : 'org_allowed_template';\r\n            return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : 0;\r\n          });\r\n\r\n          details.MVO_TEMPLATES_TO && details.MVO_TEMPLATES_TO.sort((a, b) => {\r\n            return a.MVO_TEMPLATE_TO < b.MVO_TEMPLATE_TO ? -1 : a.MVO_TEMPLATE_TO > b.MVO_TEMPLATE_TO ? 1 : 0;\r\n          });\r\n\r\n          details.TEMPLATE_ORG_MODIFYING && details.TEMPLATE_ORG_MODIFYING.sort((a, b) => {\r\n            return a.TEMPLATE_ORG_MODIFYING < b.TEMPLATE_ORG_MODIFYING ? -1 : a.TEMPLATE_ORG_MODIFYING > b.TEMPLATE_ORG_MODIFYING ? 1 : 0;\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    let mappingType = props.MappingType;\r\n\r\n    if (mappingType === \"mvoallowedchanges\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'MVO_TEMPLATE_FROM';\r\n      props.sortInfo.columnName = 'MVO_TEMPLATE_FROM';\r\n    }\r\n    if (mappingType === \"mvoTemplateCompatibility\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'MVO_TEMPLATE_OPTION';\r\n      props.sortInfo.columnName = 'MVO_TEMPLATE_OPTION';\r\n    }\r\n    if (mappingType === \"parttypetotemplate\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'ENGG_ITEM_TYPE';\r\n      props.sortInfo.columnName = 'ENGG_ITEM_TYPE';\r\n    }\r\n    // if (mappingType === \"orgallowedvalues\" && isObjectBlank(props?.sortInfo)) {\r\n    //   props.sortInfo.dir = 1;\r\n    //   props.sortInfo.name = 'ALLOWABLE_ORG_TEMPLATES';\r\n    //   props.sortInfo.columnName = 'ALLOWABLE_ORG_TEMPLATES';\r\n    // }\r\n    if (mappingType === \"setcompatibletemplates\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'TEMPLATE_ORG_EXISTING';\r\n      props.sortInfo.columnName = 'TEMPLATE_ORG_EXISTING';\r\n    }\r\n    if (mappingType === \"expensemapping\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'EXPENSE_TEMPLATE';\r\n      props.sortInfo.columnName = 'EXPENSE_TEMPLATE';\r\n    }\r\n    let AllTempData = mappingType && mappingTemplatesInfo ? mappingTemplatesInfo.filter(\r\n      (item) => item.MappingType === mappingType) : [];\r\n    // switch (mappingType) {\r\n    //   case \"orgallowedvalues\":\r\n    //     AllTempData = templatesInfo\r\n    //   break;\r\n    //   case \"mvoTemplateCompatibility\":\r\n    //     AllTempData = mvotemplatecompInfo\r\n    //   break;\r\n    //   case \"parttypetotemplate\":\r\n    //     AllTempData = parttypetemplateinfo\r\n    //   break;\r\n    //   case \"mvoallowedchanges\":\r\n    //     AllTempData = mvoallowedchangesinfo\r\n    //   break;\r\n    //   case \"setcompatibletemplates\":\r\n    //     AllTempData = comptempInfo\r\n    //   break;\r\n    //   case \"buplantmapping\":\r\n    //     AllTempData = buplantsInfo\r\n    //   break;\r\n    //   case \"expensemapping\":\r\n    //     AllTempData = expensemapInfo\r\n    //   break;\r\n    //   default:  AllTempData = templatesInfo\r\n    //     break;\r\n    // } \r\n    if (value === 'allData' && props.sortInfo) {\r\n      AllTempData.sort((a, b) => {\r\n        const field = props.sortInfo.id || props.sortInfo.name || props.sortInfo.columnName;\r\n        const aValue = a[field]?.toLowerCase() || '';\r\n        const bValue = b[field]?.toLowerCase() || '';\r\n        if (aValue < bValue) {\r\n          return props.sortInfo.dir === 1 ? -1 : 1;\r\n        }\r\n        if (aValue > bValue) {\r\n          return props.sortInfo.dir === 1 ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    \r\n    }\r\n    let data = value === 'allData' ? AllTempData : props?.filterTemplateData;\r\n    data = data?.filter(item => item.BUID === bussinessUnit);\r\n\r\n    let exportData = data.map(item => {\r\n      if (mappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\") {\r\n        let res = {\r\n          \"Template Name\": item?.details?.ALLOWABLE_ORG_TEMPLATES,\r\n          \"Design Organization\": item.BUID,\r\n          \"Has MBOM\": item?.details?.Has_MBOM,\r\n          \"On MBOM\": item?.details?.On_MBOM,\r\n          \"EBOM Allowed\": item?.details?.EBOM_Allowed,\r\n          \"Optional\": item?.details?.Optional,\r\n          \"PO Org Check\": item?.details?.PO_Org_Exist_Check,\r\n          ...item?.details?.Plants\r\n        };\r\n        // // res = {...res, ...item?.details?.Plants}\r\n        //  console.log(res, 'newRes')\r\n        //  console.log(item?.details?.Plants, '...item?.details?.Plants')\r\n        //  //let sorted = {...res, ...item?.details?.Plants}\r\n        //  const addObjectResource = Object.assign(res, item?.details?.Plants);\r\n        //  console.log(addObjectResource, 'addObjectResource')\r\n        return res\r\n      } else if (mappingType === 'mvoTemplateCompatibility' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.allowableOrgTemplates?.map((item1, index) => {\r\n          let res = {\r\n            \"Template MVO\": index === 0 ? item.details.MVO_TEMPLATE_OPTION : null,\r\n            \"Org Allowed Templates\": item1.ALLOWABLE_ORG_TEMPLATE,\r\n            \"Status:\": item1.status,\r\n            \"Design Organization\": index===0?item.BUID:null,\r\n\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'parttypetotemplate' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.allowableOrgTemplates?.map((item1, index) => {\r\n          let res = {\r\n            \"Enovia Part Type\": index === 0 ? item.details.ENGG_ITEM_TYPE : null,\r\n            \"Org Allowed Templates\": item1.org_allowed_template,\r\n            \"Exclusive Use\": item1.exclusive_use,\r\n            \"Design Organization\": index===0?item.BUID:null,\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'mvoallowedchanges' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.MVO_TEMPLATES_TO?.map((item1, index) => {\r\n          let res = {\r\n            \"MVO Template - From\": index === 0 ? item.details.MVO_TEMPLATE_FROM : null,\r\n            \"MVO Template - To\": item1.MVO_TEMPLATE_TO,\r\n            \"Design Organization\": index===0?item.BUID:null,\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'setcompatibletemplates' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.TEMPLATE_ORG_MODIFYING?.map((item1, index) => {\r\n          let res = {\r\n            \"Template for Org(s) Existing\": index === 0 ? item.details.TEMPLATE_ORG_EXISTING : null,\r\n            \"Template for Org Modifying\": item1.TEMPLATE_ORG_MODIFYING,\r\n            \"Design Organization\": index===0?item.BUID:null\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'buplantmapping' && item.actionFlag !== \"Delete\") {\r\n        //console.log(item, 'inside export data')\r\n        let res = {\r\n          // \"Design Organization\": item.BUID,\r\n          // \"Plants\": item.details.PLANT,\r\n          // \"BOM/NOBOM\": item.details.BOM_STATUS,\r\n          // \"PO Org\": item.details.PO_ORG,\r\n          // \"RDO OU Org set\": item.details.RDU_OU_ORG_SET,\r\n          Entity: item.details.Entity,\r\n          ...Object.keys(item.details.PLANT).sort().reduce((acc, key) => {\r\n            acc[key] = item.details.PLANT[key];\r\n            return acc;\r\n          }, {})\r\n        };\r\n        return res\r\n      } else if (mappingType === 'expensemapping' && item.actionFlag !== \"Delete\") {\r\n        let res = {\r\n          \"Template\": item.details.EXPENSE_TEMPLATE,\r\n          \"Design Organization\": bussinessUnit,\r\n          ...item.details.EXPENSE_PLANTS\r\n        }\r\n        return res\r\n      }\r\n    })\r\n\r\nlet filterData = exportData.flat().filter(item => item !== null && item !== undefined);\r\n\r\nsetDataToExport(filterData);\r\n  }, [bussinessUnit,\r\n    templatesInfo,\r\n    mvotemplatecompInfo,\r\n    parttypetemplateinfo,\r\n    mvoallowedchangesinfo,\r\n    comptempInfo,\r\n    buplantsInfo,\r\n    expensemapInfo,\r\n    value,\r\n    mappingTemplatesInfo,\r\n    props.filterTemplateData,\r\n    props.sortInfo\r\n  ])\r\n\r\n  /* export template data start */\r\n  const exportTemplateHandle = () => {\r\n    //console.log(dataToExport, 'dataToExport dataToExport dataToExport')\r\n    if (dataToExport) {\r\n      let dataToPass = dataToExport;\r\n      if (props.title === \"RDO Plant Mapping\") {\r\n        dataToPass = sortAndReorderData(dataToExport);\r\n      }\r\n      if (props.title === \"Org Allowed Templates\") {\r\n        if (props.MappingType === \"orgallowedvalues\" && isObjectBlank(props?.sortInfo)) {\r\n          props.sortInfo.dir = 1;\r\n          props.sortInfo.name = 'ALLOWABLE_ORG_TEMPLATES';\r\n          props.sortInfo.columnName = 'ALLOWABLE_ORG_TEMPLATES';\r\n        }\r\n        if (props.sortInfo) {\r\n          dataToPass.sort((a, b) => {\r\n            let field = props.sortInfo.id || props.sortInfo.name || props.sortInfo.columnName;\r\n            // Check if the field is 'ALLOWABLE_ORG_TEMPLATES' and sort by 'Template Name'\r\n            if (field === 'ALLOWABLE_ORG_TEMPLATES') {\r\n              field = 'Template Name';\r\n            }\r\n            const aValue = a[field]?.toLowerCase() || '';\r\n            const bValue = b[field]?.toLowerCase() || '';\r\n            if (aValue < bValue) {\r\n              return props.sortInfo.dir === 1 ? -1 : 1;\r\n            }\r\n            if (aValue > bValue) {\r\n              return props.sortInfo.dir === 1 ? 1 : -1;\r\n            }\r\n            return 0;\r\n          });\r\n        }\r\n      }\r\n      tempService.exportTemplate({ 'data': dataToPass, 'sheet_name': props.title.substring(0, 26), 'bussiness_unit': bu }).then((response) => {\r\n        setExportResponse(response)\r\n        //console.log(response, ';resprespresp')\r\n        handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n      });\r\n    }\r\n    setExportTemplate(false)\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleExportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleExportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n          \r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportMappingTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport OrgAllowedDialog from \"./orgallowedDialog\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from \"../../../components/importMappingsDialog\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst OrgAllowedValuesList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [selectedPlants, setSelectedPlants] = useState([]);\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [orgallowedData, setorgallowedData] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const gridStyle = { minHeight: 550 };\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [selected, setSelected] = useState({});\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteTempMapping = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    handlesnackBarClick(\"Template Mapping deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  // ****************filters**********************\r\n\r\n  // *********org allowed values dialog methods**********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setSelectedPlants([]);\r\n    }\r\n\r\n    if (name === \"ALLOWABLE_ORG_TEMPLATES\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        'BUID': bussinessUnit,\r\n      });\r\n      setSelectedPlants([]);\r\n    }\r\n\r\n    // If the event comes from the multi-select dropdown\r\n    if (name === \"plants\") {\r\n      setSelectedPlants(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  }\r\n\r\n  const handleAddOrgAllowedValues = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) =>\r\n        template.templateName === orgAllowedForm.ALLOWABLE_ORG_TEMPLATES\r\n    );\r\n    const filteredPlants =\r\n      bussinessUnitLists?.find((plant) => plant.buName === orgAllowedForm.BUID)?.plants ||\r\n      [];\r\n\r\n    const resultPayload = {};\r\n\r\n    // Iterate over filteredPlants\r\n    filteredPlants.forEach((plant) => {\r\n      const plantName = plant.plantName;\r\n      resultPayload[plantName] = selectedPlants?.includes(plantName) ? \"Y\" : \"N\";\r\n    });\r\n    if (\r\n      !orgAllowedForm.ALLOWABLE_ORG_TEMPLATES ||\r\n      !orgAllowedForm.BUID ||\r\n      selectedPlants?.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        BUID: orgAllowedForm.BUID,\r\n        MappingType: \"orgallowedvalues\",\r\n        id: templateid[0].id + \"_\" + orgAllowedForm.BUID.trim(),\r\n        details: {\r\n          ALLOWABLE_ORG_TEMPLATES: orgAllowedForm.ALLOWABLE_ORG_TEMPLATES,\r\n          Has_MBOM: orgAllowedForm.Has_MBOM !== undefined ? orgAllowedForm.Has_MBOM : 'Y',\r\n          EBOM_Allowed: orgAllowedForm.EBOM_Allowed !== undefined ? orgAllowedForm.EBOM_Allowed : 'Y',\r\n          Optional: orgAllowedForm.Optional !== undefined ? orgAllowedForm.Optional : 'Y',\r\n          PO_Org_Exist_Check: orgAllowedForm.PO_Org_Exist_Check !== undefined ? orgAllowedForm.PO_Org_Exist_Check : 'Y',\r\n          On_MBOM: orgAllowedForm.On_MBOM !== undefined ? orgAllowedForm.On_MBOM : 'Y',\r\n          ALLOWABLE_ORG_TEMPLATES_ID: templateid[0].id,\r\n          Plants: resultPayload,\r\n        },\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              handlesnackBarClick(\"Org Allowed Values added successfully\", \"success\");\r\n            } else if (resp?.status === 'error') {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchDraftData();\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              handlesnackBarClick(\r\n                \"Org Allowed Values updated successfully\",\r\n                \"success\"\r\n              );\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setSelectedPlants([]);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedPlants([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditOrgAllowedValues = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n    for (const key in selectedRows[0]?.details?.Plants) {\r\n      if (selectedRows[0]?.details?.Plants[key] === \"Y\") {\r\n        selectedPlants.push(key);\r\n      }\r\n    }\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n\r\n  const prepareTableColumn = (orgallowedData) => {\r\n    let plantColumnsSet = new Set(); // Define it outside\r\n    if (orgallowedData && orgallowedData.length > 0) {\r\n      orgallowedData.forEach((dataItem) => {\r\n        const plants = dataItem.details?.Plants;\r\n        if (plants) {\r\n          const plantKeys = Object.keys(plants);\r\n          plantKeys.forEach((plant) => {\r\n            plantColumnsSet.add(plant);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const plantColumns = Array.from(plantColumnsSet).map((plant) => {\r\n      return {\r\n        name: plant,\r\n        header: plant,\r\n        defaultWidth: 100,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        ),\r\n      };\r\n    });\r\n    const columns = [\r\n      {\r\n        name: \"ALLOWABLE_ORG_TEMPLATES\",\r\n        defaultWidth: 250,\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.AllowableOrgTemplate}>Template Name</Tooltip>,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n\r\n      {\r\n        name: \"BUID\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.RDO}>Design Organization</Tooltip>,\r\n        defaultWidth: 150,\r\n      },\r\n      {\r\n        name: \"Has_MBOM\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.HasMBom}>Has MBOM</Tooltip>,\r\n        defaultWidth: 120,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"On_MBOM\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.OnMbom}>On MBOM</Tooltip>,\r\n        defaultWidth: 120,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"EBOM_Allowed\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.EBOM}>EBOM Allowed</Tooltip>,\r\n        defaultWidth: 100,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"Optional\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.Optional}>Optional</Tooltip>,\r\n        defaultWidth: 100,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"PO_Org_Exist_Check\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.PoCheck}>PO org Check</Tooltip>,\r\n        defaultWidth: 120,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      ...plantColumns,\r\n    ];\r\n\r\n    return columns;\r\n  }\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n\r\n  const sortedFilterOrgAllowedData = sortDataByKey(tableTempData, \"ALLOWABLE_ORG_TEMPLATES\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredOrgAllowedDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"orgallowedvalues\" });\r\n        if (filteredOrgAllowedDraftData.length > 0 && filteredOrgAllowedDraftData[0].MappingType === 'orgallowedvalues') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredOrgAllowedDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['TEMPLATE_MAPPING'] === obj2['id']) {\r\n                obj1.details.draftValue_ALLOWABLE_ORG_TEMPLATES = obj2.details.ALLOWABLE_ORG_TEMPLATES !== obj1.details.ALLOWABLE_ORG_TEMPLATES ? obj2.details.ALLOWABLE_ORG_TEMPLATES : null;\r\n                obj1.details.draftValue_Has_MBOM = obj2.details.Has_MBOM !== obj1.details.Has_MBOM ? obj2.details.Has_MBOM : null;\r\n                obj1.details.draftValue_On_MBOM = obj2.details.On_MBOM !== obj1.details.On_MBOM ? obj2.details.On_MBOM : null;\r\n                obj1.details.draftValue_EBOM_Allowed = obj2.details.EBOM_Allowed !== obj1.details.EBOM_Allowed ? obj2.details.EBOM_Allowed : null;\r\n                obj1.details.draftValue_Optional = obj2.details.Optional !== obj1.details.Optional ? obj2.details.Optional : null;\r\n                obj1.details.draftValue_PO_Org_Exist_Check = obj2.details.PO_Org_Exist_Check !== obj1.details.PO_Org_Exist_Check ? obj2.details.PO_Org_Exist_Check : null;\r\n                obj1.details.draft_Plants = {};\r\n                for (let key in obj1.details.Plants) {\r\n                  obj1.details.draft_Plants[key] = obj2.details.Plants[key] !== obj1.details.Plants[key] ? obj2.details.Plants[key] : null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setorgallowedData(finalTempMapList);\r\n        let data = finalTempMapList.map(item => {\r\n          item[\"ALLOWABLE_ORG_TEMPLATES\"] = item?.details?.draftValue_ALLOWABLE_ORG_TEMPLATES ? item?.details?.draftValue_ALLOWABLE_ORG_TEMPLATES : item?.details?.ALLOWABLE_ORG_TEMPLATES\r\n          item[\"Has_MBOM\"] = item?.details?.draftValue_Has_MBOM\r\n            ? `${item?.details?.draftValue_Has_MBOM} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.Has_MBOM}</span>`\r\n            : item?.details.Has_MBOM;\r\n          item[\"On_MBOM\"] = item?.details?.draftValue_On_MBOM ? `${item?.details?.draftValue_On_MBOM} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.On_MBOM}</span>`\r\n            : item?.details.On_MBOM;\r\n          item[\"EBOM_Allowed\"] = item?.details?.draftValue_EBOM_Allowed ? `${item?.details?.draftValue_EBOM_Allowed} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.EBOM_Allowed}</span>`\r\n            : item?.details.EBOM_Allowed;\r\n          item[\"Optional\"] = item?.details?.draftValue_Optional ? `${item?.details?.draftValue_Optional} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.Optional}</span>`\r\n            : item?.details.Optional;\r\n          item[\"PO_Org_Exist_Check\"] = item?.details?.draftValue_PO_Org_Exist_Check ? `${item?.details?.draftValue_PO_Org_Exist_Check} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.PO_Org_Exist_Check}</span>`\r\n            : item?.details.PO_Org_Exist_Check;\r\n\r\n          Object.keys(item?.details?.Plants).map(plant => {\r\n            item?.details?.draft_Plants ? item[plant] = item?.details?.draft_Plants[plant] ? `${item?.details?.draft_Plants[plant]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.Plants[plant]} <span>` : item?.details?.Plants[plant]\r\n              : item[plant] = item?.details?.Plants[plant]\r\n          }\r\n          )\r\n          return item\r\n        })\r\n        setUnSortTableTempData(finalTempMapList)\r\n        setTableTempData(data);\r\n        setIsLoading(false)\r\n      }, 500)\r\n    }\r\n    else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      if (result.data) {\r\n        let filterData = result.data.filter(element => element.BUID === BUID || element.BUID === 'Another Name');\r\n        setFilteredDraftTabledata(filterData);\r\n      } else {\r\n        setFilteredDraftTabledata([]);\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  // *********org allowed values dialog methods ends**********\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Org Allowed Templates\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    //setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item md={12} sm={12} xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditOrgAllowedValues}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                //onClick={handleDeleteOrgAllowedValues}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true);\r\n                }}\r\n                style={{ margin: \"0 10px 0 10px\" }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Org Allowed Templates\"}\r\n                MappingType={\"orgallowedvalues\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={prepareTableColumn(orgallowedData) || []}\r\n                  //dataSource={orgallowedData}\r\n                  dataSource={sortInfo === null ? unSortTableTempData : sortedFilterOrgAllowedData}\r\n                  rowHeight={null}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard >\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the OrgAllowedTemplates Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteTempMapping}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <OrgAllowedDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddOrgAllowedValues={handleAddOrgAllowedValues}\r\n        selectedPlants={selectedPlants}\r\n        isEdit={isEdit}\r\n        selectedBU={bussinessUnit}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import RDO Allowed Template Mappings\"}\r\n        MappingType={\"orgallowedvalues\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate}\r\n      />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default OrgAllowedValuesList;\r\n","import React from \"react\";\r\nimport OrgAllowedValuesList from \"./orgallowedList\";\r\nconst OrgAllowedValuesWrapper = () => {\r\n    return (\r\n        <OrgAllowedValuesList />\r\n    );\r\n};\r\nexport default OrgAllowedValuesWrapper;\r\n","import React from 'react';\r\nimport OrgAllowedValuesWrapper from \"./orgallowedWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst orgallowedroutes = [\r\n  {\r\n    path: \"/orgallowedList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <OrgAllowedValuesWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default orgallowedroutes;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport Constant from '../../../constant'\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { sortDataByKeyAllowableOrgTemplates } from \"app/utils/mcoUtils/commonUtils\";\r\nconst gridStyle = { minHeight: 248 }\r\nconst MVOtemplCompDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  orgAllowedTempList,\r\n  onSelectionChange,\r\n  selected,\r\n  filteredBUOptions,\r\n  setFilteredBUOptions,\r\n  formError,\r\n  RDO,\r\n  selectedRow,\r\n  handleStatusChange\r\n}) => {\r\n  const [tempData, setTempData] = useState([]);\r\n  const [selectedTemplateValues, setSelectedTemplateValues] = useState({});\r\n  sortDataByKeyAllowableOrgTemplates(tempData, \"ALLOWABLE_ORG_TEMPLATES\");\r\n\r\n  useEffect(() => {\r\n    if (orgAllowedForm?.BUID) {\r\n      let buoption = [orgAllowedForm?.BUID] || [];\r\n      setFilteredBUOptions([RDO])\r\n    } else {\r\n      setFilteredBUOptions([RDO])\r\n    }\r\n\r\n    if (orgAllowedTempList) {\r\n      const newTempList = orgAllowedTempList?.filter((fitem) => {\r\n        return fitem?.BUID === RDO;\r\n      })\r\n      if (selectedRow) {\r\n        newTempList.map(item => {\r\n          selectedRow?.details?.allowableOrgTemplates.map(item1 => {\r\n            if (item.details.ALLOWABLE_ORG_TEMPLATES === item1.ALLOWABLE_ORG_TEMPLATE) {\r\n              item.status = item1.status\r\n            }\r\n          })\r\n          return item;\r\n        })\r\n      }\r\n\r\n      let newdata = newTempList.map(item => {\r\n        const newitem = { ...item, ...item?.details }\r\n        return newitem\r\n      }) || [];\r\n\r\n      console.log(newdata, \"================table data\");\r\n\r\n      setTempData(newdata);\r\n    }\r\n  }, [orgAllowedTempList, orgAllowedForm]);\r\n\r\n  useEffect(() => {\r\n    console.log(formError, 'formError');\r\n  }, [])\r\n\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'number' },\r\n    {\r\n      name: \"ALLOWABLE_ORG_TEMPLATES\",\r\n      defaultWidth: 265,\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.AllowableOrgTemplate}>ALLOWABLE ORG TEMPLATES</Tooltip>,\r\n      render: ({ data }) => <div>{data?.details?.ALLOWABLE_ORG_TEMPLATES}</div>,\r\n    },\r\n    {\r\n      name: \"Has_MBOM\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.HasMBom}>Has MBOM</Tooltip>,\r\n      defaultWidth: 120,\r\n      render: ({ data }) => <div>{data?.details?.Has_MBOM}</div>,\r\n    },\r\n    {\r\n      name: \"EBOM_Allowed\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.EBOM}>EBOM</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.EBOM_Allowed}</div>,\r\n    },\r\n    {\r\n      name: \"Optional\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.Optional}>Optional</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.Optional}</div>,\r\n    },\r\n    {\r\n      name: \"PO_Org_Exist_Check\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.PoCheck}>PO Check</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.PO_Org_Exist_Check}</div>,\r\n    },\r\n    {\r\n      name: \"On_MBOM\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.OnMbom}>On MBOM</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.On_MBOM}</div>,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.status}>Status</Tooltip>,\r\n      defaultWidth: 200,\r\n      render: ({ data }) => {\r\n        return (\r\n          <div>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name={data?.details?.ALLOWABLE_ORG_TEMPLATES}\r\n                // defaultValue={data.status === undefined ? 'active' : data.status}\r\n                value={((selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES]) ? (selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES])?.trim() : \"active\")}\r\n                onChange={(e) => {\r\n                  const updatedStatus = {\r\n                    ...selectedTemplateValues,\r\n                    [e.target.name]: e.target.value,\r\n                  };\r\n                  setSelectedTemplateValues(updatedStatus);\r\n                  handleStatusChange(e);\r\n                }}\r\n              >\r\n                <FormControlLabel value=\"active\" control={<Radio />} label=\"Active\" />\r\n                <FormControlLabel value=\"disabled\" control={<Radio />} label=\"Disable\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>)\r\n      }\r\n    }\r\n  ];\r\n  const transformArray = (array) => {\r\n    let output = {};\r\n    array.forEach(item => {\r\n      output[item?.ALLOWABLE_ORG_TEMPLATE] = item?.status?.toLowerCase();\r\n    });\r\n    return output;\r\n  };\r\n  useEffect(() => {\r\n    if (selectedRow) {\r\n      const getSelTempVal = transformArray(selectedRow?.details?.allowableOrgTemplates);\r\n      setSelectedTemplateValues(getSelTempVal);\r\n    }\r\n  }, [selectedRow])\r\n  return (\r\n    <Dialog open={open}\r\n      fullWidth={true}\r\n      maxWidth='xl'\r\n    >\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit\r\n          ? \"Edit MVO Template Compatibility\"\r\n          : \"Add MVO Template Compatibility\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization:\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={RDO}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={true}\r\n              >\r\n                {filteredBUOptions?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {\r\n                (formError?.RDOError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.RDOError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Template MVO:\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                name=\"MVO_TEMPLATE_OPTION\"\r\n                fullWidth\r\n                value={orgAllowedForm.MVO_TEMPLATE_OPTION}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={isEdit}\r\n              >\r\n                {tempData?.map((option, index) => (\r\n                  <MenuItem key={index} value={option.details.ALLOWABLE_ORG_TEMPLATES}>\r\n                    {option.details.ALLOWABLE_ORG_TEMPLATES}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {\r\n                (formError?.templateError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.templateError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n              Org Allowed Templates:{\" \"}\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              {\r\n                (formError?.AllowableOrgTempError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.AllowableOrgTempError}</p>\r\n                </>) : (<></>)\r\n              }\r\n              <ReactDataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                selected={selected}\r\n                checkboxColumn={true}\r\n                onSelectionChange={onSelectionChange}\r\n                checkboxOnlyRowSelect={true}\r\n                style={{ ...gridStyle, height: '500px' }} // Add height here\r\n                columns={columns}\r\n                dataSource={tempData}\r\n                pagination\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MVOtemplCompDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport MVOtemplCompDialog from \"./mvoDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nimport { sortInsideRowData } from \"app/utils/utils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst MVOtemplateCompatibilityList = () => {\r\n  const {\r\n    refreshData,\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [mvotempcompData, setMVOtempCompData] = useState([]);\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [orgAllowedData, setorgAllowedData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selected, setSelected] = useState({});\r\n  const [formTemplateSelection, setFormTemplateSelection] = useState({});\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([]);\r\n  const [formError, setFormError] = useState({})\r\n  const [RDO, setRDO] = useState(\"\");\r\n  const [statusObject, setStatusObject] = useState({});\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"MVO_TEMPLATE_OPTION\",\r\n      header: <Tooltip title={Constant?.adminConstant?.mvoTemplateList?.tooltip?.TemplateOptionMVO}>Template MVO</Tooltip>,\r\n      defaultWidth: 250,\r\n      render: ({ data }) => <div>{data?.MVO_TEMPLATE_OPTION}</div>,\r\n    },\r\n    {\r\n      name: 'name',\r\n      header: <Tooltip title={Constant?.adminConstant?.mvoTemplateList?.tooltip?.AllowableOrgTemplate}>Org Allowed Templates - Status</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant?.adminConstant?.mvoTemplateList?.tooltip?.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n    },\r\n  ];\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...orgAllowedForm,\r\n      [name]: value,\r\n    };\r\n    setOrgAllowedForm(updatedForm);\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setRDO(value)\r\n      setFormError(prevState => {\r\n        const { RDOError, ...rest } = prevState;\r\n        return rest\r\n      });\r\n    }\r\n\r\n    if (name === \"MVO_TEMPLATE_OPTION\") {\r\n      setFormError(prevState => {\r\n        const { templateError, ...rest } = prevState;\r\n        return rest\r\n      });\r\n    }\r\n  };\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter((template) => template.templateName === orgAllowedForm.MVO_TEMPLATE_OPTION);\r\n    if (orgAllowedForm) {\r\n      if (RDO === undefined || RDO === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"RDOError\": \"Design Organization is required\",\r\n        }));\r\n      }\r\n      if (orgAllowedForm.MVO_TEMPLATE_OPTION === undefined || orgAllowedForm.MVO_TEMPLATE_OPTION === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"templateError\": \"Template Name is required\",\r\n        }));\r\n      }\r\n      let templatedata = [];\r\n      let new_formError = { ...formError };\r\n      delete new_formError[\"AllowableOrgTempError\"];\r\n\r\n      if (Object.keys(formTemplateSelection).length) {\r\n        templatedata = Object.values(formTemplateSelection).map((value) => value)\r\n        templatedata = templatedata.map(item => {\r\n          return {\r\n            ALLOWABLE_ORG_TEMPLATE: item.details.ALLOWABLE_ORG_TEMPLATES,\r\n            status: statusObject[item.details.ALLOWABLE_ORG_TEMPLATES] === undefined ? 'active' : statusObject[item.details.ALLOWABLE_ORG_TEMPLATES],\r\n            id: item.details.ALLOWABLE_ORG_TEMPLATES_ID,\r\n          }\r\n        })\r\n      } else {\r\n        new_formError[\"AllowableOrgTempError\"] = \"Please select at least one template\";\r\n      }\r\n\r\n      setFormError(new_formError);\r\n      if (Object.keys(new_formError).length) {\r\n        return;\r\n      } else {\r\n        const neworgallowedvalue = {\r\n          MappingType: \"mvoTemplateCompatibility\",\r\n          BUID: RDO,\r\n          details: {\r\n            MVO_TEMPLATE_OPTION: orgAllowedForm.MVO_TEMPLATE_OPTION,\r\n            MVO_TEMPLATE_OPTION_ID: templateid[0].id,\r\n            allowableOrgTemplates: templatedata,\r\n          },\r\n          id:\r\n            templateid[0].id +\r\n            \"_\" +\r\n            RDO.trim() +\r\n            \"_\" +\r\n            \"mvoTemplateCompatibility\",\r\n        };\r\n        if (isEdit === false) {\r\n          mvotempcompservice\r\n            .addnewTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp?.status === 'success') {\r\n                fetchData();\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                }, 200);\r\n                handlesnackBarClick(\"MVO template compatibility added successfully\", \"success\");\r\n              } else if (resp?.status === \"error\") {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        } else {\r\n          mvotempcompservice\r\n            .updateTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp.status === \"success\") {\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                  fetchDraftData();\r\n                  fetchData();\r\n                }, 200);\r\n                setIsEdit(false);\r\n                handlesnackBarClick(\"MVO template compatibility updated successfully\", \"success\");\r\n              } else if (resp?.status === \"error\") {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        }\r\n        handleorgAllowedDialogClose();\r\n      }\r\n    } else {\r\n      let orgtemperror = {}\r\n      if (Object.keys(formTemplateSelection).length === 0) {\r\n        orgtemperror = { \"AllowableOrgTempError\": \"Please select at least one template\" }\r\n      }\r\n      setFormError({\r\n        ...orgtemperror,\r\n        \"templateError\": \"Template Name is required\"\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm(\"\");\r\n    setOrgallowedaddDialog(true);\r\n    setRDO(bussinessUnit);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setFormTemplateSelection({});\r\n    setFormError({})\r\n    setIsEdit(false);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n    const thisVal = {\r\n      ...selectedDetails,\r\n      BUID,\r\n    }\r\n    setOrgAllowedForm(thisVal);\r\n    setRDO(BUID)\r\n    const selectedData = selectedRows[0]?.details?.allowableOrgTemplates.map((fitem) => {\r\n      const filterTableData = orgAllowedData?.filter(\r\n        (item) => (item.details.ALLOWABLE_ORG_TEMPLATES === fitem.ALLOWABLE_ORG_TEMPLATE &&\r\n          item.BUID === selectedRows[0].BUID)\r\n      );\r\n      return filterTableData;\r\n    }).flat();\r\n    let object = selectedData.reduce(\r\n      (obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n    setFormTemplateSelection(object);\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false);\r\n        handlesnackBarClick(result?.msg, result?.status);\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      // Filter the data based on MappingType\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"mvoTemplateCompatibility\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      setMVOtempCompData(finalTempMapList);\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"mvoTemplateCompatibility\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'mvoTemplateCompatibility') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_allowableOrgTemplates = obj2.details.allowableOrgTemplates;\r\n                const templateSet = new Set(obj2.details.allowableOrgTemplates.map(i => i.ALLOWABLE_ORG_TEMPLATE));\r\n                const missingFromArrObj1 = obj1.details.allowableOrgTemplates.filter(j => !templateSet.has(j.ALLOWABLE_ORG_TEMPLATE));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_allowableOrgTemplates.filter(item1 => \r\n                    !obj1.details.allowableOrgTemplates.some(item2 => \r\n                        item1.ALLOWABLE_ORG_TEMPLATE === item2.ALLOWABLE_ORG_TEMPLATE && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.allowableOrgTemplates,  ...obj1.details.newTemplateLists]\r\n                obj1.details.allowableOrgTemplates = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n      console.log('finalTempMapList', finalTempMapList);\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"MVO_TEMPLATE_OPTION\"] = item?.details?.MVO_TEMPLATE_OPTION\r\n        item['name'] = item?.details?.allowableOrgTemplates\r\n            .filter((plant, index, self) =>\r\n                index === self.findIndex(p => p.ALLOWABLE_ORG_TEMPLATE === plant.ALLOWABLE_ORG_TEMPLATE)\r\n            )\r\n            .map(plant => {\r\n                const deletedItems = item?.details?.deletedTemplateLists || [];\r\n    \r\n                const deletedText = deletedItems\r\n                    .map(draft_Plant => (\r\n                        plant.ALLOWABLE_ORG_TEMPLATE === draft_Plant.ALLOWABLE_ORG_TEMPLATE\r\n                            ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.ALLOWABLE_ORG_TEMPLATE}</span>`\r\n                            : ''\r\n                    ))\r\n                    .join(' '); // Join deleted items without any separator\r\n    \r\n                const statusText = plant.status ? plant.status.charAt(0).toUpperCase() + plant.status.slice(1) : '';\r\n    \r\n                return `<div>${plant.ALLOWABLE_ORG_TEMPLATE} - ${statusText} &nbsp;&nbsp; ${deletedText}</div>`;\r\n            })\r\n            .join(''); // Join all plant strings without a comma or any separator\r\n    \r\n        return item;\r\n    });\r\n      setUnSortTableTempData(finalTempMapList)\r\n      setTableTempData(data)\r\n      let buFilterData = mappingTemplatesInfo.filter((item) => {\r\n        return item.MappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\"\r\n      });\r\n\r\n      if (bussinessUnit) {\r\n        buFilterData = buFilterData?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        setorgAllowedData(buFilterData)\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n  const onFormSelectionChange = useCallback(({ selected }) => {\r\n    setFormTemplateSelection(selected);\r\n    setFormError(prevState => {\r\n      const { AllowableOrgTempError, ...rest } = prevState;\r\n      return rest\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  const handleStatusChange = (event) => {\r\n    const updatedStatus = {\r\n      ...statusObject,\r\n      [event.target.name]: event.target.value,\r\n    };\r\n    setStatusObject(updatedStatus);\r\n  }\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      height: \"auto !important\",\r\n      whiteSpace: \"normal\"\r\n    }\r\n  }\r\n\r\n  const [localStorageBusinessUnit, setLocalStorageBusinessUnit] = useState(bussinessUnit);\r\n  useEffect(() => {\r\n    setSelected({});\r\n    setSelectedRows([]);\r\n    updateBussinessUnit(bussinessUnit);\r\n    setRDO(bussinessUnit);\r\n    setSearchValue(\"\");\r\n    setSelectedRows([]);\r\n  }, [bussinessUnit]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n\r\n  const sortedByFirstColumnFilteredMVOTempData = sortDataByKey(tableTempData, 'MVO_TEMPLATE_OPTION');\r\n  const sortedFilteredMVOTempData = sortInsideRowData(sortedByFirstColumnFilteredMVOTempData);\r\n  const unSortRowSortTableTempData = sortInsideRowData(unSortTableTempData);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"MVO Template Compatibility\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  // onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setRDO(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                //onClick={handleDeleteMVOtempcomp}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"MVO Template Compatibility\"}\r\n                MappingType={\"mvoTemplateCompatibility\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog\r\n\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortRowSortTableTempData : sortedFilteredMVOTempData}\r\n                  rowHeight={\"auto\"}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  defaultLimit={100}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={() =>  gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the MVOTemplateCompatibility Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <MVOtemplCompDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        isEdit={isEdit}\r\n        onSelectionChange={onFormSelectionChange}\r\n        selected={formTemplateSelection}\r\n        orgAllowedTempList={orgAllowedData}\r\n        filteredBUOptions={filteredBUOptions}\r\n        setFilteredBUOptions={setFilteredBUOptions}\r\n        formError={formError}\r\n        RDO={RDO}\r\n        selectedRow={selectedRows[0]}\r\n        handleStatusChange={handleStatusChange}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import Template Compatibility Mappings\"}\r\n        MappingType={\"mvoTemplateCompatibility\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate}\r\n      />\r\n\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default MVOtemplateCompatibilityList;\r\n","import React from \"react\";\r\nimport MVOtemplateCompatibilityList from \"./mvotemplateList\";\r\nconst MVOtemplateCompatibilityWrapper = () => {\r\n    return (\r\n        <MVOtemplateCompatibilityList />\r\n    );\r\n};\r\n\r\nexport default MVOtemplateCompatibilityWrapper;\r\n","import React from 'react';\r\nimport MVOtemplateCompatibilityWrapper from \"./mvocompatibilityWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst mvocompatibilityRoutes = [\r\n  {\r\n    path: \"/mvotemplateList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <MVOtemplateCompatibilityWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default mvocompatibilityRoutes;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport Constant from '../../../constant'\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { sortDataByKeyAllowableOrgTemplates } from \"app/utils/mcoUtils/commonUtils\";\r\nconst gridStyle = { minHeight: 248 }\r\nconst PartTypeTemplateDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  orgAllowedTempList,\r\n  onSelectionChange,\r\n  selected,\r\n  filteredBUOptions,\r\n  setFilteredBUOptions,\r\n  formError,\r\n  RDO,\r\n  selectedRow,\r\n  handleStatusChange\r\n}) => {\r\n  const [tempData, setTempData] = useState([]);\r\n  const [selectedTemplateValues, setSelectedTemplateValues] = useState({});\r\n  sortDataByKeyAllowableOrgTemplates(tempData, \"ALLOWABLE_ORG_TEMPLATES\");\r\n  \r\n  useEffect(() => {\r\n    if (orgAllowedForm?.BUID) {\r\n      let buoption = [orgAllowedForm?.BUID] || [];\r\n      setFilteredBUOptions(buoption)\r\n    } else {\r\n      setFilteredBUOptions([RDO])\r\n    }\r\n\r\n    if (orgAllowedTempList) {\r\n      const newTempList = orgAllowedTempList?.filter((fitem) => {\r\n        return fitem?.BUID === RDO;\r\n      })\r\n      if (selectedRow) {\r\n        newTempList.map(item => {\r\n          selectedRow?.details?.allowableOrgTemplates.forEach(item1 => {\r\n            if (item.details.ALLOWABLE_ORG_TEMPLATES === item1.org_allowed_template) {\r\n              item.exclusive_use = item1.exclusive_use\r\n            }\r\n          })\r\n          return item;\r\n        })\r\n      }\r\n      setTempData(newTempList);\r\n    }\r\n  }, [orgAllowedTempList, orgAllowedForm]);\r\n\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'number' },\r\n    {\r\n      name: \"ALLOWABLE_ORG_TEMPLATES\",\r\n      defaultWidth: 280,\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.AllowableOrgTemplate}>ALLOWABLE ORG TEMPLATES</Tooltip>,\r\n      render: ({ data }) => <div>{data?.details?.ALLOWABLE_ORG_TEMPLATES}</div>,\r\n    },\r\n    {\r\n      name: \"Exclusive\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.status}>Exclusive Use</Tooltip>,\r\n      defaultWidth: 280,\r\n      render: ({ data }) => {\r\n        return (\r\n          <div>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name={data?.details?.ALLOWABLE_ORG_TEMPLATES}\r\n                // defaultValue={data.exclusive_use === undefined ? 'Yes' : data.exclusive_use}\r\n                value={((selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES]) ? selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES] : \"Yes\")}\r\n                onChange={(e) => {\r\n                  const updatedStatus = {\r\n                    ...selectedTemplateValues,\r\n                    [e.target.name]: e.target.value,\r\n                  };\r\n                  setSelectedTemplateValues(updatedStatus);\r\n                  handleStatusChange(e);\r\n                }}\r\n              >\r\n                <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  ];\r\n\r\n  const transformArray = (array) => {\r\n    let output = {};\r\n    array.forEach(item => {\r\n      output[item.org_allowed_template] = item.exclusive_use;\r\n    });\r\n    return output;\r\n  };\r\n  useEffect(() => {\r\n    if (selectedRow) {\r\n      const getSelTempVal = transformArray(selectedRow?.details?.allowableOrgTemplates);\r\n      setSelectedTemplateValues(getSelTempVal);\r\n    }\r\n  }, [selectedRow])\r\n  return (\r\n    <Dialog open={open}\r\n      fullWidth={true}\r\n      maxWidth='md'>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Part Type to Template \" : \"Add Part Type to Template\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization: {/* <span className={classes.spanRed}>*</span>:*/}\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={RDO}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={true}\r\n              >\r\n                {filteredBUOptions?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {\r\n                (formError?.RDOError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.RDOError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Enovia Part Type:\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <TextField\r\n                name=\"ENGG_ITEM_TYPE\"\r\n                value={orgAllowedForm.ENGG_ITEM_TYPE}\r\n                onChange={handleorgAllowedFormChange}\r\n                fullWidth\r\n                disabled={isEdit}\r\n                margin=\"normal\"\r\n              />\r\n              {\r\n                (formError?.templateError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.templateError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Org Allowed Templates:{\" \"}\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              {\r\n                (formError?.AllowableOrgTempError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.AllowableOrgTempError}</p>\r\n                </>) : (<></>)\r\n              }\r\n              {\r\n                (tempData?.length) ? (\r\n                  <ReactDataGrid\r\n                    idProperty=\"id\"\r\n                    showZebraRows={false}\r\n                    handle={ref => gridRef.current = ref ? ref.current : null}\r\n                    selected={selected}\r\n                    checkboxColumn={true}\r\n                    onSelectionChange={onSelectionChange}\r\n                    checkboxOnlyRowSelect={true}\r\n                    style={gridStyle}\r\n                    columns={columns}\r\n                    dataSource={tempData}\r\n                  />\r\n                ) : (null)\r\n              }\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PartTypeTemplateDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport PartTypeTemplateDialog from \"./parttypetemplateDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst PartTypeToTemplateList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const [orgAllowedData, setOrgAllowedData] = useState([]);\r\n  const [selectedPlants, setSelectedPlants] = useState([]);\r\n  const tempMapService = new TemplateMappingService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [selected, setSelected] = useState({});\r\n  const [formTemplateSelection, setFormTemplateSelection] = useState({});\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [formError, setFormError] = useState({})\r\n  const [RDO, setRDO] = useState(\"\");\r\n  const [statusObject, setStatusObject] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  //********Dialog code ********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    }\r\n    if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    }\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setSelectedPlants([]);\r\n    }\r\n\r\n    if (name === \"ENGG_ITEM_TYPE\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        BUID: \"\",\r\n      });\r\n      setFormError(prevState => {\r\n        const { templateError, ...rest } = prevState;\r\n        return rest\r\n      });\r\n      setSelectedPlants([]);\r\n    }\r\n    if (name === \"plants\") {\r\n      setSelectedPlants(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === newKey\r\n    );\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n    if (!newKey || !newValue) {\r\n      setKeyerror(\"Template and its status required\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      {\r\n        org_allowed_template: newKey,\r\n        exclusive_use: newValue,\r\n        id: templateid[0].id,\r\n      },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === orgAllowedForm.ENGG_ITEM_TYPE\r\n    )\r\n    if (orgAllowedForm) {\r\n      if (RDO === undefined || RDO === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"RDOError\": \"Design Organization is required\",\r\n        }));\r\n      }\r\n      if (orgAllowedForm.ENGG_ITEM_TYPE === undefined || orgAllowedForm.ENGG_ITEM_TYPE === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"templateError\": \"Template Name is required\",\r\n        }));\r\n      }\r\n      let templatedata = [];\r\n      let new_formError = { ...formError };\r\n      delete new_formError[\"AllowableOrgTempError\"];\r\n      if (Object.keys(formTemplateSelection).length) {\r\n        templatedata = Object.values(formTemplateSelection).map((value) => value)\r\n        templatedata = templatedata.map(item => {\r\n          return {\r\n            org_allowed_template: item.details.ALLOWABLE_ORG_TEMPLATES,\r\n            exclusive_use: statusObject[item.details.ALLOWABLE_ORG_TEMPLATES] === undefined ? 'Yes' : statusObject[item.details.ALLOWABLE_ORG_TEMPLATES],\r\n            id: item.details.ALLOWABLE_ORG_TEMPLATES_ID,\r\n          }\r\n        })\r\n      } else {\r\n        new_formError[\"AllowableOrgTempError\"] = \"Please select at least one template\";\r\n      }\r\n      setFormError(new_formError);\r\n      if (Object.keys(new_formError).length || Object.keys(formError).length) {\r\n        console.log(\"Resultant Payload:\", orgAllowedForm);\r\n        return;\r\n      } else {\r\n        const neworgallowedvalue = {\r\n          MappingType: \"parttypetotemplate\",\r\n          BUID: RDO,\r\n          details: {\r\n            ENGG_ITEM_TYPE: orgAllowedForm.ENGG_ITEM_TYPE,\r\n            ENOVIA_PART_TYPE_ID: templateid[0]?.id,\r\n            allowableOrgTemplates: templatedata,\r\n          },\r\n\r\n          id:\r\n            orgAllowedForm.ENGG_ITEM_TYPE +\r\n            \"_\" +\r\n            RDO.trim() +\r\n            \"_\" +\r\n            \"parttypetotemplate\",\r\n        };\r\n        if (isEdit === false) {\r\n          mvotempcompservice\r\n            .addnewTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp?.status === 'success') {\r\n                fetchData();\r\n                setSelected({})\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                }, 200);\r\n                handlesnackBarClick(\"Parttype to Template added successfully\", \"success\");\r\n              } else if (resp?.status === 'error') {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        } else {\r\n          mvotempcompservice\r\n            .updateTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp.status === \"success\") {\r\n                fetchDraftData();\r\n                fetchData();\r\n                setSelected({})\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                }, 200);\r\n                setIsEdit(false);\r\n                handlesnackBarClick(\r\n                  \"MVO template compatibility updated successfully\",\r\n                  \"success\"\r\n                );\r\n              } else if (resp?.status === \"error\") {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        }\r\n        handleorgAllowedDialogClose();\r\n      }\r\n    } else {\r\n      let orgtemperror = {}\r\n      if (Object.keys(formTemplateSelection).length === 0) {\r\n        orgtemperror = { \"AllowableOrgTempError\": \"Please select at least one template\" }\r\n      }\r\n      setFormError({\r\n        ...orgtemperror,\r\n        \"templateError\": \"Template Name is required\"\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedPlants([]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n    setValuesInputList([]);\r\n    setOrgallowedaddDialog(true);\r\n    setRDO(bussinessUnit);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedPlants([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setFormTemplateSelection({});\r\n    setFormError({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n  const handleEditPartTypeTotemplate = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n    setRDO(BUID)\r\n    const selectedData = selectedRows[0]?.details?.allowableOrgTemplates.map((fitem) => {\r\n      const filterTableData = orgAllowedData?.filter(\r\n        (item) => item.details.ALLOWABLE_ORG_TEMPLATES === fitem.org_allowed_template\r\n      );\r\n      return filterTableData;\r\n    }).flat();\r\n    let object = selectedData.reduce(\r\n      (obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n    setFormTemplateSelection(object);\r\n    setValuesInputList(selectedRows[0]?.details?.allowableOrgTemplates);\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleDeletePartTypeToTemplate = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n\r\n    handlesnackBarClick(\"Parttype to Template deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n  const sortedFilterTempData = sortDataByKey(tableTempData, \"ENGG_ITEM_TYPE\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"parttypetotemplate\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"parttypetotemplate\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'parttypetotemplate') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_allowableOrgTemplates = obj2.details.allowableOrgTemplates;\r\n                const templateSet = new Set(obj2.details.allowableOrgTemplates.map(i => i.org_allowed_template));\r\n                const missingFromArrObj1 = obj1.details.allowableOrgTemplates.filter(j => !templateSet.has(j.org_allowed_template));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_allowableOrgTemplates.filter(item1 => \r\n                    !obj1.details.allowableOrgTemplates.some(item2 => \r\n                        item1.org_allowed_template === item2.org_allowed_template && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.allowableOrgTemplates,  ...obj1.details.newTemplateLists]\r\n                obj1.details.allowableOrgTemplates = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"ENGG_ITEM_TYPE\"] = item?.details?.ENGG_ITEM_TYPE\r\n        item['org_allowed_template'] = item?.details?.allowableOrgTemplates\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.org_allowed_template === plant.org_allowed_template)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n\r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.org_allowed_template === draft_Plant.org_allowed_template\r\n                  ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.org_allowed_template}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); // Join deleted items without any separator\r\n\r\n            return `<div>${plant.org_allowed_template} - ${plant.exclusive_use.charAt(0).toUpperCase() + plant.exclusive_use.slice(1)} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); // Join all plant strings without a comma or any separator\r\n        return item\r\n      })\r\n      setTableTempData(data)\r\n      setUnSortTableTempData(finalTempMapList)\r\n      let buFilterData = mappingTemplatesInfo.filter((item) => {\r\n        return item.MappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\"\r\n      });\r\n      if (bussinessUnit) {\r\n        buFilterData = buFilterData?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        setOrgAllowedData(buFilterData)\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n  // *********org allowed values dialog methods ends**********\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n\r\n    {\r\n      name: \"ENGG_ITEM_TYPE\",\r\n      header: <Tooltip title={Constant.adminConstant.parttypetemplateList.tooltip.TemplateOptionsMVO}>Enovia Part Type</Tooltip>,\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>\r\n        {data?.ENGG_ITEM_TYPE}\r\n      </div>,\r\n    },\r\n    {\r\n      name: \"org_allowed_template\",\r\n      header: <Tooltip title={Constant.adminConstant.parttypetemplateList.tooltip.allowableOrgTemplatesExclusive}>Org Allowed Templates - Exclusive use</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      // render: ({ data }) =>\r\n      //   data?.details?.allowableOrgTemplates.map((template, index) => (\r\n      //     <div key={index}>\r\n      //       {template.org_allowed_template} - {template.exclusive_use}\r\n      //     </div>\r\n      //   )),\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.parttypetemplateList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n\r\n      defaultWidth: 50,\r\n    },\r\n  ];\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  const onFormSelectionChange = useCallback(({ selected }) => {\r\n    setFormTemplateSelection(selected);\r\n    setFormError(prevState => {\r\n      const { AllowableOrgTempError, ...rest } = prevState;\r\n      return rest\r\n    });\r\n  }, []);\r\n  const handleStatusChange = (event) => {\r\n    const updatedStatus = {\r\n      ...statusObject,\r\n      [event.target.name]: event.target.value,\r\n    };\r\n    setStatusObject(updatedStatus);\r\n  }\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      height: \"auto !important\",\r\n      whiteSpace: \"normal\"\r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Part Type to Template\" }]} />\r\n      </Box>\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditPartTypeTotemplate}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                //onClick={handleDeletePartTypeToTemplate}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Part Type To Template\"}\r\n                MappingType={\"parttypetotemplate\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  rowStyle={rowStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortTableTempData : sortedFilterTempData}\r\n                  rowHeight={\"auto\"}\r\n                  defaultLimit={100}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the PartTypeToTemplate Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeletePartTypeToTemplate}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <PartTypeTemplateDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        selectedPlants={selectedPlants}\r\n        isEdit={isEdit}\r\n        newKey={newKey}\r\n        newValue={newValue}\r\n        handleAddRow={handleAddRow}\r\n        handleDeleteRow={handleDeleteRow}\r\n        keyerror={keyerror}\r\n        valuesInputList={valuesInputList}\r\n        onSelectionChange={onFormSelectionChange}\r\n        selected={formTemplateSelection}\r\n        orgAllowedTempList={orgAllowedData}\r\n        filteredBUOptions={filteredBUOptions}\r\n        setFilteredBUOptions={setFilteredBUOptions}\r\n        formError={formError}\r\n        RDO={RDO}\r\n        selectedRow={selectedRows[0]}\r\n        handleStatusChange={handleStatusChange}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import Parttype To Template Mappings\"}\r\n        MappingType={\"parttypetotemplate\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default PartTypeToTemplateList;\r\n","import React from \"react\";\r\nimport PartTypeToTemplateList from \"./parttypeToTemplateList\";\r\nconst PartTypeToTemplateWrapper = () => {\r\n    return (\r\n        <PartTypeToTemplateList />\r\n    );\r\n};\r\nexport default PartTypeToTemplateWrapper;\r\n","import React from 'react';\r\nimport PartTypeToTemplateWrapper from \"./parttypetemplateWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst parttypetotemplateroutes = [\r\n  {\r\n    path: \"/parttypeToTemplateList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <PartTypeToTemplateWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\nexport default parttypetotemplateroutes;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button\r\n} from \"@mui/material\";\r\nconst MVOallowedchangesDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  mvotemplatesTo,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  templatesInfo,\r\n  selectedBU\r\n}) => {\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      console.log(tempData, 'tempData tempData tempData')\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo, orgAllowedForm.BUID]);\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit MVO Allowed Changes \" : \"Add MVO Allowed Changes\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n        <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Design Organization <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"DataType-select\"\r\n              name=\"BUID\"\r\n              fullWidth\r\n              value={selectedBU}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled\r\n            >\r\n              {filteredBUOptions?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              MVO Template - From <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              name=\"MVO_TEMPLATE_FROM\"\r\n              fullWidth\r\n              value={orgAllowedForm.MVO_TEMPLATE_FROM}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled={isEdit}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              MVO Template - To <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              multiple\r\n              name=\"MVO_TEMPLATE_TO\"\r\n              value={mvotemplatesTo}\r\n              onChange={handleorgAllowedFormChange}\r\n              renderValue={(selected) => selected?.join(\", \")}\r\n              MenuProps={{\r\n                sx: {\r\n                  \"&& .Mui-selected\": {\r\n                    backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MVOallowedchangesDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport MVOallowedchangesDialog from \"./mvoallowedchangesDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nimport { sortInsideRowData } from \"app/utils/utils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst MVOallowedchangesList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n\r\n  const [mvotemplatesTo, setMVOtemplatesTo] = useState([]);\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    })\r\n  };\r\n\r\n  //********Dialog code ********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    }\r\n    if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    }\r\n\r\n    if (name === \"BUID\") {\r\n      setMVOtemplatesTo([]);\r\n    }\r\n\r\n    if (name === \"MVO_TEMPLATE_FROM\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        BUID: \"\",\r\n      });\r\n      setMVOtemplatesTo([]);\r\n    }\r\n\r\n    // If the event comes from the multi-select dropdown\r\n    if (name === \"MVO_TEMPLATE_TO\") {\r\n      setMVOtemplatesTo(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === newKey\r\n    );\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n    if (!newKey || !newValue) {\r\n      setKeyerror(\"Template and its status required\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      {\r\n        ALLOWABLE_ORG_TEMPLATE: newKey,\r\n        status: newValue,\r\n        id: templateid[0]?.id,\r\n      },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === orgAllowedForm.MVO_TEMPLATE_FROM\r\n    );\r\n    let convertedMVO_TEMPLATES_TO = [];\r\n    // Iterate over filteredPlants\r\n    convertedMVO_TEMPLATES_TO = mvotemplatesTo?.map((item) => {\r\n      const template = templatesInfo.find((t) => t.templateName === item);\r\n      return {\r\n        id: template ? template.id : null,\r\n        MVO_TEMPLATE_TO: item,\r\n      };\r\n    });\r\n\r\n    if (\r\n      !orgAllowedForm.MVO_TEMPLATE_FROM ||\r\n      !orgAllowedForm.BUID ||\r\n      mvotemplatesTo?.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        MappingType: \"mvoallowedchanges\",\r\n        BUID: orgAllowedForm.BUID,\r\n        details: {\r\n          MVO_TEMPLATE_FROM: orgAllowedForm.MVO_TEMPLATE_FROM,\r\n          MVO_TEMPLATE_OPTION_ID: templateid[0]?.id,\r\n          MVO_TEMPLATES_TO: convertedMVO_TEMPLATES_TO,\r\n\r\n        },\r\n\r\n        id:\r\n          templateid[0]?.id +\r\n          \"_\" +\r\n          orgAllowedForm.BUID.trim() +\r\n          \"_\" +\r\n          \"mvoallowedchanges\",\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              handlesnackBarClick(\"MVO allowed changes added successfully\", \"success\");\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchDraftData();\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              handlesnackBarClick(\r\n                \"MVO allowed changes updated successfully\",\r\n                \"success\"\r\n              );\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, resp.status);\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setMVOtemplatesTo([]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n    setValuesInputList([]);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setMVOtemplatesTo([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n    for (const key in selectedRows[0]?.details?.MVO_TEMPLATES_TO) {\r\n      const template = selectedRows[0]?.details?.MVO_TEMPLATES_TO[key];\r\n      mvotemplatesTo.push(template?.MVO_TEMPLATE_TO);\r\n    }\r\n\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n\r\n    handlesnackBarClick(\"MVO allowed changes  deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n  const sortedFilterTempData = sortDataByKey(tableTempData, \"MVO_TEMPLATE_FROM\");\r\n  const unSortRowSortTableTempData = sortInsideRowData(unSortTableTempData);\r\n  const rowSortTableTempData = sortInsideRowData(sortedFilterTempData);\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      // Filter the data based on MappingType\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"mvoallowedchanges\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"mvoallowedchanges\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'mvoallowedchanges') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_MVO_TEMPLATES_TO = obj2.details.MVO_TEMPLATES_TO;\r\n                const templateSet = new Set(obj2.details.MVO_TEMPLATES_TO.map(i => i.MVO_TEMPLATE_TO));\r\n                const missingFromArrObj1 = obj1.details.MVO_TEMPLATES_TO.filter(j => !templateSet.has(j.MVO_TEMPLATE_TO));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_MVO_TEMPLATES_TO.filter(item1 => \r\n                    !obj1.details.MVO_TEMPLATES_TO.some(item2 => \r\n                        item1.MVO_TEMPLATE_TO === item2.MVO_TEMPLATE_TO && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.MVO_TEMPLATES_TO,  ...obj1.details.newTemplateLists]\r\n                obj1.details.MVO_TEMPLATES_TO = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      let unsortedData = [...finalTempMapList].map(item => {\r\n        item[\"MVO_TEMPLATE_FROM\"] = item?.details?.MVO_TEMPLATE_FROM;\r\n        item['MVO_TEMPLATE_TO'] = item?.details?.MVO_TEMPLATES_TO\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.MVO_TEMPLATE_TO === plant.MVO_TEMPLATE_TO)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n      \r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.MVO_TEMPLATE_TO === draft_Plant.MVO_TEMPLATE_TO\r\n                  ? `<span class=\"deleted-text\">${draft_Plant.MVO_TEMPLATE_TO}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); \r\n      \r\n            return `<div>${plant.MVO_TEMPLATE_TO} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); \r\n        return item;\r\n      });\r\n\r\n      let data = finalTempMapList\r\n      .sort((a, b) => a.details.MVO_TEMPLATE_FROM.localeCompare(b.details.MVO_TEMPLATE_FROM))\r\n      .map(item => {\r\n        item[\"MVO_TEMPLATE_FROM\"] = item?.details?.MVO_TEMPLATE_FROM\r\n        item['MVO_TEMPLATE_TO'] = item?.details?.MVO_TEMPLATES_TO\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.MVO_TEMPLATE_TO === plant.MVO_TEMPLATE_TO)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n\r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.MVO_TEMPLATE_TO === draft_Plant.MVO_TEMPLATE_TO\r\n                  ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.MVO_TEMPLATE_TO}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); // Join deleted items without any separator\r\n\r\n            return `<div>${plant.MVO_TEMPLATE_TO} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); // Join all plant strings without a comma or any separator\r\n        return item\r\n      })\r\n      setTimeout(() => {\r\n        setUnSortTableTempData(unsortedData); // Set the unsorted data\r\n        setTableTempData(data)\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n  // *********org allowed values dialog methods ends**********\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n    {\r\n      name: \"MVO_TEMPLATE_FROM\",\r\n      header: <Tooltip title={Constant.adminConstant.mvoallowedchangesList.tooltip.mvoTemplatesFrom}>MVO Template - From</Tooltip>,\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.MVO_TEMPLATE_FROM}</div>,\r\n    },\r\n    {\r\n      name: \"MVO_TEMPLATE_TO\",\r\n      header: <Tooltip title={Constant.adminConstant.mvoallowedchangesList.tooltip.mvoTemplatesTo}>MVO Template - To</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.mvoallowedchangesList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n\r\n      defaultWidth: 50,\r\n    }\r\n  ];\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      height: \"auto !important\",\r\n      whiteSpace: \"normal\"\r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"MVO Allowed Changes \" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"MVO Allowed Changes\"}\r\n                MappingType={\"mvoallowedchanges\"}\r\n                filterTemplateData={selectedRows} \r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog\r\n                />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortRowSortTableTempData : rowSortTableTempData}\r\n                  rowHeight={\"auto\"}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the MVOAllowedChanges Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <MVOallowedchangesDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        mvotemplatesTo={mvotemplatesTo}\r\n        isEdit={isEdit}\r\n        newKey={newKey}\r\n        newValue={newValue}\r\n        handleAddRow={handleAddRow}\r\n        handleDeleteRow={handleDeleteRow}\r\n        keyerror={keyerror}\r\n        valuesInputList={valuesInputList}\r\n        templatesInfo={templatesInfo}\r\n        selectedBU={bussinessUnit}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import MVO Allowed Changes Mappings\"}\r\n        MappingType={\"mvoallowedchanges\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default MVOallowedchangesList;\r\n","import React from \"react\";\r\nimport MVOallowedchangesList from \"./mvoallowedchangesList\";\r\nconst MVOallowedChangesWrapper = () => {\r\n    return (\r\n        <MVOallowedchangesList />\r\n    );\r\n};\r\nexport default MVOallowedChangesWrapper;\r\n","import React from 'react';\r\nimport MVOallowedChangesWrapper from \"./mvoallowedchangeWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst mvoallowedchangesroutes = [\r\n  {\r\n    path: \"/mvoallowedchangesList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <MVOallowedChangesWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default mvoallowedchangesroutes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\nconst SetCompTempDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  modifytempdata,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  templatesInfo,\r\n  selectedBU\r\n}) => {\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo, orgAllowedForm.BUID]);\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Set Compatible Templates\" : \"Add Set Compatible Templates\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Template For Org Existing <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              name=\"TEMPLATE_ORG_EXISTING\"\r\n              fullWidth\r\n              value={orgAllowedForm.TEMPLATE_ORG_EXISTING}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled={isEdit}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Design Organization <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"DataType-select\"\r\n              name=\"BUID\"\r\n              fullWidth\r\n              value={selectedBU}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled\r\n            >\r\n              {filteredBUOptions?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Template For Org Modifying <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              multiple\r\n              name=\"TEMPLATE_ORG_MODIFYING\"\r\n              value={modifytempdata}\r\n              onChange={handleorgAllowedFormChange}\r\n              renderValue={(selected) => selected?.join(\", \")}\r\n              MenuProps={{\r\n                sx: {\r\n                  \"&& .Mui-selected\": {\r\n                    backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SetCompTempDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\n\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport SetCompTempDialog from \"./setcomptempDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst SetCompTempList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const [comptempData, setComptempData] = useState([]);\r\n  const [modifytempdata, setModifytempData] = useState([]);\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n  const handleSearch = () => {\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  //********Dialog code ********\r\n  //console.log(mvoallowedchangesData, \"mvo dta\");\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    }\r\n    if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    }\r\n\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setComptempData([]);\r\n    }\r\n\r\n    if (name === \"TEMPLATE_ORG_EXISTING\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        BUID: \"\",\r\n      });\r\n      setComptempData([]);\r\n    }\r\n\r\n    // If the event comes from the multi-select dropdown\r\n    if (name === \"TEMPLATE_ORG_MODIFYING\") {\r\n      setModifytempData(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === newKey\r\n    );\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n    if (!newKey || !newValue) {\r\n      setKeyerror(\"Template and its status required\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      {\r\n        ALLOWABLE_ORG_TEMPLATE: newKey,\r\n        status: newValue,\r\n        id: templateid[0]?.id,\r\n      },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) =>\r\n        template.templateName === orgAllowedForm.TEMPLATE_ORG_EXISTING\r\n    );\r\n    let convertedTEMPLATE_ORG_MODIFYING = [];\r\n    // Iterate over filteredPlants\r\n    convertedTEMPLATE_ORG_MODIFYING = modifytempdata?.map((item) => {\r\n      const template = templatesInfo.find((t) => t.templateName === item);\r\n      return {\r\n        id: template ? template.id : null,\r\n        TEMPLATE_ORG_MODIFYING: item,\r\n      };\r\n    });\r\n\r\n    if (\r\n      !orgAllowedForm.TEMPLATE_ORG_EXISTING ||\r\n      !orgAllowedForm.BUID ||\r\n      modifytempdata?.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        MappingType: \"setcompatibletemplates\",\r\n        BUID: orgAllowedForm.BUID,\r\n        details: {\r\n          TEMPLATE_ORG_EXISTING: orgAllowedForm.TEMPLATE_ORG_EXISTING,\r\n          MVO_TEMPLATE_OPTION_ID: templateid[0]?.id,\r\n          TEMPLATE_ORG_MODIFYING: convertedTEMPLATE_ORG_MODIFYING,\r\n        },\r\n\r\n        id:\r\n          templateid[0]?.id +\r\n          \"_\" +\r\n          orgAllowedForm.BUID.trim() +\r\n          \"_\" +\r\n          \"setcompatibletemplates\",\r\n      };\r\n\r\n\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setSelected({})\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n\r\n              handlesnackBarClick(\"Set compatible template mapping added successfully\", \"success\");\r\n\r\n            } else if (resp?.status === 'error') {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              fetchDraftData();\r\n              fetchData();\r\n              setSelected({})\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n\r\n              }, 200);\r\n              setIsEdit(false);\r\n              handlesnackBarClick(\r\n                \"Set compatible template mapping updated successfully\",\r\n                \"success\"\r\n              );\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setComptempData([]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n    setValuesInputList([]);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setComptempData([]);\r\n    setModifytempData([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n    for (const key in selectedRows[0]?.details?.TEMPLATE_ORG_MODIFYING) {\r\n      const template = selectedRows[0]?.details?.TEMPLATE_ORG_MODIFYING[key];\r\n      modifytempdata.push(template?.TEMPLATE_ORG_MODIFYING);\r\n    }\r\n\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n\r\n    handlesnackBarClick(\r\n      \"Set compatible template mapping  deleted Successfully\",\r\n      \"success\"\r\n    );\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n\r\n  const sortedFilterSetCompTempData = sortDataByKey(tableTempData, \"TEMPLATE_ORG_EXISTING\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"setcompatibletemplates\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"setcompatibletemplates\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'setcompatibletemplates') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_TEMPLATE_ORG_MODIFYING = obj2.details.TEMPLATE_ORG_MODIFYING;\r\n                const templateSet = new Set(obj2.details.TEMPLATE_ORG_MODIFYING.map(i => i.TEMPLATE_ORG_MODIFYING));\r\n                const missingFromArrObj1 = obj1.details.TEMPLATE_ORG_MODIFYING.filter(j => !templateSet.has(j.TEMPLATE_ORG_MODIFYING));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_TEMPLATE_ORG_MODIFYING.filter(item1 => \r\n                    !obj1.details.TEMPLATE_ORG_MODIFYING.some(item2 => \r\n                        item1.TEMPLATE_ORG_MODIFYING === item2.TEMPLATE_ORG_MODIFYING && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.TEMPLATE_ORG_MODIFYING,  ...obj1.details.newTemplateLists]\r\n                obj1.details.TEMPLATE_ORG_MODIFYING = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"TEMPLATE_ORG_EXISTING\"] = item?.details?.TEMPLATE_ORG_EXISTING\r\n        item['TEMPLATE_ORG_MODIFYING'] = item?.details?.TEMPLATE_ORG_MODIFYING\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.TEMPLATE_ORG_MODIFYING === plant.TEMPLATE_ORG_MODIFYING)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n\r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.TEMPLATE_ORG_MODIFYING === draft_Plant.TEMPLATE_ORG_MODIFYING\r\n                  ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.TEMPLATE_ORG_MODIFYING}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); // Join deleted items without any separator\r\n\r\n            return `<div>${plant.TEMPLATE_ORG_MODIFYING} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); // Join all plant strings without a comma or any separator\r\n        return item\r\n      })\r\n      setTimeout(() => {\r\n        setUnSortTableTempData(finalTempMapList)\r\n        setTableTempData(data)\r\n        setIsLoading(false)\r\n      }, 500);\r\n\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n  // *********org allowed values dialog methods ends**********\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n\r\n    {\r\n      name: \"TEMPLATE_ORG_EXISTING\",\r\n      header: <Tooltip title={Constant.adminConstant.setComptempList.tooltip.TemplateForOrgExist}>Template for Org(s) Existing</Tooltip>,\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.TEMPLATE_ORG_EXISTING}</div>,\r\n    },\r\n    {\r\n      name: \"TEMPLATE_ORG_MODIFYING\",\r\n      header: <Tooltip title={Constant.adminConstant.setComptempList.tooltip.TemplateForOrgModify}>Template for Org Modifying</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.setComptempList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n    },\r\n  ];\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n        height: \"auto !important\",\r\n        whiteSpace: \"normal\"\r\n      \r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Set Compatible Templates\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                // onClick={handleDeleteMVOtempcomp}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Set Compatible Templates\"}\r\n                MappingType={\"setcompatibletemplates\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortTableTempData : sortedFilterSetCompTempData}\r\n                  rowHeight={\"auto\"}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the SetCompatibleTemplate Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <SetCompTempDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        comptempData={comptempData}\r\n        modifytempdata={modifytempdata}\r\n        isEdit={isEdit}\r\n        newKey={newKey}\r\n        newValue={newValue}\r\n        handleAddRow={handleAddRow}\r\n        handleDeleteRow={handleDeleteRow}\r\n        keyerror={keyerror}\r\n        valuesInputList={valuesInputList}\r\n        templatesInfo={templatesInfo}\r\n        selectedBU={bussinessUnit}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import Set Compatible Templates Mappings\"}\r\n        MappingType={\"setcompatibletemplates\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default SetCompTempList;\r\n","import React from \"react\";\r\nimport SetCompTempList from \"./setcomptempList\";\r\nconst SetCompTempWrapper = () => {\r\n    return (\r\n        <SetCompTempList />\r\n    );\r\n};\r\nexport default SetCompTempWrapper;\r\n","import React from 'react';\r\nimport SetCompTempWrapper from \"./SetCompTempWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst setcomptemproutes = [\r\n  {\r\n    path: \"/setcomptempList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <SetCompTempWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\nexport default setcomptemproutes;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport Constant from '../../../constant'\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { unionBy } from 'lodash';\r\nconst gridStyle = { minHeight: 248 }\r\n\r\nconst plantGroupOptions = [\r\n  { name: \"MASTER ORG\", value: \"MASTER ORG\" },\r\n  { name: \"Boulder OU\", value: \"Boulder OU\" },\r\n  { name: \"Nanjing OU\", value: \"Nanjing OU\" },\r\n  { name: \"EDE OU\", value: \"EDE OU\" },\r\n  { name: \"Cluj OU\", value: \"Cluj OU\" },\r\n  { name: \"Others\", value: \"Others\" }\r\n]\r\nconst bomStatusOptions = [\r\n  { name: \"BOM\", value: \"BOM\" },\r\n  { name: \"NO BOM\", value: \"NO BOM\" },\r\n];\r\nconst rduOptions = [\r\n  { name: \"YES\", value: \"YES\" },\r\n  { name: \"NO\", value: \"NO\" },\r\n];\r\nconst entitydropdown = [{ name: \"PlantGroup\", value: \"PlantGroup\" },\r\n{ name: \"BOM or NO BOM\", value: \"BOM or NO BOM\" },\r\n{ name: \"none or PO Org\", value: \"none or PO Org\" },\r\n{ name: \"RDO OU Org Set\", value: \"RDO OU Org Set\" }]\r\nconst BUPlantDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddBuPlant,\r\n  isEdit,\r\n  bussinessUnitLists,\r\n  bussinessUnit,\r\n  setPlantValueList,\r\n  plantValueList,\r\n  setDisplayOrder\r\n}) => {\r\n  const [filteredPlants, setFilteredPlants] = useState([]);\r\n  const [dropdownOptions, setDropdownOptions] = useState([]);\r\n  const [entityOption, setEntityOption] = useState([]);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    const Plants = (\r\n      bussinessUnitLists?.find((plant) => plant.buName === bussinessUnit)?.plants || []\r\n    ).concat({ plantName: \"None\", id: \"None\" });\r\n    let plist = Plants.map((item) => {\r\n      let res = {\r\n        \"name\": item.plantName,\r\n        \"value\": item.plantName\r\n      }\r\n      return res;\r\n    })\r\n    setFilteredPlants(plist)\r\n    let filteredPlantsLeftSide = bussinessUnitLists?.find((plant) => plant.buName === bussinessUnit)?.plants || [];\r\n    filteredPlantsLeftSide.map((plant, index) => {\r\n      plant.value = ''\r\n      plant.id = index\r\n      return Object.assign({}, plant)\r\n    })\r\n    filteredPlantsLeftSide = unionBy(plantValueList, filteredPlantsLeftSide, 'plantName');\r\n    setDataSource(filteredPlantsLeftSide)\r\n    setPlantValueList(filteredPlantsLeftSide)\r\n\r\n    console.log(plantValueList, 'plantValueList plantValueList')\r\n    setEntityOption(entitydropdown)\r\n    if (isEdit) {\r\n      console.log(orgAllowedForm.Entity, 'orgAllowedForm.Entity')\r\n      switch (orgAllowedForm.Entity) {\r\n        case \"PlantGroup\":\r\n          setDropdownOptions(plantGroupOptions)\r\n          setDisplayOrder(1)\r\n          break;\r\n        case \"BOM or NO BOM\":\r\n          setDropdownOptions(bomStatusOptions)\r\n          setDisplayOrder(2)\r\n          break;\r\n        case \"none or PO Org\":\r\n          setDropdownOptions(filteredPlants)\r\n          setDisplayOrder(3)\r\n          break;\r\n        case \"RDO OU Org Set\":\r\n          setDropdownOptions(rduOptions)\r\n          setDisplayOrder(4)\r\n          break;\r\n        default:\r\n          setDropdownOptions([])\r\n          break;\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [bussinessUnit, bussinessUnitLists, orgAllowedForm.Entity, isEdit]);\r\n  const plantColumn = {\r\n    name: 'value',\r\n    header: 'Value',\r\n    defaultFlex: 1, minWidth: 100,\r\n    rendersInlineEditor: true,\r\n    editable: true,\r\n    sortable: false,\r\n    render: ({ value }, { cellProps }) => {\r\n      let v = cellProps.editProps.inEdit\r\n        ? cellProps.editProps.value\r\n        : value;\r\n      return (\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          size=\"small\"\r\n          autoFocus={cellProps.inEdit}\r\n          name={cellProps.data.plantName}\r\n          value={v}\r\n          onBlur={e => {\r\n            cellProps.editProps.onComplete(e);\r\n          }}\r\n          onChange={handleChanges}\r\n          onFocus={() => cellProps.editProps.startEdit()}\r\n        >\r\n          {dropdownOptions?.map((option) => (\r\n            <MenuItem key={option.name} value={option.name}>\r\n              {option.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      );\r\n    }\r\n  };\r\n\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'string' },\r\n    {\r\n      name: \"plantName\",\r\n      defaultWidth: 180,\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.PlantName}>Plant Name</Tooltip>,\r\n      render: ({ data }) => <div>{data?.plantName}</div>,\r\n    },\r\n    plantColumn\r\n  ]\r\n\r\n  const handleChanges = (event) => {\r\n    const data = [...dataSource];\r\n    let newData = data.map(item => {\r\n      if (item.plantName === event.target.name) {\r\n        item.value = event.target.value\r\n      }\r\n      return Object.assign({}, item)\r\n    })\r\n    setDataSource(newData)\r\n    setPlantValueList(newData)\r\n  }\r\n  const handleEntityChange = (event) => {\r\n    handleorgAllowedFormChange(event)\r\n    let dropdownselect = event.target.value;\r\n    switch (dropdownselect) {\r\n      case \"PlantGroup\":\r\n        setDropdownOptions(plantGroupOptions)\r\n        setDisplayOrder(1)\r\n        break;\r\n      case \"BOM or NO BOM\":\r\n        setDropdownOptions(bomStatusOptions)\r\n        setDisplayOrder(2)\r\n        break;\r\n      case \"none or PO Org\":\r\n        setDropdownOptions(filteredPlants)\r\n        setDisplayOrder(3)\r\n        break;\r\n      case \"RDO OU Org Set\":\r\n        setDropdownOptions(rduOptions)\r\n        setDisplayOrder(4)\r\n        break;\r\n      default:\r\n        setDropdownOptions([])\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit RDO Plant Mapping \" : \"Add RDO Plant Mapping\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={bussinessUnit}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled\r\n              >\r\n                {bussinessUnitLists?.map((option) => (\r\n                  <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                    {option.businessUnit}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Entity <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                name=\"Entity\"\r\n                value={orgAllowedForm.Entity}\r\n                onChange={handleEntityChange}\r\n                disabled={isEdit}\r\n              >\r\n                {entityOption?.map((option) => (\r\n                  <MenuItem key={option.name} value={option.value}>\r\n                    {option.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Plant Values <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <ReactDataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                style={gridStyle}\r\n                columns={columns}\r\n                dataSource={dataSource}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddBuPlant}>{isEdit ? \"Update\" : \"Add\"}</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BUPlantDialog;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport BUPlantDialog from \"./buplantDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst BUPlantList = () => {\r\n  const {\r\n    refreshData,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [plantValueList, setPlantValueList] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [displayOrder, setDisplayOrder] = useState(0);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") { return; }\r\n    setsnackBar(false);\r\n  };\r\n\r\n  //********Dialog code ********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...orgAllowedForm,\r\n      [name]: value,\r\n    };\r\n    setOrgAllowedForm(updatedForm);\r\n  };\r\n\r\n  const handleAddBuPlant = () => {\r\n    if (!orgAllowedForm.Entity || !orgAllowedForm.BUID || plantValueList.length < 1) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n    const resultPlantPayload = plantValueList.reduce((acc, curr) => {\r\n      acc[curr.plantName] = curr.value;\r\n      return acc;\r\n    }, {});\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        MappingType: \"buplantmapping\",\r\n        BUID: orgAllowedForm.BUID,\r\n        details: {\r\n          Entity: orgAllowedForm.Entity,\r\n          displayOrder: displayOrder,\r\n          PLANT: resultPlantPayload\r\n        },\r\n        id: `${orgAllowedForm.Entity}_${orgAllowedForm.BUID}_buplantmapping`,\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              setSelected({})\r\n              handlesnackBarClick(\"RDO Plant Mapping added successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status);\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchDraftData();\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              setSelected({})\r\n              handlesnackBarClick(\"RDO Plant Mapping updated successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status);\r\n            }\r\n\r\n          });\r\n      }\r\n    }\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setPlantValueList([])\r\n    setIsEdit(false);\r\n    setSelectedRows([])\r\n    setSelected({})\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const Entity = { Entity: selectedRows[0]?.details?.Entity }\r\n    const BUID = { BUID: bussinessUnit }\r\n    setOrgAllowedForm({\r\n      ...BUID,\r\n      ...Entity\r\n    });\r\n    const plantValuesarr = Object.entries(\r\n      selectedRows[0]?.details?.PLANT\r\n    ).map(([key, value], index) => {\r\n      return { 'plantName': key, 'value': value, 'id': index };\r\n    });\r\n    setDisplayOrder(selectedRows[0]?.details?.displayOrder)\r\n    setPlantValueList(plantValuesarr)\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: result?.status,\r\n          desc: result?.msg,\r\n        })\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    fetchDraftData();\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n\r\n  const [plantColumns, setPlantColumns] = useState([]);\r\n  const [plantMappingList, setPlantMappingList] = useState([])\r\n\r\n  console.log(\"plantMappingList===\",plantMappingList)\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      // Filter the data based on MappingType\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"buplantmapping\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      finalTempMapList = finalTempMapList.sort((a, b) => a.details.displayOrder - b.details.displayOrder)\r\n      if (bussinessUnitLists) {\r\n        // Function to sort an object by its values\r\n        function sortObjectByValues(obj) {\r\n          if (obj) {\r\n            return Object.entries(obj).sort((a, b) => a[1].localeCompare(b[1])).reduce((acc, [key, value]) => {\r\n              acc[key] = value;\r\n              return acc;\r\n            }, {});\r\n          } else {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // Sorting the PLANT data by values\r\n        let sortedList = sortObjectByValues(finalTempMapList[0]?.details?.PLANT);\r\n        let plist = bussinessUnitLists.find(bu => bu.buName === bussinessUnit)?.plants || []\r\n        const newList = Object.keys(sortedList).map(plantName => {\r\n          const originalItem = plist.find(item => item?.plantName === plantName);\r\n          return { plantName, id: originalItem?.id, value: sortedList[plantName] };\r\n        });\r\n        /* mycode start */\r\n        const valueCounts = {};\r\n\r\n        // Iterate over the data to populate valueCounts\r\n        newList.forEach((item) => {\r\n          finalTempMapList.forEach((pdata) => {\r\n            if (pdata?.details?.Entity === \"PlantGroup\" && pdata.BUID === bussinessUnit) {\r\n              const plantValue = pdata?.details?.PLANT[item.plantName];\r\n              console.log(\"plantvalue===\",plantValue)\r\n              valueCounts[plantValue] = (valueCounts[plantValue] || 0) + 1;\r\n            }\r\n          });\r\n        });\r\n        let passedColumn = []\r\n        const headerColumns = newList.map((item) => {\r\n          return {\r\n            name: item.plantName,\r\n            header: item.plantName,\r\n            defaultWidth: 150,\r\n\r\n            // colspan: ({ data }) => {\r\n            //   if (data?.details?.Entity === \"PlantGroup\" && data.BUID === bussinessUnit) {\r\n            //     const plantValue = data?.details?.PLANT[item.plantName];\r\n            //     if (passedColumn?.includes(plantValue)) {\r\n            //       return 0\r\n            //     } else {\r\n            //       passedColumn.push(plantValue);\r\n            //       return valueCounts[plantValue];\r\n            //     }\r\n            //   }\r\n            //   return 1; // Default colspan is 1\r\n            // },\r\n            render: (params) => (\r\n              <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n            )\r\n          };\r\n        });\r\n\r\n        setPlantColumns(headerColumns);\r\n\r\n        /* mycode end */\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredRDODraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"buplantmapping\" });\r\n        if (filteredRDODraftData.length > 0 && filteredRDODraftData[0].MappingType === 'buplantmapping') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredRDODraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] == obj2['id']) {\r\n                // obj1.details.draft_Plants = {\r\n                //   \"MME\": obj2.details.PLANT.MME !== obj1.details.PLANT.MME ? obj2.details.PLANT.MME : null,\r\n                //   \"MMC\": obj2.details.PLANT.MMC !== obj1.details.PLANT.MMC ? obj2.details.PLANT.MMC : null,\r\n                //   \"MVO\": obj2.details.PLANT.MVO !== obj1.details.PLANT.MVO ? obj2.details.PLANT.MVO : null,\r\n                //   \"NA3\": obj2.details.PLANT.NA3 !== obj1.details.PLANT.NA3 ? obj2.details.PLANT.NA3 : null,\r\n                //   \"NAE\": obj2.details.PLANT.NAE !== obj1.details.PLANT.NAE ? obj2.details.PLANT.NAE : null,\r\n                //   \"CL2\": obj2.details.PLANT.CL2 !== obj1.details.PLANT.CL2 ? obj2.details.PLANT.CL2 : null,\r\n                //   \"PVE\": obj2.details.PLANT.PVE !== obj1.details.PLANT.PVE ? obj2.details.PLANT.PVE : null,\r\n                //   \"MMR\": obj2.details.PLANT.MMR !== obj1.details.PLANT.MMR ? obj2.details.PLANT.MMR : null,\r\n                //   \"MFS\": obj2.details.PLANT.MFS !== obj1.details.PLANT.MFS ? obj2.details.PLANT.MFS : null,\r\n                //   \"MET\": obj2.details.PLANT.MET !== obj1.details.PLANT.MET ? obj2.details.PLANT.MET : null,\r\n                //   \"MMB\": obj2.details.PLANT.MMB !== obj1.details.PLANT.MMB ? obj2.details.PLANT.MMB : null\r\n                // }\r\n                obj1.details.draft_Plants = {};\r\n                for (let key in obj1.details.PLANT) {\r\n                  console.log('obj2.details.PLANT[key]', obj2.details.PLANT[key]);\r\n                  console.log('obj1.details.PLANT[key]', obj1.details.PLANT[key]);\r\n                  obj1.details.draft_Plants[key] = obj2.details.PLANT[key].toLocaleLowerCase() !== obj1.details.PLANT[key].toLocaleLowerCase() ? obj2.details.PLANT[key] : null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      setTimeout(() => {\r\n        let data = finalTempMapList.map(item => {\r\n          // Object.keys(item?.details?.PLANT).map(plant => {\r\n          //   item?.details?.draft_Plants ? Object.keys(item?.details?.draft_Plants).map(draft_Plant =>{\r\n          //       //item[plant] = item?.details?.draft_Plants[draft_Plant] ? item?.details?.draft_Plants[draft_Plant] + ' ' + item?.details?.PLANT[plant] : item?.details?.PLANT[plant]\r\n          //       item[\"MME\"] = item?.details?.draft_Plants[\"MME\"] ? `${item?.details?.draft_Plants[\"MME\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MME\"]} <span>` : item?.details?.PLANT[\"MME\"]\r\n          //       item[\"MMC\"]= item?.details?.draft_Plants[\"MMC\"] ? `${item?.details?.draft_Plants[\"MMC\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MMC\"]} <span>` : item?.details?.PLANT[\"MMC\"]\r\n          //       item[\"MVO\"]= item?.details?.draft_Plants[\"MVO\"] ? `${item?.details?.draft_Plants[\"MVO\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MVO\"]} <span>` : item?.details?.PLANT[\"MVO\"]\r\n          //       item[\"NA3\"]= item?.details?.draft_Plants[\"NA3\"] ? `${item?.details?.draft_Plants[\"NA3\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"NA3\"]} <span>` : item?.details?.PLANT[\"NA3\"]\r\n          //       item[\"NAE\"]= item?.details?.draft_Plants[\"NAE\"] ? `${item?.details?.draft_Plants[\"NAE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"NAE\"]} <span>` : item?.details?.PLANT[\"NAE\"]\r\n          //       item[\"CL2\"]= item?.details?.draft_Plants[\"CL2\"] ? `${item?.details?.draft_Plants[\"CL2\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"CL2\"]} <span>` : item?.details?.PLANT[\"CL2\"]\r\n          //       item[\"PVE\"]= item?.details?.draft_Plants[\"PVE\"] ? `${item?.details?.draft_Plants[\"PVE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"PVE\"]} <span>` : item?.details?.PLANT[\"PVE\"]\r\n          //       item[\"MMR\"]= item?.details?.draft_Plants[\"MMR\"] ? `${item?.details?.draft_Plants[\"MMR\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MMR\"]} <span>` : item?.details?.PLANT[\"MMR\"]\r\n          //       item[\"MFS\"]= item?.details?.draft_Plants[\"MFS\"] ? `${item?.details?.draft_Plants[\"MFS\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MFS\"]} <span>` : item?.details?.PLANT[\"MFS\"]\r\n          //       item[\"MET\"]= item?.details?.draft_Plants[\"MET\"] ? `${item?.details?.draft_Plants[\"MET\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MET\"]} <span>` : item?.details?.PLANT[\"MET\"]\r\n          //       item[\"MMB\"]= item?.details?.draft_Plants[\"MMB\"] ? `${item?.details?.draft_Plants[\"MMB\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MMB\"]} <span>`: item?.details?.PLANT[\"MMB\"]\r\n          //     }) : item[plant] = item?.details?.PLANT[plant]          \r\n          //   }            \r\n          // )   \r\n          Object.keys(item?.details?.PLANT).map(plant => {\r\n            item?.details?.draft_Plants ? item[plant] = item?.details?.draft_Plants[plant] ? `${item?.details?.draft_Plants[plant]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[plant]} <span>` : item?.details?.PLANT[plant]\r\n              : item[plant] = item?.details?.PLANT[plant]\r\n          }\r\n          )\r\n          return item\r\n        })\r\n\r\n        setPlantMappingList(data)\r\n        setIsLoading(false)\r\n\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, updateBussinessUnit, bussinessUnitLists, filteredDraftTabledata]);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n    {\r\n      name: \"Entity\",\r\n      header: \"Entity\",\r\n      render: ({ data }) => <div><b>{data?.details?.Entity}</b></div>,\r\n      defaultWidth: 150,\r\n    },\r\n    ...plantColumns\r\n  ];\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      width: 'auto'\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"RDO Plant Mapping \" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                    setPlantValueList([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"RDO Plant Mapping\"}\r\n                MappingType={\"buplantmapping\"}\r\n                filterTemplateData={selectedRows}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  rowStyle={rowStyle}\r\n                  columns={columns}\r\n                  dataSource={plantMappingList}\r\n                  defaultLimit={100}\r\n                  // rowHeight={null}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  sortable={false}\r\n                  onSelectionChange={onSelectionChange}\r\n                  enableColumnAutosize={true}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <Snackbar\r\n        open={snackBar}\r\n        autoHideDuration={3000}\r\n        onClose={handlesnackbarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handlesnackbarClose}\r\n          severity={snackbarseverity}\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {snackbarmessage}\r\n        </Alert>\r\n      </Snackbar>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the RDO Plant Mapping(s) for Design Organization '}<b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <BUPlantDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddBuPlant={handleAddBuPlant}\r\n        isEdit={isEdit}\r\n        bussinessUnitLists={bussinessUnitLists}\r\n        bussinessUnit={bussinessUnit}\r\n        setPlantValueList={setPlantValueList}\r\n        plantValueList={plantValueList}\r\n        setDisplayOrder={setDisplayOrder}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import RDO Plant Mappings\"}\r\n        MappingType={\"buplantmapping\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BUPlantList;","import React from \"react\";\r\nimport BUPlantList from \"./buplantList\";\r\n\r\nconst BUPlantWrapper = () => {\r\n    return (\r\n        <BUPlantList />\r\n    );\r\n};\r\n\r\nexport default BUPlantWrapper;\r\n","import React from 'react';\r\nimport BUPlantWrapper from \"./buplantWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst buplantroutes = [\r\n  {\r\n    path: \"/buplantList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <BUPlantWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default buplantroutes;\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport Constant from '../../../constant'\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { unionBy } from 'lodash';\r\nconst gridStyle = { minHeight: 248 }\r\nconst ExpenseMappingDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddOrgAllowedValues,\r\n  isEdit,\r\n  templatesInfo,\r\n  bussinessUnitLists,\r\n  selectedBU,\r\n  setPlantValueList,\r\n  plantValueList\r\n}) => {\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [orgAllowedForm.EXPENSE_TEMPLATE, selectedBU]);\r\n  useEffect(() => {\r\n    let filteredPlants = bussinessUnitLists?.find((plant) => plant.buName === orgAllowedForm.BUID)?.plants || [];\r\n    filteredPlants.map((plant, index) => {\r\n      plant.expense = ''\r\n      plant.id = index\r\n      return Object.assign({}, plant)\r\n    })\r\n    filteredPlants = unionBy(plantValueList, filteredPlants, 'plantName');\r\n    setDataSource(filteredPlants)\r\n    setPlantValueList(filteredPlants)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [orgAllowedForm.BUID, selectedBU, bussinessUnitLists, setPlantValueList]);\r\n\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo]);\r\n\r\n  const Input = (props) => {\r\n    const inputRef = useRef(null);\r\n    useEffect(() => {\r\n      if (inputRef && inputRef.current) {\r\n        if (props.autoFocus) {\r\n          inputRef.current.focus();\r\n        }\r\n      }\r\n    }, [props.autoFocus]);\r\n\r\n    return <input {...props} inputRef={inputRef} />;\r\n  };\r\n  const expenseColumn = {\r\n    name: 'expense',\r\n    header: 'Expense',\r\n    defaultFlex: 1, minWidth: 100,\r\n    rendersInlineEditor: true,\r\n    editable: true,\r\n    render: ({ value }, { cellProps }) => {\r\n      let v = cellProps.editProps.inEdit\r\n        ? cellProps.editProps.value\r\n        : value;\r\n      return (\r\n        <Input\r\n          type=\"number\"\r\n          autoFocus={cellProps.inEdit}\r\n          value={v}\r\n          onBlur={e => {\r\n            cellProps.editProps.onComplete(e);\r\n          }}\r\n          onChange={cellProps.editProps.onChange}\r\n          onFocus={() => cellProps.editProps.startEdit()}\r\n          onKeyDown={e => {\r\n            if (e.key === 'Escape') {\r\n              cellProps.editProps.onCancel(e);\r\n            }\r\n            if (e.key === 'Enter') {\r\n              cellProps.editProps.onComplete(e);\r\n            }\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'string' },\r\n    {\r\n      name: \"plantName\",\r\n      defaultWidth: 180,\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.PlantName}>Plant Name</Tooltip>,\r\n      render: ({ data }) => <div>{data?.plantName}</div>,\r\n    },\r\n    expenseColumn\r\n  ]\r\n\r\n  const onEditComplete = useCallback(({ value, columnId, rowId }) => {\r\n    const data = [...dataSource];\r\n    data[rowId] = Object.assign({}, data[rowId], { [columnId]: value });\r\n    setDataSource(data);\r\n    setPlantValueList(data)\r\n  }, [dataSource, setPlantValueList])\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Expense Mapping \" : \"Add Expense Mapping\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={selectedBU}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled\r\n              >\r\n                {filteredBUOptions?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Template <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                name=\"EXPENSE_TEMPLATE\"\r\n                fullWidth\r\n                value={orgAllowedForm.EXPENSE_TEMPLATE}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={isEdit}\r\n              >\r\n                {templateOption?.map((option) => (\r\n                  <MenuItem key={option.templateName} value={option.templateName}>\r\n                    {option.templateName}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Plant Expenses <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <ReactDataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                style={gridStyle}\r\n                onEditComplete={onEditComplete}\r\n                columns={columns}\r\n                dataSource={dataSource}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddOrgAllowedValues}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExpenseMappingDialog;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport ExpenseMappingDialog from \"./expensemapDialog\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport ImportMappingsDialog from \"../../../components/importMappingsDialog\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst ExpenseMappingList = () => {\r\n  const {\r\n    refreshData,\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const gridStyle = { minHeight: 550 };\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [expensemapData, setExpenseMapData] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [plantValueList, setPlantValueList] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n\r\n  };\r\n  const handleSearch = () => {\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    })\r\n  };\r\n  let plantColumnsSet = new Set(); // Define it outside\r\n  if (expensemapData && expensemapData.length > 0) {\r\n    expensemapData.forEach((dataItem) => {\r\n      const plants = dataItem.details?.EXPENSE_PLANTS;\r\n      if (plants) {\r\n        const plantKeys = Object.keys(plants);\r\n\r\n        plantKeys.forEach((plant) => {\r\n          plantColumnsSet.add(plant);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  const plantColumns = Array.from(plantColumnsSet).map((plant) => {\r\n    return {\r\n      name: plant,\r\n      header: plant,\r\n      sortable: false,\r\n      defaultWidth: 90,\r\n      //render: ({ data }) => <div>{data?.details?.EXPENSE_PLANTS[plant]}</div>,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    };\r\n  });\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    // If it's a form field change\r\n    const updatedForm = {\r\n      ...orgAllowedForm,\r\n      [name]: value,\r\n    };\r\n    setOrgAllowedForm(updatedForm);\r\n  };\r\n  const handleAddOrgAllowedValues = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === orgAllowedForm.EXPENSE_TEMPLATE\r\n    );\r\n    const resultPlantPayload = plantValueList.reduce((acc, curr) => {\r\n      acc[curr.plantName] = Number(curr.expense) !== 0 && !isNaN(Number(curr.expense)) ? Number(curr.expense) : '';\r\n      return acc;\r\n    }, {});\r\n    if (\r\n      !orgAllowedForm.EXPENSE_TEMPLATE ||\r\n      !orgAllowedForm.BUID ||\r\n      plantValueList.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        BUID: orgAllowedForm.BUID,\r\n        MappingType: \"expensemapping\",\r\n        id:\r\n          templateid[0].id +\r\n          \"_\" +\r\n          orgAllowedForm.BUID.trim() +\r\n          \"_\" +\r\n          \"expensemapping\",\r\n        details: {\r\n          EXPENSE_TEMPLATE: orgAllowedForm.EXPENSE_TEMPLATE,\r\n          EXPENSE_TEMPLATE_ID: templateid[0].id,\r\n          EXPENSE_PLANTS: resultPlantPayload,\r\n        },\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              setSelected({})\r\n              handlesnackBarClick(\"Expense Mapping added successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status)\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              setSelected({})\r\n              handlesnackBarClick(\"Expense Mapping updated successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status)\r\n            }\r\n          });\r\n      }\r\n    }\r\n    handleorgAllowedDialogClose();\r\n  };\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setPlantValueList([])\r\n    setIsEdit(false);\r\n    setSelectedRows([])\r\n    setSelected({})\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditExpenseMapping = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = { BUID: selectedRows[0]?.BUID };\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      ...BUID,\r\n    });\r\n    const plantValuesarr = Object.entries(\r\n      selectedRows[0]?.details?.EXPENSE_PLANTS\r\n    ).map(([key, value], index) => {\r\n      return { 'plantName': key, 'expense': value, 'id': index };\r\n    });\r\n    sortDataByKey(plantValuesarr, \"plantName\");\r\n    setPlantValueList(plantValuesarr)\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n\r\n  const handleDeleteOrgAllowedValues = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    handlesnackBarClick(\"Expense Mapping deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"EXPENSE_TEMPLATE\",\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.EXPENSE_TEMPLATE}>Template</Tooltip>,\r\n      defaultWidth: 250,\r\n      // render: (params) => (\r\n      //   <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      // )\r\n      render: ({ data }) => <div>{data?.EXPENSE_TEMPLATE}</div>,\r\n    },\r\n\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultWidth: 150,\r\n    },\r\n\r\n    ...plantColumns,\r\n\r\n    // Add a custom column for checkboxes\r\n  ];\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true);\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n\r\n  const sortedFilterExpenseMappingData = sortDataByKey(tableTempData, \"EXPENSE_TEMPLATE\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"expensemapping\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredExpenseDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"expensemapping\" });\r\n        if (filteredExpenseDraftData.length > 0 && filteredExpenseDraftData[0].MappingType === 'expensemapping') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredExpenseDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draftValue_EXPENSE_TEMPLATE = obj2.details.EXPENSE_TEMPLATE !== obj1.details.EXPENSE_TEMPLATE ? obj2.details.EXPENSE_TEMPLATE : null;\r\n                obj1.details.draft_Plants = {};\r\n                for (let key in obj1.details.EXPENSE_PLANTS) {\r\n                  obj1.details.draft_Plants[key] = obj2.details.EXPENSE_PLANTS[key] !== obj1.details.EXPENSE_PLANTS[key] ? obj2.details.EXPENSE_PLANTS[key] : null;\r\n                }\r\n                // obj1.details.draft_Plants = {\r\n                //   \"MME\": obj2.details.EXPENSE_PLANTS.MME !== obj1.details.EXPENSE_PLANTS.MME ? obj2.details.EXPENSE_PLANTS.MME : null,\r\n                //   \"MMC\": obj2.details.EXPENSE_PLANTS.MMC !== obj1.details.EXPENSE_PLANTS.MMC ? obj2.details.EXPENSE_PLANTS.MMC : null,\r\n                //   \"MVO\": obj2.details.EXPENSE_PLANTS.MVO !== obj1.details.EXPENSE_PLANTS.MVO ? obj2.details.EXPENSE_PLANTS.MVO : null,\r\n                //   \"NA3\": obj2.details.EXPENSE_PLANTS.NA3 !== obj1.details.EXPENSE_PLANTS.NA3 ? obj2.details.EXPENSE_PLANTS.NA3 : null,\r\n                //   \"NAE\": obj2.details.EXPENSE_PLANTS.NAE !== obj1.details.EXPENSE_PLANTS.NAE ? obj2.details.EXPENSE_PLANTS.NAE : null,\r\n                //   \"CL2\": obj2.details.EXPENSE_PLANTS.CL2 !== obj1.details.EXPENSE_PLANTS.CL2 ? obj2.details.EXPENSE_PLANTS.CL2 : null,\r\n                //   \"PVE\": obj2.details.EXPENSE_PLANTS.PVE !== obj1.details.EXPENSE_PLANTS.PVE ? obj2.details.EXPENSE_PLANTS.PVE : null,\r\n                //   \"MMR\": obj2.details.EXPENSE_PLANTS.MMR !== obj1.details.EXPENSE_PLANTS.MMR ? obj2.details.EXPENSE_PLANTS.MMR : null,\r\n                //   \"MFS\": obj2.details.EXPENSE_PLANTS.MFS !== obj1.details.EXPENSE_PLANTS.MFS ? obj2.details.EXPENSE_PLANTS.MFS : null,\r\n                //   \"MET\": obj2.details.EXPENSE_PLANTS.MET !== obj1.details.EXPENSE_PLANTS.MET ? obj2.details.EXPENSE_PLANTS.MET : null,\r\n                //   \"MMB\": obj2.details.EXPENSE_PLANTS.MMB !== obj1.details.EXPENSE_PLANTS.MMB ? obj2.details.EXPENSE_PLANTS.MMB : null\r\n                // }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n      setExpenseMapData(finalTempMapList);\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"EXPENSE_TEMPLATE\"] = item?.details?.EXPENSE_TEMPLATE;\r\n        // Object.keys(item?.details?.EXPENSE_PLANTS).map(plant => {\r\n        //   item?.details?.draft_Plants ? Object.keys(item?.details?.draft_Plants).map(draft_Plant =>{\r\n        //       item[\"MME\"] = item?.details?.draft_Plants[\"MME\"] ? `${item?.details?.draft_Plants[\"MME\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MME\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MME\"]\r\n        //       item[\"MMC\"]= item?.details?.draft_Plants[\"MMC\"] ? `${item?.details?.draft_Plants[\"MMC\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MMC\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MMC\"]\r\n        //       item[\"MVO\"]= item?.details?.draft_Plants[\"MVO\"] ? `${item?.details?.draft_Plants[\"MVO\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MVO\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MVO\"]\r\n        //       item[\"NA3\"]= item?.details?.draft_Plants[\"NA3\"] ? `${item?.details?.draft_Plants[\"NA3\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"NA3\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"NA3\"]\r\n        //       item[\"NAE\"]= item?.details?.draft_Plants[\"NAE\"] ? `${item?.details?.draft_Plants[\"NAE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"NAE\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"NAE\"]\r\n        //       item[\"CL2\"]= item?.details?.draft_Plants[\"CL2\"] ? `${item?.details?.draft_Plants[\"CL2\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"CL2\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"CL2\"]\r\n        //       item[\"PVE\"]= item?.details?.draft_Plants[\"PVE\"] ? `${item?.details?.draft_Plants[\"PVE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"PVE\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"PVE\"]\r\n        //       item[\"MMR\"]= item?.details?.draft_Plants[\"MMR\"] ? `${item?.details?.draft_Plants[\"MMR\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MMR\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MMR\"]\r\n        //       item[\"MFS\"]= item?.details?.draft_Plants[\"MFS\"] ? `${item?.details?.draft_Plants[\"MFS\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MFS\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MFS\"]\r\n        //       item[\"MET\"]= item?.details?.draft_Plants[\"MET\"] ? `${item?.details?.draft_Plants[\"MET\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MET\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MET\"]\r\n        //       item[\"MMB\"]= item?.details?.draft_Plants[\"MMB\"] ? `${item?.details?.draft_Plants[\"MMB\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MMB\"]} <span>`: item?.details?.EXPENSE_PLANTS[\"MMB\"]\r\n        //     }) : item[plant] = item?.details?.EXPENSE_PLANTS[plant]          \r\n        //   }            \r\n        // )\r\n        Object.keys(item?.details?.EXPENSE_PLANTS).map(plant => {\r\n          item?.details?.draft_Plants ? item[plant] = item?.details?.draft_Plants[plant] ? `${item?.details?.draft_Plants[plant]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[plant]} <span>` : item?.details?.EXPENSE_PLANTS[plant]\r\n            : item[plant] = item?.details?.EXPENSE_PLANTS[plant]\r\n        }\r\n        )\r\n        return item\r\n      })\r\n      setTimeout(() => {\r\n        setTableTempData(data);\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, updateBussinessUnit, filteredDraftTabledata]);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = [];\r\n      if (result.data) {\r\n        filterData = result.data.filter(element => element.BUID === BUID);\r\n      }     \r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n    }\r\n  }\r\n  \r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Expense Mapping\" }]} />\r\n      </Box>\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditExpenseMapping}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true);\r\n                }}\r\n                style={{ margin: \"0 10px 0 10px\" }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Expense Mapping\"}\r\n                MappingType={\"expensemapping\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog \r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? expensemapData : sortedFilterExpenseMappingData}\r\n                  rowHeight={null}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the ExpenseAcctByTemplateAndPlant Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteOrgAllowedValues}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <ExpenseMappingDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddOrgAllowedValues={handleAddOrgAllowedValues}\r\n        isEdit={isEdit}\r\n        templatesInfo={templatesInfo}\r\n        bussinessUnitLists={bussinessUnitLists}\r\n        selectedBU={bussinessUnit}\r\n        setPlantValueList={setPlantValueList}\r\n        plantValueList={plantValueList}\r\n      />\r\n      <ImportMappingsDialog\r\n        title={\"Import Expense Mappings\"}\r\n        MappingType={\"expensemapping\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate}\r\n      />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default ExpenseMappingList;\r\n","import React from \"react\";\r\nimport ExpenseMappingList from \"./expensemapList\";\r\n\r\nconst ExpenseMapWrapper = () => {\r\n  return (\r\n    <ExpenseMappingList />\r\n  );\r\n};\r\n\r\nexport default ExpenseMapWrapper;\r\n","import React from 'react';\r\nimport ExpenseMapWrapper from \"./expensemapWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst expensemaproutes = [\r\n  {\r\n    path: \"/expensemapList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <ExpenseMapWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default expensemaproutes;\r\n","// import { useEffect, useState } from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport {\r\n    Grid,\r\n} from \"@mui/material\";\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    description: yup\r\n        .string()\r\n        .required('This field is required')\r\n        .max(500, 'Input should not exceed 500 characters'),\r\n});\r\n\r\n\r\nconst CommitChangesForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ description: null }}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            onSubmit={(values, { resetForm }) => {\r\n                // handle form submission here\r\n                props.saveApplyChanges(values);\r\n                resetForm();\r\n            }}\r\n        >\r\n            {({\r\n                errors,\r\n                touched,\r\n                submitForm,\r\n                setFieldValue,\r\n                setErrors,\r\n                setTouched\r\n            }) => {\r\n                const closeDialogBox = () => {\r\n                    props?.setApplyChangesDialog(false);\r\n                    setErrors({});\r\n                    setTouched({}, false);\r\n                }\r\n                return (\r\n                    <Form>\r\n                        <Dialog\r\n                            open={props?.applyChangesDialog}\r\n                            maxWidth={'sm'}\r\n                            fullWidth={true}\r\n                        >\r\n                            <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                                Do you want to apply your changes?\r\n                            </DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n\r\n                                    <Grid container spacing={1} alignItems=\"center\">\r\n                                        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n                                            Comments<span style={{ color: \"#FF3D57\" }}>*</span>:\r\n                                        </Grid>\r\n                                        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n                                            <Field as=\"textarea\" id=\"description\" name=\"description\" rows=\"10\" style={{ width: \"100%\", borderRadius: \"10px\" }} />\r\n                                            <ErrorMessage name=\"description\" component=\"div\" style={{ color: \"red\" }} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={closeDialogBox}>Cancel</Button>\r\n                                <Button onClick={submitForm} >Apply</Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik >\r\n    )\r\n}\r\n\r\nexport default CommitChangesForm;","import { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  // styled,\r\n  Grid,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\n\r\nimport { styled } from '@mui/system';\r\n\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\n\r\nimport CustomSelect from \"./../../components/CustomSelect\";\r\nimport { BUOptions } from \"../adminConfig/common\";\r\nimport CommitChangesForm from \"./commitChangesForm\";\r\n\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst DraftChangesList = () => {\r\n  const { bussinessUnit, updateBussinessUnit, updateMappingTemplatesInfo } = useOracleSettings();\r\n\r\n  const [tabledata, setTabledata] = useState([]);\r\n  const [filteredTabledata, setFilteredTabledata] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [applyChangesDialog, setApplyChangesDialog] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n  const historyManagementService = new HistoryManagementService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const columns = [\r\n    {\r\n      name: \"userName\",\r\n      header: \"User Name\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n    },\r\n    {\r\n      name: \"MappingType\",\r\n      header: \"Mapping Type\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.MappingType}</div>,\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: \"Design Organization\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.BUID}</div>,\r\n    },\r\n    // {\r\n    //   name: \"modifiedTemplate\",\r\n    //   header: \"Modified Templates\",\r\n    //   defaultFlex: 1,\r\n    //   render: ({ data }) => <div>{data?.modifiedTemplate.join(\", \")}</div>,\r\n    // },\r\n    {\r\n      name: \"modifiedDateTime\",\r\n      header: \"Modified Date & Time \",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{(data?.modifiedDateTime) ? data?.modifiedDateTime : \"-\"}</div>,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      header: \"Action\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => {\r\n        return (\r\n          <div>\r\n            <Button variant=\"contained\"\r\n              style={{ margin: \"0px 10px 0px 0px\" }}\r\n              onClick={() => {\r\n                setSelectedRows([data]);\r\n                setApplyChangesDialog(true);\r\n              }}\r\n            >\r\n              Apply\r\n            </Button>\r\n            <Button variant=\"contained\"\r\n              onClick={() => {\r\n                discardDraftChanges(data.id);\r\n              }}>\r\n              Discard\r\n            </Button>\r\n          </div>\r\n        )\r\n      }\r\n    },\r\n  ];\r\n\r\n  const handleSearch = () => {\r\n    let filteredData = [];\r\n    // input box filter\r\n    if (searchValue === \"\") {\r\n      filteredData = tabledata;\r\n    } else {\r\n      filteredData = tabledata?.filter((thisItem) => {\r\n        const thisRowData = Object.values(thisItem).join().toLowerCase();\r\n        return thisRowData.includes(searchValue.toLowerCase());\r\n      });\r\n    }\r\n\r\n    // dropdown filter\r\n    filteredData = filteredData?.filter((thisItem) => {\r\n      const thisRowData = Object.values(thisItem).join().toLowerCase();\r\n      return thisRowData.includes(bussinessUnit.toLowerCase());\r\n    });\r\n\r\n    setFilteredTabledata(filteredData);\r\n  };\r\n\r\n  const handleRowClick = (rowData) => {\r\n    const isSelected = selectedRows.some((row) => row.id === rowData.id);\r\n\r\n    if (isSelected) {\r\n      setSelectedRows((prevSelectedRows) =>\r\n        prevSelectedRows.filter((row) => row.id !== rowData.id)\r\n      );\r\n    } else {\r\n      setSelectedRows([rowData]);\r\n    }\r\n  };\r\n\r\n  const updateTemplateMappingData = () => {\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      //setIsLoading(false);\r\n    });\r\n  }\r\n  const saveApplyChanges = (values) => {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      if (!selectedRows.length) {\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: \"error\",\r\n          desc: \"Please select row.\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      const payload = {\r\n        id: selectedRows[0]?.id,\r\n        reason: values.description,\r\n        BUID: selectedRows[0]?.BUID,\r\n        MappingType: selectedRows[0]?.MappingType,\r\n      }\r\n      historyManagementService.applyDraftChanges(payload).then((result) => {\r\n        setApplyChangesDialog(false); // close dialog box\r\n        setSelectedRows([]); // reset selected row value\r\n\r\n        updateTemplateMappingData();\r\n        fetchData();\r\n        setIsLoading(false);\r\n\r\n        if (result?.status === \"success\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: result?.msg,\r\n          });\r\n        } else if (result?.status === \"failed\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"error\",\r\n            desc: result?.msg,\r\n          });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      //console.log(err, 'errors 1 ==================');\r\n    }\r\n  }\r\n  const discardDraftChanges = (rowId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      historyManagementService.discardDraftChanges(rowId).then((result) => {\r\n        setApplyChangesDialog(false); // close dialog box\r\n        setSelectedRows([]); // reset selected row value\r\n\r\n        updateTemplateMappingData();\r\n        fetchData();\r\n        setIsLoading(false);\r\n\r\n        if (result?.status === \"success\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: result?.msg,\r\n          });\r\n        } else if (result?.status === \"failed\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"error\",\r\n            desc: result?.msg,\r\n          });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      //console.log(err, 'errors 1 ==================');\r\n    }\r\n  }\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true);\r\n    historyManagementService.getAlldraftChanges().then((result) => {\r\n      setTabledata(result?.data);\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredTabledata(filterData);\r\n      //setTabledata(result?.data);\r\n      //setFilteredTabledata(result?.data);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, [searchValue, bussinessUnit]);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Draft Changes\" }]} />\r\n      </Box>\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={(e) => {\r\n                    setSearchValue(e.target.value);\r\n                  }}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={5} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\"\r\n              style={{\r\n                // marginLeft: \"198px\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"font-medium\"\r\n                style={{ paddingRight: \"10px\" }}\r\n              >\r\n                <label style={{ textWrap: \"nowrap\", paddingTop: \"10px\" }}>Design Organization:</label>\r\n                <CustomSelect\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"25%\" }}\r\n                  //optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n            {isLoading && (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"100vh\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            )}\r\n            {!isLoading && (\r\n              <DataGrid\r\n                showZebraRows={false}\r\n                defaultLimit={100}\r\n                style={gridStyle}\r\n                columns={columns}\r\n                dataSource={filteredTabledata}\r\n                // rowHeight={null}\r\n                onRowClick={(rowData) => handleRowClick(rowData.data)}\r\n                pagination\r\n                renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <CommitChangesForm applyChangesDialog={applyChangesDialog} setApplyChangesDialog={setApplyChangesDialog} saveApplyChanges={saveApplyChanges} />\r\n\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DraftChangesList;\r\n","import React from \"react\";\r\nimport RequestChangesList from \"./draftChangesList\";\r\n\r\nconst RequestChangesWraper = () => {\r\n    return (\r\n        <RequestChangesList />\r\n    );\r\n};\r\n\r\nexport default RequestChangesWraper;\r\n","import React from 'react';\r\nimport DraftChangesWraper from \"./draftChangesWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst draftChangesroutes = [\r\n  {\r\n    path: \"/draftChanges\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <DraftChangesWraper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default draftChangesroutes;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Table,\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem\r\n} from \"@mui/material\";\r\n\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport CustomSelect from \"../../components/CustomSelect\";\r\nimport { BUOptions } from \"../adminConfig/common\";\r\n\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\n\r\nimport historyData from \"./sampledata.json\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst HistoryLIst = () => {\r\n  const { bussinessUnit, updateBussinessUnit } = useOracleSettings();\r\n  const [tabledata, setTabledata] = useState(historyData);\r\n  const [filteredTabledata, setFilteredTabledata] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [mappingOptions, setMappingOptions] = useState([]);\r\n  const historyManagementService = new HistoryManagementService();\r\n  const [mappingType, setMappingType] = useState('orgallowedvalues')\r\n  const gridRef = useRef(null);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"version\",\r\n      header: \"Version\",\r\n      defaultFlex: 0.6,\r\n      defaultWidth: 20,\r\n      render: ({ data }) => <div>{data?.version}</div>,\r\n    },\r\n    {\r\n      name: \"dateTime\",\r\n      header: \"Change Date\",\r\n      defaultFlex: 2,\r\n      render: ({ data }) => {\r\n        let date = new Date(parseInt(data?.dateTime));\r\n        console.log(date, 'date')\r\n        const year = date.getFullYear();\r\n        const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const hours = String(date.getHours()).padStart(2, '0');\r\n        const minutes = String(date.getMinutes()).padStart(2, '0');\r\n        const seconds = String(date.getSeconds()).padStart(2, '0');\r\n        const meridiem = hours >= 12 ? 'PM' : 'AM';\r\n        const formattedHours = hours % 12 || 12; // Convert 24-hour to 12-hour format\r\n        const formattedDate = `${year}-${month}-${day} ${formattedHours}:${minutes}:${seconds} ${meridiem}`;\r\n        return <div>{formattedDate}</div>\r\n      },\r\n    },\r\n    {\r\n      name: \"userName\",\r\n      header: \"Requested By\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.userName}</div>,\r\n    },\r\n    {\r\n      name: \"MappingType \",\r\n      header: \"Mapping Type\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 200,\r\n      render: ({ data }) => <div>{data?.MappingType}</div>,\r\n    },\r\n    {\r\n      name: \"reason\",\r\n      header: \"Change Details\",\r\n      defaultFlex: 3,\r\n      defaultWidth: 200,\r\n      render: ({ data }) => <div>{data?.reason}</div>,\r\n    },\r\n\r\n  ];\r\n\r\n  const handleSearch = () => {\r\n    let filteredData = [];\r\n    // input box filter\r\n    if (searchValue === \"\") {\r\n      filteredData = tabledata;\r\n    } else {\r\n      filteredData = tabledata?.filter((thisItem) => {\r\n        const thisRowData = Object.values(thisItem).join()?.toLowerCase();\r\n        return thisRowData.includes(searchValue?.toLowerCase());\r\n      });\r\n    }\r\n\r\n    // dropdown filter\r\n    // filteredData = filteredData?.filter((thisItem) => {\r\n    //   const thisRowData = Object.values(thisItem).join()?.toLowerCase();\r\n    //   return thisRowData.includes(bussinessUnit?.toLowerCase());\r\n    // });\r\n    // console.log(filteredData, 'filteredDatafilteredData')\r\n    setFilteredTabledata(filteredData);\r\n  };\r\n\r\n  const handleRowClick = (rowData) => {\r\n    const isSelected = selectedRows.some((row) => row.id === rowData.id);\r\n\r\n    if (isSelected) {\r\n      setSelectedRows((prevSelectedRows) =>\r\n        prevSelectedRows.filter((row) => row.id !== rowData.id)\r\n      );\r\n    } else {\r\n      setSelectedRows([rowData]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    historyManagementService.getAllmappingHistory().then((result) => {\r\n      setTabledata(result?.data);\r\n      setFilteredTabledata(result?.data);\r\n      // setMappingType()\r\n      setIsLoading(false);\r\n      const values = new Set();\r\n      result?.data?.forEach((subscriber) => {\r\n        if (Array.isArray(subscriber['MappingType'])) {\r\n          subscriber['MappingType'].forEach((data) => {\r\n            values.add(data.MappingType);\r\n          });\r\n        } else {\r\n          values.add(subscriber['MappingType']);\r\n        }\r\n      });\r\n      console.log(Array.from(values), 'array of mapping')\r\n      setMappingOptions(Array.from(values))\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, [searchValue, bussinessUnit]);\r\n\r\n\r\n  useEffect(() => {\r\n    // let dataToShow = tabledata;\r\n    // console.log(dropdownFilter, 'dropdownFilter')\r\n    let filteredData = tabledata;\r\n    // dropdown filter\r\n    filteredData = filteredData?.filter((thisItem) => {\r\n      const thisRowData = Object.values(thisItem).join()?.toLowerCase();\r\n      return thisRowData.includes(bussinessUnit?.toLowerCase()) &&\r\n        thisRowData.includes(mappingType?.toLowerCase());\r\n    });\r\n    setFilteredTabledata(filteredData);\r\n  }, [mappingType, bussinessUnit, tabledata])\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Changes History \" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={(e) => {\r\n                    setSearchValue(e.target.value);\r\n                  }}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\"\r\n              style={{\r\n                // marginLeft: \"198px\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"font-medium\"\r\n                style={{ paddingRight: \"10px\" }}\r\n              >\r\n                <label style={{ textWrap: \"nowrap\", paddingTop: \"10px\" }}>Mapping Type:</label>\r\n\r\n                <Select\r\n                  className=\"form-control\"\r\n                  defaultValue={mappingOptions[0]}\r\n                  value={mappingType}\r\n                  onChange={(e) => setMappingType(e.target.value)}\r\n                  style={{ width: \"50%\" }}\r\n                  size={'medium'}\r\n                  displayEmpty // Enable displayEmpty prop\r\n                  renderValue={(selected) => {\r\n                    // Render the selected value\r\n                    let selectedOption = [];\r\n                    selectedOption = mappingOptions?.find(\r\n                      (option) => (option === selected)\r\n                    );\r\n\r\n                    return (selectedOption) ? selectedOption : '';\r\n                  }}\r\n                >\r\n                  {mappingOptions?.map((option, index) => {\r\n                    const listKey = \"dpKey\" + index;\r\n                    return (\r\n                      <MenuItem value={option} key={listKey}>\r\n                        {option}\r\n                      </MenuItem>\r\n                    )\r\n                  })}\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={12} sm={6} xs={12} className=\"font-medium\" style={{ display: \"none\" }}>\r\n            <Grid container alignItems=\"center\"\r\n              style={{\r\n                // marginLeft: \"198px\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"font-medium\"\r\n                style={{ paddingRight: \"10px\" }}\r\n              >\r\n                <label style={{ textWrap: \"nowrap\", paddingTop: \"10px\" }}>Design Organization:</label>\r\n\r\n                <CustomSelect\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"50%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    // handleOptionChange({bu: selectedOptionValue})\r\n                    setSearchValue(\"\");\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n            {isLoading && (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"100vh\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            )}\r\n            {!isLoading && (\r\n              <DataGrid\r\n                showZebraRows={false}\r\n                style={gridStyle}\r\n                columns={columns}\r\n                dataSource={filteredTabledata}\r\n                defaultLimit={100}\r\n                // rowHeight={null}\r\n                onRowClick={(rowData) => handleRowClick(rowData.data)}\r\n                pagination\r\n                renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HistoryLIst;\r\n","import React from \"react\";\r\nimport HistoryList from \"./historyList\";\r\n\r\nconst HistoryWrapper = () => {\r\n    return (\r\n        <HistoryList />\r\n    );\r\n};\r\n\r\nexport default HistoryWrapper;\r\n","import React from 'react';\r\nimport HistoryWrapper from \"./historyWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst historyroutes = [\r\n  {\r\n    path: \"/history\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <HistoryWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  }\r\n];\r\n\r\nexport default historyroutes;\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.systemData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  console.log('props', props);\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.systemData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {        \r\n        'ERP Type': item.ERPType,\r\n        Instance: item.instance,\r\n        'Validation Key 1': item.file1,\r\n        'Validation Key 2': item.file2\r\n      }\r\n      return res\r\n    })\r\n    //console.log(exportData, 'inside template export exportData')\r\n    //return;\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'System Setup' }).then((response) => {\r\n      setExportResponse(response)\r\n      //console.log(response, ';resprespresp')\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.vsystemData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n      //console.log(filteredTempData, 'filteredTempData')\r\n    }\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import React, { useState, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport shortId from 'shortid';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n\r\nconst formData = [\r\n    {\r\n        \"name\": \"ERP Type\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"select\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": [\r\n            {\r\n                \"sap\": \"SAP\",\r\n                \"oracle\": \"Oracle\",\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"name\": \"instance\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"select\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": [\r\n            {\r\n                \"onPrem\": \"OnPrem\",\r\n                \"SaaS\": \"SaaS\",\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"name\": \"Validation Key 1\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"text\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": \"\"\r\n    },\r\n    {\r\n        \"name\": \"Validation Key 2\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"text\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": \"\"\r\n    },\r\n]\r\n\r\nconst SystemSetupForm = forwardRef((props, ref) => {\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const [formAllData, setFormAllData] = useState([]);\r\n    const initialValues = {\r\n        // settingName: '',\r\n        \"ERP Type\": null,\r\n        instance: null,\r\n        \"Validation Key 1\": null,\r\n        \"Validation Key 2\": null,\r\n    };\r\n\r\n    const validate = (values) => {\r\n        console.log(values, \"validate\");\r\n        const errors = {};\r\n        // Validation logic for each field\r\n        // if (!values.settingName) {\r\n        //     errors.settingName = 'Required';\r\n        // }\r\n        if (!values[\"ERP Type\"]) {\r\n            errors[\"ERP Type\"] = 'Required';\r\n        }\r\n        if (!values.instance) {\r\n            errors.instance = 'Required';\r\n        }\r\n        if (!values[\"Validation Key 1\"]) {\r\n            errors[\"Validation Key 1\"] = 'Required';\r\n        }\r\n        if (!values[\"Validation Key 2\"]) {\r\n            errors[\"Validation Key 2\"] = 'Required';\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const onSubmit = (values, isValid, { resetForm }) => {\r\n        // Handle form submission\r\n        console.log(values, 'values 111');\r\n        if (isValid) {\r\n            // Map Validation Key fields to file1 and file2\r\n            const backendValues = {\r\n                ...values,\r\n                ERPType: values[\"ERP Type\"],\r\n                file1: values[\"Validation Key 1\"],\r\n                file2: values[\"Validation Key 2\"],\r\n            };\r\n            delete backendValues[\"ERP Type\"];\r\n            delete backendValues[\"Validation Key 1\"];\r\n            delete backendValues[\"Validation Key 2\"];\r\n\r\n            resetForm(); // Reset the form using the resetForm function from Formik context\r\n            // Check if the entire form has changed\r\n            const isFormChanged = Object.keys(values).some((fieldName) => {\r\n                return values[fieldName] !== initialValues[fieldName];\r\n            });\r\n            if (isFormChanged) {\r\n                props.saveForm({ formisValid: isValid, formData: backendValues }); // Close the modal box after successful submission\r\n            } else {\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"error\",\r\n                    desc: \"No changes made!\",\r\n                });\r\n            }\r\n        } else {\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: \"error\",\r\n                desc: \"Form submitted with invalid data\",\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setFormAllData(formData);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validate={validate}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    onSubmit(values, !Object.keys(validate(values)).length, { resetForm: () => setSubmitting(false) });\r\n                }}\r\n                innerRef={ref}\r\n            >\r\n                {\r\n                    function Showform({ isValid, values, errors, setFieldValue, resetForm, handleSubmit, submitForm }) {\r\n                        useEffect(() => {\r\n                            if (props?.editForm === \"Edit\" && props?.selectedRows?.length) {\r\n                                props?.selectedRows?.forEach(thisItem => {\r\n                                    setFieldValue('ERP Type', thisItem?.ERPType);\r\n                                    setFieldValue('instance', thisItem?.instance);\r\n                                    setFieldValue('Validation Key 1', thisItem?.file1);\r\n                                    setFieldValue('Validation Key 2', thisItem?.file2);\r\n                                });\r\n                            }\r\n                        }, [setFieldValue])\r\n\r\n                        // Expose the submitForm function to the parent component using useImperativeHandle\r\n                        useImperativeHandle(ref, () => ({\r\n                            submitForm() {\r\n                                console.log(\"triggering here\");\r\n                                // Call the submitForm function when triggered from the parent component\r\n                                // return new Promise((resolve, reject) => {\r\n                                //     // Submit the form using the Formik handleSubmit function\r\n                                //     handleSubmit();\r\n                                //     // After the form submission, resolve the promise with the form values\r\n                                //     resolve({ formisValid: isValid, formData: values });\r\n                                // });\r\n\r\n                                // Call the submitForm function when triggered from the parent component\r\n                                handleSubmit();\r\n                            }\r\n                        }));\r\n\r\n                        return (\r\n                            <Form>\r\n                                {\r\n                                    (formAllData).length ? formAllData?.map((item, fkey) => {\r\n                                        const thisInputName = item?.name;\r\n                                        const currentFieldValue = values[thisInputName] || item?.defaultValues;\r\n\r\n                                        let fieldType = item?.inputType;\r\n                                        let fieldkey = values[formAllData[0]?.name];\r\n\r\n                                        return (\r\n                                            <div className=\"attribute-section\" key={fkey}>\r\n                                                <Grid\r\n                                                    container\r\n                                                    spacing={3}\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n                                                        <label htmlFor=\"firstName\">\r\n                                                            <span >\r\n                                                                {item?.name}\r\n                                                                {item?.mandatory === \"Y\" ? <span style={{ color: \"red\" }}>*</span> : ''}\r\n                                                            </span>\r\n                                                        </label>\r\n                                                    </Grid>\r\n                                                    <Grid item md={8} sm={6} xs={12} key={fkey}>\r\n                                                        {\r\n                                                            (fieldType === 'text') && (\r\n                                                                <TextField\r\n                                                                    className={\"mb-4 w-full \"}\r\n                                                                    color={(errors?.[thisInputName] ? ('warning') : (''))}\r\n                                                                    fullWidth\r\n                                                                    size=\"small\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    id={thisInputName}\r\n                                                                    name={thisInputName}\r\n                                                                    value={currentFieldValue}\r\n                                                                    onChange={(e) => {\r\n                                                                        setFieldValue(thisInputName, e.target.value);\r\n                                                                    }}\r\n                                                                    type=\"text\"\r\n                                                                    style={{ marginBottom: '10px' }}\r\n                                                                />\r\n                                                            )\r\n                                                        }\r\n                                                        {\r\n                                                            (fieldType === 'select') && (\r\n                                                                <>\r\n                                                                    <Select\r\n                                                                        disabled={props?.editForm === \"Edit\" && [\"ERP Type\", \"instance\"].includes(thisInputName)}\r\n                                                                        value={currentFieldValue}\r\n                                                                        onChange={(e) => {\r\n                                                                            setFieldValue(thisInputName, e.target.value);\r\n                                                                        }}\r\n                                                                        displayEmpty\r\n                                                                        renderValue={(selected) => {\r\n                                                                            if (!selected) {\r\n                                                                                return <em>--Select--</em>; // Placeholder text\r\n                                                                            }\r\n                                                                            return item?.values.length && item?.values[0][selected];\r\n                                                                        }}\r\n                                                                        style={{ height: '37.13px', marginBottom: '1rem', width: \"100%\" }}\r\n                                                                    >\r\n                                                                        <MenuItem>Select</MenuItem>\r\n                                                                        {\r\n                                                                            item?.values.length && Object.keys(item?.values[0]).map((vitem) => {\r\n                                                                                return (\r\n                                                                                    <MenuItem value={vitem} key={shortId.generate()}>{item?.values[0][vitem]}</MenuItem>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </Select>\r\n                                                                </>\r\n                                                            )\r\n                                                        }\r\n                                                        <ErrorMessage name={thisInputName} component=\"div\" />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </div>\r\n                                        )\r\n                                    }) : (<></>)\r\n                                }\r\n                                {/* <button type=\"submit\" style={{ display: 'none' }}></button> Hidden submit button */}\r\n                            </Form>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>\r\n            {openDesc && (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default SystemSetupForm;","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\nimport Loader from 'app/components/Loader';\r\nimport { Breadcrumb } from \"app/components\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\nimport { SystemSettingsService } from \"services/systemSettingsService\"; // Change UserService to SystemSetupService\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportSetup\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport SystemSetupForm from \"./systemSetupForm\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst SystemSetup = () => {\r\n  const childCompRef = useRef(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [showFormType, setShowFormType] = useState(\"Create\");\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [systemData, setSystemData] = useState([]); // Change userData to systemData\r\n  const [orgSystemData, setOrgSystemData] = useState([]); // Change userData to systemData\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const systemSettingsService = new SystemSettingsService(); // Change userService to systemSettingsService\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [sortInfo, setSortInfo] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\nconst sortedSystemData = systemData.sort((a, b) => {\r\n  if (a.ERPType < b.ERPType) return -1;\r\n  if (a.ERPType > b.ERPType) return 1;\r\n  return 0;\r\n});\r\n\r\n  const columns = [ // Adjust columns according to your system setup data\r\n    {\r\n      name: \"ERPType\",\r\n      header: \"ERP Type\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.ERPType}</div>,\r\n    },\r\n    {\r\n      name: \"instance\",\r\n      header: \"Instance\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.instance}</div>,\r\n    },\r\n    {\r\n      name: \"file1\",\r\n      header: \"Validation Key 1\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.file1}</div>,\r\n    },\r\n    {\r\n      name: \"file2\",\r\n      header: \"Validation Key 2\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.file2}</div>,\r\n    },\r\n  ]\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteSetting = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      setIsLoading(true)\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await systemSettingsService.deleteSystemSettings(selRowsId).then(response => {\r\n        setIsLoading(false)\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete Setting:\", error);\r\n    }\r\n\r\n    systemSettingsService.getAllsystemSetupList().then((result) => {\r\n      console.log(result.data, \"result.data\");\r\n      setSystemData(result.data);\r\n      setInitialData(result.data);\r\n      setOrgSystemData(result.data);\r\n    });\r\n  };\r\n\r\n  // Function to trigger the form submission in the child component\r\n  const saveForm = async (submittedValues) => {\r\n    console.log(submittedValues, 'submittedValues 222');\r\n\r\n\r\n    if (submittedValues) {\r\n      // Update the formValues state only if the submission is successful\r\n      if (submittedValues?.formisValid) {\r\n        setShowForm(false);\r\n        setIsLoading(true);\r\n        setFormValues(submittedValues);\r\n        let updatedData = null;\r\n        if (showFormType === \"Edit\" && selectedRows?.length) {\r\n          updatedData = await systemSettingsService.updateSystemSettings(submittedValues?.formData);\r\n        } else {\r\n          updatedData = await systemSettingsService.addSystemSettings(submittedValues?.formData);\r\n        }\r\n        if (updatedData?.status === \"success\") {\r\n          setSelected({});\r\n          setSelectedRows([]);\r\n          await systemSettingsService.getAllsystemSetupList().then((result) => {\r\n            console.log(result.data, \"result.data\");\r\n            setSystemData(result.data);\r\n            setInitialData(result.data);\r\n            setOrgSystemData(result.data);\r\n          });\r\n\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: updatedData?.msg,\r\n          });\r\n        } else {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"error\",\r\n            desc: updatedData?.msg,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n  const handleSubmitForm = async () => {\r\n    if (childCompRef.current) {\r\n      // Call the submitForm function exposed by the child component\r\n      await childCompRef.current.submitForm();\r\n    }\r\n  };\r\n\r\n  const fetchAllDetails = async () => {\r\n    const listValue = await systemSettingsService.getAllsystemSetupList();\r\n    console.log(listValue, 'listValue');\r\n    if (listValue?.data?.length) {\r\n      setSystemData(listValue?.data);\r\n      setInitialData(listValue?.data);\r\n      setOrgSystemData(listValue?.data);\r\n      return listValue?.data;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n  const applyFilterData = async (searchValue) => {\r\n    let systemDataValue = [];\r\n    setIsLoading(true);\r\n    if (orgSystemData.length === 0) {\r\n      systemDataValue = await fetchAllDetails();\r\n    } else {\r\n      systemDataValue = orgSystemData;\r\n    }\r\n    if (systemDataValue) {\r\n      const newFilteredData = systemDataValue.filter((setting) => {\r\n        return (!searchValue ? true : (JSON.stringify(setting).toLowerCase().includes(searchValue.toLowerCase())))\r\n      }) || [];\r\n      if (newFilteredData.length) {\r\n        setSystemData(newFilteredData);\r\n        setInitialData(newFilteredData);\r\n      } else {\r\n        setSystemData([]);\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const handleBackdropClick = (event) => {\r\n    // Prevent closing the dialog when clicking on the backdrop\r\n    event.stopPropagation();\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAllDetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && (Object.keys(selRowsData)?.map(key => (selRowsData[key])) || []);\r\n    if (selRowsDetails?.length) {\r\n      setSelectedRows(selRowsDetails);\r\n    }\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    console.log(searchValue, 'parent comp 2');\r\n    applyFilterData(searchValue);\r\n  }, [searchValue]);\r\n\r\n  console.log('parent comp');\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedUserData = sortedExportDataHOC(SystemSetup);\r\n    const sortedData = SortedUserData({ data: systemData, sortInfo, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setSystemData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"System Setup\" }]} />\r\n      </Box>\r\n\r\n      <div>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\">\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={() => {\r\n                setShowForm(true);\r\n                setShowFormType(\"Create\");\r\n              }}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={() => {\r\n                setShowForm(true);\r\n                setShowFormType(\"Edit\");\r\n              }}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <ExportDialogBox \r\n             systemData={systemData}\r\n             filterTemplateData={selectedRows} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br />\r\n\r\n        {isLoading ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Loader show={isLoading} />\r\n          </div>\r\n        ) : (\r\n          <DataGrid\r\n            idProperty=\"id\"\r\n            showZebraRows={false}\r\n            style={{ minHeight: 550 }}\r\n            columns={columns}\r\n            defaultLimit={100}\r\n              dataSource={sortInfo === null ? systemData : sortedSystemData}\r\n            // rowHeight={null}\r\n            checkboxColumn\r\n            selected={selected}\r\n            onSelectionChange={onSelectionChange}\r\n            handle={ref => gridRef.current = ref ? ref.current : null}\r\n            pagination\r\n            renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n            onSortInfoChange={handleSortInfoChange}\r\n            />\r\n        )}\r\n      </div>\r\n\r\n      {openDesc && (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      )}\r\n\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Setting\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Do you want to delete the selected Setting(s)?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteSetting}>Delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* MODAL BOX */}\r\n      <Dialog\r\n        open={showForm}\r\n        onClose={() => { setShowForm(false) }}\r\n        scroll={'paper'}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth={'md'}\r\n        fullWidth={true}\r\n        onClick={handleBackdropClick}\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">\r\n          {`${showFormType} system setup`}\r\n        </DialogTitle>\r\n        <DialogContent dividers={true}>\r\n          <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n            {/* Display the form values from the state if they exist */}\r\n            {/* {formValues && (\r\n              <div>\r\n                <h2>Form Values:</h2>\r\n                <pre>{JSON.stringify(formValues, null, 2)}</pre>\r\n              </div>\r\n            )} */}\r\n            <SystemSetupForm ref={childCompRef} saveForm={saveForm} selectedRows={selectedRows} editForm={showFormType} />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => { setShowForm(false) }}>Cancel</Button>\r\n          { }\r\n          <Button onClick={handleSubmitForm}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SystemSetup;\r\n","import React from 'react';\r\nimport { Navigate, useLocation, useHref } from 'react-router-dom';\r\nimport { LoginCallback } from '@okta/okta-react';\r\n\r\nconst RedirectRoute = ({ children, ...rest }) => {\r\n    const basename = useHref(\"\");\r\n    const location = useLocation();\r\n    if (basename.startsWith('/')) {\r\n        return <Navigate to=\"/calist\" />;\r\n    } else if (location.pathname.startsWith('/Dev') || location.pathname === '/') {\r\n        return <Navigate to=\"/calist\" />;\r\n    } else if (location.pathname.startsWith('/login/callback')) {\r\n        return <LoginCallback />;\r\n    }\r\n    return children;\r\n};\r\n\r\nexport default RedirectRoute;","import React, { useEffect } from 'react';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CustomLoginCallback = () => {\r\n    const { oktaAuth, authState } = useOktaAuth();\r\n    let navigate = useNavigate();\r\n\r\n    const onSuccess = (user) => {\r\n        // Redirect the user to their intended destination or the home page\r\n        oktaAuth.redirect('/');\r\n        // navigate('/');\r\n    };\r\n\r\n    const onError = (error) => {\r\n        // Handle any errors that may occur during the login process\r\n        console.error('Error during login callback:', error);\r\n    };\r\n\r\n    useEffect(() => {\r\n        oktaAuth.handleLoginRedirect()\r\n            .then(onSuccess)\r\n            .catch(onError);\r\n    }, [oktaAuth]);\r\n\r\n    return (\r\n        <div>\r\n            <h4>Loading...</h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomLoginCallback;","import React from 'react';\r\nimport { useRoutes } from \"react-router-dom\";\r\n\r\nimport AuthGuard from \"app/auth/AuthGuard\";\r\nimport NotFound from \"app/views/sessions/NotFound\";\r\nimport UnauthorizedPage from \"app/unAuthorizedPage\";\r\nimport Homepage from \"app/homepage\";\r\nimport McoListRoutes from \"app/views/mcolist/McoListRoutes\";\r\n\r\nimport MatxLayout from \"./components/MatxLayout/MatxLayout\";\r\nimport templateRoutes from \"app/views/template/templateRoutes\";\r\nimport plantRoutes from \"app/views/plants/plantRoutes\";\r\nimport sourceListroutes from \"app/views/sourceList/sourceListroutes\";\r\nimport mappingsroutes from \"app/views/mappings/mappingsroutes\";\r\nimport buListRoutes from \"app/views/businessUnit/buRoutes\";\r\nimport userListRoutes from \"app/views/users/usersRoutes\";\r\n\r\n//Mapping pages\r\nimport orgallowedroutes from \"app/views/mappingPages/orgAllowedTemplates/orgallowedroutes\";\r\nimport mvocompatibilityRoutes from \"app/views/mappingPages/mvoTemplateCompatibility/mvocompatibiltyroutes\";\r\nimport parttypetotemplateroutes from \"app/views/mappingPages/partTypeToTemplate/parttypeTotemplateroutes\";\r\nimport mvoallowedchangesroutes from \"app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesroutes\";\r\nimport setcomptemproutes from \"app/views/mappingPages/setCompatibleTemplates/setcomptemproutes\";\r\nimport buplantroutes from \"app/views/mappingPages/buPlantMapping/buplantRoutes\";\r\nimport expensemaproutes from \"app/views/mappingPages/expenseMapping/expensemapRoutes\";\r\n\r\nimport draftChangesroutes from \"app/views/draftChanges/draftChangesroutes\";\r\nimport historyroutes from \"app/views/history/historyroutes\";\r\n\r\nimport systemSetupRoutes from \"app/views/systemSetup/systemSetupRoutes\";\r\n\r\nimport RedirectRoute from \"./RedirectRoute\";\r\nimport CustomLoginCallback from \"./CustomLoginCallback\";\r\n\r\nconst allChildroutes = [\r\n  ...McoListRoutes,\r\n  ...templateRoutes,\r\n  ...plantRoutes,\r\n  ...sourceListroutes,\r\n  ...mappingsroutes,\r\n  ...buListRoutes,\r\n  ...mvocompatibilityRoutes,\r\n  ...parttypetotemplateroutes,\r\n  ...mvoallowedchangesroutes,\r\n  ...setcomptemproutes,\r\n  ...orgallowedroutes,\r\n  ...buplantroutes,\r\n  ...expensemaproutes,\r\n  ...draftChangesroutes,\r\n  ...historyroutes,\r\n  ...userListRoutes,\r\n  ...systemSetupRoutes,\r\n]\r\n\r\nexport default function Router() {\r\n  const routes = [\r\n    {\r\n      element: (\r\n        <>\r\n          <AuthGuard>\r\n            <MatxLayout />\r\n          </AuthGuard>\r\n        </>\r\n      ),\r\n      children: allChildroutes,\r\n    },\r\n    {\r\n      path: '/',\r\n      element: <RedirectRoute />,\r\n    },\r\n    {\r\n      path: '/login/callback',\r\n      element: <CustomLoginCallback />,\r\n    },\r\n    {\r\n      path: '/accessDenied',\r\n      element: <UnauthorizedPage />,\r\n    },\r\n    {\r\n      path: '/homepage',\r\n      element: <Homepage />,\r\n    },\r\n    {\r\n      path: '*',\r\n      element: <NotFound />,\r\n    },\r\n  ];\r\n\r\n  let element = useRoutes(routes);\r\n  return element;\r\n}","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport SystemSetupList from \"./systemSetupList\";\r\n\r\nconst systemSetupRoutes = [{\r\n  path: \"/systemSetup\",\r\n  element: (\r\n    <PrivateRoute>\r\n      <SystemSetupList />\r\n    </PrivateRoute>\r\n  ),\r\n}];\r\n\r\nexport default systemSetupRoutes;\r\n","import React from \"react\";\r\nimport \"./Fallback.css\";\r\n\r\nconst Fallback = ({ componentStack, error }) => {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    // In production, render null to disable the error message\r\n    return null;\r\n  } else {\r\n    // In development or other environments, render a default error message\r\n    return (<>\r\n      <section className=\"fallback\">\r\n        <header className=\"fallback__header\">\r\n          <h3 className=\"fallback__title\">Oops! An error occured!</h3>\r\n        </header>\r\n        <div className=\"fallback__body\">\r\n          <p>\r\n            <strong>Error:</strong> {error.toString()}\r\n          </p>\r\n          <p>\r\n            <strong>Stacktrace:</strong> {componentStack}\r\n          </p>\r\n        </div>\r\n      </section>\r\n    </>)\r\n  }\r\n};\r\n\r\nexport default Fallback;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\n\r\nconst DragAndDropComponent = ({ onDropSuccess }) => {\r\n  const dropRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleDragOver = (event) => {\r\n      event.preventDefault();\r\n      event.dataTransfer.dropEffect = \"copy\";\r\n    };\r\n\r\n    const handleDrop = (event) => {\r\n      event.preventDefault();\r\n\r\n      const data = event.dataTransfer.getData(\"text/plain\");\r\n\r\n      try {\r\n        const parsed = JSON.parse(data);\r\n        console.log(\"Dropped object:\", parsed);\r\n\r\n        if (onDropSuccess) {\r\n          onDropSuccess(parsed); // Let parent handle further logic\r\n        }\r\n      } catch (error) {\r\n        console.warn(\"Invalid drop data\", error);\r\n      }\r\n    };\r\n\r\n    const dropArea = dropRef.current;\r\n\r\n    if (dropArea) {\r\n      dropArea.addEventListener(\"dragover\", handleDragOver);\r\n      dropArea.addEventListener(\"drop\", handleDrop);\r\n    }\r\n\r\n    return () => {\r\n      if (dropArea) {\r\n        dropArea.removeEventListener(\"dragover\", handleDragOver);\r\n        dropArea.removeEventListener(\"drop\", handleDrop);\r\n      }\r\n    };\r\n  }, [onDropSuccess]);\r\n\r\n  return (\r\n    <div ref={dropRef} className=\"droppable-container mt-4\">\r\n      <img\r\n        style={{ width: \"90px\", height: \"90px\" }}\r\n        src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n        alt=\"Data Collect\"\r\n        className=\"search-icon\"\r\n      />\r\n      <span className=\"drag-and-drop-text\">Drag and Drop your object here</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Store } from \"./redux/Store\";\r\nimport Router from \"./routes\";\r\nimport { GlobalCss, MatxSuspense, MatxTheme } from \"app/components\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport Fallback from \"./components/Fallback/Fallback\";\r\nimport { OracleMappingsProvider } from \"./contexts/OracleSettingsContext\";\r\nimport { SettingsProvider } from \"./contexts/SettingsContext\";\r\nimport DragAndDropComponent from \"DragAndDrop/DragAndDrop\";\r\n\r\nconst App = () => {\r\n  console.log(\"✅ App.jsx is getting called\");\r\n  const [hasDropped, setHasDropped] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      performance.mark(\"FirstContentfulPaint\");\r\n    }, 1000);\r\n\r\n    console.log(\"ENV:\", process.env.NODE_ENV);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  if (!hasDropped) {\r\n    console.log(\r\n      \"📦 Rendering DragAndDropComponent because hasDropped is false\"\r\n    );\r\n    return (\r\n      <DragAndDropComponent\r\n        onDropSuccess={(data) => {\r\n          console.log(\"✅ Dropping complete:\", data);\r\n          setHasDropped(true);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary FallbackComponent={Fallback} onReset={() => {}}>\r\n      <Provider store={Store}>\r\n        <SettingsProvider>\r\n          <MatxTheme>\r\n            <GlobalCss />\r\n            <MatxSuspense>\r\n              <OracleMappingsProvider>\r\n                <Router />\r\n              </OracleMappingsProvider>\r\n            </MatxSuspense>\r\n          </MatxTheme>\r\n        </SettingsProvider>\r\n      </Provider>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","\r\nexport const formatMessage = (template, replaceArray) => {\r\n    let formattedMessage = template;\r\n    // Replace placeholders in the message template\r\n    replaceArray.forEach((value, index) => {\r\n        const placeholder = new RegExp(`\\\\{${index}\\\\}`, 'g');\r\n        formattedMessage = formattedMessage?.replace(placeholder, value);\r\n    });\r\n    return formattedMessage;\r\n}\r\n\r\nexport const sortDataByKey = (data, key) => {\r\n  if (!Array.isArray(data)) {\r\n    console.error('Invalid data: Expected an array');\r\n    return [];\r\n  }\r\n\r\n  return data.sort((a, b) => {\r\n    const valueA = a[key] !== undefined ? a[key].toString().toLowerCase() : '';\r\n    const valueB = b[key] !== undefined ? b[key].toString().toLowerCase() : '';\r\n\r\n    if (!isNaN(valueA) && !isNaN(valueB)) {\r\n      return parseFloat(valueA) - parseFloat(valueB);\r\n    }\r\n\r\n    if (valueA < valueB) return -1;\r\n    if (valueA > valueB) return 1;\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const sortDataByKeyAllowableOrgTemplates = (data, key) => {\r\n  return data.sort((a, b) => {\r\n    const valueA = a.details[key] || '';\r\n    const valueB = b.details[key] || '';\r\n    return valueA.toLowerCase().localeCompare(valueB.toLowerCase());\r\n  });\r\n}; \r\n\r\nexport const sortByLabel = (data) => {\r\n  return data.sort((a, b) => {\r\n    const labelA = a.label ? a.label.toLowerCase() : '';\r\n    const labelB = b.label ? b.label.toLowerCase() : '';\r\n    return labelA.localeCompare(labelB);\r\n  });\r\n};","import React from 'react';\r\n\r\nexport const MatxLayouts = { layout1: React.lazy(() => import('./Layout1/Layout1')) };\r\n","import React, { useEffect } from \"react\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nexport default function Loader(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        setOpen(props.show)\r\n    }, [props.show]);\r\n\r\n    return (\r\n        <div>\r\n            <Backdrop\r\n                sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                open={open}>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <CircularProgress color=\"inherit\" style={{\r\n                            zIndex: 9999, // Set your desired z-index value\r\n                        }} />\r\n                    </div>\r\n                    <div>Please wait...</div>\r\n                </div>\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class SystemSettingsService {\r\n    getAllsystemSetupList = () => {\r\n        return ApiInstance\r\n            .get(\r\n                `${BACKEND_API_URL}/systemSettings/getSystemSettings`,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"getSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n    getSystemSettingsbyid = (data) => {\r\n        return ApiInstance\r\n            .post(\r\n                `${BACKEND_API_URL}/systemSettings/getSystemSettingsbyid`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"getSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n\r\n    addSystemSettings = (data) => {\r\n        return ApiInstance\r\n            .post(\r\n                `${BACKEND_API_URL}/systemSettings/addSystemSettings`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"addnewSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n\r\n    updateSystemSettings = (data) => {\r\n        return ApiInstance\r\n            .put(\r\n                `${BACKEND_API_URL}/systemSettings/updateSystemSettings`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"updateSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n\r\n    deleteSystemSettings = (ids) => {\r\n        return ApiInstance\r\n            .delete(\r\n                `${BACKEND_API_URL}/systemSettings/deleteSystemSettings`,\r\n                { data: ids },\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error deleting SystemSettings:\", error);\r\n                throw error;\r\n            });\r\n    };\r\n}\r\n","\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nconst CustomAlertBox = ({ openAlert, openDesc, setOpenAlert }) => {\r\n    const vertical = 'top';\r\n    const horizontal = 'center';\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={openAlert}\r\n                // autoHideDuration={30 * 1000} // 30 sec\r\n                onClose={(event, reason) => {\r\n                    if (reason === 'clickaway') {\r\n                        return;\r\n                    }\r\n                    setOpenAlert(false);\r\n                }}\r\n                key={vertical + horizontal}\r\n                sx={{ top: '70px!important' }} // Set top to 70px\r\n            >\r\n\r\n                <Alert\r\n                    onClose={(event, reason) => {\r\n                        if (reason === 'clickaway') {\r\n                            return;\r\n                        }\r\n                        setOpenAlert(false);\r\n                    }}\r\n                    severity={openDesc.severity}\r\n                    sx={{ width: '100%', maxHeight: \"calc(100vh - 100px)\" }}\r\n                >\r\n                    {(openDesc.severity === \"success\") ? (<AlertTitle>Success</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"warning\") ? (<AlertTitle>Warning</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"error\") ? (<AlertTitle>Error</AlertTitle>) : (<></>)}\r\n                    {\r\n                        (openDesc?.type === 'validationcheck') ? (\r\n                            <>\r\n                                <div style={{ fontWeight: \"bold\" }}>\r\n                                    Please verify the below items.\r\n                                </div>\r\n                                <ul>\r\n                                    {openDesc.desc}\r\n                                </ul>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {openDesc.desc}\r\n                            </>\r\n                        )\r\n                    }\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomAlertBox;","export const GET_BU_AND_INSTANSE = 'GET_BU_AND_INSTANSE';\r\n\r\nexport const updateGlobalBUandInstance = (data) => async (dispatch) => {\r\n    try {\r\n      console.log(data, 'updateGlobalBUandInstance data')\r\n      dispatch({\r\n        type: GET_BU_AND_INSTANSE,\r\n        payload: data,\r\n      })\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  };","import axios from 'axios';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\nconst ApiInstance = axios.create();\r\n\r\n// Request interceptor\r\nApiInstance.interceptors.request.use(\r\n    (config) => {\r\n        // Do something before request is sent\r\n        // For example, add an authorization header for specific APIs\r\n        config.headers.Authorization = 'Bearer ' + getOKTAAccessKey();\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Response interceptor\r\nApiInstance.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    (error) => {\r\n        console.error('Error response:', error.response);\r\n        return Promise.reject((error?.response?.data) || 'Something went wrong!')\r\n    }\r\n);\r\n\r\nexport default ApiInstance;","\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nconst CustomAlertBox = ({ openAlert, openDesc, setOpenAlert }) => {\r\n    const vertical = 'top';\r\n    const horizontal = 'center';\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={openAlert}\r\n                // autoHideDuration={30 * 1000} // 30 sec\r\n                onClose={(event, reason) => {\r\n                    if (reason === 'clickaway') {\r\n                        return;\r\n                    }\r\n                    setOpenAlert(false);\r\n                }}\r\n                key={vertical + horizontal}\r\n                sx={{ top: '70px!important' }} // Set top to 70px\r\n            >\r\n\r\n                <Alert\r\n                    onClose={(event, reason) => {\r\n                        if (reason === 'clickaway') {\r\n                            return;\r\n                        }\r\n                        setOpenAlert(false);\r\n                    }}\r\n                    severity={openDesc.severity}\r\n                    sx={{ width: '100%', maxHeight: \"calc(100vh - 100px)\" }}\r\n                >\r\n                    {(openDesc.severity === \"success\") ? (<AlertTitle>Success</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"warning\") ? (<AlertTitle>Warning</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"error\") ? (<AlertTitle>Error</AlertTitle>) : (<></>)}\r\n                    {\r\n                        (openDesc?.type === 'validationcheck') ? (\r\n                            <>\r\n                                <div style={{ fontWeight: \"bold\" }}>\r\n                                    Please verify the below items.\r\n                                </div>\r\n                                <ul>\r\n                                    {openDesc.desc}\r\n                                </ul>\r\n                            </>\r\n                        ) : (<>\r\n                            {openDesc.desc}\r\n                        </>)\r\n                    }\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomAlertBox;","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nexport class MassUpdate {\r\n    massUpdatePartDescription = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/massUpdate/massUpdatePartDescription`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddTemplate\", e);\r\n        return [];\r\n      });\r\n  }\r\n  getMyReport = (data) => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/massUpdate/myReport`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"myReport\", e);\r\n        return [];\r\n      });\r\n  }\r\n  deleteReport = (ids) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/massUpdate/deleteMyReport`,\r\n        { data: { ids } },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting bu:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n  downloadSampleFile=(fileName)=>{\r\n    window.open(`${BACKEND_API_URL}/${fileName}`);\r\n  }\r\n}","// EMRPDH SERVER\r\nexport const BACKEND_API_URL = process.env.REACT_APP_PRO_MODE;\r\n\r\n// React Okta\r\nexport const REACT_APP_EMRPDH_OKTA_CLIENT_ID = process.env.REACT_APP_EMRPDH_OKTA_CLIENT_ID;\r\nexport const REACT_APP_EMRPDH_OKTA_ISSUER = process.env.REACT_APP_EMRPDH_OKTA_ISSUER;\r\nexport const REACT_APP_EMRPDH_OKTA_DOMAIN = process.env.REACT_APP_EMRPDH_OKTA_DOMAIN;\r\n\r\nexport const REACT_APP_ENOVIA_API_URL = process.env.REACT_APP_ENOVIA_API_URL;\r\nexport const REACT_APP_ENOVIA_CLOUD_API_URL = process.env.REACT_APP_ENOVIA_CLOUD_API_URL;\r\nexport const REACT_APP_MULSOFT_API_URL = process.env.REACT_APP_MULSOFT_API_URL;\r\n\r\nexport const REACT_APP_PLM_API_KEY = process.env.REACT_APP_PLM_API_KEY;\r\nexport const REACT_APP_PLM_API_KEY_VALUE = process.env.REACT_APP_PLM_API_KEY_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_ENRYPT_KEY_VALUE = process.env.REACT_APP_MULESOFT_ENRYPT_KEY_VALUE;\r\nexport const REACT_APP_MULESOFT_ENRYPT_INIT_VECTOR_VALUE = process.env.REACT_APP_MULESOFT_ENRYPT_INIT_VECTOR_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_API_CLIENT_ID = process.env.REACT_APP_MULESOFT_API_CLIENT_ID;\r\nexport const REACT_APP_MULESOFT_API_CLIENT_ID_VALUE = process.env.REACT_APP_MULESOFT_API_CLIENT_ID_VALUE;\r\nexport const REACT_APP_MULESOFT_API_CLIENT_SECRET = process.env.REACT_APP_MULESOFT_API_CLIENT_SECRET;\r\nexport const REACT_APP_MULESOFT_API_CLIENT_SECRET_VALUE = process.env.REACT_APP_MULESOFT_API_CLIENT_SECRET_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_ID = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_ID;\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_ID_VALUE = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_ID_VALUE;\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET;\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET_VALUE = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID;\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID_VALUE = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID_VALUE;\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET;\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET_VALUE = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET_VALUE;\r\nexport const client_id = 123;\r\nexport const client_secret = 456;\r\nexport const REACT_APP_ENOVIA_SAAS_API_URL = 'https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1' //process.env.REACT_APP_ENOVIA_SAAS_API_URL\r\nexport const SAP_API_BASE_URL = process.env.REACT_APP_PRO_MODE; //\"http://localhost:8086\" //'https://emr-product-datahub-server-sap-stage.azurewebsites.net' //\"http://localhost:8086\" // process.env.API_BASE_URL\r\n\r\nexport const REACT_APP_BACKEND_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n};\r\nexport const REACT_APP_BACKEND_API_HEADER_FOR_FILE = {\r\n    headers: {\r\n        \"content-type\": \"multipart/form-data; boundary=-------842470573919341855553902\"\r\n    },\r\n};\r\nexport const REACT_APP_ENOVIA_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        [REACT_APP_PLM_API_KEY]: REACT_APP_PLM_API_KEY_VALUE,\r\n    },\r\n};\r\n\r\nexport const REACT_APP_MULESOFT_ITEM_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'text/plain',\r\n        [REACT_APP_MULESOFT_API_CLIENT_ID]: REACT_APP_MULESOFT_API_CLIENT_ID_VALUE,\r\n        [REACT_APP_MULESOFT_API_CLIENT_SECRET]: REACT_APP_MULESOFT_API_CLIENT_SECRET_VALUE,\r\n    },\r\n};\r\nexport const REACT_APP_MULESOFT_BOM_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'text/plain',\r\n        [REACT_APP_MULESOFT_BOM_API_CLIENT_ID]: REACT_APP_MULESOFT_BOM_API_CLIENT_ID_VALUE,\r\n        [REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET]: REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET_VALUE,\r\n    },\r\n};\r\n\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        [REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID]: REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID_VALUE,\r\n        [REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET]: REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET_VALUE,\r\n    },\r\n};\r\n\r\nexport const REACT_APP_MULESOFT_SAAS_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'client_id': client_id,\r\n        'client_secret': client_secret,\r\n        'Access-Control-Allow-Origin': '*'\r\n    },\r\n};","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\n\r\nexport class TemplateMappingService {\r\n  getAlltemplateMappings = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/newtemplateMappings/getTemplateMappings`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTemplateMapping = (tempMappingId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/newtemplateMappings/deleteTemplateMappings/${tempMappingId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting deleteTemplateMappings:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/addTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        //console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/newtemplateMappings/updateTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n  importTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/bulkAddTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddTemplate\", e);\r\n        return [];\r\n      });\r\n  };\r\n  \r\n  downloadSampleFile=(fileName)=>{\r\n    window.open(`${BACKEND_API_URL}/${fileName}`);\r\n  }\r\n\r\n  exportAllTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/exportAllTemplateMapping`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath;\r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportAllData:', error);\r\n        throw error;\r\n      });\r\n  };\r\n  \r\n\r\n  exportAllAdminGeneralProperties = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/exportAllAdminGeneralProperties`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath;\r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportAllData:', error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  exportAllAdminSystemSetups = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/exportAllAdminSystemSetups`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath;\r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportAllData:', error);\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import { sortByLabel } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nexport const BUOptions = [\r\n  { value: \"Micro Motion\", label: \"Micro Motion\" },\r\n  { value: \"Daniel\", label: \"Daniel\" },\r\n  { value: \"EPM brazil\", label: \"EPM brazil\" },\r\n  { value: \"Poly Oil\", label: \"Poly Oil\" },\r\n  { value: \"Rosemount Flow\", label: \"Rosemount Flow\" },\r\n  { value: \"Roxar\", label: \"Roxar\" },\r\n  { value: \"Rosemount Measurement\", label: \"Rosemount Measurement\" },\r\n  { value: \"Flow Assurance\", label: \"Flow Assurance\" },\r\n  { value: \"Flow Systems\", label: \"Flow Systems\" },\r\n  { value: \"Ultrasonic\", label: \"Ultrasonic\" },\r\n  { value: \"Metran Flow\", label: \"Metran Flow\" },\r\n  { value: \"Flow Control Valves\", label: \"Flow Control Valves\" },\r\n  { value: \"Biffi Morin\", label: \"Biffi Morin\" },\r\n  { value: \"DP Flow\", label: \"DP Flow\" },\r\n  { value: \"Magtech\", label: \"Magtech\" },\r\n  { value: \"Keystone Butterfly Valves\", label: \"Keystone Butterfly Valves\" },\r\n];\r\nexport const bomusageOptions = [\r\n  { value: \"1\", label: \"Production\" },\r\n  { value: \"2\", label: \"Engineering/Design\" },\r\n  { value: \"3\", label: \"Universal\" },\r\n  { value: \"4\", label: \"Plant maintenance\" },\r\n  { value: \"5\", label: \"Sales and Distribution\" },\r\n  { value: \"6\", label: \"Costing\" },\r\n  { value: \"7\", label: \"Empties\" },\r\n  { value: \"8\", label: \"Stability study\" },\r\n  { value: \"M\", label: \"External Munitions Display \" },\r\n  { value: \"Z\", label: \"Planning BOM\" },\r\n];\r\nexport const ERPtypeOptions = [\r\n  { value: \"ORACLE\", label: \"ORACLE\" },\r\n  { value: \"JDE\", label: \"JDE\" },\r\n  { value: \"SAP\", label: \"SAP\" },\r\n];\r\n\r\nexport const instanceOptions = sortByLabel([\r\n  { value: \"BETSYD10\", label: \"betsyD10\" },\r\n  { value: \"D01\", label: \"D01\" },\r\n  { value: \"D03\", label: \"D03\" },\r\n  { value: \"ED1\", label: \"ED1\" },\r\n  { value: \"EP1\", label: \"EP1\" },\r\n  { value: \"P01\", label: \"P01\" },\r\n  { value: \"P03\", label: \"P03\" },\r\n  // { value: \"Q01\", label: \"Q01\" },\r\n  // { value: \"Q03\", label: \"Q03\" },\r\n  // { value: \"EQ1\", label: \"EQ1\" },\r\n  // { value: \"EQ3\", label: \"EQ3\" },\r\n  // { value: \"BETSY\", label: \"BETSY\" },\r\n  // { value: \"BETSY\", label: \"BETSY\" },\r\n]);\r\n\r\nexport const exportToERPOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const existInOracleOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const notOwningDivisionOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const userGroupOptions = [\r\n  \"admin\",\r\n  \"Everyone\",\r\n  \"Guest\",\r\n]\r\n\r\nexport const is_authorizedOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const enableBOSTransferOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\nexport const InstanceOptions = sortByLabel([\r\n  { value: \"onPrem\", label: \"onPrem\" },\r\n  { value: \"SaaS\", label: \"SaaS\" },\r\n]);\r\n","import React from \"react\";\r\nimport { Grid, Button } from '@mui/material';\r\nimport { SimpleCard } from \"app/components\";\r\n\r\nconst SomethingWrong = () => {\r\n    return (\r\n        <SimpleCard>\r\n            <Grid container spacing={3} alignItems=\"center\" style={{ position: \"relative\" }}>\r\n                <Grid item md={12} sm={12} xs={12} style={{ textAlign: \"center\" }}>\r\n                    Something went wrong! Please inform to administrator or reload the page.\r\n                    <br></br>\r\n                    <br></br>\r\n                    <Button variant=\"contained\" onClick={() => window.location.reload()}>\r\n                        Reload\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </SimpleCard>\r\n    )\r\n}\r\nexport default SomethingWrong;","\r\nimport {\r\n    REACT_APP_ENOVIA_API_URL,\r\n    REACT_APP_ENOVIA_API_HEADER,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n    BACKEND_API_URL,\r\n    SAP_API_BASE_URL\r\n} from '../config'\r\nimport ApiInstance from './ApiInstance';\r\nimport { Store } from \"app/redux/Store\";\r\n// import BUService from './buService';\r\nimport axios from 'axios';\r\n\r\n\r\n// let buService = new BUService();\r\nlet selectedMCODetailsResponse = []; \r\nexport default class SaaSExecutionService {\r\n    searchCA = (filters) => {\r\n        let searchCAPayload = {\r\n            \"Operation\": \"CA-Search\",\r\n            \"Headers\": {\r\n                \"securityContext\": \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n                \"senderID\": \"EMRPDH\",\r\n                \"TargetID\": \"3DX\",\r\n                \"BusinessGroup\": \"ENOVIA\"\r\n            },\r\n            \"queryParams\": {\r\n                \"searchStr\": `${filters.searchPattern}`,\r\n                \"&$top\": \"10\",\r\n                \"instance\": \"SaaS\"\r\n            },\r\n            \"Requestdata\": \"\"\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/searchCA`, searchCAPayload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n\r\n   \r\n         \r\n    getCARelatedMco = (params) => {  \r\n        let payloadBody = {\r\n            \"queryParams\": {\r\n                \"id\": params?.ca_id,\r\n                \"operation\": \"flowDown\",\r\n                \"instance\": \"SaaS\"\r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caDetails`, payloadBody, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n  \r\n    \r\n    searchMCO = (filters, instance) => { \r\n        let searchCAPayload = {\r\n            \"Operation\": \"CA-Search-flowDown\",\r\n            \"Headers\": {\r\n                \"securityContext\": \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n                \"senderID\": \"EMRPDH\",\r\n                \"TargetID\": \"3DX\",\r\n                \"BusinessGroup\": \"ENOVIA\"\r\n            },\r\n            \"queryParams\": \r\n                {\r\n                    \"searchStr\": `${filters.searchPattern}`,\r\n                    \"&$top\": \"10\",\r\n                    \"instance\": \"SaaS\"\r\n                },\r\n            \r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/searchCA`, searchCAPayload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    \r\n    getMCOdetailById = (params) => {\r\n        let payloadBody = {\r\n            \"queryParams\": {\r\n                \"ids\": [{\"id\":params?.mco_id}],\r\n                \"operation\": \"CA-Details\",\r\n                \"instance\": \"SaaS\",\r\n                \r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caDetails`, payloadBody, headersBody).then((res) => {            \r\n            if (res.status === 200) {\r\n                res.data.map((item) => {\r\n                    if(item.mcoPropeties.id === params?.mco_id){\r\n                        selectedMCODetailsResponse.push(item);\r\n                    }\r\n                })\r\n                // return res.data;\r\n                return selectedMCODetailsResponse[selectedMCODetailsResponse && selectedMCODetailsResponse.length-1];\r\n            }\r\n            throw selectedMCODetailsResponse[0];\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    updateMCOdetails = (data) => {\r\n        return axios.put(`${REACT_APP_ENOVIA_API_URL}/productHierarchy/classify`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    validationByMcoId = (id) => {\r\n        let data = {pass:true};\r\n        return Promise.resolve(data);\r\n        // return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/validate/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n        //     if (res.status === 200) {\r\n        //         return res.data;\r\n        //     }\r\n        //     throw res.data;\r\n        // }).catch((e) => {\r\n        //     return e;\r\n        // });\r\n    };\r\n    getItemDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/erp/item/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBomDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/bom/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    changeStateByMcoId = (id, nextState, obj) => {\r\n        let payload = {            \r\n            \"id\": id,\r\n            \"nextState\": nextState,\r\n            \"instance\": \"SaaS\"\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caMcoPromoteDemote`, payload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data[0];\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    routeStart = (routeId) => {      \r\n        let payload = {\r\n          Operation: \"routeStart\", // Required field\r\n          Headers: {\r\n            securityContext: \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n            senderID: \"EMRPDH\",\r\n            TargetID: \"3DX\",\r\n            BusinessGroup: \"ENOVIA\"\r\n          },\r\n          Requestdata: {\r\n            data: [\r\n              {\r\n                \"id\": routeId  //  Send directly here\r\n              }\r\n            ]\r\n          },\r\n          instance: \"SaaS\" // still needed for backend route mapping\r\n        };\r\n      \r\n        let headersBody = {\r\n          'client_id': 123,\r\n          'client_secret': 456\r\n        };\r\n      \r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/routeStart`, payload, headersBody)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data; \r\n              }\r\n              throw new Error(\"Route start failed or not initiated\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"routeStart error:\", error);\r\n            throw error;\r\n          });\r\n      };\r\n   \r\n    getTaskList = (routeId) => {      \r\n        let payload = {\r\n          Operation: \"taskList\", // Required field\r\n          Headers: {\r\n            securityContext: \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n            senderID: \"EMRPDH\",\r\n            TargetID: \"3DX\",\r\n            BusinessGroup: \"ENOVIA\"\r\n          },\r\n          Requestdata: {\r\n            data: [\r\n              {\r\n                \"id\": routeId  //  Send directly here\r\n              }\r\n            ]\r\n          },\r\n          instance: \"SaaS\" // still needed for backend route mapping\r\n        };\r\n      \r\n        let headersBody = {\r\n          'client_id': 123,\r\n          'client_secret': 456\r\n        };\r\n      \r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/getTaskList`, payload, headersBody)\r\n          .then((res) => {\r\n            if (res.status === 200 && Array.isArray(res.data) && res.data.length > 0) {\r\n                return res.data; \r\n           \r\n              }\r\n              throw new Error(\"No task data found\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching task list:\", error);\r\n            throw error;\r\n          });\r\n      };\r\n\r\n      taskApproval = (taskId) => {\r\n        let payload = {\r\n          Operation: \"taskApproval\",\r\n          Headers: {\r\n            securityContext: \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n            senderID: \"EMRPDH\",\r\n            TargetID: \"3DX\",\r\n            BusinessGroup: \"ENOVIA\"\r\n          },\r\n          Requestdata: {\r\n            data: [\r\n              {\r\n                dataelements: {\r\n                  id: taskId,\r\n                  routeTaskApprovalComments: \"Approve\",\r\n                  routeTaskDueDate: \"\",\r\n                  state: \"Complete\",\r\n                  routeTaskApprovalAction: \"Approve\"\r\n                },\r\n                updateAction: \"MODIFY\"\r\n              }\r\n            ]\r\n          },\r\n          instance: \"SaaS\"\r\n        };\r\n      \r\n        const headersBody = {\r\n          client_id: 123,\r\n          client_secret: 456\r\n        };\r\n      \r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/taskApproval`, payload, headersBody)\r\n          .then(res => {\r\n            if (res.status === 200) return res.data;\r\n            throw res.data;\r\n          })\r\n          .catch(error => {\r\n            console.error(\"❌ Task Approval Error:\", error);\r\n            throw error;\r\n          });\r\n      };\r\n      \r\n      \r\n    updateMCOData = (id, data) => {\r\n        let payload = {            \r\n            \"uriParams\": {\r\n                \"identifier\": id,\r\n                'startDate': data['Start Date'],\r\n                'description': data['description'],\r\n                \"data\": data,\r\n                \"instance\": \"SaaS\"\r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caMcoModify`, payload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };    \r\n    ApproveCAMCO = (data) => {\r\n        let payload = {            \r\n            \"uriParams\": {\r\n                'id': data.id,\r\n                'type': data.type,\r\n                'currentStatus': data.currentStatus\r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caMcoApprove`, payload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    \r\n    getDataForClassificationyMCONames = (data) => {        \r\n        //  Filter out invalid entries (where `name` or `id` is undefined)\r\n        const validData = data.filter(item => item?.name && item?.id);\r\n        if (validData.length === 0) {\r\n            console.error(\"No valid data to send in API request!\");\r\n            return Promise.reject(\"Invalid data - No valid MCO entries.\");\r\n        }\r\n    \r\n\r\n        let payloadBody = {\r\n            \"queryParams\": {\r\n                \"ids\": validData,\r\n                \"operation\": \"CA-Details\",\r\n                \"instance\": \"SaaS\"\r\n            }\r\n        }\r\n     \r\n\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caDetails`, payloadBody, headersBody).then((res) => {            \r\n            if (res.status === 200) {                              \r\n                return res.data;\r\n            }               \r\n            }).then((data)=>{                \r\n                const formattedResponse = {};\r\n                data.forEach(item => {\r\n                    if (item?.mcoPropeties?.name) {\r\n                        formattedResponse[item.mcoPropeties.name] = item;\r\n                    }\r\n                });\r\n                return formattedResponse;\r\n            }).catch((e) => {\r\n                throw e;\r\n            });        \r\n    };\r\n    updateMCOObjects = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMCOObjects/mcoList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRSMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRSMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMRpartList = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMR/partList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSpecDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getSpecDetails/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoPropertyDetails = (mcoName) => {\r\n        let params = {\r\n            mco_id: mcoName,\r\n            isBasics: true\r\n        }\r\n        this.getMCOdetailById(params).then((res)=>{\r\n            if(res){\r\n                return res?.mcoPropeties;\r\n            }\r\n        }).catch((error)=>{\r\n        })\r\n        \r\n        // return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/name/${mcoName}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n        //     if (res.status === 200) {\r\n        //         return res.data;\r\n        //     }\r\n        //     throw res.data;\r\n        // }).catch((e) => {\r\n        //     return e;\r\n        // });\r\n    };\r\n    getMRbyPartAndPlant = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRbyPartAndPlant`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getSourcePlantTemplate = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/sourceList/getSourcePlantTemplate`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getBusinessUnitbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/bu/getBusinessUnitbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getMRRelatedDetailsbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRRelatedDetailsbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    \r\n    getLifeCycleStatusByMCOName = (data) => {\r\n        const validData = data.filter(name => name !== null && name !== undefined);\r\n        if (validData.length === 0) {\r\n            console.error(\"No valid MCO names to send in API request!\");\r\n            return Promise.reject(\"Invalid data - No valid MCO names.\");\r\n        }\r\n        return ApiInstance.post(`${BACKEND_API_URL}/status/getLifeCycleStatusByMCOName`, validData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error(\"API Error:\", e);\r\n            return e;\r\n        });\r\n    };\r\n    getMcoDetailsByName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getMcoDetailsByName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getattributesbyid = (data) => {\r\n        return new Promise(async (reject,resolve)=>{\r\n           await  ApiInstance.post(`${BACKEND_API_URL}/mco/getattributesbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n                if (res.status === 200) {\r\n                    resolve(res.data);\r\n                }\r\n                reject(res.data);\r\n            \r\n        })})\r\n    }\r\n    updateattributesbyid = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updateattributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    sendMCO = (payloadData) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/muleSoftServices/sendMCO`, payloadData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    \r\n}","import {\r\n    REACT_APP_ENOVIA_API_URL,\r\n    REACT_APP_ENOVIA_API_HEADER,\r\n    REACT_APP_ENOVIA_CLOUD_API_URL,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n    BACKEND_API_URL\r\n} from '../config';\r\nimport { Store } from \"app/redux/Store\";\r\nimport ApiInstance from './ApiInstance';\r\nimport axios from 'axios';\r\n\r\nconst getGlobalData = () => {\r\n    const StoreDetails = Store.getState();\r\n    const instanceType = StoreDetails?.globalData?.instanceType;\r\n    const enoviaApi = (instanceType === \"Cloud\") ? REACT_APP_ENOVIA_CLOUD_API_URL : REACT_APP_ENOVIA_API_URL;\r\n    return enoviaApi;\r\n}\r\n\r\nexport default class OnPremExecutionService {\r\n    searchCA = (filters) => {\r\n        return axios.post(`${getGlobalData()}/erp/findObjects`, filters, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    getCARelatedMco = (params) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/CAid/${params?.ca_id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    searchMCO = (filters, instance) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/erp/findMCOObjects`, filters, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    searchMCO_old = (filters) => { //Removed\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/erp/findObjects`, filters, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    getMCOdetailById = (params) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/productHierarchy/classes/${params?.mco_id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMCOdetails = (data) => {\r\n        return axios.put(`${REACT_APP_ENOVIA_API_URL}/productHierarchy/classify`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    validationByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/validate/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getItemDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/erp/item/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBomDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/bom/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    changeStateByMcoId = (id, status, data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/changeState/${id}/${status}`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMCOData = (id, data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMCOData/${id}`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getDataForClassificationyMCONames = (data) => {\r\n        let mcoNames = data?.names;\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/getDataForClassificationyMCONames/mcoList`, mcoNames, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMCOObjects = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMCOObjects/mcoList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRSMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRSMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMRpartList = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMR/partList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            console.log(\"hey vara here===========================================\", res);\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSpecDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getSpecDetails/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoPropertyDetails = (mcoName) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/name/${mcoName}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMRbyPartAndPlant = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRbyPartAndPlant`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getSourcePlantTemplate = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/sourceList/getSourcePlantTemplate`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {                \r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getMRRelatedDetailsbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRRelatedDetailsbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBusinessUnitbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/bu/getBusinessUnitbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getLifeCycleStatusByMCOName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/status/getLifeCycleStatusByMCOName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoDetailsByName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getMcoDetailsByName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getattributesbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getattributesbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    updateattributesbyid = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updateattributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    sendMCO = (payloadData) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/muleSoftServices/sendMCO`, payloadData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n}","\r\nimport {\r\n    BACKEND_API_URL,\r\n    REACT_APP_ENOVIA_API_URL,\r\n    REACT_APP_ENOVIA_CLOUD_API_URL,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n    REACT_APP_ENOVIA_API_HEADER,\r\n    REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n} from '../config'\r\nimport axios from 'axios';\r\nimport ApiInstance from './ApiInstance';\r\nimport partWith100Items from \"app/utils/mcoUtils/100partsdata.json\";\r\nimport partWith50Items from \"app/utils/mcoUtils/50partsdata.json\";\r\nimport SaaSExecutionService from \"./SaaSExecutionService\";\r\nimport OnPremExecutionService from \"./OnPremExecutionService\";\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\n\r\n\r\nlet executionClass;\r\nlet instance;\r\n\r\nexport class MCOService {\r\n    getInstanceDetail = () => {\r\n        instance = localStorage.getItem('instance');        \r\n        switch(instance) {\r\n            case \"onPrem\":\r\n                executionClass = new OnPremExecutionService();\r\n                break;\r\n            case \"SaaS\":\r\n                executionClass = new SaaSExecutionService();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    searchCA = (filters) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.searchCA(filters);\r\n    };\r\n    getCARelatedMco = (params) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getCARelatedMco(params);\r\n    };\r\n    searchMCO = (filters) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.searchMCO(filters, instance);\r\n    };\r\n    getMCOdetailById = (params) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMCOdetailById(params);\r\n    };\r\n    updateMCOdetails = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMCOdetails(data)\r\n    };\r\n    validationByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.validationByMcoId(id);\r\n    };\r\n    getItemDetailsByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getItemDetailsByMcoId(id);\r\n    };\r\n    getBomDetailsByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getBomDetailsByMcoId(id)\r\n    };\r\n    changeStateByMcoId = (id, status, data, action) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.changeStateByMcoId(id, status, data)\r\n    };\r\n    updateMCOData = (id, data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMCOData(id, data);\r\n    };\r\n    getDataForClassificationyMCONames = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getDataForClassificationyMCONames(data);\r\n    };\r\n    updateMCOObjects = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMCOObjects(data);\r\n    };\r\n    getRSMEList = () => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getRSMEList();\r\n    };\r\n    getRMEList = () => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getRMEList();\r\n    };\r\n    updateMRpartList = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMRpartList(data);\r\n    };\r\n    getSpecDetailsByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getSpecDetailsByMcoId(id);\r\n    };\r\n    getMcoPropertyDetails = (mcoName) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMcoPropertyDetails(mcoName);\r\n    };\r\n    ApproveCAMCO = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.ApproveCAMCO(data);\r\n    }\r\n    routeStart = (routeId) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.routeStart(routeId);\r\n    };\r\n    getTaskList = (routeId) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getTaskList(routeId);\r\n    };\r\n\r\n    taskApproval = (taskId) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.taskApproval(taskId);\r\n    };\r\n\r\n    // ==================MULE SERVICE================================\r\n    getMuleToken = () => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/muleSoftServices/getMuleToken`, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    sendMCO = (payloadData) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.sendMCO(payloadData);\r\n    };\r\n    sendAutoReleaseMCOs = (payloadData) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/muleSoftServices/sendAutoReleaseMCOs`, payloadData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };    \r\n    // ================================================\r\n    // =====================PLM BACKEND===============\r\n\r\n    // Attributes\r\n    getattributesbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getattributesbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoDetailsByName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getMcoDetailsByName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    addattributes = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/addattributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    mcoStatusValidation = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/mcoStatusValidation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateattributesbyid = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateattributesbyid(data);\r\n    };\r\n\r\n    updatePartListAndAttributes = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updatePartListAndAttributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    updatePartListAndAddAttributes = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updatePartListAndAddAttributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    getTemplateDetails = () => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/template/gettemplate`, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getPlantData = (data) => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/plant/getplants`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSourceData = (data) => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/sourceList/getSource`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMappingsData = (data) => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/api/mappings`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    itemvalidationbymcoid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/acknowledgement/itemvalidation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    BOMvalidationbymcoid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/acknowledgement/bomValidation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateFinalAcksDetails = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updateFinalAcksDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    callLoggingInfo = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/log/addLogInfo`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    getERPStatus = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/acknowledgement/getacknowledgementByItemId`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSourcePlantTemplate = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getSourcePlantTemplate(data);\r\n    };\r\n    mcoRuleValidation = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/item/validation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMRRelatedDetailsbyid = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMRRelatedDetailsbyid(data);\r\n    };\r\n    addMRRelatedDetails = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/addMRRelatedDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMRRelatedDetails = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mrRelatedDetails/updateMRRelatedDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMRbyPartAndPlant = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMRbyPartAndPlant(data);        \r\n    };\r\n    getMRForCAbyPartAndPlant = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRForCAbyPartAndPlant`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getChildPartDetails = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getChildPartDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBusinessUnitbyid = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getBusinessUnitbyid(data);\r\n    };\r\n    getMRDetailsByPartName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRDetailsByPartName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getLifeCycleStatusByMCOName = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getLifeCycleStatusByMCOName(data);\r\n    };\r\n    updateLifeCycleStatus = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/status/updateLifeCycleStatus`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    massUpdatePartDescription = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/massUpdate/massUpdatePartDescription`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    searchSpecCreationbyKey = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/specCreation/searchSpecCreationbykeyword`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    resendSpecCreation = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/specCreation/resendSpecCreation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    searchObsoletePartbyKey = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/obsoletePart/searchObsoletePartbykeyword`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    resendObsoletePart = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/obsoletePart/resendObsoletePart`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    bulkUploadPartAndTemplate = (data) => {\r\n        return ApiInstance\r\n            .post(\r\n                `${BACKEND_API_URL}/mco/bulkUploadPartAndOracleTemp`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"bulkAddTemplate\", e);\r\n                return [];\r\n            });\r\n    }\r\n    downloadSampleFile = (fileName) => {\r\n        window.open(`${BACKEND_API_URL}/${fileName}`);\r\n    }\r\n    exportMCOData = (data) => {\r\n        return ApiInstance\r\n          .post(\r\n            `${BACKEND_API_URL}/mco/exportMCOData`,\r\n            data,\r\n            REACT_APP_BACKEND_API_HEADER\r\n          )\r\n          .then(async (res) => {\r\n            if (res.status === 200) {\r\n              const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n              try {\r\n                const response = await fetch(fileUrl, {\r\n                  method: 'GET',\r\n                  headers: {\r\n                    'Content-Type': 'application/octet-stream',\r\n                    'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n                  }\r\n                });  \r\n                if (!response.ok) {\r\n                  throw new Error('Failed to fetch the file');\r\n                }  \r\n                const fileBlob = await response.blob();\r\n                const downloadUrl = URL.createObjectURL(fileBlob);\r\n      \r\n                const link = document.createElement('a');\r\n                link.href = downloadUrl;\r\n                link.download = res.data.filePath; \r\n                link.click();\r\n                URL.revokeObjectURL(downloadUrl);\r\n              } catch (error) {\r\n                console.error('Error downloading the file:', error);\r\n              }  \r\n              return res.data;\r\n            }\r\n            throw res.data;\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error in exportTemplate:', error);\r\n            throw error;\r\n          });\r\n    };\r\n    exportTableData = (data) => {\r\n        return ApiInstance\r\n          .post(\r\n            `${BACKEND_API_URL}/exportData/exportTableData`,\r\n            data,\r\n            REACT_APP_BACKEND_API_HEADER\r\n          )\r\n          .then(async (res) => {\r\n            if (res.status === 200) {\r\n              const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n              try {\r\n                const response = await fetch(fileUrl, {\r\n                  method: 'GET',\r\n                  headers: {\r\n                    'Content-Type': 'application/octet-stream',\r\n                    'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n                  }\r\n                });  \r\n                if (!response.ok) {\r\n                  throw new Error('Failed to fetch the file');\r\n                }  \r\n                const fileBlob = await response.blob();\r\n                const downloadUrl = URL.createObjectURL(fileBlob);\r\n      \r\n                const link = document.createElement('a');\r\n                link.href = downloadUrl;\r\n                link.download = res.data.filePath; \r\n                link.click();\r\n                URL.revokeObjectURL(downloadUrl);\r\n              } catch (error) {\r\n                console.error('Error downloading the file:', error);\r\n              }  \r\n              return res.data;\r\n            }\r\n            throw res.data;\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error in exportTemplate:', error);\r\n            throw error;\r\n          });\r\n    };\r\n    getMcoHistorybyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mcoHistory/getMcoHistorybyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n}","import { CircularProgress } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nconst StyledLoading = styled('div')(() => ({\r\n  width: '100%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  '& img': {\r\n    width: 'auto',\r\n    height: '25px',\r\n  },\r\n  '& .circleProgress': {\r\n    position: 'absolute',\r\n    left: -7,\r\n    right: 0,\r\n    top: 'calc(50% - 25px)',\r\n  },\r\n}));\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <StyledLoading>\r\n      <Box position=\"relative\">\r\n        <img src=\"/assets/images/logo-circle.svg\" alt=\"\" />\r\n        <CircularProgress className=\"circleProgress\" />\r\n      </Box>\r\n    </StyledLoading>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","export const topBarHeight = 64\r\nexport const sideNavWidth = 260\r\nexport const navbarHeight = 60\r\nexport const sidenavCompactWidth = 80\r\nexport const containedLayoutWidth = 1200"],"names":["useOracleSettings","useContext","OracleSettingsContext","BreadcrumbRoot","styled","display","flexWrap","alignItems","BreadcrumbName","margin","fontSize","paddingBottom","verticalAlign","textTransform","SubName","_ref","theme","color","palette","text","secondary","StyledIcon","_ref2","marginLeft","hint","Icon","marginBottom","_ref3","routeSegments","useTheme","_jsx","children","_jsxs","Breadcrumbs","separator","sx","position","NavLink","to","map","route","index","length","path","name","shortId","StyledAvatar","Avatar","height","width","StatusCircle","status","bottom","right","borderRadius","border","background","primary","main","error","src","Box","ChatContainer","flexDirection","StyledScrollBar","ScrollBar","flexGrow","ProfileBox","justifyContent","padding","ChatStatus","marginTop","fontWeight","ChatMessage","maxWidth","whiteSpace","wordBreak","MessageTime","_ref4","ChatImgContainer","_ref5","ChatImgBox","_ref6","ChatImg","ChatImgSize","globalMessageList","_ref7","togglePopup","isAlive","setIsAlive","useState","message","setMessage","messageList","setMessageList","currentUserId","chatBottomRef","document","querySelector","dummyReply","async","setTimeout","messageObject","contactId","avatar","push","scrollToBottom","useCallback","scrollTo","top","scrollHeight","behavior","useEffect","time","id","mood","textPrimary","ChatAvatar","H5","Span","IconButton","onClick","item","ind","p","ml","mb","alt","H6","mt","Divider","convertHexToRGB","TextField","placeholder","multiline","rowsMax","fullWidth","InputProps","endAdornment","size","classes","root","value","onChange","e","target","onKeyUp","event","key","shiftKey","tempMessage","trim","tempList","PopupRoot","topBarHeight","breakpoints","down","Popup","spacing","transition","boxShadow","shadows","zIndex","overflow","left","icon","open","setOpen","cloneElement","className","clsx","popupOpen","textAlign","marginRight","paddingTop","Button","paddingLeft","paddingRight","backgroundColor","fallbacks","MenuButton","action","hover","props","anchorEl","setAnchorEl","React","toArray","shouldCloseOnItemClick","horizontalPosition","settings","useSettings","handleClose","Fragment","currentTarget","menuButton","ThemeProvider","themes","activeTheme","Menu","elevation","getContentAnchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","child","LinearProgress","outline","default","Suspense","fallback","MatxLoading","CssBaseline","NavExpandRoot","transform","common","white","BaseButton","ButtonBase","BulletIcon","contrastText","ItemText","BadgeValue","MatxVerticalNavExpansionPanel","mode","collapsed","setCollapsed","elementRef","useRef","componentHeight","pathname","useLocation","iconText","badge","calcaulateHeight","node","current","getAttribute","compactNavItem","_e$target","closest","handleClick","sidenavHoverShow","collapseIcon","expandIcon","ref","style","maxHeight","Alert","MuiAlert","variant","StyledTable","Table","VisuallyHiddenInput","clip","clipPath","Dialog","_importResponse$error","_importResponse$error2","_importResponse$error3","_importResponse$error4","_importResponse$error5","_importResponse$error6","_importResponse$error7","_importResponse$error8","BUService","massUpdate","MassUpdate","importMassupdateFile","setImportMassupdateFile","setOpenAlert","setOpenDesc","setIsLoading","noFileError","setNoFileError","importResponse","setImportResponse","importfileBar","setimportfileBar","importedFileData","setImportedFileData","importedFileName","setImportedFileName","sampleFileUrl","setSampleFileUrl","instance","localStorage","getItem","bussinessUnitLists","BUError","setBUError","importSelectionValues","setImportSelectionValues","BU","handleImportfileBarClose","reason","_Fragment","PaperProps","DialogTitle","cursor","DialogContent","DialogContentText","TableBody","TableRow","TableCell","align","FormControl","InputLabel","Select","labelId","label","prevselectedValues","option","MenuItem","buName","component","startIcon","CloudUploadIcon","type","accept","console","log","file","files","fileType","split","pop","colSpan","handleDownload","downloadSampleFile","download","rel","DialogActions","handleImportFile","hasError","window","confirm","postData","data","Instance","massUpdatePartDescription","then","response","severity","desc","msg","autoFocus","handleCloseImport","Snackbar","autoHideDuration","errorInTemplate","errorInPlants","AlertTitle","errorInTemplateCount","eitem","errorInPlantCount","updateTemplates","templateMappingService","TemplateMappingService","exportAllTempMapping","setExportAllTempMapping","openAlert","openDesc","dataToExport","handleImportOptionSelection","info","RadioGroup","row","defaultValue","FormControlLabel","control","Radio","rdo","exportAllTemplateMapping","CustomAlertBox","exportAllAdminGeneralPropertiesDialog","setExportAllAdminGeneralPropertiesDialog","exportAllAdminGeneralProperties","exportAllAdminSystemSetupsDialog","setExportAllAdminSystemSetupsDialog","exportAllAdminSystemSetups","ListLabel","Paragraph","ExtAndIntCommon","textDecoration","ExternalLink","InternalLink","StyledText","StyledTextforMassUpdate","MatxVerticalNav","items","updateSettings","isLoading","layout1Settings","leftSidebar","isMdScreen","useMediaQuery","handleClickImportButton","handleNavLinkClick","updateSidebarMode","sidebarSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","renderLevels","href","mx","undefined","ExportAllGeneralPropertiesDialogBox","_ref8","isActive","MassUpdatePartDescriptionInEnoviaAndERP","Loader","show","ExportAllSystemSetupsDialogBox","_ref9","ExportAllTemplateMapping","_ref10","CardRoot","Card","CardTitle","subtitle","title","makeStyles","minWidth","minHeight","generateMarginPadding","generateHeightWidh","end","arguments","increament","unit","classList","i","GlobalCss","visibility","opacity","StyledBox","texttransformstyle","ellipsis","textOverflow","lineHeight","MCOService","GET_MCOLIST","GET_MCOINFO","GET_UPDATEMCODETAILS","GET_UPDATE_MCO_RELATED_VALUES","SET_ALL_CA_MCO_DETAILS","SET_UPDATED_ROUTES","RESET_VALUES","setUpdatedRoutes","routes","payload","getMCOLists","dispatch","updateResponseData","updateMcoDetails","update_generalValues","resetValues","BootstrapDialog","BuConfirmationBox","isBUModified","updateBUModifiedData","m","grey","CloseIcon","dividers","Typography","gutterBottom","createContext","userDetails","bussinessUnit","templatesInfo","allTemplatesInfo","mappingTemplatesInfo","refreshData","updateBussinessUnit","updateBussinessUnitLists","updateTemplateLists","updateAllTemplate","updateMappingTemplatesInfo","updateRefreshData","OracleMappingsProvider","authState","authService","useOktaAuth","globalBussinessUnit","useSelector","state","globalBUandInstance","bu","shallowEqual","tempMapService","userService","UserService","navigate","useNavigate","location","setUserDetails","isPageHavingError","setIsPageHavingError","setBussinessUnit","setIsBUModified","setBussinessUnitLists","setTemplatesInfo","setAllTemplatesInfo","setMappingTemplatesInfo","setRefreshData","values","isAuthenticated","getAlltemplateMappings","result","_result$data","_result$data2","_result$data3","_result$data4","templateMappingList","templateList","bulist","getAccessToken","accessToken","validateUser","_result$data5","userInfo","NotAuthorized","catch","err","checkLocalStorage","_location$pathname2","includes","addEventListener","removeEventListener","Provider","SomethingWrong","CircularProgress","_location$pathname","reload","initialState","isPageHavingIssue","stepData","RSMEList","RMEList","responseData","itemERPStatus","affectedPartsData","exportAffectedPartsData","currentMcoDetails","isPropertyFormEdited","isMaterialFormEdited","selectedRowData","selectedRowFormdata","selectedRowIndex","templates","source","plants","materialData","masterData","templateMappingsInfo","ORGAllowedTemplateMappings","previousMcosDetails","mrDetails","massUpdateChanges","lifeCycleData","systemSetingsDetail","eachTemplateOptions","bulkPartTemplates","caRelatedEachMCODetails","allCaMCODetails","mcoSearchLists","showMaterialForm","parentMCODetails","caLifeCycleData","updatedRoutes","baseValues","getBasename","segment","instanceType","systemName","GET_BU_AND_INSTANSE","combineReducers","mcoDetails","MCODetailsReducer","globalData","GlobalDataReducer","GlobalBUandInstanceReducer","middlewares","thunk","Store","createStore","RootReducer","compose","applyMiddleware","x","SettingsContext","Layout","MatxLayouts","MatxSuspense","constructor","getAllUsersList","ApiInstance","get","BACKEND_API_URL","REACT_APP_BACKEND_API_HEADER","res","addnewUser","post","updateUser","put","deleteUser","ids","delete","warn","requestForAccess","importUser","REACT_APP_BACKEND_API_HEADER_FOR_FILE","exportUser","fileUrl","filePath","fetch","method","headers","getOKTAAccessKey","ok","Error","fileBlob","blob","downloadUrl","URL","createObjectURL","link","createElement","replace","click","revokeObjectURL","fileName","templateService","getAllTemplateList","addnewTemplate","getTemplateById","updateTemplate","deleteTemplate","importTemplate","exportTemplate","_parsedToken$accessTo","_parsedToken$accessTo2","_parsedToken$accessTo3","_parsedToken$idToken","getToken","parsedToken","JSON","parse","curruid","claims","uid","userinfo","idToken","exp","Math","floor","Date","now","username","email","token","Buffer","jwt","hex","match","slice","join","c","test","substring","generateRandomId","crypto","msCrypto","array","Uint32Array","getRandomValues","sortInsideRowData","sortedNameDivs","sortedMvoTemplateToDivs","nameDivs","sort","a","b","textA","toUpperCase","textB","localeCompare","MVO_TEMPLATE_TO","mvoTemplateToDivs","sortAndReorderData","filterData","sortObjectValues","obj","Entity","Object","fromEntries","entries","filter","plantGroup","find","sortedPlantGroup","sortedOtherEntities","caseInsensitiveSort","sensitivity","currentInstance","pathArray","fitem","returnVal","getAllBuList","getBusinessUnitbyid","addnewBU","updateBU","deleteBU","textLight","disabled","errorColor","themeColors","whitePurple","whiteBlue","slateDark1","paper","slateDark2","purple1","light","dark","purple2","purpleDark1","purpleDark2","blue","blueDark","red","themeShadows","components","MuiTable","styleOverrides","tableLayout","MuiTableCell","head","MUIDataTableSelectCell","MUIDataTableHeadCell","MUIDataTableBodyCell","MuiButton","contained","MuiCssBaseline","boxSizing","html","MozOsxFontSmoothing","WebkitFontSmoothing","body","MuiFab","MuiAccordion","MuiTooltip","tooltip","MuiMenuItem","MuiExpansionPanel","MuiCard","typography","body1","danger","MatxLayoutSettings","perfectScrollbar","forEach","createTheme","merge","themeOptions","createMatxThemes","bgimgurl","topbar","fixed","secondarySidebar","footer","SettingsProvider","currentSettings","setCurrentSettings","handleUpdateSettings","update","merged","contextValue","useMemo","isInitialised","user","LoginScreen","oktaAuth","originalUri","toRelativeUrl","origin","setOriginalUri","signInWithRedirect","login","Outlet","authenticated","FlexBox","JustifyBox","IMG","NotFoundRoot","NotFound","getBaseUrl","getStorevalue","startsWith","styles","container","button","UnauthorizedPage","_location$state","_location$state2","_location$state3","_location$state4","_location$state5","requestforAccess","setRequestforAccess","logout","signOut","postLogoutRedirectUri","requestAccess","userData","CustomSelect","isdisabled","selectedvalue","onChangeFunc","displayEmpty","renderValue","selected","_selectedOption","selectedOption","businessUnit","listKey","Homepage","setInstance","instanse","Grid","md","sm","xs","selectedOptionValue","InstanceOptions","Component","Loading","CaList","Loadable","lazy","CaDetails","McoList","Mcodetails","TrackerProgressBar","SpecCreationList","ObsoletePartList","MyReportList","element","_userDetails$userinfo","Navigate","tempService","setImportTemplate","setTemplateData","ERPTypeError","setERPTypeError","instanceError","setinstanceError","ERPType","handleImportTemplateSelection","column","selectedValues","TableHead","Autocomplete","multiple","options","Set","add","Array","from","getUniqueValues","_","newValue","renderInput","params","disableCloseOnSelect","disableClearable","isOptionEqualToValue","getOptionSelected","ChipProps","ERPtypeOptions","instanceOptions","CloudDownloadIcon","handleCloseImportTemplate","prev","handleImportTemplate","errorCount","newTemplateAdded","template","setExportTemplate","setDataToExport","templateData","setValue","exportfileBar","setexportfileBar","exportResponse","setExportResponse","handleExportTemplateDialog","SimpleCard","FormLabel","filterTemplateData","handleCloseExportTemplate","exportTemplateHandle","exportData","templateName","isArray","WrappedComponent","sortInfo","initialData","sortedData","sortData","field","columnName","direction","dir","aValue","String","toLowerCase","bValue","Container","Template","toastState","deleteDialog","setDeleteDialog","setInitialData","selectedDelTemplate","setselectedDelTemplate","searchValue","setSearchValue","filteredTempData","setFilteredTempData","setSortInfo","setSelected","selectedRows","setSelectedRows","gridRef","dataMap","sortedFilterTempData","sortDataByKey","onSelectionChange","finally","_toastState","_toastState2","_toastState3","onbeforeunload","history","replaceState","templateModeRef","handleEditTemplate","editSelectedTemplate","selectedTempalteData","templateMode","handleDeleteTemplateDialog","Deltemplate","selRowsData","selRowsDetails","keys","new_FilteredData","subscriber","_subscriber$templateN","_subscriber$plants","_subscriber$BU","some","plant","plantName","handleSortInfoChange","sortedExportDataHOC","SortedTemplate","onSortInfoChange","Breadcrumb","newSearchValue","handleSearch","flex","RouterLink","handleCreateTemplate","handleEditMappingDialog","handleDeleteDialog","handleImportTemplateDialog","ExportDialogBox","DataGrid","idProperty","showZebraRows","defaultLimit","columns","header","Tooltip","defaultFlex","defaultWidth","render","dataSource","checkboxColumn","handle","pagination","renderScroller","_gridRef$current","_gridRef$current2","setScrollTop","getScrollTop","handleCloseDelete","selRowsId","ImportDialogBox","TemplateWrapper","PlantService","getAllPlantsList","getPlantById","addnewPlant","updatePlant","deletePlant","handleDialogClose","tempObject","handleAttributeChange","handleAddAttribute","newKey","handleAddRow","handleDeleteRow","keyerror","attributeForm","valuesInputList","mandatory","material_master","dataType","inputType","overflowY","alignContent","Paper","DeleteIcon","defaultValues","useStyles","spanRed","defaultFormValue","CreateTemplate","plantService","plantData","setPlantData","templateForm","setTemplateForm","exportToERP","existInOracle","notOwningDivision","snackBar","setsnackBar","snackbarmessage","setSnackbarMessage","snackbarseverity","setSnackbarSeverity","diabox","setDiabox","attributeData","setAttributeData","setAttributeForm","setTempObject","setValuesInputList","setNewKey","setNewValue","setKeyerror","selectedBU","setSelectedBU","selectedplants","setSelectedPlants","handleTemplateFormChange","updatedForm","plantId","url","port","authkey","SalesOrg","ECN_required","bomusage","ConnectivityDetails","password","handlesnackBarClick","handlesnackbarClose","onBlur","trimmedValue","prevForm","handleSelectChange","extractedInfo","MenuProps","handleAddNewAttribute","attrivar","aindex","_attributeData$index","attindex","valuesArray","handleEditAttribute","EditIcon","handleDeleteAttribute","prevData","updatedData","splice","_templateForm$templat","_templateForm$desc","_templateForm$ERPType","randomid","toString","attributes","resp","_Object$keys","_resp$message","altHtml","citem","handleCancel","AttributeDialog","prevObject","updatedTempObject","reduce","acc","curr","updatedAttributeData","prevAttributeData","keyExists","valueExists","prevList","newList","EditTemplate","useParams","selectedTemplateObj","setSelectedTemplateObj","tempId","_Object$keys2","selectedTemplate","selectedPlantsInfo","_Object$entries","selectedAttribute","PrivateRoute","exact","authRoles","sa","admin","editor","guest","Plant","selectedDelPlant","setSelectedDelPlant","setFilteredPlantData","filteredPlantData","sortedPlanteData","plantModeRef","handleDeletePlantDialog","DeletePlant","handleEditPlant","editSelectedPlant","selectedPlantData","plantMode","SortedPlant","handleCreatePlant","ConnectivityDetailsDialog","connDetails","handleCDChange","handleAddCD","connectivityError","plantForm","sapsysnum","sapclientid","CreatePlant","allPlantData","setallPlantData","diaBox","setPlantForm","orgId","aliasPlant","setconnDetails","setconnectivityError","materialMasterOption","handlePlantFromChange","Formik","initialValues","Connectivitydetails","onSubmit","Form","exportToERPOptions","bomusageOptions","handleAddPlant","_plantForm$plantName","_plantForm$ERPType","_plantForm$instance","_plantForm$exportToER","_plantForm$plantName2","_plantForm$material_m","_plantForm$bomusage","newPlant","_resp$data","_resp$data$","_resp$data$2","_resp$data$3","EditPlant","setConnDetails","selectedPlant","setSelectedPlant","_selectedPlantObj$Con","_selectedPlantObj$Con2","_selectedPlantObj$Con3","_selectedPlantObj$Con4","_selectedPlantObj$Con5","_selectedPlantObj$Con6","_selectedPlantObj$Con7","_selectedPlantObj$Con8","_selectedPlantObj$Con9","_selectedPlantObj$Con10","_selectedPlantObj$Con11","_selectedPlantObj$Con12","selectedPlantObj","hasOwnProperty","hasValues","Plants","SourceListService","getAllSourceList","deleteSource","addnewSource","updateSource","getSourceById","CreateSourceList","sourceForm","setSourceForm","sourceListService","handleSourceFormChange","environment","handleAddSource","_sourceForm$source","_sourceForm$environme","_sourceForm$instance","_sourceForm$ERPType","newSource","EditSourceList","sourceId","selectedSource","sourceData","Source","Environment","SourceList","setselectedSource","setsourceData","unSortSourceData","setUnSortSourceData","setFilteredSourceData","filteredSourceData","sortedSourceData","handleEditSource","editSelectedSource","selectedSourceData","handleDeleteSourceDilaog","DeleteSource","SortedSource","handleCreateSourceList","MappingsService","getAllMappings","deleteMapping","mappingId","addnewMapping","updateMapping","CreateMapping","mappingForm","setMappingForm","mappingService","handleMappingvalueChange","handleMappingFormChange","Name","handleAddMapping","_mappingForm$Name","_mappingForm$ERPType","newMaping","List","EditMapping","selectedMapping","selectedMappingData","reversedList","Mappings","page","setPage","rowsPerPage","setRowsPerPage","setSelectedMapping","mappingData","setMappingData","filteredRows","setFilteredRows","filteredMappingData","setFilteredMappingData","filterValues","setFilterValues","handleFilterChange","prevFilterValues","dataToShow","filteredData","_subscriber$Name","_subscriber$ERPType","handleCreateMappings","getOptionLabel","editselectedMapping","handleEditMapping","handleDeleteMappingDilaog","TablePagination","px","count","onPageChange","handleChangePage","newPage","rowsPerPageOptions","onRowsPerPageChange","nextIconButtonProps","backIconButtonProps","auth","buData","_data","_a$businessUnit","_b$businessUnit","_item$plants","_item$plants2","exportToERPdisabled","exportToERPbyPassed","enableBOSTransfer","contextDEF","EMRDivisionORGValue","productHierarchy","doNotSendToERP","oracleExisting","makeWithoutBOMList","notOwningDivisionList","BUList","setBUData","buService","setFilteredBUData","filteredBUData","sortedFilteredBuData","selectedBUData","SortedbuList","handleCreateBUList","rowStyle","isSelected","actionFlag","_ref11","_ref12","CreateBU","buForm","setBuFrom","DoNotSendToERP","setDoNotSendToERP","OracleExisting","setOracleExisting","MakeWithoutBOMList","setMakeWithoutBOMList","NotOwningDivisionList","setNotOwningDivisionList","handlebuFormChange","handleTemplateChange","selectedObj","newselectedObj","existing","enableBOSTransferOptions","autoHighlight","handlePlantsChange","renderOption","mr","flexShrink","handleAddbuName","_buForm$buName","newbuName","EditBU","selectBU","setSelectBU","getTemplValues","fieldValue","buId","_resp$data2","_resp$data3","selectBUValue","InfoIcon","userImportDialog","setUserImportDialog","setUserData","mcoService","handleCloseImportDialog","errors","userExportDialog","setUserExportDialog","handleCloseExportUser","userName","Email","is_authorized","sheet_name","UserList","validFilteredBUData","sortedUsersData","handleEditUser","editSelectedUser","selectedUserData","isEdit","handleDeleteUserDilaog","SortedUserData","handleCreateUser","handleImportDialog","handleExportDialog","BulkExportUsers","handleCloseExportDialog","BulkImportUsers","AddEditUser","selectedUser","userForm","setUserFrom","userId","handleUserFormChange","userGroup","setUserGroup","is_authorizedOptions","userGroupInfo","userGroupOptions","_userForm$userName","_userForm$name","_userForm$email","_userForm$is_authoriz","USERList","_filteredPlants","handleorgAllowedDialogClose","selectedPlants","orgAllowedForm","handleorgAllowedFormChange","handleAddOrgAllowedValues","templateOption","setTemplateOption","filteredBUOptions","setFilteredBUOptions","tempData","temp","_temp$BU","ALLOWABLE_ORG_TEMPLATES","Has_MBOM","notOwningDivisionOptions","On_MBOM","EBOM_Allowed","Optional","PO_Org_Exist_Check","filteredPlants","_bussinessUnitLists$f","HistoryManagementService","getAlldraftChanges","deleteTemplateMapping","tempMappingId","addnewTemplateMapping","updateTemplateMapping","applyDraftChanges","discardDraftChanges","dataId","getAllmappingHistory","MVOtempcompService","getAlltempcompMappings","deleteTempCompMapping","addnewTempCompMapping","updateTempCompMapping","softDeleteTempCompMapping","fetchData","getsampleFileUrl","MappingType","MVOtemplatecompContext","mvotemplatecompInfo","updateMVOtempcompLists","useMVOtempComp","PartTypeTemplateContext","parttypetemplateinfo","updateParttypeTemplate","usePartTypeTemplate","MVOallowedchangesContext","mvoallowedchangesinfo","updateMVOallowedchanges","useMVoallowedchanges","SetTempCompContext","comptempInfo","updatecomptempList","useCompTemp","SetTempCompProvider","BUPlantContext","buplantsInfo","updatebuplantsInfo","useBUPlant","ExpenseMappingContext","expensemapInfo","updateExpenseMap","useExpenseMap","isObjectBlank","details","allowableOrgTemplates","ALLOWABLE_ORG_TEMPLATE","MVO_TEMPLATES_TO","TEMPLATE_ORG_MODIFYING","mappingType","AllTempData","_a$field","_b$field","BUID","_item$details","_item$details2","_item$details3","_item$details4","_item$details5","_item$details6","_item$details7","_item$details8","_item$details8$allowa","_item$details9","_item$details9$allowa","_item$details10","_item$details10$MVO_T","_item$details11","_item$details11$TEMPL","item1","MVO_TEMPLATE_OPTION","ENGG_ITEM_TYPE","org_allowed_template","exclusive_use","MVO_TEMPLATE_FROM","TEMPLATE_ORG_EXISTING","PLANT","EXPENSE_TEMPLATE","EXPENSE_PLANTS","flat","dataToPass","_a$field2","_b$field2","OrgAllowedValuesList","orgallowedaddDialog","setOrgallowedaddDialog","setOrgAllowedForm","mvotempcompservice","draftMapService","selectedDeleteMapping","setSelectedDeleteMapping","setIsEdit","orgallowedData","setorgallowedData","filteredDraftTabledata","setFilteredDraftTabledata","handleSearchInputChange","tableTempData","setTableTempData","unSortTableTempData","setUnSortTableTempData","sortedFilterOrgAllowedData","fetchDraftData","finalTempMapList","_finalTempMapList","_finalTempMapList2","_JSON$stringify","_JSON$stringify2","_JSON$stringify2$toLo","stringify","toLocaleLowerCase","filteredOrgAllowedDraftData","obj1","changes","obj2","draftValue_ALLOWABLE_ORG_TEMPLATES","draftValue_Has_MBOM","draftValue_On_MBOM","draftValue_EBOM_Allowed","draftValue_Optional","draftValue_PO_Org_Exist_Check","draft_Plants","_item$details12","_item$details13","_item$details14","_item$details15","_item$details16","_item$details17","_item$details18","_item$details19","_item$details20","_BUOptions$","BUOptions","justify","optionsValues","handleorgAllowedDialogOpen","handleEditOrgAllowedValues","_selectedRows$","_selectedRows$2","selectedDetails","_selectedRows$3","_selectedRows$3$detai","_selectedRows$4","_selectedRows$4$detai","ExportMappingDialog","plantColumnsSet","dataItem","_dataItem$details","plantColumns","dangerouslySetInnerHTML","__html","Constant","adminConstant","orgAllowedList","AllowableOrgTemplate","RDO","HasMBom","OnMbom","EBOM","PoCheck","prepareTableColumn","rowHeight","deleteNote","OrgAllowedDialog","handleorgAllowedDialogAdd","templateid","resultPayload","neworgallowedvalue","ALLOWABLE_ORG_TEMPLATES_ID","ImportMappingsDialog","OrgAllowedValuesWrapper","gridStyle","handleAddMVOtempComp","orgAllowedTempList","formError","selectedRow","handleStatusChange","setTempData","selectedTemplateValues","setSelectedTemplateValues","sortDataByKeyAllowableOrgTemplates","newTempList","_selectedRow$details","newdata","defaultVisible","_data$details","_data$details2","_data$details3","_data$details4","_data$details5","_data$details6","_data$details7","_data$details8","_selectedTemplateValu","_data$details9","updatedStatus","_selectedRow$details2","getSelTempVal","output","_item$status","transformArray","Scrollbars","autoHeight","autoHeightMin","autoHeightMax","autoHide","autoHideTimeout","RDOError","templateError","AllowableOrgTempError","ReactDataGrid","checkboxOnlyRowSelect","MVOtemplateCompatibilityList","_Constant$adminConsta","_Constant$adminConsta2","_Constant$adminConsta3","_Constant$adminConsta4","_Constant$adminConsta5","_Constant$adminConsta6","_Constant$adminConsta7","_Constant$adminConsta8","_Constant$adminConsta9","mvotempcompData","setMVOtempCompData","orgAllowedData","setorgAllowedData","formTemplateSelection","setFormTemplateSelection","setFormError","setRDO","statusObject","setStatusObject","mvoTemplateList","TemplateOptionMVO","sortable","filteredMVOTempDraftData","draft_allowableOrgTemplates","templateSet","missingFromArrObj1","j","has","deletedTemplateLists","newTemplate","item2","newTemplateLists","mergeNewOldTemplates","self","findIndex","deletedText","draft_Plant","statusText","charAt","buFilterData","_buFilterData","onFormSelectionChange","prevState","rest","localStorageBusinessUnit","setLocalStorageBusinessUnit","sortedByFirstColumnFilteredMVOTempData","sortedFilteredMVOTempData","unSortRowSortTableTempData","thisVal","object","assign","MVOtemplCompDialog","templatedata","new_formError","MVO_TEMPLATE_OPTION_ID","orgtemperror","MVOtemplateCompatibilityWrapper","buoption","PartTypeToTemplateList","setOrgAllowedData","parttypetemplateList","TemplateOptionsMVO","allowableOrgTemplatesExclusive","handleEditPartTypeTotemplate","PartTypeTemplateDialog","_templateid$","ENOVIA_PART_TYPE_ID","PartTypeToTemplateWrapper","mvotemplatesTo","MVOallowedchangesList","setMVOtemplatesTo","rowSortTableTempData","draft_MVO_TEMPLATES_TO","unsortedData","mvoallowedchangesList","mvoTemplatesFrom","mvoTemplatesTo","MVOallowedchangesDialog","convertedMVO_TEMPLATES_TO","t","_templateid$2","_templateid$3","MVOallowedChangesWrapper","modifytempdata","SetCompTempList","comptempData","setComptempData","setModifytempData","sortedFilterSetCompTempData","draft_TEMPLATE_ORG_MODIFYING","setComptempList","TemplateForOrgExist","TemplateForOrgModify","SetCompTempDialog","convertedTEMPLATE_ORG_MODIFYING","SetCompTempWrapper","plantGroupOptions","bomStatusOptions","rduOptions","entitydropdown","handleAddBuPlant","setPlantValueList","plantValueList","setDisplayOrder","setFilteredPlants","dropdownOptions","setDropdownOptions","entityOption","setEntityOption","setDataSource","_bussinessUnitLists$f2","plist","concat","filteredPlantsLeftSide","unionBy","plantColumn","rendersInlineEditor","editable","cellProps","v","editProps","inEdit","onComplete","handleChanges","onFocus","startEdit","expensemapList","PlantName","newData","BUPlantList","displayOrder","setPlantColumns","plantMappingList","setPlantMappingList","_finalTempMapList$","_finalTempMapList$$de","sortedList","originalItem","valueCounts","pdata","_pdata$details","_pdata$details2","plantValue","headerColumns","filteredRDODraftData","_selectedRows$$detail","_selectedRows$2$detai","plantValuesarr","enableColumnAutosize","BUPlantDialog","resultPlantPayload","BUPlantWrapper","expense","Input","inputRef","focus","expenseColumn","onKeyDown","onCancel","onEditComplete","columnId","rowId","ExpenseMappingList","expensemapData","setExpenseMapData","sortedFilterExpenseMappingData","filteredExpenseDraftData","draftValue_EXPENSE_TEMPLATE","handleEditExpenseMapping","ExpenseMappingDialog","Number","isNaN","EXPENSE_TEMPLATE_ID","ExpenseMapWrapper","validationSchema","yup","shape","description","required","max","enableReinitialize","validateOnChange","validateOnBlur","resetForm","saveApplyChanges","touched","submitForm","setFieldValue","setErrors","setTouched","applyChangesDialog","Field","as","rows","ErrorMessage","closeDialogBox","setApplyChangesDialog","DraftChangesList","tabledata","setTabledata","filteredTabledata","setFilteredTabledata","historyManagementService","modifiedDateTime","_filteredData","thisItem","updateTemplateMappingData","textWrap","onRowClick","rowData","prevSelectedRows","handleRowClick","CommitChangesForm","RequestChangesWraper","RequestChangesList","DraftChangesWraper","HistoryLIst","historyData","mappingOptions","setMappingOptions","setMappingType","version","date","parseInt","dateTime","year","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","formattedDate","getMinutes","getSeconds","_Object$values$join","_Object$values$join2","thisRowData","HistoryWrapper","HistoryList","systemData","vsystemData","file1","file2","formData","forwardRef","formAllData","setFormAllData","validate","setSubmitting","isValid","backendValues","fieldName","saveForm","formisValid","innerRef","handleSubmit","_props$selectedRows","_props$selectedRows2","editForm","useImperativeHandle","fkey","_formAllData$","thisInputName","currentFieldValue","fieldType","htmlFor","vitem","SystemSetup","childCompRef","showForm","setShowForm","showFormType","setShowFormType","formValues","setFormValues","setSystemData","orgSystemData","setOrgSystemData","systemSettingsService","SystemSettingsService","sortedSystemData","fetchAllDetails","_listValue$data","listValue","getAllsystemSetupList","systemDataValue","newFilteredData","setting","applyFilterData","deleteSystemSettings","scroll","stopPropagation","tabIndex","SystemSetupForm","submittedValues","_updatedData","_updatedData2","_updatedData3","updateSystemSettings","addSystemSettings","basename","useHref","LoginCallback","CustomLoginCallback","onSuccess","redirect","onError","handleLoginRedirect","allChildroutes","McoListRoutes","templateRoutes","plantRoutes","sourceListroutes","mappingsroutes","buListRoutes","mvocompatibilityRoutes","parttypetotemplateroutes","mvoallowedchangesroutes","setcomptemproutes","orgallowedroutes","buplantroutes","expensemaproutes","draftChangesroutes","historyroutes","userListRoutes","SystemSetupList","Router","AuthGuard","MatxLayout","RedirectRoute","useRoutes","componentStack","onDropSuccess","dropRef","handleDragOver","preventDefault","dataTransfer","dropEffect","handleDrop","getData","parsed","dropArea","App","hasDropped","setHasDropped","timer","performance","mark","process","clearTimeout","ErrorBoundary","FallbackComponent","Fallback","onReset","store","MatxTheme","DragAndDropComponent","formatMessage","replaceArray","formattedMessage","_formattedMessage","RegExp","valueA","valueB","parseFloat","sortByLabel","labelA","labelB","layout1","Backdrop","drawer","getSystemSettingsbyid","updateGlobalBUandInstance","axios","create","interceptors","request","use","config","Authorization","Promise","reject","_error$response","getMyReport","deleteReport","REACT_APP_ENOVIA_API_URL","REACT_APP_ENOVIA_CLOUD_API_URL","REACT_APP_PLM_API_KEY","SAP_API_BASE_URL","REACT_APP_ENOVIA_API_HEADER","selectedMCODetailsResponse","SaaSExecutionService","searchCA","filters","searchCAPayload","searchPattern","getCARelatedMco","payloadBody","ca_id","searchMCO","getMCOdetailById","mco_id","mcoPropeties","updateMCOdetails","validationByMcoId","resolve","pass","getItemDetailsByMcoId","getBomDetailsByMcoId","changeStateByMcoId","nextState","routeStart","routeId","Operation","Headers","securityContext","senderID","TargetID","BusinessGroup","Requestdata","getTaskList","taskApproval","taskId","dataelements","routeTaskApprovalComments","routeTaskDueDate","routeTaskApprovalAction","updateAction","client_id","client_secret","updateMCOData","ApproveCAMCO","currentStatus","getDataForClassificationyMCONames","validData","formattedResponse","_item$mcoPropeties","updateMCOObjects","getRSMEList","getRMEList","updateMRpartList","getSpecDetailsByMcoId","getMcoPropertyDetails","mcoName","isBasics","this","getMRbyPartAndPlant","getSourcePlantTemplate","getMRRelatedDetailsbyid","getLifeCycleStatusByMCOName","getMcoDetailsByName","getattributesbyid","updateattributesbyid","sendMCO","payloadData","OnPremExecutionService","getGlobalData","_StoreDetails$globalD","StoreDetails","getState","searchMCO_old","mcoNames","names","executionClass","getInstanceDetail","getMuleToken","sendAutoReleaseMCOs","addattributes","mcoStatusValidation","updatePartListAndAttributes","updatePartListAndAddAttributes","getTemplateDetails","getPlantData","getSourceData","getMappingsData","itemvalidationbymcoid","BOMvalidationbymcoid","updateFinalAcksDetails","callLoggingInfo","getERPStatus","mcoRuleValidation","addMRRelatedDetails","updateMRRelatedDetails","getMRForCAbyPartAndPlant","getChildPartDetails","getMRDetailsByPartName","updateLifeCycleStatus","searchSpecCreationbyKey","resendSpecCreation","searchObsoletePartbyKey","resendObsoletePart","bulkUploadPartAndTemplate","exportMCOData","exportTableData","getMcoHistorybyid","StyledLoading","sideNavWidth","sidenavCompactWidth"],"sourceRoot":""}