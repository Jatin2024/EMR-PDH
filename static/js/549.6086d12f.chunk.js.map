{"version":3,"file":"static/js/549.6086d12f.chunk.js","mappings":"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","sources":["DragAndDrop/DragAndDrop.jsx","app/utils/helpers.js","app/utils/fetchChangeActionFlow.js","app/App.jsx","index.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\n\r\nconst DragAndDropComponent = ({ onDropSuccess }) => {\r\n  const dropRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleDragOver = (event) => {\r\n      event.preventDefault();\r\n      event.dataTransfer.dropEffect = \"copy\";\r\n    };\r\n\r\n    const handleDrop = (event) => {\r\n      event.preventDefault();\r\n\r\n      const data = event.dataTransfer.getData(\"text/plain\");\r\n\r\n      try {\r\n        const parsed = JSON.parse(data);\r\n        console.log(\"Dropped object:\", parsed);\r\n\r\n        if (onDropSuccess) {\r\n          onDropSuccess(parsed); // Let parent handle further logic\r\n        }\r\n      } catch (error) {\r\n        console.warn(\"Invalid drop data\", error);\r\n      }\r\n    };\r\n\r\n    const dropArea = dropRef.current;\r\n\r\n    if (dropArea) {\r\n      dropArea.addEventListener(\"dragover\", handleDragOver);\r\n      dropArea.addEventListener(\"drop\", handleDrop);\r\n    }\r\n\r\n    return () => {\r\n      if (dropArea) {\r\n        dropArea.removeEventListener(\"dragover\", handleDragOver);\r\n        dropArea.removeEventListener(\"drop\", handleDrop);\r\n      }\r\n    };\r\n  }, [onDropSuccess]);\r\n\r\n  return (\r\n    <div ref={dropRef} className=\"droppable-container mt-4\">\r\n      <img\r\n        style={{ width: \"90px\", height: \"90px\" }}\r\n        src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n        alt=\"Data Collect\"\r\n        className=\"search-icon\"\r\n      />\r\n      <span className=\"drag-and-drop-text\">Drag and Drop your object here</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","export const loadWAFData = async () => {\r\n  return await new Promise((resolve, reject) => {\r\n    window.require(\r\n      [\"DS/WAFData/WAFData\"],\r\n      (module) => {\r\n        resolve(module);\r\n      },\r\n      reject\r\n    );\r\n  });\r\n};\r\n\r\n// export const fetchCsrfToken = async () => {\r\n//   try {\r\n//     let securityContext1 = \"VPLMAdmin.Company Name.Default\";\r\n//     const WAFData = await loadWAFData();\r\n//     console.log(\"Security Context is:\", securityContext1);\r\n//     const csrfURL =\r\n//       \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/application/CSRF?tenant=OI000186152\";\r\n\r\n//     const response = await new Promise((resolve, reject) => {\r\n//       WAFData.authenticatedRequest(csrfURL, {\r\n//         method: \"GET\",\r\n//         type: \"json\",\r\n//         onComplete: resolve,\r\n//         onFailure: reject,\r\n//       });\r\n//     });\r\n\r\n//     const csrfToken = response.csrf.name;\r\n//     const csrfValue = response.csrf.value;\r\n//     const securityContextHeader = \"SecurityContext\";\r\n//     const securityContextValue = securityContext1;\r\n\r\n//     const headers = {\r\n//       [csrfToken]: csrfValue,\r\n//       [securityContextHeader]: securityContextValue,\r\n//     };\r\n//     return headers;\r\n//   } catch (error) {\r\n//     console.error(\"[CSRF] Failed to fetch token:\", error);\r\n//     return; // Return empth so that the else block should execute.\r\n//   }\r\n// };\r\n\r\n// export const fetchCsrfToken = async () => {\r\n//   try {\r\n//     const securityContext = \"VPLMAdmin.Company Name.Default\";\r\n//     const WAFData = await loadWAFData(); // Load the WAFData module\r\n\r\n//     const logoutUrl = \"https://oi000186152-eu1.iam.3dexperience.3ds.com/logout\";\r\n\r\n//     // Step 1: Get login token\r\n//     const loginTokenUrl =\r\n//       \"https://oi000186152-eu1.iam.3dexperience.3ds.com/login?action=get_auth_params\";\r\n//     const loginTokenResponse = await fetch(loginTokenUrl);\r\n\r\n//     if (!loginTokenResponse.ok) {\r\n//       throw new Error(\r\n//         `Failed to fetch login token. Status: ${loginTokenResponse.status}`\r\n//       );\r\n//     }\r\n\r\n//     const data = await loginTokenResponse.json();\r\n//     const loginToken = data?.lt;\r\n\r\n//     if (!loginToken) {\r\n//       console.warn(\"[Login] Token missing. Aborting further steps.\");\r\n//       return null;\r\n//     }\r\n\r\n//     console.log(\"[Login] Token:\", loginToken);\r\n\r\n//     // Step 2: Prepare CSRF service URL\r\n//     const csrfServiceUrl =\r\n//       \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/application/CSRF?tenant=OI000186152\";\r\n\r\n//     // ✅ Step 3: Only proceed if loginToken is present\r\n//     const loginUrl = `https://oi000186152-eu1.iam.3dexperience.3ds.com/login?lt=${loginToken}&username=emrserviceuser&password=Emerson123&service=${csrfServiceUrl}`;\r\n\r\n//     console.log(\"Final loginUrl:\", loginUrl);\r\n\r\n//     // Step 4: Use WAFData to make authenticated request\r\n//     const response = await new Promise((resolve, reject) => {\r\n//       WAFData.authenticatedRequest(loginUrl, {\r\n//         method: \"GET\",\r\n//         type: \"json\",\r\n//         onComplete: resolve,\r\n//         onFailure: reject,\r\n//       });\r\n//     });\r\n//     if (response) {\r\n//       console.log(\"Response is:\", response);\r\n//     }\r\n\r\n//     if (!response || !response.csrf) {\r\n//       throw new Error(\"CSRF token not found in response\");\r\n//     }\r\n\r\n//     const csrfToken = response.csrf.name;\r\n//     const csrfValue = response.csrf.value;\r\n\r\n//     const headers = {\r\n//       [csrfToken]: csrfValue,\r\n//       SecurityContext: securityContext,\r\n//       \"Content-Type\": \"application/json\",\r\n//     };\r\n\r\n//     console.log(\"[CSRF] Token fetched and headers ready:\", headers);\r\n//     return headers;\r\n//   } catch (error) {\r\n//     console.error(\"[CSRF] Failed to fetch token using WAFData:\", error);\r\n//     return null;\r\n//   }\r\n// };\r\n\r\nexport const fetchCsrfToken = async () => {\r\n  try {\r\n    const securityContext = \"VPLMAdmin.Company Name.Default\";\r\n    const WAFData = await loadWAFData(); // Load the WAFData module\r\n\r\n    // 🔵 Step 1: Get login token\r\n    const loginTokenUrl =\r\n      \"https://oi000186152-eu1.iam.3dexperience.3ds.com/login?action=get_auth_params\";\r\n    const loginTokenResponse = await fetch(loginTokenUrl);\r\n\r\n    if (!loginTokenResponse.ok) {\r\n      throw new Error(\r\n        `Failed to fetch login token. Status: ${loginTokenResponse.status}`\r\n      );\r\n    }\r\n\r\n    const loginData = await loginTokenResponse.json();\r\n    const loginToken = loginData?.lt;\r\n\r\n    if (!loginToken) {\r\n      console.warn(\"[Login] Token missing. Aborting further steps.\");\r\n      return null;\r\n    }\r\n\r\n    console.log(\"[Login] Token:\", loginToken);\r\n\r\n    // 🔵 Step 2: Define CSRF service URL\r\n    const csrfServiceUrl =\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/application/CSRF?tenant=OI000186152\";\r\n\r\n    // 🔵 Step 3: Compose final login URL\r\n    const loginUrl = `https://oi000186152-eu1.iam.3dexperience.3ds.com/login?lt=${loginToken}&username=emrserviceuser&password=Emerson123&service=${csrfServiceUrl}`;\r\n    console.log(\"Final loginUrl:\", loginUrl);\r\n\r\n    // 🔵 Step 4: Call login URL using WAFData\r\n    const response = await fetch(loginUrl, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    });\r\n    const json = await response.json();\r\n    console.log(\"JSON is:\", json);\r\n\r\n    if (!response || !response.csrf) {\r\n      console.error(\"Login succeeded, but CSRF token not found in response\");\r\n      return null;\r\n    }\r\n\r\n    // ✅ Step 5: Extract CSRF and construct headers\r\n    const csrfToken = response.csrf.name;\r\n    const csrfValue = response.csrf.value;\r\n\r\n    const headers = {\r\n      [csrfToken]: csrfValue,\r\n      SecurityContext: securityContext,\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    console.log(\"[CSRF] Token fetched and headers ready:\", headers);\r\n    return headers;\r\n  } catch (error) {\r\n    console.error(\"[CSRF] Failed to fetch token:\", error);\r\n    return null;\r\n  }\r\n};\r\n","import { fetchCsrfToken, loadWAFData } from \"./helpers\";\r\n\r\nexport const fetchChangeActionFlow = async (objectId) => {\r\n  try {\r\n    const headers = await fetchCsrfToken();\r\n    if (!headers) throw new Error(\"Missing CSRF headers\");\r\n\r\n    const caUrl = `https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dslc/changeaction/${objectId}?$fields=flowDown`;\r\n\r\n    const WAFData = await loadWAFData();\r\n\r\n    const response = await new Promise((resolve, reject) => {\r\n      WAFData.authenticatedRequest(caUrl, {\r\n        method: \"GET\",\r\n\r\n        headers: {\r\n          ...headers,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        type: \"json\",\r\n        onComplete: resolve,\r\n        onFailure: reject,\r\n      });\r\n    });\r\n\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"[Change Action] Failed to fetch flowDown:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DragAndDropComponent from \"../DragAndDrop/DragAndDrop\";\r\nimport { fetchChangeActionFlow } from \"./utils/fetchChangeActionFlow\";\r\n\r\nconst App = () => {\r\n  const [iframeUrl, setIframeUrl] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  useEffect(() => {\r\n    // 1. Reset function\r\n    window.resetToDropArea = () => {\r\n      console.log(\"[App] Resetting to Drop Area View\");\r\n      setIframeUrl(\"\");\r\n      setError(\"\");\r\n    };\r\n\r\n    // 2. Setup manual refresh tracking\r\n    let manualRefresh = false;\r\n\r\n    const mousedownListener = (event) => {\r\n      const parentDoc = window.parent?.document;\r\n      if (!parentDoc) return;\r\n\r\n      const dropdown = parentDoc.querySelector(\".widget-menu-icon\");\r\n      const refreshButton = event.target.closest(\".refresh-item\");\r\n\r\n      if (dropdown && dropdown.contains(event.target)) {\r\n        console.log(\"[App] Dropdown opened.\");\r\n        manualRefresh = false; // Reset on new dropdown open\r\n      }\r\n\r\n      if (refreshButton && refreshButton.textContent.trim() === \"Refresh\") {\r\n        console.log(\"[App] User manually clicked Refresh.\");\r\n        manualRefresh = true;\r\n      }\r\n    };\r\n\r\n    window.parent.document.body.addEventListener(\r\n      \"mousedown\",\r\n      mousedownListener,\r\n      true\r\n    );\r\n\r\n    // 3. Attach onRefresh from widget\r\n    if (window.widget && typeof window.widget.addEvent === \"function\") {\r\n      window.widget.addEvent(\"onRefresh\", () => {\r\n        console.log(`[App] 🔄 onRefresh triggered | Manual: ${manualRefresh}`);\r\n\r\n        if (manualRefresh && typeof window.resetToDropArea === \"function\") {\r\n          window.resetToDropArea();\r\n        }\r\n\r\n        // Always reset the flag after refresh\r\n        manualRefresh = false;\r\n      });\r\n    }\r\n\r\n    // 4. Cleanup\r\n    return () => {\r\n      window.parent.document.body.removeEventListener(\r\n        \"mousedown\",\r\n        mousedownListener,\r\n        true\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  const handleDropSuccess = async (obj) => {\r\n    try {\r\n      const item = obj?.data?.items?.[0];\r\n      if (!item) throw new Error(\"Dropped item is missing\");\r\n\r\n      const { objectType, objectId } = item;\r\n\r\n      if (objectType !== \"Change Action\") {\r\n        alert(\"This functionality is not available for selected type\");\r\n        return;\r\n      }\r\n\r\n      const caFlowResponse = await fetchChangeActionFlow(objectId);\r\n\r\n      const flowDownArray = caFlowResponse?.isFlowDownOf;\r\n\r\n      if (flowDownArray && flowDownArray.length > 0) {\r\n        const targetId = flowDownArray[0].identifier;\r\n        const iUrl = `https://emr-product-datahub-qa.azurewebsites.net/caDetails/${targetId}`;\r\n        setIframeUrl(iUrl);\r\n      } else {\r\n        const iUrlFallback = `https://plmpdh-qa.emerson.com/caDetails/${objectId}`;\r\n        setIframeUrl(iUrlFallback);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Drop handler failed:\", err);\r\n      setError(err.message || \"Unknown error\");\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!iframeUrl ? (\r\n        <DragAndDropComponent onDropSuccess={handleDropSuccess} />\r\n      ) : (\r\n        <iframe\r\n          src={iframeUrl}\r\n          title=\"CA Details\"\r\n          style={{ width: \"100vw\", height: \"100vh\", border: \"none\" }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// import React from \"react\";\r\n// import ReactDOM from \"react-dom/client\";\r\n// import { BrowserRouter, HashRouter, MemoryRouter } from \"react-router-dom\";\r\n// import { CssBaseline } from \"@mui/material\";\r\n// import { StyledEngineProvider } from \"@mui/styled-engine\";\r\n\r\n// // This function mounts the React app.\r\n// let root = null; // Global React root\r\n\r\n// function start() {\r\n//   if (typeof requirejs === \"undefined\") {\r\n//     console.error(\"❌ requirejs is not defined. PlatformAPI won't load.\");\r\n//     return;\r\n//   }\r\n\r\n//   requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n//     window.PlatformAPI = PlatformAPI;\r\n\r\n//     // ⏬ Dynamically import App after PlatformAPI is loaded\r\n//     import(\"./app/App\").then(({ default: App }) => {\r\n//       // Find the root element within the widget's body (if available)\r\n//       let rootElement =\r\n//         window.widget?.body?.querySelector(\"#root\") ||\r\n//         document.getElementById(\"root\");\r\n\r\n//       console.log(\"Root element is: \", rootElement);\r\n//       // If no root element exists, create one and append it\r\n//       if (!rootElement) {\r\n//         rootElement = document.createElement(\"div\");\r\n//         rootElement.id = \"root\";\r\n//         if (window.widget && window.widget.body) {\r\n//           window.widget.body.appendChild(rootElement);\r\n//         } else {\r\n//           document.body.appendChild(rootElement);\r\n//         }\r\n//       }\r\n\r\n//       // Create or reuse the root\r\n//       if (!root) {\r\n//         root = ReactDOM.createRoot(rootElement);\r\n//       }\r\n\r\n//       root.render(\r\n//         <StyledEngineProvider injectFirst>\r\n//           <HashRouter>\r\n//             <CssBaseline />\r\n//             <App />\r\n//           </HashRouter>\r\n//         </StyledEngineProvider>\r\n//       );\r\n//     });\r\n//   });\r\n// }\r\n\r\n// export default function () {\r\n//   if (window.widget) {\r\n//     let hasOnLoadRun = false;\r\n\r\n//     window.widget.addEvent(\"onLoad\", () => {\r\n//       if (hasOnLoadRun) return;\r\n//       hasOnLoadRun = true;\r\n//       start();\r\n//     });\r\n//   } else {\r\n//     console.error(\r\n//       \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n//     );\r\n//   }\r\n// }\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./app/App\";\r\nimport { BrowserRouter, HashRouter, MemoryRouter } from \"react-router-dom\";\r\n\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport { StyledEngineProvider } from \"@mui/styled-engine\";\r\nimport DragAndDropComponent from \"DragAndDrop/DragAndDrop\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n\r\n  const initialEntries = [\"/\"];\r\n\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(<App></App>);\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n"],"names":["_ref","onDropSuccess","dropRef","useRef","useEffect","handleDragOver","event","preventDefault","dataTransfer","dropEffect","handleDrop","data","getData","parsed","JSON","parse","console","log","error","warn","dropArea","current","addEventListener","removeEventListener","_jsxs","ref","className","children","_jsx","style","width","height","src","alt","loadWAFData","async","Promise","resolve","reject","window","require","module","fetchChangeActionFlow","headers","securityContext","loginTokenUrl","loginTokenResponse","fetch","ok","Error","status","loginData","json","loginToken","lt","loginUrl","response","method","credentials","csrf","csrfToken","name","csrfValue","value","SecurityContext","fetchCsrfToken","caUrl","objectId","WAFData","authenticatedRequest","type","onComplete","onFailure","App","iframeUrl","setIframeUrl","useState","setError","resetToDropArea","manualRefresh","mousedownListener","_window$parent","parentDoc","parent","document","dropdown","querySelector","refreshButton","target","closest","contains","textContent","trim","body","widget","addEvent","title","border","DragAndDropComponent","_obj$data","_obj$data$items","item","obj","items","objectType","alert","caFlowResponse","flowDownArray","isFlowDownOf","length","targetId","identifier","err","message","root","hasOnLoadRun","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","getElementById","createElement","id","appendChild","ReactDOM","render","start"],"sourceRoot":""}