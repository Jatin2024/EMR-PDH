{"version":3,"file":"static/js/868.f49eae0d.chunk.js","mappings":"4MAOA,IAAIA,EAAO,KA+CI,SAAS,IACtB,GAAIC,OAAOC,OAAQ,CACjB,IAAIC,GAAe,EAEnBF,OAAOC,OAAOE,SAAS,UAAU,KAC3BD,IACJA,GAAe,EAlDM,qBAAdE,UAKXA,UAAU,CAAC,+BAAgCC,IACzCL,OAAOK,YAAcA,EAGrB,sDAAoBC,MAAKC,IAAuB,IAADC,EAAAC,EAAA,IAAnBC,QAASC,GAAKJ,EAEpCK,GACW,QAAbJ,EAAAR,OAAOC,cAAM,IAAAO,GAAM,QAANC,EAAbD,EAAeK,YAAI,IAAAJ,OAAN,EAAbA,EAAqBK,cAAc,WACnCC,SAASC,eAAe,QAE1BC,QAAQC,IAAI,oBAAqBN,GAE5BA,IACHA,EAAcG,SAASI,cAAc,OACrCP,EAAYQ,GAAK,OACbpB,OAAOC,QAAUD,OAAOC,OAAOY,KACjCb,OAAOC,OAAOY,KAAKQ,YAAYT,GAE/BG,SAASF,KAAKQ,YAAYT,IAKzBb,IACHA,EAAOuB,EAAAA,WAAoBV,IAG7Bb,EAAKwB,QACHC,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CAACC,aAAW,EAAAC,UAC/BC,EAAAA,EAAAA,MAACC,EAAAA,GAAY,CAACC,eAAgB,CAAC,KAAKH,SAAA,EAClCH,EAAAA,EAAAA,KAACO,EAAAA,GAAW,KACZP,EAAAA,EAAAA,KAACb,EAAG,SAGT,GACD,IAvCFM,QAAQe,MAAM,4DAkDL,GAEX,MACEf,QAAQe,MACN,sEAGN,C","sources":["index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { BrowserRouter, MemoryRouter } from \"react-router-dom\";\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport { StyledEngineProvider } from \"@mui/styled-engine\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\n\r\nfunction start() {\r\n  if (typeof requirejs === \"undefined\") {\r\n    console.error(\"❌ requirejs is not defined. PlatformAPI won't load.\");\r\n    return;\r\n  }\r\n\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n\r\n    // ⏬ Dynamically import App after PlatformAPI is loaded\r\n    import(\"./app/App\").then(({ default: App }) => {\r\n      // Find the root element within the widget's body (if available)\r\n      let rootElement =\r\n        window.widget?.body?.querySelector(\"#root\") ||\r\n        document.getElementById(\"root\");\r\n\r\n      console.log(\"Root element is: \", rootElement);\r\n      // If no root element exists, create one and append it\r\n      if (!rootElement) {\r\n        rootElement = document.createElement(\"div\");\r\n        rootElement.id = \"root\";\r\n        if (window.widget && window.widget.body) {\r\n          window.widget.body.appendChild(rootElement);\r\n        } else {\r\n          document.body.appendChild(rootElement);\r\n        }\r\n      }\r\n\r\n      // Create or reuse the root\r\n      if (!root) {\r\n        root = ReactDOM.createRoot(rootElement);\r\n      }\r\n\r\n      root.render(\r\n        <StyledEngineProvider injectFirst>\r\n          <MemoryRouter initialEntries={[\"/\"]}>\r\n            <CssBaseline />\r\n            <App />\r\n          </MemoryRouter>\r\n        </StyledEngineProvider>\r\n      );\r\n    });\r\n  });\r\n}\r\n\r\nexport default function () {\r\n  if (window.widget) {\r\n    let hasOnLoadRun = false;\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) return;\r\n      hasOnLoadRun = true;\r\n      start();\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n"],"names":["root","window","widget","hasOnLoadRun","addEvent","requirejs","PlatformAPI","then","_ref","_window$widget","_window$widget$body","default","App","rootElement","body","querySelector","document","getElementById","console","log","createElement","id","appendChild","ReactDOM","render","_jsx","StyledEngineProvider","injectFirst","children","_jsxs","MemoryRouter","initialEntries","CssBaseline","error"],"sourceRoot":""}