{"version":3,"file":"static/js/22.bcb29eec.chunk.js","mappings":"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","sources":["../node_modules/@okta/okta-auth-js/node_modules/cross-fetch/dist/browser-ponyfill.js","../node_modules/@okta/lib/idx/types/api.ts","../node_modules/@okta/lib/util/console.ts","../node_modules/@okta/lib/util/object.ts","../node_modules/@okta/lib/errors/CustomError.ts","../node_modules/@okta/lib/util/types.ts","../node_modules/@okta/lib/errors/WWWAuthError.ts","../node_modules/@okta/lib/util/misc.ts","../node_modules/@okta/lib/util/url.ts","../node_modules/@okta/lib/errors/AuthSdkError.ts","../node_modules/@okta/lib/oidc/util/oauth.ts","../node_modules/@okta/lib/oidc/util/oauthMeta.ts","../node_modules/@okta/lib/constants.ts","../node_modules/@okta/lib/errors/AuthApiError.ts","../node_modules/@okta/lib/errors/OAuthError.ts","../node_modules/@okta/lib/crypto/browser.ts","../node_modules/@okta/lib/features.ts","../node_modules/@okta/lib/http/request.ts","../node_modules/js-cookie/dist/js.cookie.mjs","../node_modules/@okta/lib/oidc/types/Token.ts","../node_modules/@okta/lib/idx/transactionMeta.ts","../node_modules/@okta/lib/idx/interact.ts","../node_modules/@okta/lib/idx/idxState/v1/actionParser.ts","../node_modules/@okta/lib/idx/idxState/v1/generateIdxAction.ts","../node_modules/@okta/lib/util/jsonpath.ts","../node_modules/@okta/lib/idx/idxState/v1/idxResponseParser.ts","../node_modules/@okta/lib/idx/idxState/v1/remediationParser.ts","../node_modules/@okta/lib/idx/idxState/v1/parsers.ts","../node_modules/@okta/lib/idx/idxState/v1/makeIdxState.ts","../node_modules/@okta/lib/idx/idxState/index.ts","../node_modules/@okta/lib/idx/types/idx-js.ts","../node_modules/@okta/lib/errors/index.ts","../node_modules/@okta/lib/idx/introspect.ts","../node_modules/@okta/lib/idx/remediators/util.ts","../node_modules/@okta/lib/idx/authenticator/util.ts","../node_modules/@okta/lib/idx/remediators/Base/Remediator.ts","../node_modules/@okta/lib/idx/remediators/GenericRemediator/util.ts","../node_modules/@okta/lib/idx/remediators/GenericRemediator/GenericRemediator.ts","../node_modules/@okta/lib/idx/util.ts","../node_modules/@okta/lib/idx/remediate.ts","../node_modules/@okta/lib/idx/run.ts","../node_modules/@okta/lib/idx/authenticate.ts","../node_modules/@okta/lib/idx/authenticator/Authenticator.ts","../node_modules/@okta/lib/idx/authenticator/VerificationCodeAuthenticator.ts","../node_modules/@okta/lib/idx/authenticator/OktaVerifyTotp.ts","../node_modules/@okta/lib/idx/authenticator/OktaPassword.ts","../node_modules/@okta/lib/idx/authenticator/SecurityQuestionEnrollment.ts","../node_modules/@okta/lib/idx/authenticator/SecurityQuestionVerification.ts","../node_modules/@okta/lib/idx/authenticator/WebauthnEnrollment.ts","../node_modules/@okta/lib/idx/authenticator/WebauthnVerification.ts","../node_modules/@okta/lib/idx/remediators/Base/VerifyAuthenticator.ts","../node_modules/@okta/lib/idx/authenticator/getAuthenticator.ts","../node_modules/@okta/lib/idx/remediators/EnrollAuthenticator.ts","../node_modules/@okta/lib/idx/remediators/EnrollPoll.ts","../node_modules/@okta/lib/idx/remediators/SelectEnrollmentChannel.ts","../node_modules/@okta/lib/idx/remediators/EnrollmentChannelData.ts","../node_modules/@okta/lib/idx/remediators/ChallengeAuthenticator.ts","../node_modules/@okta/lib/idx/remediators/ChallengePoll.ts","../node_modules/@okta/lib/idx/remediators/ResetAuthenticator.ts","../node_modules/@okta/lib/idx/remediators/EnrollProfile.ts","../node_modules/@okta/lib/idx/remediators/Identify.ts","../node_modules/@okta/lib/idx/remediators/ReEnrollAuthenticator.ts","../node_modules/@okta/lib/idx/remediators/ReEnrollAuthenticatorWarning.ts","../node_modules/@okta/lib/idx/remediators/RedirectIdp.ts","../node_modules/@okta/lib/idx/remediators/Base/SelectAuthenticator.ts","../node_modules/@okta/lib/idx/remediators/SelectAuthenticatorAuthenticate.ts","../node_modules/@okta/lib/idx/remediators/SelectAuthenticatorEnroll.ts","../node_modules/@okta/lib/idx/remediators/SelectAuthenticatorUnlockAccount.ts","../node_modules/@okta/lib/idx/remediators/SelectEnrollProfile.ts","../node_modules/@okta/lib/idx/remediators/Base/AuthenticatorData.ts","../node_modules/@okta/lib/idx/remediators/AuthenticatorVerificationData.ts","../node_modules/@okta/lib/idx/remediators/AuthenticatorEnrollmentData.ts","../node_modules/@okta/lib/idx/remediators/Skip.ts","../node_modules/@okta/lib/idx/flow/AuthenticationFlow.ts","../node_modules/@okta/lib/idx/flow/PasswordRecoveryFlow.ts","../node_modules/@okta/lib/idx/flow/RegistrationFlow.ts","../node_modules/@okta/lib/idx/flow/AccountUnlockFlow.ts","../node_modules/@okta/lib/idx/flow/FlowSpecification.ts","../node_modules/@okta/lib/idx/cancel.ts","../node_modules/@okta/lib/oidc/util/urlParams.ts","../node_modules/@okta/lib/idx/emailVerify.ts","../node_modules/@okta/lib/idx/proceed.ts","../node_modules/@okta/lib/idx/poll.ts","../node_modules/@okta/lib/idx/startTransaction.ts","../node_modules/@okta/lib/idx/register.ts","../node_modules/@okta/lib/idx/recoverPassword.ts","../node_modules/@okta/lib/idx/handleInteractionCodeRedirect.ts","../node_modules/@okta/lib/idx/unlockAccount.ts","../node_modules/@okta/lib/oidc/util/errors.ts","../node_modules/@okta/lib/oidc/util/loginRedirect.ts","../node_modules/@okta/lib/idx/factory/api.ts","../node_modules/@okta/lib/http/OktaUserAgent.ts","../node_modules/@okta/lib/http/headers.ts","../node_modules/@okta/lib/crypto/base64.ts","../node_modules/@okta/lib/crypto/oidcHash.ts","../node_modules/@okta/lib/crypto/verifyToken.ts","../node_modules/@okta/lib/util/PromiseQueue.ts","../node_modules/@okta/lib/oidc/util/pkce.ts","../node_modules/@okta/lib/oidc/decodeToken.ts","../node_modules/@okta/lib/oidc/util/defaultTokenParams.ts","../node_modules/@okta/lib/oidc/dpop.ts","../node_modules/@okta/lib/oidc/endpoints/token.ts","../node_modules/@okta/lib/oidc/endpoints/well-known.ts","../node_modules/@okta/lib/oidc/verifyToken.ts","../node_modules/@okta/lib/oidc/util/validateClaims.ts","../node_modules/@okta/lib/oidc/handleOAuthResponse.ts","../node_modules/@okta/lib/oidc/exchangeCodeForTokens.ts","../node_modules/@okta/lib/oidc/util/browser.ts","../node_modules/@okta/lib/oidc/util/prepareTokenParams.ts","../node_modules/@okta/lib/oidc/endpoints/authorize.ts","../node_modules/@okta/lib/oidc/getToken.ts","../node_modules/@okta/lib/oidc/getWithoutPrompt.ts","../node_modules/@okta/lib/oidc/getWithPopup.ts","../node_modules/@okta/lib/oidc/getWithRedirect.ts","../node_modules/@okta/lib/oidc/parseFromUrl.ts","../node_modules/@okta/lib/oidc/renewTokensWithRefresh.ts","../node_modules/@okta/lib/oidc/util/refreshToken.ts","../node_modules/@okta/lib/oidc/renewToken.ts","../node_modules/@okta/lib/oidc/renewTokens.ts","../node_modules/@okta/lib/oidc/revokeToken.ts","../node_modules/@okta/lib/oidc/introspect.ts","../node_modules/@okta/lib/oidc/util/prepareEnrollAuthenticatorParams.ts","../node_modules/@okta/lib/oidc/util/defaultEnrollAuthenticatorParams.ts","../node_modules/@okta/lib/oidc/enrollAuthenticator.ts","../node_modules/@okta/lib/oidc/util/enrollAuthenticatorMeta.ts","../node_modules/@okta/lib/oidc/factory/api.ts","../node_modules/@okta/lib/oidc/getUserInfo.ts","../node_modules/@okta/lib/oidc/util/validateToken.ts","../node_modules/@okta/lib/clock.ts","../node_modules/@okta/lib/oidc/types/TokenManager.ts","../node_modules/@okta/lib/oidc/TokenManager.ts","../node_modules/@okta/lib/browser/browserStorage.ts","../node_modules/@okta/lib/oidc/mixin/index.ts","../node_modules/@okta/lib/oidc/mixin/browser.ts","../node_modules/@okta/lib/core/AuthStateManager.ts","../node_modules/@okta/lib/services/AutoRenewService.ts","../node_modules/broadcast-channel/dist/esbrowser/util.js","../node_modules/broadcast-channel/dist/esbrowser/methods/native.js","../node_modules/oblivious-set/src/index.ts","../node_modules/broadcast-channel/dist/esbrowser/options.js","../node_modules/broadcast-channel/dist/esbrowser/methods/indexed-db.js","../node_modules/broadcast-channel/dist/esbrowser/methods/localstorage.js","../node_modules/broadcast-channel/dist/esbrowser/methods/simulate.js","../node_modules/broadcast-channel/dist/esbrowser/method-chooser.js","../node_modules/broadcast-channel/dist/esbrowser/broadcast-channel.js","../node_modules/@okta/lib/services/SyncStorageService.ts","../node_modules/unload/dist/es/index.js","../node_modules/unload/dist/es/node.js","../node_modules/unload/dist/es/browser.js","../node_modules/broadcast-channel/dist/esbrowser/leader-election-util.js","../node_modules/broadcast-channel/dist/esbrowser/leader-election-web-lock.js","../node_modules/broadcast-channel/dist/esbrowser/leader-election.js","../node_modules/@okta/lib/services/LeaderElectionService.ts","../node_modules/@okta/lib/services/RenewOnTabActivationService.ts","../node_modules/@okta/lib/core/ServiceManager/browser.ts","../node_modules/@okta/lib/session/api.ts","../node_modules/@okta/lib/session/mixin.ts","../node_modules/@okta/lib/session/factory.ts","../node_modules/@okta/lib/core/factory.ts","../node_modules/@okta/lib/base/factory.ts","../node_modules/@okta/lib/storage/mixin.ts","../node_modules/@okta/lib/http/mixin.ts","../node_modules/@okta/lib/core/mixin.ts","../node_modules/@okta/lib/browser/fingerprint.ts","../node_modules/@okta/lib/idx/webauthn.ts","../node_modules/@okta/lib/storage/options/browser.ts","../node_modules/@okta/lib/storage/options/StorageOptionsConstructor.ts","../node_modules/@okta/lib/base/options.ts","../node_modules/@okta/lib/fetch/fetchRequest.ts","../node_modules/@okta/lib/oidc/options/OAuthOptionsConstructor.ts","../node_modules/@okta/lib/http/options.ts","../node_modules/@okta/lib/oidc/options/browser.ts","../node_modules/@okta/lib/storage/SavedObject.ts","../node_modules/@okta/lib/storage/BaseStorageManager.ts","../node_modules/@okta/lib/core/storage.ts","../node_modules/@okta/lib/oidc/storage.ts","../node_modules/@okta/lib/oidc/types/Transaction.ts","../node_modules/@okta/lib/oidc/TransactionManager.ts","../node_modules/@okta/lib/oidc/util/sharedStorage.ts","../node_modules/@okta/lib/myaccount/transactions/Base.ts","../node_modules/@okta/lib/myaccount/request.ts","../node_modules/@okta/lib/myaccount/transactions/ProfileTransaction.ts","../node_modules/@okta/lib/myaccount/transactions/ProfileSchemaTransaction.ts","../node_modules/@okta/lib/myaccount/types.ts","../node_modules/@okta/lib/myaccount/profileApi.ts","../node_modules/@okta/lib/myaccount/transactions/EmailStatusTransaction.ts","../node_modules/@okta/lib/myaccount/transactions/EmailChallengeTransaction.ts","../node_modules/@okta/lib/myaccount/transactions/EmailTransaction.ts","../node_modules/@okta/lib/myaccount/emailApi.ts","../node_modules/@okta/lib/myaccount/transactions/PhoneTransaction.ts","../node_modules/@okta/lib/myaccount/phoneApi.ts","../node_modules/@okta/lib/myaccount/transactions/PasswordTransaction.ts","../node_modules/@okta/lib/myaccount/passwordApi.ts","../node_modules/@okta/lib/authn/util/stateToken.ts","../node_modules/@okta/lib/authn/api.ts","../node_modules/@okta/lib/authn/util/link2fn.ts","../node_modules/@okta/lib/errors/AuthPollStopError.ts","../node_modules/@okta/lib/authn/util/poll.ts","../node_modules/@okta/lib/authn/util/flattenEmbedded.ts","../node_modules/@okta/lib/authn/util/links2fns.ts","../node_modules/@okta/lib/authn/AuthnTransactionImpl.ts","../node_modules/@okta/lib/authn/factory.ts","../node_modules/@okta/lib/exports/default.ts","../node_modules/@okta/lib/idx/options.ts","../node_modules/@okta/lib/core/options.ts","../node_modules/@okta/lib/idx/storage.ts","../node_modules/@okta/lib/idx/factory/OktaAuthIdx.ts","../node_modules/@okta/lib/idx/mixin.ts","../node_modules/@okta/lib/idx/IdxTransactionManager.ts","../node_modules/@okta/lib/myaccount/mixin.ts","../node_modules/@okta/lib/authn/mixin.ts","../node_modules/process/browser.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","../node_modules/@okta/src/OktaError.tsx","../node_modules/@okta/src/Security.tsx","../node_modules/@okta/src/LoginCallback.tsx","../node_modules/@okta/src/SecureRoute.tsx","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/p-cancelable/index.js","../node_modules/tiny-emitter/index.js"],"sourcesContent":["// Save global object in a variable\nvar __global__ =\n(typeof globalThis !== 'undefined' && globalThis) ||\n(typeof self !== 'undefined' && self) ||\n(typeof global !== 'undefined' && global);\n// Create an object that extends from __global__ without the fetch function\nvar __globalThis__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = __global__.DOMException\n}\nF.prototype = __global__; // Needed for feature detection on whatwg-fetch's code\nreturn new F();\n})();\n// Wraps whatwg-fetch with a function scope to hijack the global object\n// \"globalThis\" that's going to be patched\n(function(globalThis) {\n\nvar irrelevant = (function (exports) {\n\n  /* eslint-disable no-prototype-builtins */\n  var g =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof self !== 'undefined' && self) ||\n    // eslint-disable-next-line no-undef\n    (typeof global !== 'undefined' && global) ||\n    {};\n\n  var support = {\n    searchParams: 'URLSearchParams' in g,\n    iterable: 'Symbol' in g && 'iterator' in Symbol,\n    blob:\n      'FileReader' in g &&\n      'Blob' in g &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in g,\n    arrayBuffer: 'ArrayBuffer' in g\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n      throw new TypeError('Invalid character in header field name: \"' + name + '\"')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        if (header.length != 2) {\n          throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length)\n        }\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body._noBody) return\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);\n    var encoding = match ? match[1] : 'utf-8';\n    reader.readAsText(blob, encoding);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      /*\n        fetch-mock wraps the Response object in an ES6 Proxy to\n        provide useful test harness features such as flush. However, on\n        ES5 browsers without fetch or Proxy support pollyfills must be used;\n        the proxy-pollyfill is unable to proxy an attribute unless it exists\n        on the object before the Proxy is created. This change ensures\n        Response.bodyUsed exists on the instance, while maintaining the\n        semantic of setting Request.bodyUsed in the constructor before\n        _initBody is called.\n      */\n      // eslint-disable-next-line no-self-assign\n      this.bodyUsed = this.bodyUsed;\n      this._bodyInit = body;\n      if (!body) {\n        this._noBody = true;\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        var isConsumed = consumed(this);\n        if (isConsumed) {\n          return isConsumed\n        } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n          return Promise.resolve(\n            this._bodyArrayBuffer.buffer.slice(\n              this._bodyArrayBuffer.byteOffset,\n              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n            )\n          )\n        } else {\n          return Promise.resolve(this._bodyArrayBuffer)\n        }\n      } else if (support.blob) {\n        return this.blob().then(readBlobAsArrayBuffer)\n      } else {\n        throw new Error('could not read as ArrayBuffer')\n      }\n    };\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    if (!(this instanceof Request)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal || (function () {\n      if ('AbortController' in g) {\n        var ctrl = new AbortController();\n        return ctrl.signal;\n      }\n    }());\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n\n    if (this.method === 'GET' || this.method === 'HEAD') {\n      if (options.cache === 'no-store' || options.cache === 'no-cache') {\n        // Search for a '_' parameter in the query string\n        var reParamSearch = /([?&])_=[^&]*/;\n        if (reParamSearch.test(this.url)) {\n          // If it already exists then set the value with the current time\n          this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());\n        } else {\n          // Otherwise add a new '_' parameter to the end with the current time\n          var reQueryString = /\\?/;\n          this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();\n        }\n      }\n    }\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n    // https://github.com/github/fetch/issues/748\n    // https://github.com/zloirock/core-js/issues/751\n    preProcessedHeaders\n      .split('\\r')\n      .map(function(header) {\n        return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n      })\n      .forEach(function(line) {\n        var parts = line.split(':');\n        var key = parts.shift().trim();\n        if (key) {\n          var value = parts.join(':').trim();\n          try {\n            headers.append(key, value);\n          } catch (error) {\n            console.warn('Response ' + error.message);\n          }\n        }\n      });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!(this instanceof Response)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    if (this.status < 200 || this.status > 599) {\n      throw new RangeError(\"Failed to construct 'Response': The status provided (0) is outside the range [200, 599].\")\n    }\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 200, statusText: ''});\n    response.ok = false;\n    response.status = 0;\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = g.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        // This check if specifically for when a user fetches a file locally from the file system\n        // Only if the status is out of a normal range\n        if (request.url.indexOf('file://') === 0 && (xhr.status < 200 || xhr.status > 599)) {\n          options.status = 200;\n        } else {\n          options.status = xhr.status;\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        setTimeout(function() {\n          resolve(new Response(body, options));\n        }, 0);\n      };\n\n      xhr.onerror = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request failed'));\n        }, 0);\n      };\n\n      xhr.ontimeout = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request timed out'));\n        }, 0);\n      };\n\n      xhr.onabort = function() {\n        setTimeout(function() {\n          reject(new exports.DOMException('Aborted', 'AbortError'));\n        }, 0);\n      };\n\n      function fixUrl(url) {\n        try {\n          return url === '' && g.location.href ? g.location.href : url\n        } catch (e) {\n          return url\n        }\n      }\n\n      xhr.open(request.method, fixUrl(request.url), true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr) {\n        if (support.blob) {\n          xhr.responseType = 'blob';\n        } else if (\n          support.arrayBuffer\n        ) {\n          xhr.responseType = 'arraybuffer';\n        }\n      }\n\n      if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || (g.Headers && init.headers instanceof g.Headers))) {\n        var names = [];\n        Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n          names.push(normalizeName(name));\n          xhr.setRequestHeader(name, normalizeValue(init.headers[name]));\n        });\n        request.headers.forEach(function(value, name) {\n          if (names.indexOf(name) === -1) {\n            xhr.setRequestHeader(name, value);\n          }\n        });\n      } else {\n        request.headers.forEach(function(value, name) {\n          xhr.setRequestHeader(name, value);\n        });\n      }\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!g.fetch) {\n    g.fetch = fetch;\n    g.Headers = Headers;\n    g.Request = Request;\n    g.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__globalThis__);\n// This is a ponyfill, so...\n__globalThis__.fetch.ponyfill = true;\ndelete __globalThis__.fetch.polyfill;\n// Choose between native implementation (__global__) or custom implementation (__globalThis__)\nvar ctx = __global__.fetch ? __global__ : __globalThis__;\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { APIError } from '../../errors/types';\nimport {\n  OktaAuthOAuthInterface,\n  MinimalOktaOAuthInterface,\n  Tokens,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../../oidc/types';\nimport { FlowIdentifier } from './FlowIdentifier';\nimport {\n  IdxActions,\n  IdxAuthenticator,\n  IdxContext,\n  IdxForm,\n  IdxMessage,\n  IdxOption,\n  IdxRemediation,\n  IdxResponse,\n  RawIdxResponse,\n  IdxActionParams,\n  IdpConfig,\n  IdxToPersist,\n  ChallengeData,\n  ActivationData,\n} from './idx-js';\nimport {\n  IdxOptions,\n  AccountUnlockOptions,\n  AuthenticationOptions,\n  CancelOptions,\n  InteractOptions,\n  IntrospectOptions,\n  OktaAuthIdxOptions,\n  PasswordRecoveryOptions,\n  ProceedOptions,\n  RegistrationOptions,\n  StartOptions,\n  IdxTransactionMetaOptions\n} from './options';\nimport { IdxTransactionMeta } from './meta';\nimport { IdxStorageManagerInterface, SavedIdxResponse } from './storage';\nimport type {\n  WebauthnEnrollValues,\n  WebauthnVerificationValues\n} from '../authenticator';\nimport { OktaAuthConstructor, FingerprintAPI } from '../../base/types';\n\nexport enum IdxStatus {\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  FAILURE = 'FAILURE',\n  TERMINAL = 'TERMINAL',\n  CANCELED = 'CANCELED',\n}\n\nexport enum AuthenticatorKey {\n  OKTA_PASSWORD = 'okta_password',\n  OKTA_EMAIL = 'okta_email',\n  PHONE_NUMBER = 'phone_number',\n  GOOGLE_AUTHENTICATOR = 'google_otp',\n  SECURITY_QUESTION = 'security_question',\n  OKTA_VERIFY = 'okta_verify',\n  WEBAUTHN = 'webauthn',\n}\n\nexport type Input = {\n  name: string;\n  key?: string;\n  type?: string;\n  label?: string;\n  value?: string | {form: IdxForm} | Input[];\n  minLength?: number;\n  maxLength?: number;\n  secret?: boolean;\n  required?: boolean;\n  options?: IdxOption[];\n  mutable?: boolean;\n  visible?: boolean;\n  customLabel?: boolean\n}\n\n\nexport interface IdxPollOptions extends Pick<IdxOptions, 'exchangeCodeForTokens' | 'withCredentials' > {\n  required?: boolean;\n  refresh?: number;\n}\n\nexport type NextStep = {\n  name: string;\n  authenticator?: IdxAuthenticator;\n  canSkip?: boolean;\n  canResend?: boolean;\n  inputs?: Input[];\n  poll?: IdxPollOptions;\n  authenticatorEnrollments?: IdxAuthenticator[];\n  // eslint-disable-next-line no-use-before-define\n  action?: (params?: IdxActionParams) => Promise<IdxTransaction>;\n  idp?: IdpConfig;\n  href?: string;\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  refresh?: number;\n}\n\nexport enum IdxFeature {\n  PASSWORD_RECOVERY = 'recover-password',\n  REGISTRATION = 'enroll-profile',\n  SOCIAL_IDP = 'redirect-idp',\n  ACCOUNT_UNLOCK = 'unlock-account',\n}\n\n\nexport interface IdxTransaction {\n  status: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n  \n  // from idx-js, used by signin widget\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  context: IdxContext;\n}\n\n\nexport type Authenticator = {\n  id?: string;\n  key?: string;\n  methodType?: string;\n  phoneNumber?: string;\n  channel?: string;\n};\n\nexport function isAuthenticator(obj: any): obj is Authenticator {\n  return obj && (obj.key || obj.id);\n}\n\nexport interface RemediationResponse {\n  idxResponse: IdxResponse;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  terminal?: boolean;\n  canceled?: boolean;\n}\n\nexport interface InteractResponse {\n  state?: string;\n  interactionHandle: string;\n  meta: IdxTransactionMeta;\n}\n\nexport interface EmailVerifyCallbackResponse {\n  state: string;\n  otp: string;\n}\n\nexport interface MinimalIdxAPI {\n  // lowest level api\n  makeIdxResponse: (rawIdxResponse: RawIdxResponse, toPersist: IdxToPersist, requestDidSucceed: boolean) => IdxResponse;\n\n  // flow control\n  start: (options?: StartOptions) => Promise<IdxTransaction>;\n  canProceed(options?: ProceedOptions): boolean;\n  proceed: (options?: ProceedOptions) => Promise<IdxTransaction>;\n\n  // call `start` instead of `startTransaction`. `startTransaction` will be removed in next major version (7.0)\n  startTransaction: (options?: StartOptions) => Promise<IdxTransaction>;\n\n  // transaction meta\n  getSavedTransactionMeta: (options?: IdxTransactionMetaOptions) => IdxTransactionMeta | undefined;\n  createTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  getTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  saveTransactionMeta: (meta: unknown) => void;\n  clearTransactionMeta: () => void;\n  isTransactionMetaValid: (meta: unknown) => boolean;\n}\n\nexport interface IdxAPI {\n  // lowest level api\n  interact: (options?: InteractOptions) => Promise<InteractResponse>;\n  introspect: (options?: IntrospectOptions) => Promise<IdxResponse>;\n  makeIdxResponse: (rawIdxResponse: RawIdxResponse, toPersist: IdxToPersist, requestDidSucceed: boolean) => IdxResponse;\n\n  // flow entrypoints\n  authenticate: (options?: AuthenticationOptions) => Promise<IdxTransaction>;\n  register: (options?: RegistrationOptions) => Promise<IdxTransaction>;\n  recoverPassword: (options?: PasswordRecoveryOptions) => Promise<IdxTransaction>;\n  unlockAccount: (options?: AccountUnlockOptions) => Promise<IdxTransaction>;\n  poll: (options?: IdxPollOptions) => Promise<IdxTransaction>;\n\n  // flow control\n  start: (options?: StartOptions) => Promise<IdxTransaction>;\n  canProceed(options?: ProceedOptions): boolean;\n  proceed: (options?: ProceedOptions) => Promise<IdxTransaction>;\n  cancel: (options?: CancelOptions) => Promise<IdxTransaction>;\n  getFlow(): FlowIdentifier | undefined;\n  setFlow(flow: FlowIdentifier): void;\n\n  // call `start` instead of `startTransaction`. `startTransaction` will be removed in next major version (7.0)\n  startTransaction: (options?: StartOptions) => Promise<IdxTransaction>;\n\n  // redirect callbacks\n  isInteractionRequired: (hashOrSearch?: string) => boolean;\n  isInteractionRequiredError: (error: Error) => boolean; \n  handleInteractionCodeRedirect: (url: string) => Promise<void>;\n  isEmailVerifyCallback: (search: string) => boolean;\n  parseEmailVerifyCallback: (search: string) => EmailVerifyCallbackResponse;\n  handleEmailVerifyCallback: (search: string) => Promise<IdxTransaction | undefined>;\n  isEmailVerifyCallbackError: (error: Error) => boolean;\n\n  // transaction meta\n  getSavedTransactionMeta: (options?: IdxTransactionMetaOptions) => IdxTransactionMeta | undefined;\n  createTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  getTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  saveTransactionMeta: (meta: unknown) => void;\n  clearTransactionMeta: () => void;\n  isTransactionMetaValid: (meta: unknown) => boolean;\n}\n\nexport interface IdxTransactionManagerInterface extends TransactionManagerInterface {\n  saveIdxResponse(data: SavedIdxResponse): void;\n  loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null;\n  clearIdxResponse(): void;\n}\n\nexport type IdxTransactionManagerConstructor = TransactionManagerConstructor<IdxTransactionManagerInterface>;\n\nexport interface WebauthnAPI {\n  getAssertion(credential: PublicKeyCredential): WebauthnVerificationValues;\n  getAttestation(credential: PublicKeyCredential): WebauthnEnrollValues;\n  buildCredentialRequestOptions(\n    challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n  ): CredentialRequestOptions;\n  buildCredentialCreationOptions(\n    activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n  ): CredentialCreationOptions;\n}\n\n\nexport interface OktaAuthIdxInterface\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>\n  extends OktaAuthOAuthInterface<M, S, O, TM>\n{\n  idx: IdxAPI;\n  fingerprint: FingerprintAPI;\n}\n\nexport interface MinimalOktaAuthIdxInterface\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>\n  extends MinimalOktaOAuthInterface<M, S, O, TM>\n{\n  idx: MinimalIdxAPI;\n  fingerprint: FingerprintAPI;\n}\n\nexport interface OktaAuthIdxConstructor\n<\n  I extends MinimalOktaAuthIdxInterface = OktaAuthIdxInterface\n>\n extends OktaAuthConstructor<I>\n{\n  new(...args: any[]): I;\n  webauthn: WebauthnAPI;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nexport function getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\n\nexport function getConsole() {\n  var nativeConsole = getNativeConsole();\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n  return {\n    log: function() {},\n    warn: function() {},\n    group: function() {},\n    groupEnd: function() {}\n  };\n}\n\nexport function warn(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecate(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecateWrap(text, fn) {\n  return function() {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function bind(fn, ctx) {\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    args = additionalArgs.concat(args);\n    return fn.apply(ctx, args);\n  };\n}\n\n// TODO: replace all references with `Object.assign` then remove this function\nexport function extend() {\n  // First object will be modified!\n  var obj1 = arguments[0];\n  // Properties from other objects will be copied over\n  var objArray = [].slice.call(arguments, 1);\n  objArray.forEach(function(obj) {\n    for (var prop in obj) {\n      // copy over all properties with defined values\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1; // return the modified object\n}\n\nexport function removeNils(obj) {\n  var cleaned = {};\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n  return cleaned;\n}\n\nexport function clone(obj) {\n  if (obj) {\n    var str = JSON.stringify(obj);\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n  return obj;\n}\n\n// Analogous to _.omit\nexport function omit(obj, ...props: any[]) {\n  // var props = Array.prototype.slice.call(arguments, 1);\n  var newobj = {};\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && props.indexOf(p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n  return clone(newobj);\n}\n\nexport function find(collection, searchParams) {\n  var c = collection.length;\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) {\n      return item;\n    }\n  }\n}\n\nexport function getLink(obj, linkName, altName?) {\n  if (!obj || !obj._links) {\n    return;\n  }\n\n  var link = clone(obj._links[linkName]);\n\n  // If a link has a name and we have an altName, return if they match\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class CustomError extends Error {\n  constructor(message: string) {\n    // https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isString(obj: any): obj is string {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nexport function isObject(obj: any): obj is object {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isNumber(obj: any): obj is number {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\n\nexport function isFunction(fn: any): fn is (...any: any[]) => any {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\n\nexport function isPromise(obj) {\n  return obj && obj.finally && (typeof obj.finally === 'function');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport type { HttpResponse } from '../http';\nimport CustomError from './CustomError';\nimport { isFunction } from '../util';\n\n// Error thrown after an unsuccessful network request which requires an Authorization header \n// and returns a 4XX error with a www-authenticate header. The header value is parsed to construct \n// an error instance, which contains key/value pairs parsed out\nexport default class WWWAuthError extends CustomError {\n  static UNKNOWN_ERROR = 'UNKNOWN_WWW_AUTH_ERROR';\n\n  scheme: string;\n  parameters: Record<string, string>;\n  name = 'WWWAuthError';\n\n  resp: HttpResponse | null = null;\n\n  constructor(scheme: string, parameters: Record<string, string>, resp?: HttpResponse) {\n    // defaults to unknown error. `error` being returned in the www-authenticate header is expected\n    // but cannot be guaranteed. Throwing an error within a error constructor seems awkward\n    super(parameters.error ?? WWWAuthError.UNKNOWN_ERROR);\n    this.scheme = scheme;\n    this.parameters = parameters;\n\n    if (resp) {\n      this.resp = resp;\n    }\n  }\n\n  // convenience references\n  get error (): string { return this.parameters.error; }\n  get errorCode (): string { return this.error; }                 // parity with other error props\n  // eslint-disable-next-line camelcase\n  get error_description (): string { return this.parameters.error_description; }\n  // eslint-disable-next-line camelcase\n  get errorDescription (): string { return this.error_description; }\n  get errorSummary (): string { return this.errorDescription; }   // parity with other error props\n  get realm (): string { return this.parameters.realm; }\n\n  // parses the www-authenticate header for releveant\n  static parseHeader (header: string): WWWAuthError | null {\n    // header cannot be empty string\n    if (!header) {\n      return null;\n    }\n\n    // example string: Bearer error=\"invalid_token\", error_description=\"The access token is invalid\"\n    // regex will match on `error=\"invalid_token\", error_description=\"The access token is invalid\"`\n    // see unit test for more examples of possible www-authenticate values\n    // eslint-disable-next-line max-len\n    const regex = /(?:,|, )?([a-zA-Z0-9!#$%&'*+\\-.^_`|~]+)=(?:\"([a-zA-Z0-9!#$%&'*+\\-.,^_`|~ /:]+)\"|([a-zA-Z0-9!#$%&'*+\\-.^_`|~/:]+))/g;\n    const firstSpace = header.indexOf(' ');\n    const scheme = header.slice(0, firstSpace);\n    const remaining = header.slice(firstSpace + 1);\n    const params = {};\n\n    // Reference: foo=\"hello\", bar=\"bye\"\n    // i=0, match=[foo=\"hello1\", foo, hello]\n    // i=1, match=[bar=\"bye\", bar, bye]\n    let match;\n    while ((match = regex.exec(remaining)) !== null) {\n      params[match[1]] = (match[2] ?? match[3]);\n    }\n\n    return new WWWAuthError(scheme, params);\n  }\n\n  // finds the value of the `www-authenticate` header. HeadersInit allows for a few different\n  // representations of headers with different access patterns (.get vs [key])\n  static getWWWAuthenticateHeader (headers: HeadersInit = {}): string | null {\n    if (isFunction((headers as Headers)?.get)) {\n      return (headers as Headers).get('WWW-Authenticate');\n    }\n    return headers['www-authenticate'] ?? headers['WWW-Authenticate'];\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n      isoDate = new Date(isoTime);\n\n  return isoDate.toUTCString();\n}\n\nexport function genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n  return random;\n}\n\nexport function delay(ms) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n\nexport function split2(str, delim) {\n  const parts = str.split(delim);\n  return [\n    parts[0], \n    parts.splice(1, parts.length).join(delim),\n  ];\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^[a-z][a-z0-9+.-]*:/i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]) as never);\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, FieldError } from './types';\n\nexport default class AuthSdkError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode: string;\n  errorLink: string;\n  errorId: string;\n  errorCauses: Array<FieldError>;\n  xhr?: XMLHttpRequest;\n\n  constructor(msg: string, xhr?: XMLHttpRequest) {\n    super(msg);\n    this.name = 'AuthSdkError';\n    this.errorCode = 'INTERNAL';\n    this.errorSummary = msg;\n    this.errorLink = 'INTERNAL';\n    this.errorId = 'INTERNAL';\n    this.errorCauses = [];\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\nimport { genRandomString, removeTrailingSlash } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOAuthInterface, CustomUrls } from '../types';\n\nexport function generateState() {\n  return genRandomString(64);\n}\n\nexport function generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nexport function getOAuthBaseUrl(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nexport function getOAuthDomain(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nexport function getOAuthUrls(sdk: OktaAuthOAuthInterface, options?: CustomUrls): CustomUrls {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n\n  // Get user-supplied arguments\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthOAuthInterface, PKCETransactionMeta, TokenParams } from '../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createOAuthMeta(\n  sdk: OktaAuthOAuthInterface, \n  tokenParams: TokenParams\n): OAuthTransactionMeta | PKCETransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: tokenParams.clientId!,\n    redirectUri: tokenParams.redirectUri!,\n    responseType: tokenParams.responseType!,\n    responseMode: tokenParams.responseMode!,\n    scopes: tokenParams.scopes!,\n    state: tokenParams.state!,\n    nonce: tokenParams.nonce!,\n    ignoreSignature: tokenParams.ignoreSignature!,\n    acrValues: tokenParams.acrValues,\n    extraParams: tokenParams.extraParams\n  };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return oauthMeta;\n  }\n\n  const pkceMeta: PKCETransactionMeta = {\n    ...oauthMeta,\n    codeVerifier: tokenParams.codeVerifier!,\n    codeChallengeMethod: tokenParams.codeChallengeMethod!,\n    codeChallenge: tokenParams.codeChallenge!,\n  };\n\n  return pkceMeta;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport const STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nexport const DEFAULT_POLLING_DELAY = 500;\nexport const IOS_MAX_RETRY_COUNT = 3;\nexport const DEFAULT_MAX_CLOCK_SKEW = 300;\nexport const DEFAULT_CACHE_DURATION = 86400;\nexport const TOKEN_STORAGE_NAME = 'okta-token-storage';\nexport const CACHE_STORAGE_NAME = 'okta-cache-storage';\nexport const PKCE_STORAGE_NAME = 'okta-pkce-storage';\nexport const TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nexport const SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nexport const ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nexport const IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nexport const ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nexport const ID_TOKEN_STORAGE_KEY =  'idToken';\nexport const REFRESH_TOKEN_STORAGE_KEY =  'refreshToken';\nexport const REFERRER_PATH_STORAGE_KEY = 'referrerPath';\n\n// Code verifier: Random URL-safe string with a minimum length of 43 characters.\n// Code challenge: Base64 URL-encoded SHA-256 hash of the code verifier.\nexport const MIN_VERIFIER_LENGTH = 43;\nexport const MAX_VERIFIER_LENGTH = 128;\nexport const DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\n\nexport const IDX_API_VERSION = '1.0.0';","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { HttpResponse } from '../http/types';\nimport { APIError, FieldError } from './types';\n\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: Array<FieldError>;\n  xhr?: HttpResponse;\n  meta?: Record<string, string | number>;\n\n  constructor(err: APIError, xhr?: HttpResponse, meta?: Record<string, string | number>) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n\n    if (meta) {\n      this.meta = meta;\n    }\n  }\n}\n","/* eslint-disable camelcase */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport type { HttpResponse } from '../http';\n\nexport default class OAuthError extends CustomError {\n  errorCode: string;\n  errorSummary: string;\n\n  // for widget / idx-js backward compatibility\n  error: string;\n  error_description: string;\n\n  resp: HttpResponse | null = null;\n\n  constructor(errorCode: string, summary: string, resp?: HttpResponse) {\n    super(summary);\n\n    this.name = 'OAuthError';\n    this.errorCode = errorCode;\n    this.errorSummary = summary;\n\n    // for widget / idx-js backward compatibility\n    this.error = errorCode;\n    this.error_description = summary;\n\n    // an OAuth error (should) always result from a network request\n    // therefore include that in error for potential error handling\n    if (resp) {\n      this.resp = resp;\n    }\n  }\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global atob, btoa, crypto */\nconst a = function(str) { return atob(str); };\nconst b = function (str) { return btoa(str); };\nconst c = typeof crypto === 'undefined' ? null : crypto;\n\nexport { a as atob, b as btoa, c as webcrypto };\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\n/* global document, window, TextEncoder, navigator */\n\nimport { webcrypto } from './crypto';\n\nconst isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\t\n\nexport function isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nexport function isIE11OrLess() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  return !!documentMode && documentMode <= 11;\n}\n\nexport function getUserAgent() {\n  return navigator.userAgent;\n}\n\nexport function isFingerprintSupported() {\n  const agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\t\n}\n\nexport function isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  var isIE8or9 = documentMode && documentMode < 10;\n  if (typeof window.postMessage !== 'undefined' && !isIE8or9) {\n    return true;\n  }\n  return false;\n}\n\nfunction isWebCryptoSubtleSupported () {\n  return typeof webcrypto !== 'undefined'\n    && webcrypto !== null\n    && typeof webcrypto.subtle !== 'undefined'\n    && typeof Uint8Array !== 'undefined';\n}\n\nexport function isTokenVerifySupported() {\n  return isWebCryptoSubtleSupported();\n}\n\nexport function hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nexport function isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nexport function isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n  return window.location.protocol === 'https:';\n}\n\nexport function isLocalhost() {\n  // eslint-disable-next-line compat/compat\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\n// For now, DPoP is only supported on browsers\nexport function isDPoPSupported () {\n  return !isIE11OrLess() &&\n    typeof window.indexedDB !== 'undefined' &&\n    hasTextEncoder() &&\n    isWebCryptoSubtleSupported();\n}\n\nexport function isIOS () {\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  return isBrowser() && typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined' &&\n    // @ts-expect-error - MSStream is not in `window` type, unsurprisingly\n    (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream);\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity */\nimport { isString, clone, isAbsoluteUrl, removeNils } from '../util';\nimport {\n  STATE_TOKEN_KEY_NAME,\n  DEFAULT_CACHE_DURATION,\n  IOS_MAX_RETRY_COUNT,\n} from '../constants';\nimport {\n  OktaAuthHttpInterface,\n  RequestOptions,\n  FetchOptions,\n  RequestData,\n  HttpResponse\n} from './types';\nimport { AuthApiError, OAuthError, APIError, WWWAuthError } from '../errors';\nimport { isBrowser } from '../features';\n\n\n// For iOS track last date when document became visible\nlet dateDocumentBecameVisible = 0;\nlet trackDateDocumentBecameVisible: () => void;\nif (isBrowser()) {\n  dateDocumentBecameVisible = Date.now();\n  trackDateDocumentBecameVisible = () => {\n    if (!document.hidden) {\n      dateDocumentBecameVisible = Date.now();\n    }\n  };\n  document.addEventListener('visibilitychange', trackDateDocumentBecameVisible);\n}\n\nconst formatError = (sdk: OktaAuthHttpInterface, error: HttpResponse | Error): AuthApiError | OAuthError => {\n  if (error instanceof Error) {\n    // fetch() can throw exceptions\n    // see https://developer.mozilla.org/en-US/docs/Web/API/fetch#exceptions\n    return new AuthApiError({\n      errorSummary: error.message,\n    });\n  }\n\n  let resp: HttpResponse = error;\n  let err: AuthApiError | OAuthError | WWWAuthError;\n  let serverErr: Record<string, any> = {};\n  if (resp.responseText && isString(resp.responseText)) {\n    try {\n      serverErr = JSON.parse(resp.responseText);\n    } catch (e) {\n      serverErr = {\n        errorSummary: 'Unknown error'\n      };\n    }\n  }\n\n  if (resp.status >= 500) {\n    serverErr.errorSummary = 'Unknown error';\n  }\n\n  if (sdk.options.transformErrorXHR) {\n    resp = sdk.options.transformErrorXHR(clone(resp));\n  }\n\n  // \n  const wwwAuthHeader = WWWAuthError.getWWWAuthenticateHeader(resp?.headers) ?? '';\n\n  if (serverErr.error && serverErr.error_description) {\n    err = new OAuthError(serverErr.error, serverErr.error_description, resp);\n  } else {\n    err = new AuthApiError(serverErr as APIError, resp, { wwwAuthHeader });\n  }\n\n  if (wwwAuthHeader && resp?.status >= 400 && resp?.status < 500) {\n    const wwwAuthErr = WWWAuthError.parseHeader(wwwAuthHeader);\n    // check for 403 to avoid breaking change\n    if (resp.status === 403 && wwwAuthErr?.error === 'insufficient_authentication_context') {\n      // eslint-disable-next-line camelcase\n      const { max_age, acr_values } = wwwAuthErr.parameters;\n      err = new AuthApiError(\n        {\n          errorSummary: wwwAuthErr.error,\n          errorCauses: [{ errorSummary: wwwAuthErr.errorDescription }]\n        },\n        resp,\n        {\n          // eslint-disable-next-line camelcase\n          max_age: +max_age,\n          // eslint-disable-next-line camelcase\n          ...(acr_values && { acr_values })\n        }\n      );\n    }\n    else if (wwwAuthErr?.scheme === 'DPoP') {\n      err = wwwAuthErr;\n    }\n    // else {\n    //   // WWWAuthError.parseHeader may return null, only overwrite if !null\n    //   err = wwwAuthErr ?? err;\n    // }\n  }\n\n  return err;\n};\n\n// eslint-disable-next-line max-statements\nexport function httpRequest(sdk: OktaAuthHttpInterface, options: RequestOptions): Promise<any> {\n  options = options || {};\n\n  if (sdk.options.httpRequestInterceptors) {\n    for (const interceptor of sdk.options.httpRequestInterceptors) {\n      interceptor(options);\n    }\n  }\n\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true, // default value is false\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil!.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies),\n      pollingIntent = options.pollingIntent,\n      pollDelay = sdk.options.pollDelay ?? 0;\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url as string];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers: HeadersInit = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    ...oktaUserAgentHeader\n  };\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers) as HeadersInit;\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions: FetchOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n\n  var err, res, promise;\n\n  if (pollingIntent && isBrowser() && pollDelay > 0) {\n    let waitForVisibleAndAwakenDocument: () => Promise<void>;\n    let waitForAwakenDocument: () => Promise<void>;\n    let recursiveFetch: () => Promise<HttpResponse>;\n    let retryCount = 0;\n\n    // Safari on iOS has a bug:\n    //  Performing `fetch` right after document became visible can fail with `Load failed` error.\n    // Running fetch after short timeout fixes this issue.\n    waitForAwakenDocument = () => {\n      const timeSinceDocumentIsVisible = Date.now() - dateDocumentBecameVisible;\n      if (timeSinceDocumentIsVisible < pollDelay) {\n        return new Promise<void>((resolve) => setTimeout(() => {\n          if (!document.hidden) {\n            resolve();\n          } else {\n            resolve(waitForVisibleAndAwakenDocument());\n          }\n        }, pollDelay - timeSinceDocumentIsVisible));\n      } else {\n        return Promise.resolve();\n      }\n    };\n\n    // Returns a promise that resolves when document is visible for 500 ms\n    waitForVisibleAndAwakenDocument = () => {\n      if (document.hidden) {\n        let pageVisibilityHandler: () => void;\n        return new Promise<void>((resolve) => {\n          pageVisibilityHandler = () => {\n            if (!document.hidden) {\n              document.removeEventListener('visibilitychange', pageVisibilityHandler);\n              resolve(waitForAwakenDocument());\n            }\n          };\n          document.addEventListener('visibilitychange', pageVisibilityHandler);\n        });\n      } else {\n        return waitForAwakenDocument();\n      }\n    };\n\n    // Restarts fetch on 'Load failed' error\n    // This error can occur when `fetch` does not respond\n    //  (due to CORS error, non-existing host, or network error)\n    const retryableFetch = (): Promise<HttpResponse> => {\n      return sdk.options.httpRequestClient!(method!, url!, ajaxOptions).catch((err) => {\n        const isNetworkError = err?.message === 'Load failed';\n        if (isNetworkError && retryCount < IOS_MAX_RETRY_COUNT) {\n          retryCount++;\n          return recursiveFetch();\n        }\n        throw err;\n      });\n    };\n\n    // Final promise to fetch that wraps logic with waiting for visible document\n    //  and retrying fetch request on network error\n    recursiveFetch = (): Promise<HttpResponse> => {\n      return waitForVisibleAndAwakenDocument().then(retryableFetch);\n    };\n\n    promise = recursiveFetch();\n  } else {\n    promise = sdk.options.httpRequestClient!(method!, url!, ajaxOptions);\n  }\n\n  return promise\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && isString(res)) {\n        res = JSON.parse(res);\n        if (res && typeof res === 'object' && !res.headers) {\n          if (Array.isArray(res)) {\n            res.forEach(item => {\n              item.headers = resp.headers;\n            });\n          } else {\n            res.headers = resp.headers;\n          }\n        }\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          storage.delete(STATE_TOKEN_KEY_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies!);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url!, {\n          expiresAt: Math.floor(Date.now()/1000) + DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n      \n      return res;\n    })\n    .catch(function(resp) {\n      err = formatError(sdk, resp);\n\n      if (err.errorCode === 'E0000011') {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n\n      throw err;\n    });\n}\n\nexport function get(sdk: OktaAuthHttpInterface, url: string, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nexport function post(sdk: OktaAuthHttpInterface, url: string, args?: RequestData, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n","/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { UserClaims } from './UserClaims';\n\nexport interface AbstractToken {\n  expiresAt: number;\n  authorizeUrl: string;\n  scopes: string[];\n  pendingRemove?: boolean;\n  extraParams?: Record<string, string>;\n}\n\nexport interface AccessToken extends AbstractToken {\n  accessToken: string;\n  claims: UserClaims;\n  tokenType: string;\n  userinfoUrl: string;\n  dpopPairId?: string;\n}\n\nexport interface RefreshToken extends AbstractToken {\n  refreshToken: string;\n  tokenUrl: string;\n  issuer: string;\n  dpopPairId?: string;\n}\n\nexport interface IDToken extends AbstractToken {\n  idToken: string;\n  claims: UserClaims;\n  issuer: string;\n  clientId: string;\n}\n\nexport type Token = AccessToken | IDToken | RefreshToken;\nexport type RevocableToken = AccessToken | RefreshToken;\n\nexport type TokenType = 'accessToken' | 'idToken' | 'refreshToken';\nexport enum TokenKind {\n  ACCESS = 'accessToken',\n  ID = 'idToken',\n  REFRESH = 'refreshToken',\n}\n\nexport function isToken(obj: any): obj is Token {\n  if (obj &&\n      (obj.accessToken || obj.idToken || obj.refreshToken) &&\n      Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isAccessToken(obj: any): obj is AccessToken {\n  return obj && obj.accessToken;\n}\n\nexport function isIDToken(obj: any): obj is IDToken {\n  return obj && obj.idToken;\n}\n\nexport function isRefreshToken(obj: any): obj is RefreshToken {\n  return obj && obj.refreshToken;\n}\n\nexport interface Tokens {\n  accessToken?: AccessToken;\n  idToken?: IDToken;\n  refreshToken?: RefreshToken;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, IdxTransactionMeta, IdxTransactionMetaOptions } from './types';\nimport { removeNils, warn } from '../util';\nimport { createOAuthMeta, PKCETransactionMeta } from '../oidc';\n\n// Calculate new values\nexport async function createTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options: IdxTransactionMetaOptions = {}\n): Promise<IdxTransactionMeta> {\n  const tokenParams = await authClient.token.prepareTokenParams(options);\n  const pkceMeta = createOAuthMeta(authClient, tokenParams) as PKCETransactionMeta;\n  let {\n    flow = 'default',\n    withCredentials = true,\n    activationToken = undefined,\n    recoveryToken = undefined,\n    maxAge = undefined,\n    acrValues = undefined,\n  } = { ...authClient.options, ...options }; // local options override SDK options\n\n  const meta: IdxTransactionMeta = {\n    ...pkceMeta,\n    flow,\n    withCredentials,\n    activationToken,\n    recoveryToken,\n    maxAge,\n    acrValues\n  };\n  return meta;\n}\n\nexport function hasSavedInteractionHandle(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): boolean {\n  const savedMeta = getSavedTransactionMeta(authClient, options);\n  if (savedMeta?.interactionHandle) {\n    return true;\n  }\n  return false;\n}\n\n// Returns the saved transaction meta, if it exists and is valid\nexport function getSavedTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): IdxTransactionMeta | undefined {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  let savedMeta;\n  try {\n    savedMeta = authClient.transactionManager.load(options) as IdxTransactionMeta;\n  } catch (e) {\n    // ignore errors here\n  }\n\n  if (!savedMeta) {\n    return;\n  }\n\n  if (isTransactionMetaValid(savedMeta, options)) {\n    return savedMeta;\n  }\n\n  // existing meta is not valid for this configuration\n  // this is common when changing configuration in local development environment\n  // in a production environment, this may indicate that two apps are sharing a storage key\n  warn('Saved transaction meta does not match the current configuration. ' + \n    'This may indicate that two apps are sharing a storage key.');\n\n}\n\nexport async function getTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): Promise<IdxTransactionMeta> {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  // Load existing transaction meta from storage\n  const validExistingMeta = getSavedTransactionMeta(authClient, options);\n  if (validExistingMeta) {\n    return validExistingMeta;\n  }\n  // No existing? Create new transaction meta.\n  return createTransactionMeta(authClient, options);\n}\n\nexport function saveTransactionMeta (authClient: OktaAuthIdxInterface, meta): void {\n  authClient.transactionManager.save(meta, { muteWarning: true });\n}\n\nexport function clearTransactionMeta (authClient: OktaAuthIdxInterface): void {\n  authClient.transactionManager.clear();\n}\n\nexport function isTransactionMetaValid (meta, options: IdxTransactionMetaOptions  = {}): boolean {\n  // Validate against certain options. If these exist in options, they must match in meta\n  const keys = [\n    'issuer',\n    'clientId',\n    'redirectUri',\n    'state',\n    'codeChallenge',\n    'codeChallengeMethod',\n    'activationToken',\n    'recoveryToken'\n  ];\n  if (isTransactionMetaValidForOptions(meta, options, keys) === false) {\n    return false;\n  }\n\n  // Validate configured flow\n  const { flow } = options;\n  if (isTransactionMetaValidForFlow(meta, flow) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isTransactionMetaValidForFlow(meta, flow) {\n  // Specific flows should not share transaction data\n  const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      // The flow has changed; abandon the old transaction\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isTransactionMetaValidForOptions(meta, options, keys) {\n  // returns false if values in meta do not match options\n  // if the option does not have a value for a specific key, it is ignored\n  const mismatch = keys.some(key => {\n    const value = options[key];\n    if (value && value !== meta[key]) {\n      return true;\n    }\n  });\n  return !mismatch;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint complexity:[0,8] */\nimport { OktaAuthIdxInterface, IdxTransactionMeta, InteractOptions, InteractResponse } from './types';\nimport { getSavedTransactionMeta, saveTransactionMeta, createTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\nimport { removeNils } from '../util';\nimport { httpRequest } from '../http';\n\n\n/* eslint-disable camelcase */\nexport interface InteractParams {\n  client_id: string;\n  scope: string;\n  redirect_uri: string;\n  code_challenge: string;\n  code_challenge_method: string;\n  state: string;\n  activation_token?: string;\n  recovery_token?: string;\n  client_secret?: string;\n  max_age?: string | number;\n  acr_values?: string;\n  nonce?: string;\n}\n/* eslint-enable camelcase */\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle!,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (\n  authClient: OktaAuthIdxInterface, \n  options: InteractOptions = {}\n): Promise<InteractResponse> {\n  options = removeNils(options);\n\n  let meta = getSavedTransactionMeta(authClient, options);\n  // If meta exists, it has been validated against all options\n\n  if (meta?.interactionHandle) {\n    return getResponse(meta); // Saved transaction, return meta\n  }\n\n  // Create new meta, respecting previous meta if it has been set and is not overridden\n  meta = await createTransactionMeta(authClient, { ...meta, ...options });\n  const baseUrl = getOAuthBaseUrl(authClient);\n  let {\n    clientId,\n    redirectUri,\n    state,\n    scopes,\n    withCredentials,\n    codeChallenge,\n    codeChallengeMethod,\n    activationToken,\n    recoveryToken,\n    maxAge,\n    acrValues,\n    nonce\n  } = meta as IdxTransactionMeta;\n  const clientSecret = options.clientSecret || authClient.options.clientSecret;\n  withCredentials = withCredentials ?? true;\n\n  /* eslint-disable camelcase */\n  const url = `${baseUrl}/v1/interact`;\n  const params = {\n    client_id: clientId,\n    scope: scopes!.join(' '),\n    redirect_uri: redirectUri,\n    code_challenge: codeChallenge,\n    code_challenge_method: codeChallengeMethod,\n    state,\n    ...(activationToken && { activation_token: activationToken }),\n    ...(recoveryToken && { recovery_token: recoveryToken }),\n    // X-Device-Token header need to pair with `client_secret`\n    // eslint-disable-next-line max-len\n    // https://oktawiki.atlassian.net/wiki/spaces/eng/pages/2445902453/Support+Device+Binding+in+interact#Scenario-1%3A-Non-User-Agent-with-Confidential-Client-(top-priority)\n    ...(clientSecret && { client_secret: clientSecret }),\n    ...(maxAge && { max_age: maxAge }),\n    ...(acrValues && { acr_values: acrValues }),\n    ...(nonce && { nonce }),\n  } as InteractParams;\n  /* eslint-enable camelcase */\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  const resp = await httpRequest(authClient, {\n    method: 'POST',\n    url,\n    headers,\n    withCredentials,\n    args: params\n  });\n  const interactionHandle = resp.interaction_handle;\n\n  const newMeta = {\n    ...meta,\n    interactionHandle,\n    \n    // Options which can be passed into interact() should be saved in the meta\n    withCredentials,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  };\n  // Save transaction meta so it can be resumed\n  saveTransactionMeta(authClient, newMeta);\n\n  return getResponse(newMeta);\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst isFieldMutable = function isFieldMutable(field) {\n  // mutable defaults to true, annoyingly\n  return ( field.mutable !== false );\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability( action ) {\n  const defaultParamsForAction = {}; // mutable and present\n  const neededParamsForAction = []; // mutable values\n  const immutableParamsForAction = {}; // immutable\n  // TODO: remove assumption that form names are unique, neededParams being an array is a temp fix\n  // not all actions have value (e.g. redirect)\n  // making sure they are not empty and instead hold the remediation object\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n  }\n\n  for ( let field of action.value ) {\n\n    if ( isFieldMutable( field ) ) {\n\n      neededParamsForAction.push(field);\n\n      if ( field.value ?? false ) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n\n    } else {\n      immutableParamsForAction[field.name] = field.value ?? '';\n    }\n  }\n  return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n};\n\nexport const divideActionParamsByMutability = function divideActionParamsByMutability( actionList ) {\n  // TODO: when removing form name is unique assumption, this may all be redundant\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for ( let action of actionList ) {\n    const { \n      defaultParamsForAction, \n      neededParamsForAction, \n      immutableParamsForAction \n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return { defaultParams, neededParams, immutableParams };\n};\n\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\nimport { httpRequest, RequestOptions } from '../../../http';\nimport { OktaAuthIdxInterface } from '../../types';    // auth-js/types\nimport { IdxActionFunction, IdxActionParams, IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthIdxInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {} as IdxToPersist\n}): IdxActionFunction {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const options: RequestOptions = {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      };\n      const isPolling = actionDefinition.name === 'poll' || actionDefinition.name?.endsWith('-poll');\n      if (isPolling) {\n        options.pollingIntent = true;\n      }\n      const response = await httpRequest(authClient, options);\n\n      return authClient.idx.makeIdxResponse({ ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = authClient.idx.makeIdxResponse({ ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      return idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthIdxInterface, actionDefinition, toPersist ): IdxActionFunction {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n","const jsonpathRegex = /\\$?(?<step>\\w+)|(?:\\[(?<index>\\d+)\\])/g;\n\n/* eslint complexity:[0,8] */\nexport function jsonpath({ path, json }) {\n  const steps: string[] = [];\n  let match: RegExpExecArray | null;\n  while ((match = jsonpathRegex.exec(path)) !== null) {\n    const step = match?.groups?.step ?? match?.groups?.index;\n    if (step) {\n      steps.push(step);\n    }\n  }\n\n  if (steps.length < 1) {\n    return undefined;\n  }\n\n  // array length check above guarantees .pop() will return a value\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const lastStep = steps.pop()!;\n  let curr = json;\n  for (const step of steps) {\n    if (Object.prototype.hasOwnProperty.call(curr, step)) {\n      if (typeof curr[step] !== 'object') {\n        return undefined;\n      }\n\n      curr = curr[step];\n    }\n  }\n\n  return curr[lastStep];\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len */\n\nimport { OktaAuthIdxInterface, IdxResponse, IdxRemediation, IdxContext } from '../../types';    // auth-js/types\nimport { IdxActions } from '../../types/idx-js';\nimport { generateRemediationFunctions } from './remediationParser';\nimport generateIdxAction from './generateIdxAction';\nimport { jsonpath } from '../../../util/jsonpath';\nimport { AuthSdkError } from '../../../errors';\n\nconst SKIP_FIELDS = {\n  'remediation': true, // remediations are put into proceed/neededToProceed\n  'context': true, // the API response of 'context' isn't externally useful.  We ignore it and put all non-action (contextual) info into idxState.context\n};\n\nexport const parseNonRemediations = function parseNonRemediations( authClient: OktaAuthIdxInterface, idxResponse: IdxResponse, toPersist = {} ) {\n  const actions = {};\n  const context = {} as IdxContext;\n\n  Object.keys(idxResponse)\n    .filter( field => !SKIP_FIELDS[field])\n    .forEach( field => {\n      const fieldIsObject = typeof idxResponse[field] === 'object' && !!idxResponse[field];\n\n      if ( !fieldIsObject ) {\n        // simple fields are contextual info\n        context[field] = idxResponse[field];\n        return;\n      }\n\n      if ( idxResponse[field].rel ) {\n        // top level actions\n        actions[idxResponse[field].name] = generateIdxAction(authClient, idxResponse[field], toPersist);\n        return;\n      }\n\n      const { value: fieldValue, type, ...info} = idxResponse[field];\n      context[field] = { type, ...info}; // add the non-action parts as context\n\n      if ( type !== 'object' ) {\n        // only object values hold actions\n        context[field].value = fieldValue;\n        return;\n      }\n\n      // We are an object field containing an object value\n      context[field].value = {};\n      Object.entries<IdxRemediation>(fieldValue)\n        .forEach( ([subField, value]) => {\n          if (value.rel) { // is [field].value[subField] an action?\n            // add any \"action\" value subfields to actions\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            actions[`${field}-${subField.name || subField}`] = generateIdxAction(authClient, value, toPersist);\n          } else {\n            // add non-action value subfields to context\n            context[field].value[subField] = value;\n          }\n        });\n    });\n\n  return { context, actions };\n};\n\nconst expandRelatesTo = (idxResponse, value) => {\n  Object.keys(value).forEach(k => {\n    if (k === 'relatesTo') {\n      const query = Array.isArray(value[k]) ? value[k][0] : value[k];\n      if (typeof query === 'string') {\n        const result = jsonpath({ path: query, json: idxResponse });\n        if (result) {\n          value[k] = result;\n          return;\n        } else {\n          throw new AuthSdkError(`Cannot resolve relatesTo: ${query}`);\n        }\n      }\n    }\n    if (Array.isArray(value[k])) {\n      value[k].forEach(innerValue => expandRelatesTo(idxResponse, innerValue));\n    }\n  });\n};\n\nconst convertRemediationAction = (authClient: OktaAuthIdxInterface, remediation, toPersist) => {\n  // Only remediation that has `rel` field (indicator for form submission) can have http action\n  if (remediation.rel) {\n    const remediationActions = generateRemediationFunctions( authClient, [remediation], toPersist );\n    const actionFn = remediationActions[remediation.name];\n    return {\n      ...remediation,\n      action: actionFn,\n    };\n  }\n\n  return remediation;\n};\n\nexport const parseIdxResponse = function parseIdxResponse( authClient: OktaAuthIdxInterface, idxResponse, toPersist = {} ): {\n  remediations: IdxRemediation[];\n  context: IdxContext;\n  actions: IdxActions;\n} {\n  const remediationData = idxResponse.remediation?.value || [];\n\n  remediationData.forEach(\n    remediation => {\n      // TODO: remove once IDX is fixed - OKTA-659181\n      if (remediation.name === 'launch-authenticator' &&\n        remediation?.relatesTo?.[0] === 'authenticatorChallenge' &&\n        !idxResponse?.authenticatorChallenge\n      ) {\n        delete remediation.relatesTo;\n        return;\n      }\n\n      return expandRelatesTo(idxResponse, remediation);\n    }\n  );\n\n  const remediations = remediationData.map(remediation => convertRemediationAction( authClient, remediation, toPersist ));\n\n  const { context, actions } = parseNonRemediations( authClient, idxResponse, toPersist );\n\n  return {\n    remediations,\n    context,\n    actions,\n  };\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, IdxRemediation } from '../../types';    // auth-js/types\nimport generateIdxAction from './generateIdxAction';\n\nexport const generateRemediationFunctions = function generateRemediationFunctions(\n  authClient: OktaAuthIdxInterface,\n  remediationValue: IdxRemediation[],\n  toPersist = {}\n) {\n  return remediationValue.reduce((obj, remediation) => ({\n    ...obj,\n    [remediation.name]: generateIdxAction(authClient, remediation, toPersist)\n  }), {});\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState } from './makeIdxState';\n\nexport default {\n  makeIdxState,\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxResponse, IdxToPersist, IdxActionParams } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, RawIdxResponse } from '../../types';    // auth-js/types\nimport { parseIdxResponse } from './idxResponseParser';\n\nexport function makeIdxState( \n  authClient: OktaAuthIdxInterface,\n  idxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean\n): IdxResponse {\n  const rawIdxResponse =  idxResponse;\n  const { remediations, context, actions } = parseIdxResponse( authClient, idxResponse, toPersist );\n  const neededToProceed = [...remediations];\n\n  const proceed: IdxResponse['proceed'] = async function( remediationChoice, paramsFromUser = {} ) {\n    /*\n    remediationChoice is the name attribute on each form\n    name should remain unique for items inside the remediation that are considered forms(identify, select-factor)\n    name can be duplicate for items like redirect where its not considered a form(redirect)\n    when names are not unique its a redirect to a href, so widget wont POST to idx-js layer.\n    */\n    const remediationChoiceObject = remediations.find((remediation) => remediation.name === remediationChoice);\n    if ( !remediationChoiceObject ) {\n      return Promise.reject(`Unknown remediation choice: [${remediationChoice}]`);\n    }\n\n    const actionFn = remediationChoiceObject.action;\n    if (typeof actionFn !== 'function') {\n      return Promise.reject(`Current remediation cannot make form submit action: [${remediationChoice}]`);\n    }\n\n    return remediationChoiceObject.action!(paramsFromUser as IdxActionParams);\n  };\n\n  const findCode = item => item.name === 'interaction_code';\n  const interactionCode = rawIdxResponse.successWithInteractionCode?.value?.find( findCode )?.value as string;\n\n  return {\n    proceed,\n    neededToProceed,\n    actions,\n    context,\n    rawIdxState: rawIdxResponse,\n    interactionCode,\n    toPersist,\n    requestDidSucceed,\n  };\n}\n","import { OktaAuthIdxInterface } from '../types';    // auth-js/types\nimport { IdxResponse, IdxToPersist, RawIdxResponse } from '../types/idx-js';      // idx/types\nimport { IDX_API_VERSION } from '../../constants';\nimport v1 from './v1/parsers';\n\n\nexport const parsersForVersion = function parsersForVersion( version ) {\n  switch (version) {\n    case '1.0.0':\n      return v1;\n    case undefined:\n    case null:\n      throw new Error('Api version is required');\n    default:\n      throw new Error(`Unknown api version: ${version}.  Use an exact semver version.`);\n  }\n};\n\nexport function validateVersionConfig(version) {\n  if ( !version ) {\n    throw new Error('version is required');\n  }\n\n  const cleanVersion = (version ?? '').replace(/[^0-9a-zA-Z._-]/, '');\n  if ( cleanVersion !== version || !version ) {\n    throw new Error('invalid version supplied - version is required and uses semver syntax');\n  }\n\n  parsersForVersion(version); // will throw for invalid version\n}\n\nexport function makeIdxState ( \n  authClient: OktaAuthIdxInterface,\n  rawIdxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean,\n): IdxResponse {\n  const version = rawIdxResponse?.version ?? IDX_API_VERSION;\n  validateVersionConfig(version);\n  \n  const { makeIdxState } = parsersForVersion(version);\n  return makeIdxState(authClient, rawIdxResponse, toPersist, requestDidSucceed);\n}\n","/* eslint-disable no-use-before-define */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Input } from './api';\n\n\n// TODO: remove when idx-js provides type information\n\nexport interface ChallengeData {\n  challenge: string; \n  userVerification: string; \n  extensions?: {\n    appid: string;\n  };\n}\nexport interface ActivationData {\n  challenge: string;\n  rp: {\n    name: string;\n  };\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n  };\n  pubKeyCredParams: {\n    type: string;\n    alg: number;\n  }[];\n  attestation?: string;\n  authenticatorSelection?: {\n    userVerification?: string;\n    authenticatorAttachment?: string;\n    requireResidentKey?: boolean;\n    residentKey?: string;\n  };\n  excludeCredentials?: {\n    id: string;\n    type: string;\n  }[];\n}\nexport interface IdxAuthenticatorMethod {\n  type: string;\n}\nexport interface IdxAuthenticator {\n  displayName: string;\n  id: string;\n  key: string;\n  methods: IdxAuthenticatorMethod[];\n  type: string;\n  settings?: {\n    complexity?: unknown;\n    age?: unknown;\n  };\n  contextualData?: {\n    enrolledQuestion?: {\n      question: string;\n      questionKey: string;\n    };\n    qrcode?: { \n      href: string; \n      method: string; \n      type: string; \n    };\n    sharedSecret?: string;\n    questions?: {\n      questionKey: string;\n      question: string;\n    }[];\n    questionKeys?: string[];\n    selectedChannel?: string;\n    activationData?: ActivationData;\n    challengeData?: ChallengeData;\n  };\n  credentialId?: string;\n  enrollmentId?: string;\n  profile?: Record<string, unknown>;\n  resend?: Record<string, unknown>;\n  poll?: Record<string, unknown>;\n  recover?: Record<string, unknown>;\n  deviceKnown?: boolean;\n  nickname?: string;\n}\n\nexport interface IdxForm {\n  value: IdxRemediationValue[];\n}\n\nexport interface IdxOption {\n  value: string | {form: IdxForm} | Input[];\n  label: string;\n  relatesTo?: IdxAuthenticator;\n}\n\nexport interface IdpConfig {\n  id: string;\n  name: string;\n}\n\nexport interface IdxRemediationValueForm {\n  form: IdxForm;\n}\n\nexport interface IdxRemediationValue {\n  name: string;\n  type?: string;\n  required?: boolean;\n  secret?: boolean;\n  visible?: boolean;\n  mutable?: boolean;\n  value?: string | IdxRemediationValueForm;\n  label?: string;\n  form?: IdxForm;\n  options?: IdxOption[];\n  messages?: IdxMessages;\n  minLength?: number;\n  maxLength?: number;\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n}\n\nexport interface IdxRemediation {\n  name: string;\n  label?: string;\n  value?: IdxRemediationValue[];\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  idp?: IdpConfig;\n  href?: string;\n  method?: string;\n  type?: string;\n  accepts?: string;\n  produces?: string;\n  refresh?: number;\n  rel?: string[];\n  action?: (payload?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxContext {\n  version: string;\n  stateHandle: string;\n  expiresAt: string;\n  intent: string;\n  currentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  currentAuthenticatorEnrollment: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  authenticators: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  authenticatorEnrollments: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  enrollmentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  user?: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  uiDisplay?: IdxContextUIDisplay\n  app: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  messages?: IdxMessages;\n  success?: IdxRemediation;\n  failure?: IdxRemediation;\n}\n\nexport interface IdxContextUIDisplay {\n  type: string;\n  value: {\n    label?: string;\n    buttonLabel?: string;\n  }\n}\n\nexport interface IdxMessage {\n  message: string;\n  class: string;\n  i18n: {\n    key: string;\n    params?: unknown[];\n  };\n}\n\nexport interface IdxMessages {\n  type: 'array';\n  value: IdxMessage[];\n}\n\n// JSON response from the server\nexport interface RawIdxResponse {\n  version: string;\n  stateHandle: string;\n  intent?: string;\n  expiresAt?: string;\n  remediation?: {\n    type: 'array';\n    value: IdxRemediation[];\n  };\n  messages?: IdxMessages;\n  success?: boolean;\n  successWithInteractionCode?: IdxRemediation;\n  currentAuthenticator?: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  currentAuthenticatorEnrollment?: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n}\n\nexport function isRawIdxResponse(obj: any): obj is RawIdxResponse {\n  return obj && obj.version;\n}\n\nexport interface IdxActionParams {\n  [key: string]: string | boolean | number | object;\n}\n\nexport interface IdxActions {\n  [key: string]: (params?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxToPersist {\n  interactionHandle?: string;\n  withCredentials?: boolean;\n}\n\nexport interface IdxActionFunction {\n  (params: IdxActionParams): Promise<IdxResponse>;\n  neededParams?: Array<Array<IdxRemediationValue>>;\n}\n\nexport interface IdxResponse {\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  toPersist: IdxToPersist;\n  context?: IdxContext;\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n}\n\nexport function isIdxResponse(obj: any): obj is IdxResponse {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from './AuthApiError';\nimport AuthPollStopError from './AuthPollStopError';\nimport AuthSdkError from './AuthSdkError';\nimport OAuthError from './OAuthError';\nimport WWWAuthError from './WWWAuthError';\n\nfunction isAuthApiError(obj: any): obj is AuthApiError {\n  return (obj instanceof AuthApiError);\n}\n\nfunction isOAuthError(obj: any): obj is OAuthError {\n  return (obj instanceof OAuthError);\n}\n\nfunction isWWWAuthError(obj: any): obj is WWWAuthError {\n  return (obj instanceof WWWAuthError);\n}\n\nexport {\n  isAuthApiError,\n  isOAuthError,\n  isWWWAuthError,\n  AuthApiError,\n  AuthPollStopError,\n  AuthSdkError,\n  OAuthError,\n  WWWAuthError\n};\n\nexport * from './types';\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState, validateVersionConfig } from './idxState';\nimport { IntrospectOptions, OktaAuthIdxInterface } from './types';\nimport { IdxResponse, isRawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\nimport { httpRequest } from '../http';\nimport { isAuthApiError } from '../errors';\n\nexport async function introspect (\n  authClient: OktaAuthIdxInterface, \n  options: IntrospectOptions = {}\n): Promise<IdxResponse> {\n  let rawIdxResponse;\n  let requestDidSucceed;\n\n  // try load from storage first\n  const savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n  if (savedIdxResponse) {\n    rawIdxResponse = savedIdxResponse.rawIdxResponse;\n    requestDidSucceed = savedIdxResponse.requestDidSucceed;\n  }\n\n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = options.version || IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    const { interactionHandle, stateHandle } = options;\n    const withCredentials = options.withCredentials ?? true;\n    try {\n      requestDidSucceed = true;\n      validateVersionConfig(version);\n      const url = `${domain}/idp/idx/introspect`;\n      const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n      const headers = {\n        'Content-Type': `application/ion+json; okta-version=${version}`, // Server wants this version info\n        Accept: `application/ion+json; okta-version=${version}`,\n      };\n      rawIdxResponse = await httpRequest(authClient, {\n        method: 'POST',\n        url,\n        headers,\n        withCredentials,\n        args: body\n      });\n    } catch (err) {\n      if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n        rawIdxResponse = err.xhr.responseJSON;\n        requestDidSucceed = false;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  const { withCredentials } = options;\n  return makeIdxState(authClient, rawIdxResponse, { withCredentials }, requestDidSucceed);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name as never);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediation.value!.find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n}\n","import { Authenticator, isAuthenticator } from '../types';\n\nexport function formatAuthenticator(incoming: unknown): Authenticator {\n  let authenticator: Authenticator;\n  if  (isAuthenticator(incoming)) {\n    authenticator = incoming;\n  } else if (typeof incoming === 'string') {\n    authenticator = {\n      key: incoming\n    };\n  } else {\n    throw new Error('Invalid format for authenticator');\n  }\n  return authenticator;\n}\n\n// Returns true if the authenticators are equivalent\nexport function compareAuthenticators(auth1, auth2) {\n  if (!auth1 || !auth2) {\n    return false;\n  }\n  // by id\n  if (auth1.id && auth2.id) {\n    return (auth1.id === auth2.id);\n  }\n  // by key\n  if (auth1.key && auth2.key) {\n    return (auth1.key === auth2.key);\n  }\n  return false;\n}\n\n// Find matched authenticator in provided order\nexport function findMatchedOption(authenticators, options) {\n  let option;\n  for (let authenticator of authenticators) {\n    option = options\n      .find(({ relatesTo }) => relatesTo.key && relatesTo.key === authenticator.key);\n    if (option) {\n      break;\n    }\n  }\n  return option;\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { OktaAuthIdxInterface, NextStep, IdxMessage, Authenticator, Input, RemediateOptions } from '../../types';\nimport { IdxAuthenticator, IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { getAllValues, getRequiredValues, titleCase, getAuthenticatorFromRemediation } from '../util';\nimport { formatAuthenticator, compareAuthenticators } from '../../authenticator/util';\n\n// A map from IDX data values (server spec) to RemediationValues (client spec)\nexport type IdxToRemediationValueMap = Record<string, string[]>;\n\nexport interface RemediationValues {\n  stateHandle?: string;\n  authenticators?: (Authenticator | string)[];\n  authenticator?: string | Authenticator;\n  authenticatorsData?: Authenticator[];\n  resend?: boolean;\n}\n\nexport interface RemediatorConstructor {\n  remediationName: string;\n  new<T extends RemediationValues>(\n    remediation: IdxRemediation, \n    values?: T, \n    options?: RemediateOptions\n  ): any;\n}\n\n// Base class - DO NOT expose static remediationName\nexport class Remediator<T extends RemediationValues = RemediationValues> {\n  static remediationName: string;\n\n  remediation: IdxRemediation;\n  values: T;\n  options: RemediateOptions;\n  map?: IdxToRemediationValueMap;\n\n  constructor(\n    remediation: IdxRemediation, \n    values: T = {} as T, \n    options: RemediateOptions = {}\n  ) {\n    // assign fields to the instance\n    this.values = { ...values };\n    this.options = { ...options };\n    this.formatAuthenticators();\n    this.remediation = remediation;\n  }\n\n  private formatAuthenticators() {\n    this.values.authenticators = (this.values.authenticators || []) as Authenticator[];\n\n    // ensure authenticators are in the correct format\n    this.values.authenticators = this.values.authenticators.map(authenticator => {\n      return formatAuthenticator(authenticator);\n    });\n\n    // add authenticator (if any) to \"authenticators\"\n    if (this.values.authenticator) {\n      const authenticator = formatAuthenticator(this.values.authenticator);\n      const hasAuthenticatorInList = this.values.authenticators.some(existing => {\n        return compareAuthenticators(authenticator, existing);\n      });\n      if (!hasAuthenticatorInList) {\n        this.values.authenticators.push(authenticator);\n      }\n    }\n\n    // save non-key meta to \"authenticatorsData\" field\n    // authenticators will be removed after selection to avoid select-authenticator loop\n    this.values.authenticatorsData = this.values.authenticators.reduce((acc, authenticator) => {\n      if (typeof authenticator === 'object' && Object.keys(authenticator).length > 1) {\n        // save authenticator meta into authenticator data\n        acc.push(authenticator);\n      }\n      return acc;\n    }, this.values.authenticatorsData || []);\n  }\n\n  getName(): string {\n    return this.remediation.name;\n  }\n\n  // Override this method to provide custom check\n  /* eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars */\n  canRemediate(context?: IdxContext): boolean {\n    const required = getRequiredValues(this.remediation);\n    const needed = required!.find((key) => !this.hasData(key));\n    if (needed) {\n      return false; // missing data for a required field\n    }\n    return true; // all required fields have available data\n  }\n\n  // returns an object for the entire remediation form, or just a part\n  getData(key?: string) {\n    if (!key) {\n      let allValues = getAllValues(this.remediation);\n      let res = allValues!.reduce((data, key) => {\n        data[key] = this.getData(key); // recursive\n        return data;\n      }, {});\n      return res;\n    }\n\n    // Map value by \"map${Property}\" function in each subClass\n    if (typeof this[`map${titleCase(key)}`] === 'function') {\n      const val = this[`map${titleCase(key)}`](\n        this.remediation.value!.find(({name}) => name === key)\n      );\n      if (val) {\n        return val;\n      }\n    }\n\n    // If a map is defined for this key, return the first aliased property that returns a truthy value\n    if (this.map && this.map[key]) {\n      const entry = this.map[key];\n      for (let i = 0; i < entry.length; i++) {\n        let val = this.values[entry[i]];\n        if (val) {\n          return val;\n        }\n      }\n    }\n\n    // fallback: return the value by key\n    return this.values[key];\n  }\n\n  hasData(\n    key: string // idx name\n  ): boolean \n  {\n    // no attempt to format, we want simple true/false\n    return !!this.getData(key);\n  }\n\n  getNextStep(_authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    const authenticator = this.getAuthenticator();\n    // TODO: remove type field in the next major version change\n    // https://oktainc.atlassian.net/browse/OKTA-431749\n    const type = authenticator?.type;\n    return { \n      name, \n      inputs, \n      ...(type && { type }),\n      ...(authenticator && { authenticator }),\n    };\n  }\n\n  // Get inputs for the next step\n  getInputs(): Input[] {\n    const inputs: Input[] = [];\n    const inputsFromRemediation = this.remediation.value || [];\n    inputsFromRemediation.forEach(inputFromRemediation => {\n      let input;\n      let { name, type, visible, messages } = inputFromRemediation;\n      if (visible === false) {\n        return; // Filter out invisible inputs, like stateHandle\n      }\n      if (typeof this[`getInput${titleCase(name)}`] === 'function') {\n        input = this[`getInput${titleCase(name)}`](inputFromRemediation);\n      } else if (type !== 'object') {\n        // handle general primitive types\n        let alias;\n        const aliases = (this.map ? this.map[name] : null) || [];\n        if (aliases.length === 1) {\n          alias = aliases[0];\n        } else {\n          // try find key from values\n          alias = aliases.find(name => Object.keys(this.values).includes(name));\n        }\n        if (alias) {\n          input = { ...inputFromRemediation, name: alias };\n        }\n      }\n      if (!input) {\n        input = inputFromRemediation;\n      }\n      if (Array.isArray(input)) {\n        input.forEach(i => inputs.push(i));\n      } else {\n        // guarantees field-level messages are passed back\n        if (messages) {\n          input.messages = messages;\n        }\n        inputs.push(input);\n      }\n    });\n    return inputs;\n  }\n\n  static getMessages(remediation: IdxRemediation): IdxMessage[] | undefined {\n    if (!remediation.value) {\n      return;\n    }\n    return remediation.value[0]?.form?.value.reduce((messages: IdxMessage[], field) => {\n      if (field.messages) {\n        messages = [...messages, ...field.messages.value];\n      }\n      return messages;\n    }, []);\n  }\n\n  // Prepare values for the next remediation\n  // In general, remove used values from inputs for the current remediation\n  // Override this method if special cases need be handled\n  getValuesAfterProceed(): T {\n    const inputsFromRemediation = this.remediation.value || []; // \"raw\" inputs from server response\n    const inputsFromRemediator = this.getInputs(); // \"aliased\" inputs from SDK remediator\n    const inputs = [\n      ...inputsFromRemediation,\n      ...inputsFromRemediator\n    ];\n    // scrub all values related to this remediation\n    for (const input of inputs) {\n      delete this.values[input.name];\n    }\n    return this.values;\n  }\n\n  protected getAuthenticator(): IdxAuthenticator | undefined {\n    // relatesTo value may be an authenticator or an authenticatorEnrollment\n    const relatesTo = this.remediation.relatesTo?.value;\n    if (!relatesTo) {\n      return;\n    }\n\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    if (!authenticatorFromRemediation) {\n      // Hopefully value is an authenticator\n      return relatesTo;\n    }\n\n    // If relatesTo is an authenticatorEnrollment, the id is actually the enrollmentId\n    // Let's get the correct authenticator id from the form value\n    const id = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'id')!.value as string;\n    const enrollmentId = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'enrollmentId')?.value as string;\n\n    return {\n      ...relatesTo,\n      id,\n      enrollmentId\n    };\n  }\n}\n","/* eslint-disable complexity */\nimport { AuthSdkError } from '../../../errors';\nimport { Input } from '../../types';\n\nexport function unwrapFormValue(remediation): Input { \n  if (Array.isArray(remediation)) {\n    return remediation\n      .map(item => {\n        if (typeof item === 'string' || typeof item === 'number' || typeof item === 'boolean') {\n          return item;\n        }\n        return unwrapFormValue(item);\n      }) as any;\n  }\n\n  const res = {};\n  for (const [key, value] of Object.entries(remediation)) {\n    if (value === null || typeof value === 'undefined') {\n      continue;\n    }\n\n    if (typeof value === 'object') {\n      const formKeys = Object.keys(value as object);\n      // detect patterns like:\n      // value -> form -> value | form -> value\n      if (['value', 'form'].includes(key) \n        && formKeys.length === 1 \n        && ['value', 'form'].includes(formKeys[0])\n      ) {\n        // unwrap nested form\n        const unwrappedForm = unwrapFormValue(value);\n        Object.entries(unwrappedForm).forEach(([key, value]) => {\n          res[key] = value;\n        });\n      } else {\n        // dfs\n        res[key] = unwrapFormValue(value);\n      }\n    } else {\n      // handle primitive value\n      res[key] = value;\n    }\n  }\n\n  return res as Input;\n}\n\n// only check if value is required for now\n// TODO: support SDK layer type based input validation\nexport function hasValidInputValue(input, values) {\n  const fn = (input, values, requiredTracker) => {\n    const { name, value, type, options, required } = input;\n    const isRequired = required || requiredTracker;\n\n    // handle nested value - all required fields should be avaiable in values \n    if (Array.isArray(value)) {\n      return value.reduce((acc, item) => {\n        return acc && fn(item, values[name], isRequired); // recursive call\n      }, true);\n    }\n\n    // handle options field\n    // 1. object type options - check if each object field is required and value can be found from the selectedOption\n    // 2. primitive options - required field is avaiable from top level\n    // 3. unknown format - pass to backend for validation\n    if (options) {\n      // object type options\n      if (type === 'object') {\n        const selectedOption = values[name];\n        if (!selectedOption) {\n          return false;\n        }\n        if (!selectedOption.id) {\n          // unknown option format, pass to backend for validation\n          return true;\n        }\n        const optionSchema = options.find((option) => {\n          const idSchema = option.value.find(({ name }) => name === 'id' );\n          return idSchema.value === selectedOption.id;\n        });\n        if (!optionSchema) {\n          return false;\n        }\n        return optionSchema.value\n          .filter(({ required }) => !!required)\n          .reduce((acc, { name }) => {\n            return acc && !!selectedOption[name];\n          }, true);\n      }\n\n      // primitive options, not required - always valid\n      if (required === false) {\n        return true;\n      }\n\n      // primitive options, required - check if value is available\n      if (required === true) {\n        return !!values[name];\n      }\n\n      // unknown options, throw\n      throw new AuthSdkError(`Unknown options type, ${JSON.stringify(input)}`);\n    }\n\n    // base case\n    if (!isRequired) {\n      return true;\n    }\n      \n    return !!(values && values[name]);\n  };\n\n  return fn(input, values, false);\n}\n","import { OktaAuthIdxInterface, IdxContext, NextStep, Input } from '../../types';\nimport { Remediator } from '../Base/Remediator';\nimport { unwrapFormValue } from './util';\n\nexport class GenericRemediator extends Remediator {\n  canRemediate(): boolean {\n    // only handle remediations that are able to submit form (xhr)\n    if (typeof this.remediation.action !== 'function') {\n      return false;\n    }\n\n    // DO NOT REMOVE - bring it back when enable client side validation for GenericRemediator - OKTA-512003\n    // const inputs = this.getInputs();\n    // const res = inputs.reduce((acc, input) => {\n    //   return acc && hasValidInputValue(input, this.values);\n    // }, true);\n    // return res;\n\n    if (this.remediation.name === 'poll' || this.remediation.name.endsWith('-poll')) {\n      return true;\n    }\n\n    if (this.options.step) {\n      return true;\n    }\n    \n    // disable auto proceed for unknown remediations\n    return false;\n  }\n\n  getData() {\n    const data = this.getInputs().reduce((acc, { name }) => {\n      acc[name] = this.values[name];\n      return acc;\n    }, {});\n    return data;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    \n    /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n    // excludes transformed fields\n    const { \n      // http metas have been transformed to action\n      href, \n      method, \n      rel, \n      accepts, \n      produces, \n      // value has been transform to inputs\n      value,\n      // will be transformed to a function that resolves IdxTransaction\n      action,\n      ...rest \n    } = this.remediation;\n    /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n\n    // step to handle form submission\n    if (action) {\n      return { \n        ...rest,\n        ...(!!inputs.length && { inputs }),\n        action: async (params?) => {\n          return authClient.idx.proceed({\n            step: name,\n            ...params\n          });\n        }\n      };\n    }\n\n    // return whole remediation data for other steps, eg \"redirect-idp\"\n    return { ...this.remediation } as NextStep;\n    \n  }\n\n  getInputs(): Input[] {\n    return (this.remediation.value || [])\n      .filter(({ name }) => name !== 'stateHandle')\n      .map(unwrapFormValue)\n      .map(input => {\n        // use string as default input type\n        input.type = input.type || 'string';\n        return input;\n      });\n  }\n\n}\n","import { warn, split2 } from '../util';\nimport { RemediationValues, Remediator, RemediatorConstructor } from './remediators';\nimport { GenericRemediator } from './remediators/GenericRemediator';\nimport {\n  OktaAuthIdxInterface,\n  IdxFeature,\n  NextStep,\n  RemediateOptions,\n  RemediationResponse,\n  RunOptions,\n  FlowIdentifier,\n  FlowSpecification\n} from './types';\nimport { IdxMessage, IdxRemediation, IdxRemediationValue, IdxResponse } from './types/idx-js';\n\ntype GetFlowSpecification = (\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier\n) => FlowSpecification;\n\nconst ctx: {\n  remediators: Record<string, RemediatorConstructor>,\n  getFlowSpecification: GetFlowSpecification,\n} = {\n  // default values to be used by minimal IDX API\n  remediators: {},\n  getFlowSpecification: function(_oktaAuth: OktaAuthIdxInterface, _flow: FlowIdentifier = 'default') {\n    return {\n      remediators: {}\n    } as FlowSpecification;\n  }\n};\n\n// should be set in createIdxAPI() factory\nexport function setRemediatorsCtx(newCtx: Partial<typeof ctx>) {\n  Object.assign(ctx, newCtx);\n}\n\nexport function getFlowSpecification(oktaAuth: OktaAuthIdxInterface, flow: FlowIdentifier = 'default') {\n  return ctx.getFlowSpecification(oktaAuth, flow);\n}\n\nexport function isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nexport function canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nexport function canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nexport function getMessagesFromIdxRemediationValue(\n  value?: IdxRemediationValue[]\n): IdxMessage[] | undefined {\n  if (!value || !Array.isArray(value)) {\n    return;\n  }\n  return value.reduce((messages, value) => {\n    if (value.messages) {\n      messages = [...messages, ...value.messages.value] as never;\n    }\n    if (value.form) {\n      const messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n      messages = [...messages, ...messagesFromForm] as never;\n    } \n    if (value.options) {\n      let optionValues = [];\n      value.options.forEach(option => {\n        if (!option.value || typeof option.value === 'string') {\n          return;\n        }\n        optionValues = [...optionValues, option.value] as never;\n      });\n      const messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n      messages = [...messages, ...messagesFromOptions] as never;\n    }\n    return messages;\n  }, []);\n}\n\nexport function getMessagesFromResponse(idxResponse: IdxResponse, options: RunOptions): IdxMessage[] {\n  let messages: IdxMessage[] = [];\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages] as never;\n  }\n\n  // Handle field messages for current flow\n  // Preserve existing logic for general cases, remove in the next major version\n  // Follow ion response format for top level messages when useGenericRemediator is true\n  if (!options.useGenericRemediator) {\n    for (let remediation of neededToProceed) {\n      const fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n      if (fieldMessages) {\n        messages = [...messages, ...fieldMessages] as never;\n      }\n    }\n  }\n\n  // API may return identical error on same field, filter by i18n key\n  const seen = {};\n  messages = messages.reduce((filtered, message) => {\n    const key = message.i18n?.key;\n    if (key && seen[key] && message.message === seen[key].message) {\n      return filtered;\n    }\n    seen[key] = message;\n    filtered = [...filtered, message] as never;\n    return filtered;\n  }, []);\n\n  return messages;\n}\n\n\nexport function getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'unlock-account')) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK as never);\n  }\n\n  return res;\n}\n\nexport function getAvailableSteps(\n  authClient: OktaAuthIdxInterface, \n  idxResponse: IdxResponse, \n  useGenericRemediator?: boolean\n): NextStep[] {\n  const res: NextStep[] = [];\n\n  const remediatorMap: Record<string, RemediatorConstructor> = Object.values(ctx.remediators)\n    .reduce((map, remediatorClass) => {\n      // Only add concrete subclasses to the map\n      if (remediatorClass.remediationName) {\n        map[remediatorClass.remediationName] = remediatorClass;\n      }\n      return map;\n    }, {});\n\n  for (let remediation of idxResponse.neededToProceed) {\n    const T = getRemediatorClass(remediation, { useGenericRemediator, remediators: remediatorMap });\n    if (T) {\n      const remediator: Remediator = new T(remediation);\n      res.push (remediator.getNextStep(authClient, idxResponse.context) as never);\n    }\n  }\n\n  for (const [name] of Object.entries((idxResponse.actions || {}))) {\n    let stepObj = {\n      name, \n      action: async (params?) => {\n        return authClient.idx.proceed({ \n          actions: [{ name, params }] \n        });\n      }\n    };\n    if (name.startsWith('currentAuthenticator')) {\n      const [part1, part2] = split2(name, '-');\n      const actionObj = idxResponse.rawIdxState[part1].value[part2];\n      /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const {\n        href, \n        method, \n        rel, \n        accepts, \n        produces, \n        ...rest\n      } = actionObj;\n      /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const value = actionObj.value?.filter(item => item.name !== 'stateHandle');\n      stepObj = { \n        ...rest,  \n        ...(value && { value }),\n        ...stepObj,\n      };\n    }\n    res.push(stepObj);\n  }\n\n  return res;\n}\n\nexport function filterValuesForRemediation(\n  idxResponse: IdxResponse,\n  remediationName: string,\n  values: RemediationValues\n): RemediationValues {\n  const remediations = idxResponse.neededToProceed || [];\n  const remediation = remediations.find(r => r.name === remediationName);\n  if (!remediation) {\n    // step was specified, but remediation was not found. This is unexpected!\n    warn(`filterValuesForRemediation: \"${remediationName}\" did not match any remediations`);\n    return values;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const valuesForRemediation = remediation.value!.reduce((res, entry) => {\n    const { name, value } = entry;\n    if (name === 'stateHandle') {\n      res[name] = value; // use the stateHandle value in the remediation\n    } else {\n      res[name] = values[name]; // use the value provided by the caller\n    }\n    return res;\n  }, {});\n  return valuesForRemediation;\n}\n\nfunction getRemediatorClass(remediation: IdxRemediation, options: RemediateOptions) {\n  const { useGenericRemediator, remediators } = options;\n  \n  if (!remediation) {\n    return undefined;\n  }\n\n  if (useGenericRemediator) {\n    return GenericRemediator;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediators![remediation.name];\n}\n\n// Return first match idxRemediation in allowed remediators\n// eslint-disable-next-line complexity\nexport function getRemediator(\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions,\n): Remediator | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const remediators = options.remediators!;\n  const useGenericRemediator = options.useGenericRemediator;\n  const {neededToProceed: idxRemediations, context} = idxResponse;\n\n  let remediator: Remediator;\n  // remediation name specified by caller - fast-track remediator lookup \n  if (options.step) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediation = idxRemediations.find(({ name }) => name === options.step)!;\n    if (remediation) {\n      const T = getRemediatorClass(remediation, options);\n      return T ? new T(remediation, values, options) : undefined;\n    } else {\n      // step was specified, but remediation was not found. This is unexpected!\n      warn(`step \"${options.step}\" did not match any remediations`);\n      return;\n    }\n  }\n\n  const remediatorCandidates: Remediator[] = [];\n  if (useGenericRemediator) {\n    // always pick the first remediation for when use GenericRemediator\n    remediatorCandidates.push(new GenericRemediator(idxRemediations[0], values, options));\n  } else {\n    for (let remediation of idxRemediations) {\n      const isRemeditionInFlow = Object.keys(remediators as object).includes(remediation.name);\n      if (!isRemeditionInFlow) {\n        continue;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const T = getRemediatorClass(remediation, options)!;\n      remediator = new T(remediation, values, options);\n      if (remediator.canRemediate(context)) {\n        // found the remediator\n        return remediator;\n      }\n      // remediator cannot handle the current values\n      // maybe return for next step\n      remediatorCandidates.push(remediator);  \n    }\n  }\n  \n  return remediatorCandidates[0];\n}\n\n\nexport function getNextStep(\n  authClient: OktaAuthIdxInterface, remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep(authClient, idxResponse.context);\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nexport function handleFailedResponse(\n  authClient: OktaAuthIdxInterface,\n  idxResponse: IdxResponse,\n  options = {}\n): RemediationResponse {\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse, options);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  } else {\n    const remediator = getRemediator(idxResponse, {}, options);\n    const nextStep = remediator && getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      messages,\n      ...(nextStep && { nextStep }),\n    };\n  }\n  \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, max-depth, complexity */\nimport { AuthSdkError } from '../errors';\nimport { RemediationValues } from './remediators';\nimport { OktaAuthIdxInterface, RemediateOptions, RemediationResponse } from './types';\nimport { \n  IdxResponse,\n  IdxActionParams, \n} from './types/idx-js';\nimport {\n  isTerminalResponse,\n  filterValuesForRemediation,\n  getRemediator,\n  getNextStep,\n  handleFailedResponse\n} from './util';\n\nexport interface RemediateActionWithOptionalParams {\n  name: string;\n  params?: IdxActionParams;\n}\n\nexport type RemediateAction = string | RemediateActionWithOptionalParams;\n\n\nfunction getActionFromValues(values: RemediationValues, idxResponse: IdxResponse): string | undefined {\n  // Currently support resend actions only\n  return Object.keys(idxResponse.actions).find(action => !!values.resend && action.includes('-resend'));\n}\n\nfunction removeActionFromValues(values: RemediationValues): RemediationValues {\n  // Currently support resend actions only\n  return {\n    ...values,\n    resend: undefined\n  };\n}\n\nfunction removeActionFromOptions(options: RemediateOptions, actionName: string): RemediateOptions {\n  let actions = options.actions || [];\n  actions = actions.filter(entry => {\n    if (typeof entry === 'string') {\n      return entry !== actionName;\n    }\n    return entry.name !== actionName;\n  });\n\n  return { ...options, actions };\n}\n\n// This function is called recursively until it reaches success or cannot be remediated\nexport async function remediate(\n  authClient: OktaAuthIdxInterface,\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions\n): Promise<RemediationResponse> {\n  let { neededToProceed, interactionCode } = idxResponse;\n  const { flow } = options;\n\n  // If the response contains an interaction code, there is no need to remediate\n  if (interactionCode) {\n    return { idxResponse };\n  }\n\n  const remediator = getRemediator(idxResponse, values, options);\n\n  // Try actions in idxResponse first\n  const actionFromValues = getActionFromValues(values, idxResponse);\n  const actionFromOptions = options.actions || [];\n  const actions = [\n    ...actionFromOptions,\n    ...(actionFromValues && [actionFromValues] || []),\n  ];\n  if (actions) {\n    for (let action of actions) {\n      // Action can either be specified as a string, or as an object with name and optional params\n      let params: IdxActionParams = {};\n      if (typeof action !== 'string') {\n        params = action.params || {};\n        action = action.name;\n      }\n      let valuesWithoutExecutedAction = removeActionFromValues(values);\n      let optionsWithoutExecutedAction = removeActionFromOptions(options, action);\n\n      if (typeof idxResponse.actions[action] === 'function') {\n        idxResponse = await idxResponse.actions[action](params);\n        if (idxResponse.requestDidSucceed === false) {\n          return handleFailedResponse(authClient, idxResponse, options);\n        }\n        if (action === 'cancel') {\n          return { idxResponse, canceled: true };\n        }\n        return remediate(\n          authClient, \n          idxResponse, \n          valuesWithoutExecutedAction, \n          optionsWithoutExecutedAction\n        ); // recursive call\n      }\n\n      // search for action in remediation list\n      const remediationAction = neededToProceed.find(({ name }) => name === action);\n      if (remediationAction) {\n        idxResponse = await idxResponse.proceed(action, params);\n        if (idxResponse.requestDidSucceed === false) {\n          return handleFailedResponse(authClient, idxResponse, options);\n        }\n        return remediate(authClient, idxResponse, values, optionsWithoutExecutedAction); // recursive call\n      }\n    }\n  }\n\n  // Do not attempt to remediate if response is in terminal state\n  const terminal = isTerminalResponse(idxResponse);\n  if (terminal) {\n    return { idxResponse, terminal };\n  }\n\n  if (!remediator) {\n    // With options.step, remediator is not required\n    if (options.step) {\n      values = filterValuesForRemediation(idxResponse, options.step, values); // include only requested values\n      idxResponse = await idxResponse.proceed(options.step, values);\n      if (idxResponse.requestDidSucceed === false) {\n        return handleFailedResponse(authClient, idxResponse, options);\n      }\n      return { idxResponse };\n    }\n\n    // With default flow, remediator is not required\n    if (flow === 'default') {\n      return { idxResponse };\n    }\n    throw new AuthSdkError(`\n      No remediation can match current flow, check policy settings in your org.\n      Remediations: [${neededToProceed.reduce((acc, curr) => acc ? acc + ' ,' + curr.name : curr.name, '')}]\n    `);\n  }\n\n  // Return next step to the caller\n  if (!remediator.canRemediate()) {\n    const nextStep = getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n    };\n  }\n\n  const name = remediator.getName();\n  const data = remediator.getData();\n\n  idxResponse = await idxResponse.proceed(name, data);\n  if (idxResponse.requestDidSucceed === false) {\n    return handleFailedResponse(authClient, idxResponse, options);\n  }\n  // We may want to trim the values bag for the next remediation\n  // Let the remediator decide what the values should be (default to current values)\n  values = remediator.getValuesAfterProceed();\n  options = { ...options, step: undefined }; // do not re-use the step\n\n  // generic remediator should not auto proceed in pending status\n  // return nextStep directly\n  if (options.useGenericRemediator && !idxResponse.interactionCode && !isTerminalResponse(idxResponse)) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const gr = getRemediator(idxResponse, values, options)!;\n    const nextStep = getNextStep(authClient, gr, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n    };\n  }\n  \n  return remediate(authClient, idxResponse, values, options); // recursive call\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, complexity, max-depth */\nimport { interact } from './interact';\nimport { introspect } from './introspect';\nimport { remediate } from './remediate';\nimport { RemediationValues } from './remediators/Base/Remediator';\nimport { \n  OktaAuthIdxInterface,\n  IdxStatus,\n  IdxTransaction,\n  IdxFeature,\n  NextStep,\n  RunOptions,\n  IdxTransactionMeta,\n} from './types';\nimport { IdxMessage, IdxResponse } from './types/idx-js';\nimport { getSavedTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport {\n  getAvailableSteps,\n  getEnabledFeatures,\n  getMessagesFromResponse,\n  isTerminalResponse,\n  getFlowSpecification\n} from './util';\nimport { Tokens } from '../oidc/types';\nimport { APIError } from '../errors/types';\ndeclare interface RunData {\n  options: RunOptions;\n  values: RemediationValues;\n  status?: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  idxResponse?: IdxResponse;\n  canceled?: boolean;\n  interactionCode?: string;\n  shouldSaveResponse?: boolean;\n  shouldClearTransaction?: boolean;\n  clearSharedStorage?: boolean;\n  terminal?: boolean;\n}\n\nfunction initializeValues(options: RunOptions) {\n  // remove known options, everything else is assumed to be a value\n  const knownOptions = [\n    'flow', \n    'remediators', \n    'actions', \n    'withCredentials', \n    'step',\n    'useGenericRemediator',\n    'exchangeCodeForTokens',\n  ];\n  const values = { ...options };\n  knownOptions.forEach(option => {\n    delete values[option];\n  });\n  return values;\n}\n\nfunction initializeData(authClient: OktaAuthIdxInterface, data: RunData): RunData {\n  let { options } = data;\n  options = {\n    ...authClient.options.idx,\n    ...options\n  };\n  let {\n    flow,\n    withCredentials,\n    remediators,\n    actions,\n  } = options;\n\n  const status = IdxStatus.PENDING;\n\n  // certain options can be set by the flow specification\n  flow = flow || authClient.idx.getFlow?.() || 'default';\n  if (flow) {\n    authClient.idx.setFlow?.(flow);\n    const flowSpec = getFlowSpecification(authClient, flow);\n    // Favor option values over flow spec\n    withCredentials = (typeof withCredentials !== 'undefined') ? withCredentials : flowSpec.withCredentials;\n    remediators = remediators || flowSpec.remediators;\n    actions = actions || flowSpec.actions;\n  }\n\n  return { \n    ...data,\n    options: { \n      ...options, \n      flow, \n      withCredentials, \n      remediators, \n      actions,\n    },\n    status\n  };\n}\n\nasync function getDataFromIntrospect(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  const { options } = data;\n  const {\n    stateHandle,\n    withCredentials,\n    version,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken,\n    maxAge,\n    acrValues,\n    nonce,\n    useGenericRemediator,\n  } = options;\n\n  let idxResponse;\n  let meta = getSavedTransactionMeta(authClient, { state, recoveryToken, activationToken }); // may be undefined\n\n  if (stateHandle) {\n    idxResponse = await introspect(authClient, { withCredentials, version, stateHandle, useGenericRemediator });\n  } else {\n    let interactionHandle = meta?.interactionHandle; // may be undefined\n    if (!interactionHandle) {\n      // start a new transaction\n      authClient.transactionManager.clear();\n      const interactResponse = await interact(authClient, {\n        withCredentials,\n        state,\n        scopes,\n        activationToken,\n        recoveryToken,\n        maxAge,\n        acrValues,\n        nonce,\n      }); \n      interactionHandle = interactResponse.interactionHandle;\n      meta = interactResponse.meta;\n    }\n  \n    // Introspect to get idx response\n    idxResponse = await introspect(authClient, { withCredentials, version, interactionHandle, useGenericRemediator });\n  }\n  return { ...data, idxResponse, meta };\n}\n\nasync function getDataFromRemediate(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  let {\n    idxResponse,\n    options,\n    values\n  } = data;\n\n  const {\n    autoRemediate,\n    remediators,\n    actions,\n    flow,\n    step,\n    useGenericRemediator,\n  } = options;\n  \n  const shouldRemediate = (autoRemediate !== false && (remediators || actions || step));\n  if (!shouldRemediate) {\n    return data;\n  }\n\n  values = { \n    ...values, \n    stateHandle: idxResponse!.rawIdxState.stateHandle \n  };\n\n  // Can we handle the remediations?\n  const { \n    idxResponse: idxResponseFromRemediation, \n    nextStep,\n    canceled,\n  } = await remediate(\n    authClient,\n    idxResponse!, \n    values, \n    {\n      remediators,\n      actions,\n      flow,\n      step,\n      useGenericRemediator,\n    }\n  );\n  idxResponse = idxResponseFromRemediation;\n\n  return { ...data, idxResponse, nextStep, canceled };\n}\n\nasync function getTokens(authClient: OktaAuthIdxInterface, data: RunData): Promise<Tokens> {\n  let { meta, idxResponse } = data;\n  const { interactionCode } = idxResponse as IdxResponse;\n  const {\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    urls,\n    scopes,\n  } = meta as IdxTransactionMeta;\n  const tokenResponse = await authClient.token.exchangeCodeForTokens({\n    interactionCode,\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    scopes\n  }, urls);\n  return tokenResponse.tokens;\n}\n\nasync function finalizeData(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  let {\n    options,\n    idxResponse,\n    canceled,\n    status,\n  } = data;\n  const { exchangeCodeForTokens } = options;\n  let shouldSaveResponse = false;\n  let shouldClearTransaction = false;\n  let clearSharedStorage = true;\n  let interactionCode;\n  let tokens;\n  let enabledFeatures;\n  let availableSteps;\n  let messages;\n  let terminal;\n\n  if (idxResponse) {\n    shouldSaveResponse = !!(idxResponse.requestDidSucceed || idxResponse.stepUp);\n    enabledFeatures = getEnabledFeatures(idxResponse);\n    availableSteps = getAvailableSteps(authClient, idxResponse, options.useGenericRemediator);\n    messages = getMessagesFromResponse(idxResponse, options);\n    terminal = isTerminalResponse(idxResponse);\n  }\n\n  if (terminal) {\n    status = IdxStatus.TERMINAL;\n\n    // In most cases a terminal response should not clear transaction data. The user should cancel or skip to continue.\n    // A terminal \"success\" is a non-error response with no further actions available.\n    // In these narrow cases, saved transaction data should be cleared.\n    // One example of a terminal success is when the email verify flow is continued in another tab\n    const hasActions = Object.keys(idxResponse!.actions).length > 0;\n    const hasErrors = !!messages.find(msg => msg.class === 'ERROR');\n    const isTerminalSuccess = !hasActions && !hasErrors && idxResponse!.requestDidSucceed === true;\n    if (isTerminalSuccess) {\n      shouldClearTransaction = true;\n    } else {\n      // save response if there are actions available (ignore messages)\n      shouldSaveResponse = !!hasActions;\n    }\n    // leave shared storage intact so the transaction can be continued in another tab\n    clearSharedStorage = false;\n  } else if (canceled) {\n    status = IdxStatus.CANCELED;\n    shouldClearTransaction = true;\n  } else if (idxResponse?.interactionCode) { \n    interactionCode = idxResponse.interactionCode;\n    if (exchangeCodeForTokens === false) {\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = false;\n    } else {\n      tokens = await getTokens(authClient, data);\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = true;\n    }\n  }\n  return {\n    ...data,\n    status,\n    interactionCode,\n    tokens,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    enabledFeatures,\n    availableSteps,\n    messages,\n    terminal\n  };\n}\n\nexport async function run(\n  authClient: OktaAuthIdxInterface, \n  options: RunOptions = {},\n): Promise<IdxTransaction> {\n  let data: RunData = {\n    options,\n    values: initializeValues(options)\n  };\n\n  data = initializeData(authClient, data);\n  data = await getDataFromIntrospect(authClient, data);\n  data = await getDataFromRemediate(authClient, data);\n  data = await finalizeData(authClient, data);\n\n  const {\n    idxResponse,\n    meta,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    status,\n    enabledFeatures,\n    availableSteps,\n    tokens,\n    nextStep,\n    messages,\n    error,\n    interactionCode\n  } = data;\n\n  if (shouldClearTransaction) {\n    authClient.transactionManager.clear({ clearSharedStorage });\n  }\n  else {\n    // ensures state is saved to sessionStorage\n    saveTransactionMeta(authClient, { ...meta });\n\n    if (shouldSaveResponse) {\n      // Save intermediate idx response in storage to reduce introspect call\n      const { rawIdxState: rawIdxResponse, requestDidSucceed } = idxResponse!;\n      authClient.transactionManager.saveIdxResponse({\n        rawIdxResponse,\n        requestDidSucceed,\n        stateHandle: idxResponse!.context?.stateHandle,\n        interactionHandle: meta?.interactionHandle\n      });\n    }\n  }\n  \n  // copy all fields from idxResponse which are needed by the widget\n  const { actions, context, neededToProceed, proceed, rawIdxState, requestDidSucceed, stepUp } = idxResponse || {};\n  return {\n    status: status!,\n    ...(meta && { meta }),\n    ...(enabledFeatures && { enabledFeatures }),\n    ...(availableSteps && { availableSteps }),\n    ...(tokens && { tokens }),\n    ...(nextStep && { nextStep }),\n    ...(messages && messages.length && { messages }),\n    ...(error && { error }),\n    ...(stepUp && { stepUp }),\n    interactionCode, // if options.exchangeCodeForTokens is false\n\n    // from idx-js\n    actions: actions!,\n    context: context!,\n    neededToProceed: neededToProceed!,\n    proceed: proceed!,\n    rawIdxState: rawIdxState!,\n    requestDidSucceed\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  AuthenticatorKey,\n  AuthenticationOptions\n} from './types';\nimport { run } from './run';\n\nexport async function authenticate(\n  authClient: OktaAuthIdxInterface, options: AuthenticationOptions = {}\n): Promise<IdxTransaction> {\n  if (options.password && !options.authenticator) {\n    options.authenticator = AuthenticatorKey.OKTA_PASSWORD;\n  }\n  return run(authClient, { \n    ...options, \n    flow: 'authenticate'\n  });\n}\n","import { IdxAuthenticator, IdxRemediationValue } from '../types/idx-js';\n\n\nexport interface Credentials {\n  [key: string]: string | boolean | number | undefined;\n}\n\nexport abstract class Authenticator<Values> {\n  meta: IdxAuthenticator;\n\n  constructor(authenticator: IdxAuthenticator) {\n    this.meta = authenticator;\n  }\n\n  abstract canVerify(values: Values): boolean;\n\n  abstract mapCredentials(values: Values): Credentials | undefined;\n\n  abstract getInputs(idxRemediationValue: IdxRemediationValue): any; // TODO: add type\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface VerificationCodeValues {\n  verificationCode?: string;\n  otp?: string;\n  credentials?: Credentials;\n}\n\ninterface VerificationCodeCredentials extends Credentials {\n  passcode: string;\n}\n\n// general authenticator to handle \"verificationCode\" input\n// it can be used for \"email\", \"phone\", \"google authenticator\"\n// a new authenticator class should be created if special cases need to be handled\nexport class VerificationCodeAuthenticator extends Authenticator<VerificationCodeValues> {\n  canVerify(values: VerificationCodeValues) {\n    return !!(values.credentials ||values.verificationCode || values.otp);\n  }\n\n  mapCredentials(values): VerificationCodeCredentials | Credentials | undefined {\n    const { credentials, verificationCode, otp } = values;\n    if (!credentials && !verificationCode && !otp) {\n      return;\n    }\n    return credentials || { passcode: verificationCode || otp };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'verificationCode',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n","import { Credentials } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\n\ninterface TotpCredentials extends Credentials {\n  totp: string;\n}\n\nexport class OktaVerifyTotp extends VerificationCodeAuthenticator {\n  mapCredentials(values): TotpCredentials | undefined {\n    const { verificationCode } = values;\n    if (!verificationCode) {\n      return;\n    }\n    return { totp: verificationCode };\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface OktaPasswordInputValues {\n  password?: string;\n  passcode?: string;\n  credentials?: Credentials;\n  // for ResetAuthenticator\n  revokeSessions?: boolean;\n}\n\nexport class OktaPassword extends Authenticator<OktaPasswordInputValues> {\n  canVerify(values: OktaPasswordInputValues) {\n    return !!(values.credentials || values.password || values.passcode);\n  }\n\n  mapCredentials(values: OktaPasswordInputValues): Credentials | undefined {\n    const { credentials, password, passcode, revokeSessions } = values;\n    if (!credentials && !password && !passcode) {\n      return;\n    }\n    return credentials || {\n      passcode: passcode || password,\n      revokeSessions,\n    };\n  }\n\n  getInputs(idxRemediationValue) {\n    const inputs = [{\n      ...idxRemediationValue.form?.value[0],\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required,\n    }];\n    const revokeSessions = idxRemediationValue.form?.value.find(\n      input => input.name === 'revokeSessions'\n    );\n    if (revokeSessions) {\n      inputs.push({\n        name: 'revokeSessions',\n        type: 'boolean',\n        label: 'Sign me out of all other devices',\n        required: false,\n      });\n    }\n    return inputs;\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionEnrollValues {\n  questionKey?: string;\n  question?: string;\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionEnrollment extends Authenticator<SecurityQuestionEnrollValues> {\n  canVerify(values: SecurityQuestionEnrollValues) {\n    const { credentials } = values;\n    if (credentials && credentials.questionKey && credentials.answer) {\n      return true;\n    }\n    const { questionKey, question, answer } = values;\n    return !!(questionKey && answer) || !!(question && answer);\n  }\n\n  mapCredentials(values: SecurityQuestionEnrollValues): Credentials | undefined {\n    const { questionKey, question, answer } = values;\n    if (!answer || (!questionKey && !question)) {\n      return;\n    }\n    return {\n      questionKey: question ? 'custom' : questionKey,\n      question,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'questionKey', type: 'string', required: true },\n      { name: 'question', type: 'string', label: 'Create a security question' },\n      { name: 'answer', type: 'string', label: 'Answer', required: true },\n    ];\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionVerificationValues {\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionVerification extends Authenticator<SecurityQuestionVerificationValues> {\n  canVerify(values: SecurityQuestionVerificationValues) {\n    const { credentials } = values;\n    if (credentials && credentials.answer) {\n      return true;\n    }\n    const { answer } = values;\n    return !!answer;\n  }\n\n  mapCredentials(values: SecurityQuestionVerificationValues): Credentials | undefined {\n    const { answer } = values;\n    if (!answer) {\n      return;\n    }\n    return {\n      questionKey: this.meta.contextualData!.enrolledQuestion!.questionKey,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'answer', type: 'string', label: 'Answer', required: true }\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnEnrollValues {\n  clientData?: string;\n  attestation?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnEnrollment extends Authenticator<WebauthnEnrollValues> {\n  canVerify(values: WebauthnEnrollValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, attestation } = obj;\n    return !!(clientData && attestation);\n  }\n\n  mapCredentials(values: WebauthnEnrollValues): Credentials | undefined {\n    const { credentials, clientData, attestation } = values;\n    if (!credentials && !clientData && !attestation) {\n      return;\n    }\n    return credentials || ({\n      clientData,\n      attestation\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'clientData', type: 'string', required: true, visible: false, label: 'Client Data' },\n      { name: 'attestation', type: 'string', required: true, visible: false, label: 'Attestation' },\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnVerificationValues {\n  clientData?: string;\n  authenticatorData?: string;\n  signatureData?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnVerification extends Authenticator<WebauthnVerificationValues> {\n  canVerify(values: WebauthnVerificationValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, authenticatorData, signatureData } = obj;\n    return !!(clientData && authenticatorData && signatureData);\n  }\n\n  mapCredentials(values: WebauthnVerificationValues): Credentials | undefined {\n    const { credentials, authenticatorData, clientData, signatureData } = values;\n    if (!credentials && !authenticatorData && !clientData && !signatureData) {\n      return;\n    }\n    return credentials || ({\n      authenticatorData,\n      clientData,\n      signatureData\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'authenticatorData', type: 'string', label: 'Authenticator Data', required: true, visible: false },\n      { name: 'clientData', type: 'string', label: 'Client Data', required: true, visible: false },\n      { name: 'signatureData', type: 'string', label: 'Signature Data', required: true, visible: false },\n    ];\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticator, Authenticator, AuthenticatorValues } from '../../authenticator';\nimport { IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, NextStep } from '../../types';\n\nexport type VerifyAuthenticatorValues = AuthenticatorValues & RemediationValues;\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator<T extends VerifyAuthenticatorValues = VerifyAuthenticatorValues>\n  extends Remediator<T> {\n\n  authenticator: Authenticator<VerifyAuthenticatorValues>;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n    this.authenticator = getAuthenticator(remediation);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const nextStep = super.getNextStep(authClient, context);\n    const authenticatorEnrollments = context?.authenticatorEnrollments?.value;\n\n    return {\n      ...nextStep,\n      authenticatorEnrollments\n    };\n  }\n\n  canRemediate() {\n    return this.authenticator.canVerify(this.values);\n  }\n\n  mapCredentials() {\n    return this.authenticator.mapCredentials(this.values);\n  }\n\n  getInputCredentials(input) {\n    return this.authenticator.getInputs(input);\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'credentials');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {} as T);\n  }\n}\n","import { OktaVerifyTotp } from './OktaVerifyTotp';\nimport { Authenticator } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\nimport { OktaPassword } from './OktaPassword';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification';\nimport { WebauthnEnrollment } from './WebauthnEnrollment';\nimport { WebauthnVerification } from './WebauthnVerification';\nimport { IdxAuthenticator, IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey } from '../types';\n\n/* eslint complexity:[0,8] */\nexport function getAuthenticator(remediation: IdxRemediation): Authenticator<any> {\n  const relatesTo = remediation.relatesTo;\n  const value = relatesTo?.value || {} as IdxAuthenticator;\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if (value.contextualData?.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if (value.contextualData?.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type EnrollAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class EnrollAuthenticator extends VerifyAuthenticator<EnrollAuthenticatorValues> {\n  static remediationName = 'enroll-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { NextStep, OktaAuthIdxInterface } from '../types';\nimport { IdxContext } from '../types/idx-js';\n\nexport interface EnrollPollValues extends RemediationValues {\n  startPolling?: boolean;\n}\n\nexport class EnrollPoll extends Remediator<EnrollPollValues> {\n  static remediationName = 'enroll-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'enroll-poll';\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const common = super.getNextStep(authClient, context);\n    let authenticator = this.getAuthenticator();\n    if (!authenticator && context?.currentAuthenticator) {\n      authenticator = context.currentAuthenticator.value;\n    }\n    return {\n      ...common,\n      authenticator,\n      poll: {\n        required: true,\n        refresh: this.remediation.refresh\n      },\n    };\n  }\n\n  getValuesAfterProceed(): EnrollPollValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxContext } from '../types/idx-js';\nimport { Authenticator, OktaAuthIdxInterface } from '../types/api';\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator<SelectEnrollmentChannelValues> {\n  static remediationName = 'select-enrollment-channel';\n\n  canRemediate() {\n    if (this.values.channel) {\n      return true;\n    }\n\n    if (this.values.authenticator) {\n      const { id, channel } = this.values.authenticator as Authenticator;\n      if (!!id && !!channel) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: (this.values.authenticator as Authenticator)?.channel || this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed(): SelectEnrollmentChannelValues {\n    this.values = super.getValuesAfterProceed();\n    delete this.values.authenticators;    // required to prevent infinite loops from auto-remediating via values\n    const filterKey = this.values.channel ? 'channel' : 'authenticator';\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== filterKey);\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxContext } from '../types/idx-js';\nimport { OktaAuthIdxInterface } from '../types';\n\n\nexport type EnrollmentChannelDataValues = RemediationValues & {\n  email?: string;\n  phoneNumber?: string;\n};\n\nexport class EnrollmentChannelData extends Remediator<EnrollmentChannelDataValues> {\n  static remediationName = 'enrollment-channel-data';\n\n  getInputEmail() {\n    return [\n      { name: 'email', type: 'string', required: true, label: 'Email' },\n    ];\n  }\n\n  getInputPhoneNumber() {\n    return [\n      { name: 'phoneNumber', type: 'string', required: true, label: 'Phone Number' },\n    ];\n  }\n\n  canRemediate() {\n    return Boolean(this.values.email || this.values.phoneNumber);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    return {\n      stateHandle: this.values.stateHandle,\n      email: this.values.email,\n      phoneNumber: this.values.phoneNumber\n    };\n  }\n\n  getValuesAfterProceed(): EnrollmentChannelDataValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => !['email', 'phoneNumber'].includes(valueKey));\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ChallengeAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ChallengeAuthenticator extends VerifyAuthenticator<ChallengeAuthenticatorValues> {\n  static remediationName = 'challenge-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { EnrollPoll } from './EnrollPoll';\n\nexport class ChallengePoll extends EnrollPoll{\n  static remediationName = 'challenge-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'challenge-poll';\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ResetAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ResetAuthenticator extends VerifyAuthenticator<ResetAuthenticatorValues> {\n  static remediationName = 'reset-authenticator';\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediation, IdxRemediationValue, IdxAuthenticator } from '../types/idx-js';\nimport { RemediateOptions } from '../types';\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { Authenticator, Credentials, OktaPassword } from '../authenticator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  credentials?: Credentials;\n  password?: string;\n  passcode?: string;\n}\n\nexport class EnrollProfile extends Remediator<EnrollProfileValues> {\n  static remediationName = 'enroll-profile';\n\n  authenticator: Authenticator<any> | null = null;\n\n  constructor(\n    remediation: IdxRemediation,\n    values: EnrollProfileValues = {},\n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values, options);\n\n    // credentials are only required when Profile Enrollment policy requires them\n    // if credentials are included in the remediation, they are considered required\n    // otherwise it will be omitted\n    const credentials = this.getCredentialsFromRemediation();\n    if (credentials) {\n      this.authenticator = this.authenticator = new OktaPassword({} as IdxAuthenticator);\n    }\n  }\n\n  canRemediate() {\n    // ensure credentials can be verified, if required\n    if (this.authenticator && !this.authenticator.canVerify(this.values)) {\n      return false;\n    }\n\n    const userProfileFromValues = this.getData().userProfile;\n    if (!userProfileFromValues) {\n      return false;\n    }\n    // eslint-disable-next-line max-len\n    const userProfileFromRemediation = this.remediation.value!.find(({ name }) => name === 'userProfile') as IdxRemediationValue;\n    return userProfileFromRemediation.form!.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  getCredentialsFromRemediation () {\n    return this.remediation.value!.find(({ name }) => name === 'credentials');\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n    return data;\n  }\n\n  mapCredentials() {\n    const val = this.authenticator && this.authenticator.mapCredentials(this.values);\n    if (!val) {\n      return;\n    }\n    return val;\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getInputCredentials(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Credentials } from '../authenticator';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n  credentials?: Credentials;\n  rememberMe?: boolean;\n}\n\nexport class Identify extends Remediator<IdentifyValues> {\n  static remediationName = 'identify';\n\n  map = {\n    'identifier': ['username']\n  };\n\n  canRemediate(): boolean {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    const { credentials, password } = this.values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator<ReEnrollAuthenticatorValues> {\n  static remediationName = 'reenroll-authenticator';\n\n  mapCredentials() {\n    const { newPassword } = this.values;\n    if (!newPassword) {\n      return;\n    }\n    return { \n      passcode: newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const challengeType = this.getAuthenticator()!.type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { ReEnrollAuthenticator } from './ReEnrollAuthenticator';\n\nexport class ReEnrollAuthenticatorWarning extends ReEnrollAuthenticator {\n  static remediationName = 'reenroll-authenticator-warning';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator } from './Base/Remediator';\n\nexport class RedirectIdp extends Remediator {\n  static remediationName = 'redirect-idp';\n\n  canRemediate() {\n    return false;\n  }\n\n  getNextStep() {\n    const { name, type, idp, href } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxRemediationValue, IdxContext, IdxOption } from '../../types/idx-js';\nimport { Authenticator, isAuthenticator } from '../../types/api';\nimport { compareAuthenticators, findMatchedOption} from '../../authenticator/util';\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string | Authenticator;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator<T extends SelectAuthenticatorValues = SelectAuthenticatorValues>\n  extends Remediator<T> {\n  selectedAuthenticator?: Authenticator;\n  selectedOption?: any;\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option: IdxOption | undefined;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key && relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  /* eslint complexity:[0,9] */\n  canRemediate(context?: IdxContext) {\n    const { authenticators, authenticator } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      return true;\n    }\n\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options!);\n    if (matchedOption) {\n      // Don't select current authenticator (OKTA-612939)\n      const isCurrentAuthenticator = context?.currentAuthenticator\n        && context?.currentAuthenticator.value.id === matchedOption.relatesTo?.id;\n      const isCurrentAuthenticatorEnrollment = context?.currentAuthenticatorEnrollment\n        && context?.currentAuthenticatorEnrollment.value.id === matchedOption.relatesTo?.id;\n      return !isCurrentAuthenticator && !isCurrentAuthenticatorEnrollment;\n    }\n    \n    return false;\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators, authenticator } = this.values;\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      this.selectedAuthenticator = authenticator; // track the selected authenticator\n      return authenticator;\n    }\n\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    this.selectedAuthenticator = selectedOption.relatesTo; // track the selected authenticator\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    const options = remediation.options.map(({ label, relatesTo }) => {\n      return {\n        label,\n        value: relatesTo.key\n      };\n    });\n    return { name: 'authenticator', type: 'string', options };\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey, Authenticator, RemediateOptions } from '../types';\n\nexport type SelectAuthenticatorAuthenticateValues = SelectAuthenticatorValues & {\n  password?: string;\n};\n\nexport class SelectAuthenticatorAuthenticate extends SelectAuthenticator<SelectAuthenticatorAuthenticateValues> {\n  static remediationName = 'select-authenticator-authenticate';\n\n  constructor(\n    remediation: IdxRemediation, \n    values: SelectAuthenticatorValues = {}, \n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values, options);\n\n    // Preset password authenticator to trigger recover action\n    const isRecoveryFlow = this.options.flow === 'recoverPassword';\n    const hasPasswordInOptions = getAuthenticatorFromRemediation(remediation)\n      .options?.some(({ relatesTo }) => relatesTo?.key === AuthenticatorKey.OKTA_PASSWORD);\n    if (hasPasswordInOptions && (isRecoveryFlow || this.values.password)) {\n      this.values.authenticators = [\n        ...this.values.authenticators || [],\n        { key: AuthenticatorKey.OKTA_PASSWORD }\n      ] as Authenticator[];\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorEnrollValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorEnroll extends SelectAuthenticator<SelectAuthenticatorEnrollValues> {\n  static remediationName = 'select-authenticator-enroll';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { Authenticator } from '../types';\nimport { IdxRemediationValue } from '../types/idx-js';\n\n\nexport type SelectAuthenticatorUnlockAccountValues = SelectAuthenticatorValues & {\n  identifier?: string;\n  methodType?: string;\n};\n\nexport class SelectAuthenticatorUnlockAccount extends SelectAuthenticator<SelectAuthenticatorUnlockAccountValues> {\n  static remediationName = 'select-authenticator-unlock-account';\n  authenticator?: Authenticator;\n\n  map = {\n    identifier: ['username']\n  };\n\n  canRemediate() {\n    const identifier = this.getData('identifier');\n    return !!identifier && super.canRemediate();\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const authenticatorMap = super.mapAuthenticator(remediationValue);\n    const methodTypeOption = this.selectedOption?.value.form.value.find(({ name }) => name === 'methodType');\n\n    // defaults to 'manually defined' value\n    // 2nd: option may have pre-defined value, like stateHandle\n    // 3rd: if only a single OV option is available, default to that option\n    const methodTypeValue = this.values.methodType ||\n      methodTypeOption?.value as string || methodTypeOption?.options?.[0]?.value as string;\n\n    if (methodTypeValue) {\n      return {\n        ...authenticatorMap,\n        methodType: methodTypeValue\n      };\n    }\n\n    return authenticatorMap;\n  }\n\n  getInputUsername () {\n    return { name: 'username', type: 'string' };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SelectEnrollProfileValues extends RemediationValues {}\n\nexport class SelectEnrollProfile extends Remediator<SelectEnrollProfileValues> {\n  static remediationName = 'select-enroll-profile';\n\n  canRemediate() {\n    return true;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { IdxRemediationValue, IdxRemediation, IdxAuthenticator } from '../../types/idx-js';\nimport { isAuthenticator } from '../../types/api';\nimport { compareAuthenticators } from '../../authenticator/util';\n\nexport type AuthenticatorDataValues = RemediationValues & {\n  methodType?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class AuthenticatorData<T extends AuthenticatorDataValues = AuthenticatorDataValues> extends Remediator<T> {\n  authenticator: IdxAuthenticator;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n\n    // set before other data calculation\n    this.authenticator = this.getAuthenticator()!;\n\n    this.formatAuthenticatorData();\n  }\n\n  protected formatAuthenticatorData() {\n    const authenticatorData = this.getAuthenticatorData();\n    if (authenticatorData) {\n      this.values.authenticatorsData = this.values.authenticatorsData!.map(data => {\n        if (compareAuthenticators(this.authenticator, data)) {\n          return this.mapAuthenticatorDataFromValues(data);\n        }\n        return data;\n      });\n    } else {\n      const data = this.mapAuthenticatorDataFromValues();\n      if (data) {\n        this.values.authenticatorsData!.push(data);\n      }\n    }\n  }\n\n  protected getAuthenticatorData() {\n    return this.values.authenticatorsData!\n      .find((data) => compareAuthenticators(this.authenticator, data));\n  }\n\n  canRemediate() {\n    return this.values.authenticatorsData!\n      .some(data => compareAuthenticators(this.authenticator, data));\n  }\n\n  protected mapAuthenticatorDataFromValues(authenticatorData?) {\n    // add methodType to authenticatorData if it exists in values\n    let { methodType, authenticator } = this.values;\n    if (!methodType && isAuthenticator(authenticator)) {\n     methodType = authenticator?.methodType;\n    }\n    \n    const { id, enrollmentId } = this.authenticator;\n    const data = { \n      id,\n      enrollmentId,\n      ...(authenticatorData && authenticatorData),\n      ...(methodType && { methodType }) \n    };\n\n    return data.methodType ? data : null;\n  }\n\n  protected getAuthenticatorFromRemediation(): IdxRemediationValue {\n    const authenticator = this.remediation.value!\n      .find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n    return authenticator;\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticatorData\n    const authenticatorsData = this.values.authenticatorsData!\n      .filter(data => compareAuthenticators(this.authenticator, data) !== true);\n    return { ...this.values, authenticatorsData };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\n\nexport type AuthenticatorVerificationDataValues = AuthenticatorDataValues;\n\nexport class AuthenticatorVerificationData extends AuthenticatorData<AuthenticatorVerificationDataValues> {\n  static remediationName = 'authenticator-verification-data';\n\n  mapAuthenticator() {\n    return this.getAuthenticatorData();\n  }\n\n  getInputAuthenticator() {\n    const authenticator = this.getAuthenticatorFromRemediation();\n    const methodType = authenticator.form!.value.find(({ name }) => name === 'methodType');\n    // if has methodType in form, let user select the methodType\n    if (methodType && methodType.options) {\n      return { \n        name: 'methodType', \n        type: 'string', \n        required: true, \n        options: methodType.options \n      };\n    }\n    // no methodType, then return form values\n    const inputs = [...authenticator.form!.value];\n    return inputs;\n  }\n\n  getValuesAfterProceed(): AuthenticatorVerificationDataValues {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'authenticator');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { getAuthenticatorFromRemediation } from './util';\n\nexport type AuthenticatorEnrollmentDataValues =  AuthenticatorDataValues & {\n  phoneNumber?: string;\n  resend?: boolean; // resend is not a remediator value - revise when IdxResponse structure is updated\n}\nexport class AuthenticatorEnrollmentData extends AuthenticatorData<AuthenticatorEnrollmentDataValues> {\n  static remediationName = 'authenticator-enrollment-data';\n\n  mapAuthenticator() {\n    const authenticatorData = this.getAuthenticatorData();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation)!;\n    return { \n      id: authenticatorFromRemediation.form!.value\n        .find(({ name }) => name === 'id')!.value,\n      methodType: authenticatorData!.methodType,\n      phoneNumber: authenticatorData!.phoneNumber,\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    return [\n      { name: 'methodType', type: 'string' }, \n      { name: 'phoneNumber', label: 'Phone Number', type: 'string' }\n    ].map(item => {\n      const value = remediation.form.value.find(val => val.name === item.name);\n      return { ...value, ...item };\n    });\n  }\n\n  protected mapAuthenticatorDataFromValues(data?) {\n    // get mapped authenticator from base class\n    data = super.mapAuthenticatorDataFromValues(data);\n    // add phoneNumber to authenticator if it exists in values\n    const { phoneNumber } = this.values;\n    if (!data && !phoneNumber) {\n      return;\n    }\n\n    return { \n      ...(data && data), \n      ...(phoneNumber && { phoneNumber }) \n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface SkipValues extends RemediationValues {\n  skip?: boolean;\n}\n\nexport class Skip extends Remediator<SkipValues> {\n  static remediationName = 'skip';\n\n  canRemediate() {\n    return !!this.values.skip || this.options.step === 'skip';\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ReEnrollAuthenticator,\n  ReEnrollAuthenticatorWarning,\n  RedirectIdp,\n  AuthenticatorEnrollmentData,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorVerificationData,\n  EnrollPoll,\n  ChallengePoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  Skip\n} from '../remediators';\n\nexport const AuthenticationFlow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'redirect-idp': RedirectIdp,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  AuthenticatorVerificationData,\n  ResetAuthenticator,\n  ReEnrollAuthenticator,\n  ReEnrollAuthenticatorWarning,\n  SelectAuthenticatorEnroll,\n  AuthenticatorEnrollmentData,\n  EnrollPoll\n} from '../remediators';\n\nexport const PasswordRecoveryFlow: RemediationFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n  'enroll-poll': EnrollPoll,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  SelectEnrollProfile,\n  EnrollPoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  EnrollProfile,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorEnrollmentData,\n  Skip,\n} from '../remediators';\n\nexport const RegistrationFlow: RemediationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorUnlockAccount,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ChallengePoll,\n  AuthenticatorVerificationData,\n  ReEnrollAuthenticatorWarning\n} from '../remediators';\n\nexport const AccountUnlockFlow: RemediationFlow = {\n  'identify': Identify,\n  // NOTE: unlock-account is purposely not included. Handled as action\n  // because it's a rememdiation which requires no input\n  // 'unlock-account': UnlockAccount,\n  'select-authenticator-unlock-account': SelectAuthenticatorUnlockAccount,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n};\n","import { OktaAuthIdxInterface, FlowIdentifier, FlowSpecification } from '../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { AccountUnlockFlow } from './AccountUnlockFlow';\n\n// eslint-disable-next-line complexity\nexport function getFlowSpecification(\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier = 'default'\n): FlowSpecification {\n  let remediators, actions, withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = [\n        'unlock-account'\n      ];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      // default case has no flow monitor\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return { flow, remediators, actions, withCredentials };\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, CancelOptions, IdxTransactionMeta } from './types';\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\n\nexport async function cancel (authClient: OktaAuthIdxInterface, options?: CancelOptions) {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  const flowSpec = getFlowSpecification(authClient, meta.flow);\n  return run(authClient, {\n    ...options,\n    ...flowSpec,\n    actions: ['cancel']\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nexport function urlParamsToObject(hashOrSearch: string) {\n  // Predefine regexs for parsing hash\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n\n  // Some hash based routers will automatically add a / character after the hash\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n\n  // Remove the leading # or ?\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n\n\n  var obj = {};\n\n  // Loop until we have no more params\n  var param;\n  while (true) { // eslint-disable-line no-constant-condition\n    param = paramSplit.exec(fragment);\n    if (!param) { break; }\n\n    var key = param[1];\n    var value = param[2];\n\n    // id_token should remain base64url encoded\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n  return obj;\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface } from './types';\n\nimport CustomError from '../errors/CustomError';\nimport { urlParamsToObject  } from '../oidc/util/urlParams';\nimport { EmailVerifyCallbackResponse } from './types/api';\n\nexport class EmailVerifyCallbackError extends CustomError {\n  state: string;\n  otp: string;\n\n  constructor(state: string, otp: string) {\n    super(`Enter the OTP code in the originating client: ${otp}`);\n    this.name = 'EmailVerifyCallbackError';\n    this.state = state;\n    this.otp = otp;\n  }\n}\n\nexport function isEmailVerifyCallbackError(error: Error) {\n  return (error.name === 'EmailVerifyCallbackError');\n}\n\n// Check if state && otp have been passed back in the url\nexport function isEmailVerifyCallback (urlPath: string): boolean {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\n// Parse state and otp from a urlPath (should be either a search or fragment from the URL)\nexport function parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n  return urlParamsToObject(urlPath) as EmailVerifyCallbackResponse;\n}\n\nexport async function handleEmailVerifyCallback(authClient: OktaAuthIdxInterface, search: string) {\n  if (isEmailVerifyCallback(search)) {\n    const { state, otp } = parseEmailVerifyCallback(search);\n    if (authClient.idx.canProceed({ state })) {\n      // same browser / device\n      return await authClient.idx.proceed({ state, otp });\n    } else {\n      // different browser or device\n      throw new EmailVerifyCallbackError(state, otp);\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  ProceedOptions,\n} from './types';\nimport { run } from './run';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { AuthSdkError } from '../errors';\n\nexport function canProceed(authClient: OktaAuthIdxInterface, options: ProceedOptions = {}): boolean {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!(meta || options.stateHandle);\n}\n\nexport async function proceed(\n  authClient: OktaAuthIdxInterface,\n  options: ProceedOptions = {}\n): Promise<IdxTransaction> {\n\n  if (!canProceed(authClient, options)) {\n    throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n  }\n\n  let { flow, state } = options;\n  if (!flow) {\n    const meta = getSavedTransactionMeta(authClient, { state });\n    flow = meta?.flow;\n  }\n\n  return run(authClient, { \n    ...options, \n    flow\n  });\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed';\n\nimport { \n  IdxPollOptions,\n  IdxTransaction,\n  OktaAuthIdxInterface,\n} from './types';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { warn } from '../util';\n\nexport async function poll(authClient: OktaAuthIdxInterface, options: IdxPollOptions = {}): Promise<IdxTransaction> {\n  const { withCredentials, exchangeCodeForTokens } = options;\n  let transaction = await proceed(authClient, {\n    startPolling: true,\n    withCredentials,\n    exchangeCodeForTokens\n  });\n\n  const meta = getSavedTransactionMeta(authClient);\n  let availablePollingRemeditaions = meta?.remediations?.find(remediation => remediation.includes('poll'));\n  if (!availablePollingRemeditaions?.length) {\n    warn('No polling remediations available at the current IDX flow stage');\n  }\n\n  if (Number.isInteger(options.refresh)) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(async function () {\n        try {\n          const refresh = transaction.nextStep?.poll?.refresh;\n          if (refresh) {\n            resolve(poll(authClient, {\n              refresh\n            }));\n          } else {\n            resolve(transaction);\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }, options.refresh);\n    });\n  }\n\n  return transaction;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { OktaAuthIdxInterface, IdxTransaction, StartOptions } from './types';\n\nexport async function startTransaction(\n  authClient: OktaAuthIdxInterface, \n  options: StartOptions = {}\n): Promise<IdxTransaction> {\n  // Clear IDX response cache and saved transaction meta (if any)\n  authClient.transactionManager.clear();\n\n  return run(authClient, {\n    exchangeCodeForTokens: false,\n    ...options\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  RegistrationOptions, \n  IdxTransaction, \n  OktaAuthIdxInterface, \n  IdxFeature,\n} from './types';\n\nexport async function register(\n  authClient: OktaAuthIdxInterface, options: RegistrationOptions = {}\n): Promise<IdxTransaction> {\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, {\n      ...options,\n      flow: 'register',\n      autoRemediate: false\n    });\n    if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      throw new AuthSdkError('Registration is not supported based on your current org configuration.');\n    }\n  }\n\n  return run(authClient, {\n    ...options,\n    flow: 'register'\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\nimport { \n  OktaAuthIdxInterface, \n  PasswordRecoveryOptions, \n  IdxTransaction,\n} from './types';\n\nexport async function recoverPassword(\n  authClient: OktaAuthIdxInterface, options: PasswordRecoveryOptions = {}\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n  return run(\n    authClient, \n    { \n      ...options,\n      ...flowSpec,\n    }\n  );\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { IdxTransactionMeta } from './types/meta';\nimport { OktaAuthIdxInterface } from './types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuthIdxInterface, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    throw new OAuthError(error, searchParams.get('error_description')!);\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  OktaAuthIdxInterface, \n  AccountUnlockOptions, \n  IdxTransaction,\n  IdxFeature,\n} from './types';\n\nexport async function unlockAccount(\n  authClient: OktaAuthIdxInterface, options: AccountUnlockOptions = {}\n): Promise<IdxTransaction> {\n  options.flow = 'unlockAccount';\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, { ...options, autoRemediate: false });\n    if (enabledFeatures && !enabledFeatures.includes(IdxFeature.ACCOUNT_UNLOCK)) {\n      throw new AuthSdkError(\n        'Self Service Account Unlock is not supported based on your current org configuration.'\n      );\n    }\n  }\n\n  return run(authClient, { ...options });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuthOAuthInterface } from '../types';\nimport { OAuthError, AuthApiError, isOAuthError } from '../../errors';\n\nexport function isInteractionRequiredError(error: Error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n  const oauthError = error as OAuthError;\n  return (oauthError.errorCode === 'interaction_required');\n}\n\nexport function isAuthorizationCodeError(sdk: OktaAuthOAuthInterface, error: Error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n  const authApiError = error as AuthApiError;\n  // xhr property doesn't seem to match XMLHttpRequest type\n  const errorResponse = authApiError.xhr as unknown as Record<string, unknown>;\n  const responseJSON = errorResponse?.responseJSON as Record<string, unknown>;\n  return sdk.options.pkce && (responseJSON?.error as string === 'invalid_grant');\n}\n\nexport function isRefreshTokenInvalidError(error: unknown): boolean {\n  // error: {\"error\":\"invalid_grant\",\"error_description\":\"The refresh token is invalid or expired.\"}\n  return isOAuthError(error) &&\n    error.errorCode === 'invalid_grant' &&\n    error.errorSummary === 'The refresh token is invalid or expired.';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\n/* eslint-disable complexity, max-statements */\nimport { OktaAuthOAuthOptions, OktaAuthOAuthInterface, OAuthResponseType } from '../types';\n\nexport function hasTokensInHash(hash: string): boolean {\n  return /((id|access)_token=)/i.test(hash);\n}\n\n// authorization_code\nexport function hasAuthorizationCode(hashOrSearch: string): boolean {\n  return /(code=)/i.test(hashOrSearch);\n}\n\n// interaction_code\nexport function hasInteractionCode(hashOrSearch: string): boolean {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nexport function hasErrorInUrl(hashOrSearch: string): boolean {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nexport function isRedirectUri(uri: string, sdk: OktaAuthOAuthInterface): boolean {\n  var authParams = sdk.options;\n  if (!uri || !authParams.redirectUri) {\n    return false;\n  }\n  return uri.indexOf(authParams.redirectUri) === 0;\n}\n\nexport function isCodeFlow(options: OktaAuthOAuthOptions) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nexport function hasResponseType(responseType: OAuthResponseType, options: OktaAuthOAuthOptions): boolean {\n  let hasResponseType = false;\n  if (Array.isArray(options.responseType) && options.responseType.length) {\n    hasResponseType = options.responseType.indexOf(responseType) >= 0;\n  } else {\n    hasResponseType = options.responseType === responseType;\n  }\n  return hasResponseType;\n}\n\nexport function getHashOrSearch(options: OktaAuthOAuthOptions) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\n/**\n * Check if tokens or a code have been passed back into the url, which happens in\n * the OIDC (including social auth IDP) redirect flow.\n */\nexport function isLoginRedirect (sdk: OktaAuthOAuthInterface) {\n  // First check, is this a redirect URI?\n  if (!isRedirectUri(window.location.href, sdk)){\n    return false;\n  }\n\n  // The location contains either a code, token, or an error + error_description\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode =  hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  // implicit flow, will always be hash fragment\n  return hasTokensInHash(window.location.hash);\n}\n\n/**\n * Check if error=interaction_required has been passed back in the url, which happens in\n * the social auth IDP redirect flow.\n */\nexport function isInteractionRequired (sdk: OktaAuthOAuthInterface, hashOrSearch?: string) {\n  if (!hashOrSearch) { // web only\n    // First check, is this a redirect URI?\n    if (!isLoginRedirect(sdk)){\n      return false;\n    }\n  \n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { isInteractionRequired, isInteractionRequiredError } from '../../oidc';\nimport { authenticate } from '../authenticate';\nimport { cancel } from '../cancel';\nimport {\n  handleEmailVerifyCallback,\n  isEmailVerifyCallback,\n  isEmailVerifyCallbackError,\n  parseEmailVerifyCallback\n} from '../emailVerify';\nimport { handleInteractionCodeRedirect } from '../handleInteractionCodeRedirect';\nimport { makeIdxState } from '../idxState';\nimport { interact } from '../interact';\nimport { introspect } from '../introspect';\nimport { poll } from '../poll';\nimport { canProceed, proceed } from '../proceed';\nimport { recoverPassword } from '../recoverPassword';\nimport { register } from '../register';\nimport { startTransaction } from '../startTransaction';\nimport {\n  clearTransactionMeta,\n  createTransactionMeta,\n  getSavedTransactionMeta,\n  getTransactionMeta,\n  isTransactionMetaValid,\n  saveTransactionMeta\n} from '../transactionMeta';\nimport { FlowIdentifier, IdxAPI, OktaAuthIdxInterface } from '../types';\nimport { unlockAccount } from '../unlockAccount';\nimport * as remediators from '../remediators';\nimport { getFlowSpecification } from '../flow/FlowSpecification';\nimport { setRemediatorsCtx } from '../util';\n\n// Factory\nexport function createIdxAPI(sdk: OktaAuthIdxInterface): IdxAPI {\n  setRemediatorsCtx({\n    remediators,\n    getFlowSpecification,\n  });\n  const boundStartTransaction = startTransaction.bind(null, sdk);\n  const idx = {\n    interact: interact.bind(null, sdk),\n    introspect: introspect.bind(null, sdk),\n    makeIdxResponse: makeIdxState.bind(null, sdk),\n    \n    authenticate: authenticate.bind(null, sdk),\n    register: register.bind(null, sdk),\n    start: boundStartTransaction,\n    startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n    poll: poll.bind(null, sdk),\n    proceed: proceed.bind(null, sdk),\n    cancel: cancel.bind(null, sdk),\n    recoverPassword: recoverPassword.bind(null, sdk),\n\n    // oauth redirect callback\n    handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, sdk),\n\n    // interaction required callback\n    isInteractionRequired: isInteractionRequired.bind(null, sdk),\n    isInteractionRequiredError,\n\n    // email verify callback\n    handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, sdk),\n    isEmailVerifyCallback,\n    parseEmailVerifyCallback,\n    isEmailVerifyCallbackError,\n    \n    getSavedTransactionMeta: getSavedTransactionMeta.bind(null, sdk),\n    createTransactionMeta: createTransactionMeta.bind(null, sdk),\n    getTransactionMeta: getTransactionMeta.bind(null, sdk),\n    saveTransactionMeta: saveTransactionMeta.bind(null, sdk),\n    clearTransactionMeta: clearTransactionMeta.bind(null, sdk),\n    isTransactionMetaValid,\n    setFlow: (flow: FlowIdentifier) => {\n      sdk.options.flow = flow;\n    },\n    getFlow: (): FlowIdentifier | undefined => {\n      return sdk.options.flow;\n    },\n    canProceed: canProceed.bind(null, sdk),\n    unlockAccount: unlockAccount.bind(null, sdk),\n  };\n  return idx;\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* global SDK_VERSION */\n\nimport { isBrowser } from '../features';\nexport class OktaUserAgent {\n  environments: string[];\n\n  constructor() {\n    // add base sdk env\n    this.environments = [`okta-auth-js/${SDK_VERSION}`];\n    this.maybeAddNodeEnvironment();\n  }\n\n  addEnvironment(env: string) {\n    this.environments.push(env);\n  }\n\n  getHttpHeader() {\n    return { 'X-Okta-User-Agent-Extended': this.environments.join(' ') };\n  }\n\n  getVersion() {\n    return SDK_VERSION;\n  }\n\n  maybeAddNodeEnvironment() {\n    if (isBrowser() || !process || !process.versions) {\n      return;\n    }\n    const { node: version } = process.versions;\n    this.environments.push(`nodejs/${version}`);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthHttpInterface } from './types';\n\nexport function setRequestHeader(authClient: OktaAuthHttpInterface, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthSdkError } from '../errors';\nimport { atob, btoa } from './webcrypto';\n\n// converts a string to base64 (url/filename safe variant)\nexport function stringToBase64Url(str) {\n  var b64 = btoa(str);\n  return base64ToBase64Url(b64);\n}\n\n// converts a standard base64-encoded string to a \"url/filename safe\" variant\nexport function base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n// converts a \"url/filename safe\" base64 string to a \"standard\" base64 string\nexport function base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nexport function base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n  switch (b64.length % 4) {\n    case 0:\n      break;\n    case 2:\n      b64 += '==';\n      break;\n    case 3:\n      b64 += '=';\n      break;\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n  var utf8 = atob(b64);\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\n\nexport function stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function base64UrlDecode(str) {\n  return atob(base64UrlToBase64(str));\n}\n\n// Converts base64 string to binary data view\nexport function base64UrlToBuffer(b64u) {\n  return Uint8Array.from(base64UrlDecode(b64u), (c: string) => c.charCodeAt(0));\n}\n\n// Converts an ArrayBuffer object that contains binary data to base64 encoded string\nexport function bufferToBase64Url(bin) {\n  return btoa(new Uint8Array(bin).reduce((s, byte) => s + String.fromCharCode(byte), ''));\n}\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global TextEncoder */\nimport { stringToBase64Url } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function getOidcHash(str) {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = intBuffer.slice(0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util';\nimport { stringToBuffer, base64UrlDecode } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function verifyToken(idToken, key) {\n  key = clone(key);\n\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: 'SHA-256' }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n\n  // https://connect.microsoft.com/IE/feedback/details/2242108/webcryptoapi-importing-jwk-with-use-field-fails\n  // This is a metadata tag that specifies the intent of how the key should be used.\n  // It's not necessary to properly verify the jwt's signature.\n  delete key.use;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return webcrypto.subtle.importKey(\n    format,\n    key,\n    algo,\n    extractable,\n    usages\n  )\n  .then(function(cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n\n    return webcrypto.subtle.verify(\n      algo,\n      cryptoKey,\n      signature,\n      payload\n    );\n  });\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise } from './types';\nimport { warn } from './console';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\ninterface PromiseQueueOptions {\n  quiet?: boolean; // if false, concurrrency warnings will not be logged\n}\nexport class PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n  options: PromiseQueueOptions;\n\n  constructor(options: PromiseQueueOptions = { quiet: false }) {\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: (...args: any) => any, thisObject: any, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        // There is at least one other pending call.\n        // The PromiseQueue will prevent these methods from running concurrently.\n        if (this.options.quiet !== false) {\n          warn(\n            'Async method is being called but another async method is already running. ' +\n            'The new method will be delayed until the previous method completes.'\n          );\n        }\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var queueItem = this.queue.shift()!;\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args as never) as unknown;\n    if (isPromise(res)) {\n      (res as Promise<unknown>).then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n","/*!\n * Copyright (c) 2019-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n /* eslint-disable complexity, max-statements */\nimport { stringToBase64Url, webcrypto } from '../../crypto';\nimport { MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH, DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\n\nfunction dec2hex (dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  webcrypto.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\n\nfunction generateVerifier(prefix?: string): string {\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\n\nfunction computeChallenge(str: string): PromiseLike<any> {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer) as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n\nexport default {\n  DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier,\n  computeChallenge\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { JWTObject } from './types';\nimport { base64UrlToString } from '../crypto';\n\nexport function decodeToken(token: string): JWTObject {\n  var jwt = token.split('.');\n  var decodedToken: JWTObject;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateNonce, generateState } from './oauth';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultTokenParams(sdk: OktaAuthOAuthInterface): TokenParams {\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    acrValues,\n    maxAge,\n    state,\n    ignoreSignature,\n    dpop\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce,\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    acrValues,\n    maxAge,\n    ignoreSignature,\n    dpop,\n  });\n}","// References:\n// https://www.w3.org/TR/WebCryptoAPI/#concepts-key-storage\n// https://datatracker.ietf.org/doc/html/rfc9449\n\nimport {\n  webcrypto,\n  stringToBase64Url,\n  stringToBuffer,\n  bufferToBase64Url,\n  base64ToBase64Url,\n  btoa\n} from '../crypto';\nimport { AuthSdkError, OAuthError, WWWAuthError, isOAuthError, isWWWAuthError } from '../errors';\nimport { Tokens } from './types';\n\nexport interface DPoPClaims {\n  htm: string;\n  htu: string;\n  iat: number;\n  jti: string;\n  nonce?: string;\n  ath?: string;\n}\n\nexport interface DPoPProofParams {\n  keyPair: CryptoKeyPair;\n  url: string;\n  method: string;\n  nonce?: string;\n  accessToken?: string;\n}\n\nexport type ResourceDPoPProofParams = Omit<DPoPProofParams, 'keyPair' | 'nonce'>;\ntype DPoPProofTokenRequestParams = Omit<DPoPProofParams, 'accessToken'>;\n\nconst INDEXEDDB_NAME = 'OktaAuthJs';\nconst DB_KEY = 'DPoPKeys';\n\nexport function isDPoPNonceError(obj: any): obj is OAuthError | WWWAuthError {\n  return (\n    (isOAuthError(obj) || isWWWAuthError(obj)) &&\n    obj.errorCode === 'use_dpop_nonce'\n  );\n}\n\n/////////// crypto ///////////\n\nexport async function createJwt(header: object, claims: object, signingKey: CryptoKey): Promise<string> {\n  const head = stringToBase64Url(JSON.stringify(header));\n  const body = stringToBase64Url(JSON.stringify(claims));\n  const signature = await webcrypto.subtle.sign(\n    { name: signingKey.algorithm.name }, signingKey, stringToBuffer(`${head}.${body}`)\n  );\n  return `${head}.${body}.${base64ToBase64Url(bufferToBase64Url(signature))}`;\n}\n\nexport function cryptoRandomValue (byteLen = 32) {\n  return [...webcrypto.getRandomValues(new Uint8Array(byteLen))].map(v => v.toString(16)).join('');\n}\n\nexport async function generateKeyPair (): Promise<CryptoKeyPair> {\n  const algorithm = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: 'SHA-256',\n    modulusLength: 2048,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n  };\n\n  // The \"false\" here makes it non-exportable\n  // https://caniuse.com/mdn-api_subtlecrypto_generatekey\n  return webcrypto.subtle.generateKey(algorithm, false, ['sign', 'verify']);\n}\n\nasync function hashAccessToken (accessToken: string): Promise<string> {\n  const buffer = new TextEncoder().encode(accessToken);\n  const hash = await webcrypto.subtle.digest('SHA-256', buffer);\n\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(hash) as unknown as number[]))\n    .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n/////////// indexeddb / keystore ///////////\n\n\n// https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore#instance_methods\n// add additional methods as needed\nexport type StoreMethod = 'get' | 'add' | 'delete' | 'clear';\n\n// convenience abstraction for exposing IDBObjectStore instance\nfunction keyStore (): Promise<IDBObjectStore> {\n  return new Promise((resolve, reject) => {\n    try {\n      const indexedDB = window.indexedDB;\n      const req = indexedDB.open(INDEXEDDB_NAME, 1);\n\n      req.onerror = function () {\n        reject(req.error!);\n      };\n\n      req.onupgradeneeded = function () {\n        const db = req.result;\n        db.createObjectStore(DB_KEY);\n      };\n\n      req.onsuccess = function () {\n        const db = req.result;\n        const tx = db.transaction(DB_KEY, 'readwrite');\n\n        tx.onerror = function () {\n          reject(tx.error!);\n        };\n\n        const store = tx.objectStore(DB_KEY);\n\n        resolve(store);\n\n        tx.oncomplete = function () {\n          db.close();\n        };\n      };\n    }\n    catch (err) {\n      reject(err);\n    }\n  });\n}\n\n// convenience abstraction for wrapping IDBObjectStore methods in promises\nasync function invokeStoreMethod (method: StoreMethod, ...args: any[]): Promise<IDBRequest> {\n  const store = await keyStore();\n  return new Promise((resolve, reject) => {\n    // https://github.com/microsoft/TypeScript/issues/49700\n    // https://github.com/microsoft/TypeScript/issues/49802\n    // @ts-expect-error ts(2556)\n    const req = store[method](...args);\n    req.onsuccess = function () {\n      resolve(req);\n    };\n    req.onerror = function () {\n      reject(req.error);\n    };\n  });\n}\n\nasync function storeKeyPair (pairId: string, keyPair: CryptoKeyPair) {\n  await invokeStoreMethod('add', keyPair, pairId);\n  return keyPair;\n}\n\n// attempts to find keyPair stored at given key, otherwise throws\nexport async function findKeyPair (pairId?: string): Promise<CryptoKeyPair> {\n  if (pairId) {\n    const req = await invokeStoreMethod('get', pairId);\n    if (req.result) {\n      return req.result;\n    }\n  }\n\n  // defaults to throwing unless keyPair is found\n  throw new AuthSdkError(`Unable to locate dpop key pair required for refresh${pairId ? ` (${pairId})` : ''}`);\n}\n\nexport async function clearDPoPKeyPair (pairId: string): Promise<void> {\n  await invokeStoreMethod('delete', pairId);\n}\n\nexport async function clearAllDPoPKeyPairs (): Promise<void> {\n  await invokeStoreMethod('clear');\n}\n\n// generates a crypto (non-extractable) private key pair and writes it to indexeddb, returns key (id)\nexport async function createDPoPKeyPair (): Promise<{keyPair: CryptoKeyPair, keyPairId: string}> {\n  const keyPairId = cryptoRandomValue(4);\n  const keyPair = await generateKeyPair();\n  await storeKeyPair(keyPairId, keyPair);\n  return { keyPair, keyPairId };\n}\n\n// will clear PK from storage if certain token conditions are met\n/* eslint max-len: [2, 132], complexity: [2, 12] */\nexport async function clearDPoPKeyPairAfterRevoke (revokedToken: 'access' | 'refresh', tokens: Tokens): Promise<void> {\n  let shouldClear = false;\n\n  const { accessToken, refreshToken } = tokens;\n\n  // revoking access token and refresh token doesn't exist\n  if (revokedToken === 'access' && accessToken && accessToken.tokenType === 'DPoP' && !refreshToken) {\n    shouldClear = true;\n  }\n\n  // revoking refresh token and access token doesn't exist\n  if (revokedToken === 'refresh' && refreshToken && !accessToken) {\n    shouldClear = true;\n  }\n\n  const pairId = accessToken?.dpopPairId ?? refreshToken?.dpopPairId;\n  if (shouldClear && pairId) {\n    await clearDPoPKeyPair(pairId);\n  }\n}\n\n/////////// proof generation methods ///////////\n\nexport async function generateDPoPProof ({ keyPair, url, method, nonce, accessToken }: DPoPProofParams): Promise<string> {\n  const { kty, crv, e, n, x, y } = await webcrypto.subtle.exportKey('jwk', keyPair.publicKey);\n  const header = {\n    alg: 'RS256',\n    typ: 'dpop+jwt',\n    jwk: { kty, crv, e, n, x, y }\n  };\n\n  const claims: DPoPClaims = {\n    htm: method,\n    htu: url,\n    iat: Math.floor(Date.now() / 1000),\n    jti: cryptoRandomValue(),\n  };\n\n  if (nonce) {\n    claims.nonce = nonce;\n  }\n\n  // encode access token\n  if (accessToken) {\n    claims.ath = await hashAccessToken(accessToken);\n  }\n\n  return createJwt(header, claims, keyPair.privateKey);\n}\n\n/* eslint max-len: [2, 132] */\nexport async function generateDPoPForTokenRequest ({ keyPair, url, method, nonce }: DPoPProofTokenRequestParams): Promise<string> {\n  const params: DPoPProofParams = { keyPair, url, method };\n  if (nonce) {\n    params.nonce = nonce;\n  }\n\n  return generateDPoPProof(params);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, AuthApiError } from '../../errors';\nimport { CustomUrls, OAuthParams, OAuthResponse, RefreshToken, TokenParams } from '../types';\nimport { removeNils, toQueryString } from '../../util';\nimport { httpRequest, OktaAuthHttpInterface } from '../../http';\nimport { generateDPoPForTokenRequest, isDPoPNonceError } from '../dpop';\n\nexport interface TokenEndpointParams extends TokenParams {\n  dpopKeyPair?: CryptoKeyPair;\n}\n\ninterface TokenRequestParams {\n  url: string;\n  data: any;\n  dpopKeyPair?: CryptoKeyPair;\n  nonce?: string;\n}\n\nfunction validateOptions(options: TokenEndpointParams) {\n  // Quick validation\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\n\nfunction getPostData(sdk, options: TokenParams): string {\n  // Convert Token params to OAuth params, sent to the /token endpoint\n  var params: OAuthParams = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n\n  const { clientSecret } = sdk.options;\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n\n  // Encode as URL string\n  return toQueryString(params).slice(1);\n}\n\n/* eslint complexity: [2, 10] */\nasync function makeTokenRequest (sdk, { url, data, nonce, dpopKeyPair }: TokenRequestParams): Promise<OAuthResponse> {\n  const method = 'POST';\n  const headers: any = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  if (sdk.options.dpop) {\n    if (!dpopKeyPair) {\n      throw new AuthSdkError('DPoP is configured but no key pair was provided');\n    }\n\n    const proof = await generateDPoPForTokenRequest({ url, method, nonce, keyPair: dpopKeyPair });\n    headers.DPoP = proof;\n  }\n\n  try {\n    const resp = await httpRequest(sdk, {\n      url,\n      method,\n      args: data,\n      headers\n    });\n    return resp;\n  }\n  catch (err) {\n    if (isDPoPNonceError(err) && !nonce) {\n      const dpopNonce = err.resp?.headers['dpop-nonce'];\n      if (!dpopNonce) {\n        // throws error is dpop-nonce header cannot be found, prevents infinite loop\n        throw new AuthApiError(\n          {errorSummary: 'No `dpop-nonce` header found when required'},\n          err.resp ?? undefined    // yay ts\n        );\n      }\n      return makeTokenRequest(sdk, { url, data, dpopKeyPair, nonce: dpopNonce });\n    }\n    throw err;\n  }\n}\n\n// exchange authorization code for an access token\nexport async function postToTokenEndpoint(sdk, options: TokenEndpointParams, urls: CustomUrls): Promise<OAuthResponse> {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n\n  const params: TokenRequestParams = {\n    url: urls.tokenUrl!,\n    data,\n    dpopKeyPair: options?.dpopKeyPair\n  };\n\n  return makeTokenRequest(sdk, params);\n}\n\nexport async function postRefreshToken(\n  sdk: OktaAuthHttpInterface,\n  options: TokenEndpointParams,\n  refreshToken: RefreshToken\n): Promise<OAuthResponse> {\n  const data = Object.entries({\n    client_id: options.clientId, // eslint-disable-line camelcase\n    grant_type: 'refresh_token', // eslint-disable-line camelcase\n    scope: refreshToken.scopes.join(' '),\n    refresh_token: refreshToken.refreshToken, // eslint-disable-line camelcase\n  }).map(function ([name, value]) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return name + '=' + encodeURIComponent(value!);\n  }).join('&');\n\n  let url = refreshToken.tokenUrl;\n  if (options.extraParams && Object.keys(options.extraParams).length >= 1) {\n    url += toQueryString(options.extraParams);\n  }\n\n  const params: TokenRequestParams = {\n    url,\n    data,\n    dpopKeyPair: options?.dpopKeyPair\n  };\n\n  return makeTokenRequest(sdk, params);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { get } from '../../http';\nimport { find } from '../../util';\nimport { OktaAuthOAuthInterface, WellKnownResponse } from '../types';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nexport function getWellKnown(sdk: OktaAuthOAuthInterface, issuer?: string): Promise<WellKnownResponse> {\n  var authServerUri = (issuer || sdk.options.issuer);\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nexport function getKey(sdk: OktaAuthOAuthInterface, issuer: string, kid: string): Promise<string> {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  return getWellKnown(sdk, issuer)\n  .then(function(wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n\n    // Check our kid against the cached version (if it exists and isn't expired)\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    // Remove cache for the key\n    httpCache.clearStorage(jwksUri);\n\n    // Pull the latest keys if the key wasn't in the cache\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    })\n    .then(function(res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n","/* eslint-disable max-len */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown, getKey } from './endpoints/well-known';\nimport { validateClaims } from './util';\nimport { AuthSdkError } from '../errors';\nimport { IDToken, OktaAuthOAuthInterface, TokenVerifyParams } from '../oidc/types';\nimport { decodeToken } from './decodeToken';\nimport * as sdkCrypto from '../crypto';\n\n// Verify the id token\nexport async function verifyToken(sdk: OktaAuthOAuthInterface, token: IDToken, validationParams: TokenVerifyParams): Promise<IDToken> {\n  if (!token || !token.idToken) {\n    throw new AuthSdkError('Only idTokens may be verified');\n  }\n\n  // Decode the Jwt object (may throw)\n  const jwt = decodeToken(token.idToken);\n\n  // The configured issuer may point to a frontend proxy.\n  // Get the \"real\" issuer from .well-known/openid-configuration\n  const configuredIssuer = validationParams?.issuer || sdk.options.issuer;\n  const { issuer } = await getWellKnown(sdk, configuredIssuer);\n\n  const validationOptions: TokenVerifyParams = Object.assign({\n    // base options, can be overridden by params\n    clientId: sdk.options.clientId,\n    ignoreSignature: sdk.options.ignoreSignature\n  }, validationParams, {\n    // final options, cannot be overridden\n    issuer\n  });\n\n  // Standard claim validation (may throw)\n  validateClaims(sdk, jwt.payload, validationOptions);\n\n  // If the browser doesn't support native crypto or we choose not\n  // to verify the signature, bail early\n  if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n    return token;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const key = await getKey(sdk, token.issuer, jwt.header.kid!);\n  const valid = await sdkCrypto.verifyToken(token.idToken, key);\n  if (!valid) {\n    throw new AuthSdkError('The token signature is not valid');\n  }\n  if (validationParams && validationParams.accessToken && token.claims.at_hash) {\n    const hash = await sdkCrypto.getOidcHash(validationParams.accessToken);\n    if (hash !== token.claims.at_hash) {\n      throw new AuthSdkError('Token hash verification failed');\n    }\n  }\n  return token;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOAuthInterface, TokenVerifyParams, UserClaims } from '../../oidc/types';\n\nexport function validateClaims(sdk: OktaAuthOAuthInterface, claims: UserClaims, validationParams: TokenVerifyParams) {\n  const aud = validationParams.clientId;\n  const iss = validationParams.issuer;\n  const nonce = validationParams.nonce;\n  const acr = validationParams.acrValues;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  const now = Math.floor(Date.now()/1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' +\n      'does not match [' + iss + ']');\n  }\n\n  if ((Array.isArray(claims.aud) && claims.aud.indexOf(aud) < 0) ||\n    (!Array.isArray(claims.aud) && claims.aud !== aud))\n  {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' +\n      'does not match [' + aud + ']');\n  }\n\n  if (acr && claims.acr !== acr) {\n    throw new AuthSdkError('The acr [' + claims.acr + '] ' +\n      'does not match acr_values [' + acr + ']');\n  }\n\n  if (claims.iat! > claims.exp!) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if ((now - sdk.options.maxClockSkew!) > claims.exp!) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat! > (now + sdk.options.maxClockSkew!)) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { clone } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport {\n  OktaAuthOAuthInterface,\n  TokenVerifyParams,\n  IDToken,\n  OAuthResponse,\n  TokenParams,\n  TokenResponse,\n  CustomUrls,\n  Tokens,\n} from './types';\nimport { verifyToken } from './verifyToken';\nimport { getDefaultTokenParams } from './util';\n\nfunction validateResponse(res: OAuthResponse, oauthParams: TokenParams) {\n  if (res['error'] && res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\n\nexport async function handleOAuthResponse(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams,\n  res: OAuthResponse,\n  urls?: CustomUrls\n): Promise<TokenResponse> {\n  const pkce = sdk.options.pkce !== false;\n\n  // The result contains an authorization_code and PKCE is enabled \n  // `exchangeCodeForTokens` will call /token then call `handleOauthResponse` recursively with the result\n  if (pkce && (res.code || res.interaction_code)) {\n    return sdk.token.exchangeCodeForTokens(Object.assign({}, tokenParams, {\n      authorizationCode: res.code,\n      interactionCode: res.interaction_code\n    }), urls);\n  }\n\n  tokenParams = tokenParams || getDefaultTokenParams(sdk);\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n\n  let responseType = tokenParams.responseType || [];\n  if (!Array.isArray(responseType) && responseType !== 'none') {\n    responseType = [responseType];\n  }\n\n  let scopes;\n  if (res.scope) {\n    scopes = res.scope.split(' ');\n  } else {\n    scopes = clone(tokenParams.scopes);\n  }\n  const clientId = tokenParams.clientId || sdk.options.clientId;\n\n  // Handling the result from implicit flow or PKCE token exchange\n  validateResponse(res, tokenParams);\n\n  if (tokenParams.dpop) {\n    const { allowBearerTokens } = sdk.options?.dpopOptions ?? { allowBearerTokens: false };\n\n    // https://datatracker.ietf.org/doc/html/rfc9449#token-response\n    // \"A token_type of DPoP MUST be included in the access token response to signal to the client\"\n    if (!allowBearerTokens && res.token_type !== 'DPoP') {\n      throw new AuthSdkError('Unable to parse OAuth flow response: DPoP was configured but \"token_type\" was not DPoP');\n    }\n  }\n\n  const tokenDict = {} as Tokens;\n  const expiresIn = res.expires_in;\n  const tokenType = res.token_type;\n  const accessToken = res.access_token;\n  const idToken = res.id_token;\n  const refreshToken = res.refresh_token;\n  const now = Math.floor(Date.now()/1000);\n\n  if (accessToken) {\n    const accessJwt = sdk.token.decode(accessToken);\n    tokenDict.accessToken = {\n      accessToken: accessToken,\n      claims: accessJwt.payload,\n      expiresAt: Number(expiresIn) + now,\n      tokenType: tokenType!,\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      userinfoUrl: urls.userinfoUrl!\n    };\n\n    if (tokenParams.dpopPairId) {\n      tokenDict.accessToken.dpopPairId = tokenParams.dpopPairId;\n    }\n\n    if (tokenParams.extraParams) {\n      tokenDict.accessToken.extraParams = tokenParams.extraParams;\n    }\n  }\n\n  if (refreshToken) {\n    tokenDict.refreshToken = {\n      refreshToken: refreshToken,\n      // should not be used, this is the accessToken expire time\n      // TODO: remove \"expiresAt\" in the next major version OKTA-407224\n      expiresAt: Number(expiresIn) + now, \n      scopes: scopes,\n      tokenUrl: urls.tokenUrl!,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n    };\n\n    if (tokenParams.dpopPairId) {\n      tokenDict.refreshToken.dpopPairId = tokenParams.dpopPairId;\n    }\n\n    if (tokenParams.extraParams) {\n      tokenDict.refreshToken.extraParams = tokenParams.extraParams;\n    }\n  }\n\n  if (idToken) {\n    const idJwt = sdk.token.decode(idToken);\n    const idTokenObj: IDToken = {\n      idToken: idToken,\n      claims: idJwt.payload,\n      expiresAt: idJwt.payload.exp! - idJwt.payload.iat! + now, // adjusting expiresAt to be in local time\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n      clientId: clientId!\n    };\n\n    if (tokenParams.extraParams) {\n      idTokenObj.extraParams = tokenParams.extraParams;\n    }\n\n    const validationParams: TokenVerifyParams = {\n      clientId: clientId!,\n      issuer: urls.issuer!,\n      nonce: tokenParams.nonce,\n      accessToken: accessToken,\n      acrValues: tokenParams.acrValues\n    };\n\n    if (tokenParams.ignoreSignature !== undefined) {\n      validationParams.ignoreSignature = tokenParams.ignoreSignature;\n    }\n\n    await verifyToken(sdk, idTokenObj, validationParams);\n    tokenDict.idToken = idTokenObj;\n  }\n\n  // Validate received tokens against requested response types \n  if (responseType.indexOf('token') !== -1 && !tokenDict.accessToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n  }\n  if (responseType.indexOf('id_token') !== -1 && !tokenDict.idToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n  }\n\n  return {\n    tokens: tokenDict,\n    state: res.state!,\n    code: res.code,\n    responseType\n  };\n  \n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable max-len */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { CustomUrls, OAuthResponse, OAuthResponseType, OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { getOAuthUrls, getDefaultTokenParams } from './util';\nimport { clone } from '../util';\nimport { postToTokenEndpoint, TokenEndpointParams } from './endpoints/token';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { createDPoPKeyPair, findKeyPair } from './dpop';\n\n// codeVerifier is required. May pass either an authorizationCode or interactionCode\nexport async function exchangeCodeForTokens(sdk: OktaAuthOAuthInterface, tokenParams: TokenParams, urls?: CustomUrls): Promise<TokenResponse> {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  // build params using defaults + options\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state,\n    acrValues,\n    dpop,\n    dpopPairId,\n    extraParams\n  } = tokenParams;\n\n  // postToTokenEndpoint() params\n  const getTokenOptions: TokenEndpointParams = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    dpop,\n  };\n\n  // `handleOAuthResponse` hanadles responses from both `/authorize` and `/token` endpoints\n  // Here we modify the response from `/token` so that it more closely matches a response from `/authorize`\n  // `responseType` is used to validate that the expected tokens were returned\n  const responseType: OAuthResponseType[] = ['token']; // an accessToken will always be returned\n  if (scopes!.indexOf('openid') !== -1) {\n    responseType.push('id_token'); // an idToken will be returned if \"openid\" is in the scopes\n  }\n  // handleOAuthResponse() params\n  const handleResponseOptions: TokenParams = {\n    clientId,\n    redirectUri,\n    scopes,\n    responseType,\n    ignoreSignature,\n    acrValues,\n    extraParams\n  };\n\n  try {\n    if (dpop) {\n      // token refresh, KP should already exist\n      if (dpopPairId) {\n        const keyPair = await findKeyPair(dpopPairId);\n        getTokenOptions.dpopKeyPair = keyPair;\n        handleResponseOptions.dpop = dpop;\n        handleResponseOptions.dpopPairId = dpopPairId;\n      }\n      else {\n        const { keyPair, keyPairId } = await createDPoPKeyPair();\n        getTokenOptions.dpopKeyPair = keyPair;\n        handleResponseOptions.dpop = dpop;\n        handleResponseOptions.dpopPairId = keyPairId;\n      }\n    }\n\n    const oauthResponse: OAuthResponse = await postToTokenEndpoint(sdk, getTokenOptions, urls);\n\n    const tokenResponse: TokenResponse = await handleOAuthResponse(sdk, handleResponseOptions, oauthResponse, urls!);\n    tokenResponse.code = authorizationCode;\n    tokenResponse.state = state!;\n    return tokenResponse;\n  }\n  finally {\n    sdk.transactionManager.clear();\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window, document */\n/* eslint-disable complexity, max-statements */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface } from '../types';\n\nconst DEFAULT_TIMEOUT = 120000;\n\nexport function addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\n\nexport function removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\n\nexport function loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n\n  return document.body.appendChild(iframe);\n}\n\nexport function loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' +\n    'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\n\nexport function addPostMessageListener(sdk: OktaAuthOAuthInterface, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new Promise(function (resolve, reject) {\n\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        // A message not meant for us\n        return;\n      }\n\n      // Configuration mismatch between saved token and current app instance\n      // This may happen if apps with different issuers are running on the same host url\n      // If they share the same storage key, they may read and write tokens in the same location.\n      // Common when developing against http://localhost\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n      resolve(e.data);\n    };\n\n    addListener(window, 'message', responseHandler);\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || DEFAULT_TIMEOUT);\n  });\n\n  return msgReceivedOrTimeout\n    .finally(function () {\n      clearTimeout(timeoutId);\n      removeListener(window, 'message', responseHandler);\n    });\n}\n\nexport function addIDPPopupLisenter (\n  sdk: OktaAuthOAuthInterface,\n  timeout: number | undefined,\n  channel: BroadcastChannel,\n  state: string\n) {\n  let timeoutId;\n\n  const promise = new Promise((resolve, reject) => {\n    channel.onmessage = (event) => {\n      // ignore invalid or untrusted events\n      if (!event.isTrusted || !event.data) {\n        return;\n      }\n\n      if (typeof event.data === 'object' && state === event.data.state) {\n        return resolve({ ...event.data });\n      }\n\n      reject(new AuthSdkError('Unable to complete auth code exchange'));\n    };\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || DEFAULT_TIMEOUT);\n  });\n\n  return promise\n  .finally(() => {\n    clearTimeout(timeoutId);\n    channel.close();\n  });\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown } from '../endpoints/well-known';\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { getDefaultTokenParams } from './defaultTokenParams';\nimport { DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport PKCE from './pkce';\nimport { OktaAuthBaseInterface } from '../../base/types';\n\nexport function assertPKCESupport(sdk: OktaAuthBaseInterface) {\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n    if (!sdk.features.isHTTPS()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n    if (!sdk.features.hasTextEncoder()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n    throw new AuthSdkError(errorMessage);\n  }\n}\n\nexport async function validateCodeChallengeMethod(sdk: OktaAuthOAuthInterface, codeChallengeMethod?: string) {\n  // set default code challenge method, if none provided\n  codeChallengeMethod = codeChallengeMethod || sdk.options.codeChallengeMethod || DEFAULT_CODE_CHALLENGE_METHOD;\n\n  // validate against .well-known/openid-configuration\n  const wellKnownResponse = await getWellKnown(sdk);\n  var methods = wellKnownResponse['code_challenge_methods_supported'] || [];\n  if (methods.indexOf(codeChallengeMethod) === -1) {\n    throw new AuthSdkError('Invalid code_challenge_method');\n  }\n  return codeChallengeMethod;\n}\n\nexport async function preparePKCE(\n  sdk: OktaAuthOAuthInterface, \n  tokenParams: TokenParams\n): Promise<TokenParams> {\n  let {\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  } = tokenParams;\n\n  // PKCE calculations can be avoided by passing a codeChallenge\n  codeChallenge = codeChallenge || sdk.options.codeChallenge;\n  if (!codeChallenge) {\n    assertPKCESupport(sdk);\n    codeVerifier = codeVerifier || PKCE.generateVerifier();\n    codeChallenge = await PKCE.computeChallenge(codeVerifier);\n  }\n  codeChallengeMethod = await validateCodeChallengeMethod(sdk, codeChallengeMethod);\n\n  // Clone/copy the params. Set PKCE values\n  tokenParams = {\n    ...tokenParams,\n    responseType: 'code', // responseType is forced\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  };\n\n  return tokenParams;\n}\n\n// Prepares params for a call to /authorize or /token\nexport async function prepareTokenParams(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams = {}\n): Promise<TokenParams> {\n  // build params using defaults + options\n  const defaults = getDefaultTokenParams(sdk);\n  tokenParams = { ...defaults, ...tokenParams };\n\n  if (tokenParams.dpop && !sdk.features.isDPoPSupported()) {\n    throw new AuthSdkError('DPoP has been configured, but is not supported by browser');\n  }\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return tokenParams;\n  }\n\n  return preparePKCE(sdk, tokenParams);\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { isString, removeNils, toQueryString } from '../../util';\nimport { AuthSdkError } from '../../errors';\nimport { OAuthParams, TokenParams } from '../types';\n\nexport function convertTokenParamsToOAuthParams(tokenParams: TokenParams) {\n  // Quick validation\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthParams: OAuthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n    'acr_values': tokenParams.acrValues,\n    'enroll_amr_values': tokenParams.enrollAmrValues,\n  };\n  oauthParams = removeNils(oauthParams) as OAuthParams;\n\n  ['idp_scope', 'response_type', 'enroll_amr_values'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType!.indexOf('id_token') !== -1 &&\n    tokenParams.scopes!.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else if (tokenParams.scopes) {\n    oauthParams.scope = tokenParams.scopes!.join(' ');\n  }\n\n  return oauthParams;\n}\n\nexport function buildAuthorizeParams(tokenParams: TokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString({ \n    ...oauthQueryParams, \n    ...(tokenParams.extraParams && { ...tokenParams.extraParams })\n  });\n}\n","\n/* global document */\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n  getOAuthUrls,\n  loadFrame,\n  addPostMessageListener,\n  addIDPPopupLisenter\n} from './util';\n\nimport AuthSdkError from '../errors/AuthSdkError';\n\nimport {\n  OktaAuthOAuthInterface,\n  TokenParams,\n  PopupParams,\n  OAuthResponse,\n} from './types';\n\nimport { prepareTokenParams } from './util/prepareTokenParams';\nimport { buildAuthorizeParams } from './endpoints/authorize';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nexport function getToken(sdk: OktaAuthOAuthInterface, options: TokenParams & PopupParams) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n\n  // window object cannot be serialized, save for later use\n  // TODO: move popup related params into a separate options object\n  const popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n\n      // Start overriding any options that don't make sense\n      var sessionTokenOverrides = {\n        prompt: 'none',\n        responseMode: 'okta_post_message',\n        display: null\n      };\n\n      var idpOverrides = {\n        display: 'popup'\n      };\n\n      if (options.sessionToken) {\n        Object.assign(tokenParams, sessionTokenOverrides);\n      } else if (options.idp) {\n        Object.assign(tokenParams, idpOverrides);\n      }\n\n      // Use the query params to build the authorize url\n      var requestUrl,\n        endpoint,\n        urls;\n\n      // Get authorizeUrl and issuer\n      urls = getOAuthUrls(sdk, tokenParams);\n      endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n\n      // Determine the flow type\n      var flowType: 'IFRAME' | 'POPUP' | 'IDP_POPUP' | 'IMPLICIT' = 'IMPLICIT';\n      if (tokenParams.sessionToken || tokenParams.display === null) {\n        flowType = 'IFRAME';\n      }\n      else if (tokenParams.display === 'popup') {\n        flowType = options.idpPopup ? 'IDP_POPUP' : 'POPUP';\n      }\n      else {\n        flowType = 'IMPLICIT';\n      }\n\n      // Execute the flow type\n      switch (flowType) {\n        case 'IFRAME':\n          var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          var iframeEl = loadFrame(requestUrl);\n          return iframePromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (document.body.contains(iframeEl)) {\n                iframeEl.parentElement?.removeChild(iframeEl);\n              }\n            });\n\n        case 'POPUP':\n          var oauthPromise; // resolves with OAuth response\n\n          // Add listener on postMessage before window creation, so\n          // postMessage isn't triggered before we're listening\n          if (tokenParams.responseMode === 'okta_post_message') {\n            if (!sdk.features.isPopupPostMessageSupported()) {\n              throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n            }\n            oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          }\n\n          // Redirect for authorization\n          // popupWindow can be null when popup is blocked\n          if (popupWindow) {\n            popupWindow.location.assign(requestUrl);\n          }\n\n          // The popup may be closed without receiving an OAuth response. Setup a poller to monitor the window.\n          var popupPromise = new Promise(function (resolve, reject) {\n            var closePoller = setInterval(function () {\n              if (!popupWindow || popupWindow.closed) {\n                clearInterval(closePoller);\n                reject(new AuthSdkError('Unable to parse OAuth flow response'));\n              }\n            }, 100);\n\n            // Proxy the OAuth promise results\n            oauthPromise\n              .then(function (res) {\n                clearInterval(closePoller);\n                resolve(res);\n              })\n              .catch(function (err) {\n                clearInterval(closePoller);\n                reject(err);\n              });\n          });\n\n          return popupPromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (popupWindow && !popupWindow.closed) {\n                popupWindow.close();\n              }\n            });\n\n        case 'IDP_POPUP':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          var idpPromise = addIDPPopupLisenter(sdk, options.timeout, options.channel!, tokenParams.state!);\n\n          // Redirect for authorization\n          // popupWindow can be null when popup is blocked\n          if (popupWindow) {\n            popupWindow.location.assign(requestUrl);\n          }\n          else {\n            throw new AuthSdkError('Unable to open popup window');\n          }\n\n          return idpPromise\n          .then(function (res) {\n            return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n          });\n\n        default:\n          throw new AuthSdkError('The full page redirect flow is not supported');\n      }\n    });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\n\nexport function getWithoutPrompt(sdk: OktaAuthOAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n  \n  options = clone(options) || {};\n  Object.assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\nimport { loadPopup, generateState } from './util';\n\nexport function getWithPopup(sdk: OktaAuthOAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow\n  });\n  return getToken(sdk, options);\n}\n\nexport function getWithIDPPopup(\n  sdk: OktaAuthOAuthInterface,\n  options: Omit<TokenParams, 'redirectUri'> & { redirectUri: string }\n): { cancel: () => void, promise: Promise<TokenResponse> } {\n try {\n   // eslint-disable-next-line compat/compat\n   if (!BroadcastChannel) {\n    throw new AuthSdkError('Modern browser with `BroadcastChannel` support is required to use this method');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('`redirectUri` is a required param for `getWithIDPPopup`');\n  }\n\n  if (!options.state) {\n    options.state = generateState();\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  // eslint-disable-next-line compat/compat\n  const channel = new BroadcastChannel(`popup-callback:${options.state}`);\n\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'query',\n    popupWindow,\n    idpPopup: true,\n    channel,\n  });\n\n  let cancelPromise;\n  const promise = new Promise<TokenResponse>((resolve, reject) => {\n    cancelPromise = reject;\n    return getToken(sdk, options)\n    .then((res) => resolve(res))\n    .catch(err => reject(err));\n  });\n\n  const cancel = () => {\n    channel.close();\n    cancelPromise(new AuthSdkError('Popup flow canceled'));\n  };\n\n  return {\n    promise,\n    cancel\n  };\n }\n catch (err) {\n  return {\n    promise: Promise.reject(err),\n    cancel: () => {}    // noop, no need to for method when error is thrown\n  };\n }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams } from './types';\nimport { clone } from '../util';\nimport { prepareTokenParams, createOAuthMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport async function getWithRedirect(sdk: OktaAuthOAuthInterface, options?: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  const tokenParams = await prepareTokenParams(sdk, options);\n  const meta = createOAuthMeta(sdk, tokenParams);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { isInteractionRequiredError, urlParamsToObject } from './util';\nimport {\n  ParseFromUrlOptions,\n  TokenResponse,\n  CustomUrls,\n  TransactionMeta,\n  OAuthResponse\n} from './types';\nimport { isString } from '../util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nexport function getResponseMode(sdk): 'query' | 'fragment' {\n  // https://openid.net/specs/openid-connect-core-1_0.html#Authentication\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nexport function parseOAuthResponseFromUrl(sdk, options: string | ParseFromUrlOptions): OAuthResponse {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nexport function cleanOAuthResponseFromUrl(sdk, options: ParseFromUrlOptions) {\n  // Clean hash or search from the url\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nexport async function parseFromUrl(sdk, options?: string | ParseFromUrlOptions): Promise<TokenResponse> {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  const res: OAuthResponse = parseOAuthResponseFromUrl(sdk, options);\n  const state = res.state;\n  const oauthParams: TransactionMeta = sdk.transactionManager.load({\n    state\n  });\n  if (!oauthParams) {\n    if (sdk.options.pkce) {\n      // eslint-disable-next-line max-len\n      throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n    }\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n  }\n  const urls: CustomUrls = oauthParams.urls as CustomUrls;\n  delete oauthParams.urls;\n\n  if (!options.url) {\n    // Clean hash or search from the url\n    cleanOAuthResponseFromUrl(sdk, options);\n  }\n\n  return handleOAuthResponse(sdk, oauthParams, res, urls)\n    .catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    })\n    .then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { getOAuthUrls } from './util/oauth';\nimport { isSameRefreshToken } from './util/refreshToken';\nimport { OktaAuthOAuthInterface, TokenParams, RefreshToken, Tokens } from './types';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { TokenEndpointParams, postRefreshToken } from './endpoints/token';\nimport { findKeyPair } from './dpop';\nimport { isRefreshTokenInvalidError } from './util/errors';\n\n/* eslint complexity:[0,8] */\nexport async function renewTokensWithRefresh(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams,\n  refreshTokenObject: RefreshToken\n): Promise<Tokens> {\n  const { clientId, dpop } = sdk.options;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n  }\n\n  try {\n    const renewTokenParams: TokenParams = Object.assign({}, tokenParams, { clientId });\n\n    if (refreshTokenObject.extraParams) {\n      renewTokenParams.extraParams = refreshTokenObject.extraParams;\n    }\n\n    const endpointParams: TokenEndpointParams = {...renewTokenParams};\n\n    if (dpop) {\n      const keyPair = await findKeyPair(refreshTokenObject?.dpopPairId);    // will throw if KP cannot be found\n      endpointParams.dpopKeyPair = keyPair;\n      renewTokenParams.dpop = dpop;\n      renewTokenParams.dpopPairId = refreshTokenObject.dpopPairId;\n    }\n\n    const tokenResponse = await postRefreshToken(sdk, endpointParams, refreshTokenObject);\n    const urls = getOAuthUrls(sdk, tokenParams);\n    const { tokens } = await handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n\n    // Support rotating refresh tokens\n    const { refreshToken } = tokens;\n    if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n      sdk.tokenManager.updateRefreshToken(refreshToken);\n    }\n\n    return tokens;\n  }\n  catch (err) {\n    if (isRefreshTokenInvalidError(err)) {\n      // if the refresh token is invalid, remove it from storage\n      sdk.tokenManager.removeRefreshToken();\n    }\n    throw err;\n  }\n}\n","import { RefreshToken } from '../types';\nimport { isAuthApiError } from '../../errors';\n\nexport function isSameRefreshToken(a: RefreshToken, b: RefreshToken) {\n  return (a.refreshToken === b.refreshToken);\n}\n\nexport function isRefreshTokenError(err: Error) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n\n  const { responseJSON } = err.xhr;\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n\n  return false;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, Token, Tokens, isAccessToken, AccessToken, IDToken, isIDToken } from './types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\n\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError(\n    'Renew must be passed a token with an array of scopes and an accessToken or idToken'\n  );\n}\n\n// Multiple tokens may have come back. Return only the token which was requested.\nfunction getSingleToken(originalToken: Token, tokens: Tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\nexport async function renewToken(sdk: OktaAuthOAuthInterface, token: Token): Promise<Token | undefined> {\n  if (!isIDToken(token) && !isAccessToken(token)) {\n    throwInvalidTokenError();\n  }\n\n  let tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    tokens = await renewTokensWithRefresh(sdk, {\n      scopes: token.scopes,\n    }, tokens.refreshToken);\n    return getSingleToken(token, tokens);\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (isAccessToken(token)) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  const { scopes, authorizeUrl, userinfoUrl, issuer, dpopPairId, extraParams } = token as (AccessToken & IDToken);\n  return getWithoutPrompt(sdk, {\n    responseType,\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer,\n    dpopPairId,\n    extraParams\n  })\n    .then(function (res) {\n      return getSingleToken(token, res.tokens);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { RenewTokensParams, Tokens } from './types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\nimport { getDefaultTokenParams } from './util';\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\n// eslint-disable-next-line complexity\nexport async function renewTokens(sdk, options?: RenewTokensParams): Promise<Tokens> {\n  const tokens = options?.tokens ?? sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    return renewTokensWithRefresh(sdk, options || {}, tokens.refreshToken);\n  }\n\n  if (!tokens.accessToken && !tokens.idToken) {\n    throw new AuthSdkError('renewTokens() was called but there is no existing token');\n  }\n\n  const accessToken = tokens.accessToken || {};\n  const idToken = tokens.idToken || {};\n  const scopes = accessToken.scopes || idToken.scopes;\n  if (!scopes) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n  }\n  const authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n  if (!authorizeUrl) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n  }\n  const userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n  const issuer = idToken.issuer || sdk.options.issuer;\n  const dpopPairId = accessToken?.dpopPairId;\n  const extraParams = accessToken?.extraParams || idToken?.extraParams;\n\n  // Get tokens using the SSO cookie\n  options = Object.assign({\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer,\n    dpopPairId,\n    extraParams\n  }, options);\n\n  if (sdk.options.pkce) {\n    options.responseType = 'code';\n  } else {\n    const { responseType } = getDefaultTokenParams(sdk);\n    options.responseType = responseType;\n  }\n\n  return getWithoutPrompt(sdk, options)\n    .then(res => res.tokens);\n    \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuthOAuthInterface,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from './types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport async function revokeToken(sdk: OktaAuthOAuthInterface, token: RevocableToken): Promise<any> {\n  let accessToken = '';\n  let refreshToken = '';\n  if (token) { \n      accessToken = (token as AccessToken).accessToken;\n      refreshToken = (token as RefreshToken).refreshToken;  \n  }\n  if(!accessToken && !refreshToken) { \n    throw new AuthSdkError('A valid access or refresh token object is required');\n  }\n  var clientId = sdk.options.clientId;\n  var clientSecret = sdk.options.clientSecret;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var revokeUrl = getOAuthUrls(sdk).revokeUrl!;\n  var args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n    token: refreshToken || accessToken,\n  }).slice(1);\n  var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  return post(sdk, revokeUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + creds\n    }\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { AuthSdkError } from '../errors';\nimport { getWellKnown } from './endpoints/well-known';\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport { btoa } from '../crypto';\nimport { Token, TokenKind } from './types';\n\nconst hintMap = {\n  accessToken: 'access_token',\n  idToken: 'id_token',\n  refreshToken: 'refresh_token'\n};\n\n/* eslint complexity: [2, 9] */\nexport async function oidcIntrospect (sdk, kind: TokenKind, token?: Token) {\n  let issuer: string;\n  let clientId: string = sdk.options.clientId;\n  let clientSecret: string | undefined = sdk.options.clientSecret;\n\n  if (!token) {\n    token = sdk.tokenManager.getTokens()[kind];\n  }\n\n  if (!token) {\n    throw new AuthSdkError(`unable to find ${kind} in storage or fn params`);\n  }\n\n  if (kind !== TokenKind.ACCESS) {\n    issuer = (token as any)?.issuer;\n  }\n  else {\n    issuer = (token as any)?.claims?.iss;\n  }\n  issuer = issuer || sdk.options.issuer;\n\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to introspect a token');\n  }\n  if (!issuer) {\n    throw new AuthSdkError('Unable to find issuer');\n  }\n\n  const { introspection_endpoint: introspectUrl }  = await getWellKnown(sdk, issuer);\n  const authHeader = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  const args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: hintMap[kind],\n    token: token[kind]    // extract raw token string from token object\n  }).slice(1);\n  return post(sdk, introspectUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + authHeader\n    }\n  });\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from '../types';\nimport { getDefaultEnrollAuthenticatorParams } from './defaultEnrollAuthenticatorParams';\n\nfunction prepareParams(\n  params: EnrollAuthenticatorOptions\n): EnrollAuthenticatorOptions {\n  params = {\n    ...params,\n    // forced params:\n    responseType: 'none',\n    prompt: 'enroll_authenticator',\n    maxAge: 0,\n  };\n\n  if (!params.enrollAmrValues) {\n    throw new AuthSdkError('enroll_amr_values must be specified');\n  }\n  if (!params.acrValues) {\n    // `acr_values` is required and should equal 'urn:okta:2fa:any:ifpossible'\n    // But this can be changed in future\n    throw new AuthSdkError('acr_values must be specified');\n  }\n\n  // `scope`, `nonce` must be omitted\n  delete params.scopes;\n  delete params.nonce;\n\n  return params;\n}\n\n// Prepares params for a call to /authorize\nexport function prepareEnrollAuthenticatorParams(\n  sdk: OktaAuthOAuthInterface,\n  options: EnrollAuthenticatorOptions\n): EnrollAuthenticatorOptions {\n  return prepareParams({\n    ...getDefaultEnrollAuthenticatorParams(sdk),\n    ...options\n  });\n}\n","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateState } from './oauth';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultEnrollAuthenticatorParams(sdk: OktaAuthOAuthInterface): TokenParams {\n  const {\n    clientId,\n    redirectUri,\n    responseMode,\n    state,\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseMode,\n    state: state || generateState(),\n    responseType: 'none',\n    prompt: 'enroll_authenticator',\n  });\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from './types';\nimport { clone } from '../util';\nimport { prepareEnrollAuthenticatorParams, createEnrollAuthenticatorMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport function enrollAuthenticator(\n  sdk: OktaAuthOAuthInterface, \n  options: EnrollAuthenticatorOptions\n): void {\n  options = clone(options) || {};\n\n  const params = prepareEnrollAuthenticatorParams(sdk, options);\n  const meta = createEnrollAuthenticatorMeta(sdk, params);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(params);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from '../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createEnrollAuthenticatorMeta(\n  sdk: OktaAuthOAuthInterface, \n  params: EnrollAuthenticatorOptions\n): OAuthTransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, params);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: params.clientId!,\n    redirectUri: params.redirectUri!,\n    responseType: params.responseType!,\n    responseMode: params.responseMode!,\n    state: params.state!,\n    acrValues: params.acrValues,\n    enrollAmrValues: params.enrollAmrValues,\n  };\n\n  return oauthMeta;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { PromiseQueue } from '../../util';\nimport { decodeToken } from '../decodeToken';\nimport { exchangeCodeForTokens } from '../exchangeCodeForTokens';\nimport { getUserInfo } from '../getUserInfo';\nimport { getWithoutPrompt } from '../getWithoutPrompt';\nimport { getWithPopup, getWithIDPPopup } from '../getWithPopup';\nimport { getWithRedirect } from '../getWithRedirect';\nimport { parseFromUrl } from '../parseFromUrl';\nimport { renewToken } from '../renewToken';\nimport { renewTokens } from '../renewTokens';\nimport { renewTokensWithRefresh } from '../renewTokensWithRefresh';\nimport { revokeToken } from '../revokeToken';\nimport { oidcIntrospect } from '../introspect';\nimport {\n  AccessToken,\n  CustomUserClaims,\n  GetWithRedirectFunction,\n  IDToken,\n  OktaAuthOAuthInterface,\n  ParseFromUrlInterface,\n  TokenAPI,\n  UserClaims,\n  Endpoints,\n} from '../types';\nimport { isLoginRedirect, prepareTokenParams } from '../util';\nimport { verifyToken } from '../verifyToken';\nimport { enrollAuthenticator } from '../enrollAuthenticator';\n\n// Factory\nexport function createTokenAPI(sdk: OktaAuthOAuthInterface, queue: PromiseQueue): TokenAPI {\n  const useQueue = (method) => {\n    return PromiseQueue.prototype.push.bind(queue, method, null);\n  };\n\n  const getWithRedirectFn = useQueue(getWithRedirect.bind(null, sdk)) as GetWithRedirectFunction;\n\n  // eslint-disable-next-line max-len\n  const parseFromUrlFn = useQueue(parseFromUrl.bind(null, sdk)) as ParseFromUrlInterface;\n  const parseFromUrlApi: ParseFromUrlInterface = Object.assign(parseFromUrlFn, {\n    // This is exposed so we can mock getting window.history in our tests\n    _getHistory: function() {\n      return window.history;\n    },\n\n    // This is exposed so we can mock getting window.location in our tests\n    _getLocation: function() {\n      return window.location;\n    },\n\n    // This is exposed so we can mock getting window.document in our tests\n    _getDocument: function() {\n      return window.document;\n    }\n  });\n\n  const token: TokenAPI ={\n    prepareTokenParams: prepareTokenParams.bind(null, sdk),\n    exchangeCodeForTokens: exchangeCodeForTokens.bind(null, sdk),\n    getWithoutPrompt: getWithoutPrompt.bind(null, sdk),\n    getWithPopup: getWithPopup.bind(null, sdk),\n    getWithIDPPopup: getWithIDPPopup.bind(null, sdk),\n    getWithRedirect: getWithRedirectFn,\n    parseFromUrl: parseFromUrlApi,\n    decode: decodeToken,\n    revoke: revokeToken.bind(null, sdk),\n    renew: renewToken.bind(null, sdk),\n    renewTokensWithRefresh: renewTokensWithRefresh.bind(null, sdk),\n    renewTokens: renewTokens.bind(null, sdk),\n    getUserInfo: <C extends CustomUserClaims = CustomUserClaims>(\n      accessTokenObject: AccessToken,\n      idTokenObject: IDToken\n    ): Promise<UserClaims<C>> => {\n      return getUserInfo(sdk, accessTokenObject, idTokenObject);\n    },\n    verify: verifyToken.bind(null, sdk),\n    isLoginRedirect: isLoginRedirect.bind(null, sdk),\n    introspect: oidcIntrospect.bind(null, sdk),\n  };\n\n  // Wrap certain async token API methods using PromiseQueue to avoid issues with concurrency\n  // 'getWithRedirect' and 'parseFromUrl' are already wrapped\n  const toWrap = [\n    'getWithoutPrompt',\n    'getWithPopup',\n    'revoke',\n    'renew',\n    'renewTokensWithRefresh',\n    'renewTokens'\n  ];\n  toWrap.forEach(key => {\n    token[key] = useQueue(token[key]);\n  });\n\n  return token;\n}\n\nexport function createEndpoints(sdk: OktaAuthOAuthInterface): Endpoints {\n  return {\n    authorize: {\n      enrollAuthenticator: enrollAuthenticator.bind(null, sdk),\n    }\n  };\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError, OAuthError, WWWAuthError, AuthApiError } from '../errors';\nimport { httpRequest } from '../http';\nimport { AccessToken, IDToken, UserClaims, isAccessToken, isIDToken, CustomUserClaims } from './types';\n\nexport async function getUserInfo<T extends CustomUserClaims = CustomUserClaims>(\n  sdk, accessTokenObject: AccessToken,\n  idTokenObject: IDToken\n): Promise<UserClaims<T>> {\n  // If token objects were not passed, attempt to read from the TokenManager\n  if (!accessTokenObject) {\n    accessTokenObject = (await sdk.tokenManager.getTokens()).accessToken as AccessToken;\n  }\n  if (!idTokenObject) {\n    idTokenObject = (await sdk.tokenManager.getTokens()).idToken as IDToken;\n  }\n\n  if (!accessTokenObject || !isAccessToken(accessTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n\n  if (!idTokenObject || !isIDToken(idTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an ID token object'));\n  }\n\n  const options: any = {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  };\n\n  if (sdk.options.dpop) {\n    const headers = await sdk.getDPoPAuthorizationHeaders({...options, accessToken: accessTokenObject });\n    options.headers = headers;\n    delete options.accessToken;      // unset to prevent overriding Auth header with Bearer Token\n  }\n\n  return httpRequest(sdk, options)\n    .then(userInfo => {\n      // Only return the userinfo response if subjects match to mitigate token substitution attacks\n      if (userInfo.sub === idTokenObject.claims.sub) {\n        return userInfo;\n      }\n      return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n    })\n    .catch(function (err) {\n      // throw OAuthError to avoid breaking change (when dpop is not being used)\n      if (err instanceof WWWAuthError && !sdk.options.dpop) {\n        const { error, errorDescription } = err;\n        throw new OAuthError(error, errorDescription);\n      }\n\n      // throw OAuthError to avoid breaking change (when dpop is not being used)\n      if (!sdk.options.dpop) {\n        let e = err;\n        if (err instanceof AuthApiError && err?.meta?.wwwAuthHeader) {\n          e = WWWAuthError.parseHeader(err.meta.wwwAuthHeader as string);\n        }\n\n        if (e instanceof WWWAuthError) {\n          const { error, errorDescription } = e;\n          throw new OAuthError(error, errorDescription);\n        }\n      }\n\n      throw err;\n    });\n}\n","/* eslint-disable complexity */\n\nimport { AuthSdkError } from '../../errors';\nimport { isAccessToken, isIDToken, isRefreshToken, Token, TokenType } from '../../oidc/types';\n\nexport function validateToken(token: Token, type?: TokenType) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError(\n      'Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property'\n    );\n  }\n  \n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  } \n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n","/* eslint-disable max-len */\nimport { StorageProvider } from '../../storage/types';\nimport { TokenManagerOptions } from './options';\nimport { AccessToken, IDToken, RefreshToken, Token, Tokens, TokenType } from './Token';\n\nexport interface TokenManagerError {\n  errorSummary: string;\n  errorCode: string;\n  message: string;\n  name: string;\n  tokenKey: string;\n}\n\nexport declare type AccessTokenCallback = (key: string, token: AccessToken) => void;\nexport declare type IDTokenCallback = (key: string, token: IDToken) => void;\nexport declare type RefreshTokenCallback = (key: string, token: RefreshToken) => void;\n\nexport const EVENT_EXPIRED = 'expired';\nexport const EVENT_RENEWED = 'renewed';\nexport const EVENT_ADDED = 'added';\nexport const EVENT_REMOVED = 'removed';\nexport const EVENT_ERROR = 'error';\nexport const EVENT_SET_STORAGE = 'set_storage';\n\nexport declare type TokenManagerErrorEventHandler = (error: TokenManagerError) => void;\nexport declare type TokenManagerEventHandler = (key: string, token: Token) => void;\nexport declare type TokenManagerRenewEventHandler = (key: string, token: Token, oldtoken: Token) => void;\nexport declare type TokenManagerSetStorageEventHandler = (storage: Tokens) => void;\n\nexport declare type TokenManagerAnyEventHandler = TokenManagerErrorEventHandler | TokenManagerRenewEventHandler | TokenManagerSetStorageEventHandler | TokenManagerEventHandler;\nexport declare type TokenManagerAnyEvent = typeof EVENT_RENEWED | typeof EVENT_ERROR | typeof EVENT_SET_STORAGE | typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED;\n\n// only add methods needed internally\nexport interface TokenManagerInterface {\n  on(event: typeof EVENT_RENEWED, handler: TokenManagerRenewEventHandler, context?: object): void;\n  on(event: typeof EVENT_ERROR, handler: TokenManagerErrorEventHandler, context?: object): void;\n  on(event: typeof EVENT_SET_STORAGE, handler: TokenManagerSetStorageEventHandler, context?: object): void;\n  on(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, handler: TokenManagerEventHandler, context?: object): void;\n\n  off(event: typeof EVENT_RENEWED, handler?: TokenManagerRenewEventHandler): void;\n  off(event: typeof EVENT_ERROR, handler?: TokenManagerErrorEventHandler): void;\n  off(event: typeof EVENT_SET_STORAGE, handler?: TokenManagerSetStorageEventHandler): void;\n  off(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, handler?: TokenManagerEventHandler): void;\n\n  clear(): void;\n  setExpireEventTimeout(key: string, token: Token): void;\n  clearExpireEventTimeout(key: string): void;\n  clearExpireEventTimeoutAll(): void;\n  emitAdded(key: string, token: Token): void;\n  emitError(error: Error): void;\n  emitRemoved(key: string, token: Token): void;\n  emitRenewed(key: string, token: Token, oldToken?: Token): void;\n  renew(key: string): Promise<Token | undefined>;\n  remove(key: string): void;\n  hasExpired(token: Token): boolean;\n  getExpireTime(token: Token): number;\n\n  get(key): Promise<Token | undefined>;\n  getSync(key): Token | undefined;\n  getTokens(): Promise<Tokens>;\n  getTokensSync(): Tokens;\n  setTokens({ accessToken, idToken, refreshToken }: Tokens, accessTokenCb?: AccessTokenCallback, idTokenCb?: IDTokenCallback, refreshTokenCb?: RefreshTokenCallback): void;\n  getStorageKeyByType(type: TokenType): string;\n  add(key: any, token: Token): void;\n  updateRefreshToken(token: RefreshToken);\n  removeRefreshToken(): void;\n  clearPendingRemoveTokens(): void;\n\n  getOptions(): TokenManagerOptions;\n  getStorage(): StorageProvider;\n\n  start();\n  stop();\n  isStarted(): boolean;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, clone } from '../util';\nimport { AuthSdkError } from '../errors';\nimport { validateToken  } from '../oidc/util';\nimport { isLocalhost, isIE11OrLess } from '../features';\nimport SdkClock from '../clock';\nimport {\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  TokenManagerErrorEventHandler,\n  TokenManagerSetStorageEventHandler,\n  TokenManagerRenewEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken,\n  AccessTokenCallback,\n  IDTokenCallback,\n  RefreshTokenCallback,\n  EVENT_RENEWED,\n  EVENT_ADDED,\n  EVENT_ERROR,\n  EVENT_EXPIRED,\n  EVENT_REMOVED,\n  EVENT_SET_STORAGE,\n  TokenManagerAnyEventHandler,\n  TokenManagerAnyEvent,\n  OktaAuthOAuthInterface\n} from './types';\nimport { REFRESH_TOKEN_STORAGE_KEY, TOKEN_STORAGE_NAME } from '../constants';\nimport { EventEmitter } from '../base/types';\nimport { StorageOptions, StorageProvider, StorageType } from '../storage/types';\n\nconst DEFAULT_OPTIONS = {\n  // TODO: remove in next major version - OKTA-473815\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true,\n  // --- //\n  clearPendingRemoveTokens: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME\n};\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Promise<Token | undefined> | null;\n  started?: boolean;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuthOAuthInterface;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n\n  on(event: typeof EVENT_RENEWED, handler: TokenManagerRenewEventHandler, context?: object): void;\n  on(event: typeof EVENT_ERROR, handler: TokenManagerErrorEventHandler, context?: object): void;\n  on(event: typeof EVENT_SET_STORAGE, handler: TokenManagerSetStorageEventHandler, context?: object): void;\n  on(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, \n    handler: TokenManagerEventHandler, context?: object): void;\n  on(event: TokenManagerAnyEvent, handler: TokenManagerAnyEventHandler, context?: object): void {\n    if (context) {\n      this.emitter.on(event, handler, context);\n    } else {\n      this.emitter.on(event, handler);\n    }\n  }\n\n  off(event: typeof EVENT_RENEWED, handler?: TokenManagerRenewEventHandler): void;\n  off(event: typeof EVENT_ERROR, handler?: TokenManagerErrorEventHandler): void;\n  off(event: typeof EVENT_SET_STORAGE, handler?: TokenManagerSetStorageEventHandler): void;\n  off(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, \n    handler?: TokenManagerEventHandler): void;\n  off(event: TokenManagerAnyEvent, handler?: TokenManagerAnyEventHandler): void {\n    if (handler) {\n      this.emitter.off(event, handler);\n    } else {\n      this.emitter.off(event);\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  constructor(sdk: OktaAuthOAuthInterface, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n    \n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage({...storageOptions, useSeparateCookies: true});\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n  }\n\n  start() {\n    if (this.options.clearPendingRemoveTokens) {\n      this.clearPendingRemoveTokens();\n    }\n    this.setExpireEventTimeoutAll();\n    this.state.started = true;\n  }\n  \n  stop() {\n    this.clearExpireEventTimeoutAll();\n    this.state.started = false;\n  }\n\n  isStarted() {\n    return !!this.state.started;\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    const expireEarlySeconds = this.options.expireEarlySeconds || 0;\n    var expireTime = token.expiresAt - expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    this.state.renewPromise = null;\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key): Token | undefined {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key): Promise<Token | undefined> {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  private getTokenType(token: Token): TokenType {\n    if (isAccessToken(token)) {\n      return 'accessToken';\n    }\n    if (isIDToken(token)) {\n      return 'idToken';\n    }\n    if(isRefreshToken(token)) {\n      return 'refreshToken';\n    }\n    throw new AuthSdkError('Unknown token type');\n  }\n\n  // for synchronization of LocalStorage cross tabs for IE11\n  private emitSetStorageEvent() {\n    if (isIE11OrLess()) {\n      const storage = this.storage.getStorage();\n      this.emitter.emit(EVENT_SET_STORAGE, storage);\n    }\n  }\n\n  // used in `SyncStorageService` for synchronization of LocalStorage cross tabs for IE11\n  public getStorage() {\n    return this.storage;\n  }\n\n  setTokens(\n    tokens: Tokens,\n    // TODO: callbacks can be removed in the next major version OKTA-407224\n    accessTokenCb?: AccessTokenCallback, \n    idTokenCb?: IDTokenCallback,\n    refreshTokenCb?: RefreshTokenCallback\n  ): void {\n    const handleTokenCallback = (key, token) => {\n      const type = this.getTokenType(token);\n      if (type === 'accessToken') {\n        accessTokenCb && accessTokenCb(key, token);\n      } else if (type === 'idToken') {\n        idTokenCb && idTokenCb(key, token);\n      } else if (type === 'refreshToken') {\n        refreshTokenCb && refreshTokenCb(key, token);\n      }\n    };\n    const handleAdded = (key, token) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRenewed = (key, token, oldToken) => {\n      this.emitRenewed(key, token, oldToken);\n      this.clearExpireEventTimeout(key);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRemoved = (key, token) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      handleTokenCallback(key, token);\n    };\n    \n    const types: TokenType[] = ['idToken', 'accessToken', 'refreshToken'];\n    const existingTokens = this.getTokensSync();\n\n    // valid tokens\n    types.forEach((type) => {\n      const token = tokens[type];\n      if (token) {\n        validateToken(token, type);\n      }\n    });\n  \n    // add token to storage\n    const storage = types.reduce((storage, type) => {\n      const token = tokens[type];\n      if (token) {\n        const storageKey = this.getStorageKeyByType(type) || type;\n        storage[storageKey] = token;\n      }\n      return storage;\n    }, {});\n    this.storage.setStorage(storage);\n    this.emitSetStorageEvent();\n\n    // emit event and start expiration timer\n    types.forEach(type => {\n      const newToken = tokens[type];\n      const existingToken = existingTokens[type];\n      const storageKey = this.getStorageKeyByType(type) || type;\n      if (newToken && existingToken) { // renew\n        // call handleRemoved first, since it clears timers\n        handleRemoved(storageKey, existingToken);\n        handleAdded(storageKey, newToken);\n        handleRenewed(storageKey, newToken, existingToken);\n      } else if (newToken) { // add\n        handleAdded(storageKey, newToken);\n      } else if (existingToken) { //remove\n        handleRemoved(storageKey, existingToken);\n      }\n    });\n  }\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token?.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  // TODO: renew method should take no param, change in the next major version OKTA-407224\n  renew(key): Promise<Token | undefined> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    if (this.state.renewPromise) {\n      return this.state.renewPromise;\n    }\n\n    try {\n      var token = this.getSync(key);\n      let shouldRenew = token !== undefined;\n      // explicitly check if key='accessToken' because token keys are not guaranteed (long story, features dragons)\n      if (!token && key === 'accessToken') {\n        // attempt token renewal if refresh token is present (improves consistency of autoRenew)\n        const refreshKey = this.getStorageKeyByType('refreshToken');\n        const refreshToken = this.getSync(refreshKey);\n        shouldRenew = refreshToken !== undefined;\n      }\n\n      if (!shouldRenew) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    }\n    catch (err) {\n      this.emitError(err);\n      return Promise.reject(err);\n    }\n\n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    const renewPromise = this.state.renewPromise = this.sdk.token.renewTokens()\n      .then(tokens => {\n        this.setTokens(tokens);\n\n        // return accessToken in case where access token doesn't exist\n        // but refresh token exists\n        if (!token && key === 'accessToken') {\n          const accessToken = tokens['accessToken'];\n          this.emitRenewed(key, accessToken, null);\n          return accessToken;\n        }\n\n        // resolve token based on the key\n        const tokenType = this.getTokenType(token!);\n        return tokens[tokenType];\n      })\n      .catch(err => {\n        // If renew fails, remove token from storage and emit error\n        this.remove(key);\n        err.tokenKey = key;\n        this.emitError(err);\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        this.state.renewPromise = null;\n      });\n  \n    return renewPromise;\n  }\n  \n  clear() {\n    const tokens = this.getTokensSync();\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n    this.emitSetStorageEvent();\n\n    Object.keys(tokens).forEach(key => {\n      this.emitRemoved(key, tokens[key]);\n    });\n  }\n\n  clearPendingRemoveTokens() {\n    const tokenStorage = this.storage.getStorage();\n    const removedTokens = {};\n    Object.keys(tokenStorage).forEach(key => {\n      if (tokenStorage[key].pendingRemove) {\n        removedTokens[key] = tokenStorage[key];\n        delete tokenStorage[key];\n      }\n    });\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n    Object.keys(removedTokens).forEach(key => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, removedTokens[key]);\n    });\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n  }\n\n  removeRefreshToken () {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n    this.remove(key);\n  }\n\n  addPendingRemoveFlags() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      tokens[key].pendingRemove = true;\n    });\n    this.setTokens(tokens);\n  }\n  \n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  StorageOptions,\n  CookieOptions,\n  SimpleStorage,\n  StorageType,\n  StorageUtil,\n} from '../storage/types';\nimport { warn } from '../util';\nimport { isIE11OrLess } from '../features';\n\nexport interface CookieStorage extends SimpleStorage {\n  setItem(key: string, value: any, expiresAt?: string | null): void; // can customize expiresAt\n  getItem(key?: string): any; // if no key is passed, all cookies are returned\n  removeItem(key: string); // remove a cookie\n}\n\nexport interface BrowserStorageUtil extends StorageUtil {\n  browserHasLocalStorage(): boolean;\n  browserHasSessionStorage(): boolean;\n  getStorageByType(storageType: StorageType, options: StorageOptions): SimpleStorage;\n  getLocalStorage(): Storage;\n  getSessionStorage(): Storage;\n  getInMemoryStorage(): SimpleStorage;\n  getCookieStorage(options?: StorageOptions): CookieStorage;\n  testStorage(storage: any): boolean;\n  storage: Cookies;\n  inMemoryStore: Record<string, unknown>;\n}\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil: BrowserStorageUtil = {\n\n  // IE11 bug that Microsoft doesn't plan to fix\n  // https://connect.microsoft.com/IE/Feedback/Details/1496040\n  browserHasLocalStorage: function() {\n    try {\n      var storage = this.getLocalStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  browserHasSessionStorage: function() {\n    try {\n      var storage = this.getSessionStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  testStorageType: function(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = this.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = this.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n\n  getStorageByType: function(storageType: StorageType, options?: StorageOptions): SimpleStorage {\n    let storageProvider;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = this.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = this.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = this.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = this.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  },\n\n  findStorageType: function(types: StorageType[]) {\n    let curType;\n    let nextType;\n    \n    types = types.slice(); // copy array\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n\n    if (this.testStorageType(curType)) {\n      return curType;\n    }\n\n    // preferred type was unsupported.\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n\n    // fallback to the next type. this is a recursive call\n    return this.findStorageType(types);\n  },\n\n  getLocalStorage: function() {\n    // Workaound for synchronization issue of LocalStorage cross tabs in IE11\n    if (isIE11OrLess() && !window.onstorage) {\n      window.onstorage = function() {};\n    }\n    \n    return localStorage;\n  },\n\n  getSessionStorage: function() {\n    return sessionStorage;\n  },\n\n  // Provides webStorage-like interface for cookies\n  getCookieStorage: function(options): CookieStorage {\n    const secure = options!.secure;\n    const sameSite = options!.sameSite;\n    const sessionCookie = options!.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage: CookieStorage = {\n      getItem: this.storage.get,\n      setItem: (key, value, expiresAt = '2200-01-01T00:00:00.000Z') => {\n        // By defauilt, cookie shouldn't expire\n        expiresAt = (sessionCookie ? null : expiresAt) as string;\n        this.storage.set(key, value, expiresAt, {\n          secure: secure, \n          sameSite: sameSite,\n        });\n      },\n      removeItem: (key) => {\n        this.storage.delete(key);\n      },\n    };\n\n    if (!options!.useSeparateCookies) {\n      return storage;\n    }\n\n    // Tokens are stored separately because cookies have size limits.\n    // Can only be used when storing an object value. Object properties will be saved to separate cookies.\n    // Each property of the object must also be an object.\n    return {\n      getItem: function(key) {\n        var data = storage.getItem(); // read all cookies\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key!) === 0) { // filter out unrelated cookies\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]); // populate with cookie data\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        // Set key-value pairs from input to cookies\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        // Delete unmatched keys from existing cookies\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n    };\n  },\n\n  // Provides an in-memory solution\n  inMemoryStore: {}, // override this for a unique memory store per instance\n  getInMemoryStorage: function() {\n    return {\n      getItem: (key) => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      },\n    };\n  },\n\n  testStorage: function(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  storage: {\n    set: function(name: string, value: string, expiresAt: string, options: CookieOptions): string {\n      const { sameSite, secure } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions: CookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!(Date.parse(expiresAt))) {\n        // Expires value can be converted to a Date object.\n        //\n        // If the 'expiresAt' value is not provided, or the value cannot be\n        // parsed as a Date object, the cookie will set as a session cookie.\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return this.get(name);\n    },\n\n    get: function(name?: string): string {\n      // return all cookies when no args is provided\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n      return Cookies.get(name);\n    },\n\n    delete: function(name: string): string {\n      return Cookies.remove(name, { path: '/' });\n    }\n  }\n};\n\nexport default storageUtil;\n","import { httpRequest, RequestOptions } from '../../http';\nimport { OktaAuthConstructor } from '../../base/types';\nimport { \n  PromiseQueue,\n  isFunction\n} from '../../util';\nimport { CryptoAPI } from '../../crypto/types';\nimport * as crypto from '../../crypto';\nimport {\n  AccessToken,\n  CustomUserClaims,\n  IDToken,\n  IsAuthenticatedOptions,\n  OAuthResponseType,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PkceAPI,\n  PKCETransactionMeta,\n  RefreshToken,\n  SigninWithRedirectOptions,\n  SignoutOptions,\n  SignoutRedirectUrlOptions,\n  TokenAPI,\n  TransactionManagerInterface,\n  TransactionManagerConstructor,\n  UserClaims,\n  Endpoints,\n  DPoPRequest,\n  DPoPHeaders\n} from '../types';\nimport PKCE from '../util/pkce';\nimport { createEndpoints, createTokenAPI } from '../factory/api';\nimport { TokenManager } from '../TokenManager';\nimport { getOAuthUrls, isLoginRedirect, hasResponseType } from '../util';\nimport { \n  generateDPoPProof,\n  clearDPoPKeyPair,\n  clearAllDPoPKeyPairs,\n  clearDPoPKeyPairAfterRevoke,\n  findKeyPair,\n  isDPoPNonceError\n} from '../dpop';\nimport { AuthSdkError, WWWAuthError } from '../../errors';\n\nimport { OktaAuthSessionInterface } from '../../session/types';\nimport { provideOriginalUri } from './node';\nexport function mixinOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n>\n(\n  Base: TBase,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>,\n): TBase & OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n{\n  const WithOriginalUri = provideOriginalUri(Base);\n  return class OktaAuthOAuth extends WithOriginalUri\n  implements OktaAuthOAuthInterface<M, S, O, TM>\n  {\n    static crypto: CryptoAPI = crypto;\n    token: TokenAPI;\n    tokenManager: TokenManager;\n    transactionManager: TM;\n    pkce: PkceAPI;\n    endpoints: Endpoints;\n\n    _pending: { handleLogin: boolean };\n    _tokenQueue: PromiseQueue;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: this.storageManager,\n      }, this.options.transactionManager));\n  \n      this.pkce = {\n        DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n        generateVerifier: PKCE.generateVerifier,\n        computeChallenge: PKCE.computeChallenge\n      };\n  \n      this._pending = { handleLogin: false };\n\n      this._tokenQueue = new PromiseQueue();\n\n      this.token = createTokenAPI(this, this._tokenQueue);\n\n      // TokenManager\n      this.tokenManager = new TokenManager(this, this.options.tokenManager);\n\n      this.endpoints = createEndpoints(this);\n    }\n\n    // inherited from subclass\n    clearStorage(): void {\n      super.clearStorage();\n      \n      // Clear all local tokens\n      this.tokenManager.clear();\n    }\n\n    // Returns true if both accessToken and idToken are not expired\n    // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n    // eslint-disable-next-line complexity\n    async isAuthenticated(options: IsAuthenticatedOptions = {}): Promise<boolean> {\n      // TODO: remove dependency on tokenManager options in next major version - OKTA-473815\n      const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n      const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n      const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n      let { accessToken } = this.tokenManager.getTokensSync();\n      if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n        accessToken = undefined;\n        if (shouldRenew) {\n          try {\n            accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n          } catch {\n            // Renew errors will emit an \"error\" event \n          }\n        } else if (shouldRemove) {\n          this.tokenManager.remove('accessToken');\n        }\n      }\n\n      let { idToken } = this.tokenManager.getTokensSync();\n      if (idToken && this.tokenManager.hasExpired(idToken)) {\n        idToken = undefined;\n        if (shouldRenew) {\n          try {\n            idToken = await this.tokenManager.renew('idToken') as IDToken;\n          } catch {\n            // Renew errors will emit an \"error\" event \n          }\n        } else if (shouldRemove) {\n          this.tokenManager.remove('idToken');\n        }\n      }\n\n      return !!(accessToken && idToken);\n    }\n\n\n    async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n      const { originalUri, ...additionalParams } = opts;\n      if(this._pending.handleLogin) { \n        // Don't trigger second round\n        return;\n      }\n\n      this._pending.handleLogin = true;\n      try {\n        // Trigger default signIn redirect flow\n        if (originalUri) {\n          this.setOriginalUri(originalUri);\n        }\n        const params = Object.assign({\n          // TODO: remove this line when default scopes are changed OKTA-343294\n          scopes: this.options.scopes || ['openid', 'email', 'profile']\n        }, additionalParams);\n        await this.token.getWithRedirect(params);\n      } finally {\n        this._pending.handleLogin = false;\n      }\n    }\n\n    async getUser<T extends CustomUserClaims = CustomUserClaims>(): Promise<UserClaims<T>> {\n      const { idToken, accessToken } = this.tokenManager.getTokensSync();\n      return this.token.getUserInfo(accessToken, idToken);\n    }\n  \n    getIdToken(): string | undefined {\n      const { idToken } = this.tokenManager.getTokensSync();\n      return idToken ? idToken.idToken : undefined;\n    }\n  \n    getAccessToken(): string | undefined {\n      const { accessToken } = this.tokenManager.getTokensSync();\n      return accessToken ? accessToken.accessToken : undefined;\n    }\n  \n    getRefreshToken(): string | undefined {\n      const { refreshToken } = this.tokenManager.getTokensSync();\n      return refreshToken ? refreshToken.refreshToken : undefined;\n    }\n\n    async getOrRenewAccessToken(): Promise<string | null> {\n      const { accessToken } = this.tokenManager.getTokensSync();\n      if (accessToken && !this.tokenManager.hasExpired(accessToken)) {\n        return accessToken.accessToken;\n      }\n      try {\n        const key = this.tokenManager.getStorageKeyByType('accessToken');\n        const token = await this.tokenManager.renew(key ?? 'accessToken');\n        return (token as AccessToken)?.accessToken ?? null;\n      }\n      catch (err) {\n        this.emitter.emit('error', err);\n        return null;\n      }\n    }\n  \n    /**\n     * Store parsed tokens from redirect url\n     */\n    async storeTokensFromRedirect(): Promise<void> {\n      const { tokens, responseType } = await this.token.parseFromUrl();\n      if (responseType !== 'none') {\n        this.tokenManager.setTokens(tokens);\n      }\n    }\n  \n    isLoginRedirect(): boolean {\n      return isLoginRedirect(this);\n    }\n\n    isPKCE(): boolean {\n      return !!this.options.pkce;\n    }\n\n    hasResponseType(responseType: OAuthResponseType): boolean {\n      return hasResponseType(responseType, this.options);\n    }\n  \n    isAuthorizationCodeFlow(): boolean {\n      return this.hasResponseType('code');\n    }\n\n    // Escape hatch method to make arbitrary OKTA API call\n    async invokeApiMethod(options: RequestOptions): Promise<unknown> {\n      if (!options.accessToken) {\n        const accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n        options.accessToken = accessToken?.accessToken;\n      }\n      return httpRequest(this, options);\n    }\n    \n    // Revokes the access token for the application session\n    async revokeAccessToken(accessToken?: AccessToken): Promise<unknown> {\n      if (!accessToken) {\n        const tokens = await this.tokenManager.getTokens();\n        accessToken = tokens.accessToken;\n        const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n        this.tokenManager.remove(accessTokenKey);\n\n        if (this.options.dpop) {\n          await clearDPoPKeyPairAfterRevoke('access', tokens);\n        }\n      }\n      // Access token may have been removed. In this case, we will silently succeed.\n      if (!accessToken) {\n        return Promise.resolve(null);\n      }\n      return this.token.revoke(accessToken);\n    }\n\n    // Revokes the refresh token for the application session\n    async revokeRefreshToken(refreshToken?: RefreshToken): Promise<unknown> {\n      if (!refreshToken) {\n        const tokens = await this.tokenManager.getTokens();\n        refreshToken = tokens.refreshToken;\n        const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n        this.tokenManager.remove(refreshTokenKey);\n\n        if (this.options.dpop) {\n          await clearDPoPKeyPairAfterRevoke('refresh', tokens);\n        }\n      }\n      // Refresh token may have been removed. In this case, we will silently succeed.\n      if (!refreshToken) {\n        return Promise.resolve(null);\n      }\n      return this.token.revoke(refreshToken);\n    }\n\n    getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n      let {\n        idToken,\n        postLogoutRedirectUri,\n        state,\n      } = options;\n      if (!idToken) {\n        idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n      }\n      if (!idToken) {\n        return '';\n      }\n      if (postLogoutRedirectUri === undefined) {\n        postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n      }\n\n      const logoutUrl = getOAuthUrls(this).logoutUrl;\n      const idTokenHint = idToken.idToken; // a string\n      let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n      if (postLogoutRedirectUri) {\n        logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n      } \n      // State allows option parameters to be passed to logout redirect uri\n      if (state) {\n        logoutUri += '&state=' + encodeURIComponent(state);\n      }\n\n      return logoutUri;\n    }\n\n    // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n    // eslint-disable-next-line complexity, max-statements\n    async signOut(options?: SignoutOptions): Promise<boolean> {\n      options = Object.assign({}, options);\n    \n      // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n      const defaultUri = window.location.origin;\n      const currentUri = window.location.href;\n      // Fix for issue/1410 - allow for no postLogoutRedirectUri to be passed, resulting in /logout default behavior\n      //    \"If no Okta session exists, this endpoint has no effect and the browser is redirected immediately to the\n      //    Okta sign-in page or the post_logout_redirect_uri (if specified).\"\n      // - https://developer.okta.com/docs/reference/api/oidc/#logout\n      const postLogoutRedirectUri = options.postLogoutRedirectUri === null ? null :\n        (options.postLogoutRedirectUri\n        || this.options.postLogoutRedirectUri\n        || defaultUri);\n      const state = options?.state;\n      \n    \n      let accessToken = options.accessToken;\n      let refreshToken = options.refreshToken;\n      const revokeAccessToken = options.revokeAccessToken !== false;\n      const revokeRefreshToken = options.revokeRefreshToken !== false;\n    \n      if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n        refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n      }\n\n      if (revokeAccessToken && typeof accessToken === 'undefined') {\n        accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n      }\n    \n      if (!options.idToken) {\n        options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n      }\n\n      if (revokeRefreshToken && refreshToken) {\n        await this.revokeRefreshToken(refreshToken);\n      }\n\n      if (revokeAccessToken && accessToken) {\n        await this.revokeAccessToken(accessToken);\n      }\n\n      const dpopPairId = accessToken?.dpopPairId ?? refreshToken?.dpopPairId;\n      if (this.options.dpop && dpopPairId) {\n        await clearDPoPKeyPair(dpopPairId);\n      }\n\n      const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n      // No logoutUri? This can happen if the storage was cleared.\n      // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n      if (!logoutUri) {\n        // local tokens are cleared once session is closed\n        const sessionClosed = await this.closeSession();   // can throw if the user cannot be signed out\n        const redirectUri = new URL(postLogoutRedirectUri || defaultUri); // during fallback, redirectUri cannot be null\n        if (state) {\n          redirectUri.searchParams.append('state', state);\n        }\n        if (postLogoutRedirectUri === currentUri) {\n          // window.location.reload(); // force a hard reload if URI is not changing\n          window.location.href = redirectUri.href;\n        } else {\n          window.location.assign(redirectUri.href);\n        }\n        return sessionClosed;\n      } else {\n        if (options.clearTokensBeforeRedirect) {\n          // Clear all local tokens\n          this.tokenManager.clear();\n        } else {\n          this.tokenManager.addPendingRemoveFlags();\n        }\n        // Flow ends with logout redirect\n        window.location.assign(logoutUri);\n        return true;\n      }\n    }\n\n    async getDPoPAuthorizationHeaders (params: DPoPRequest): Promise<DPoPHeaders> {\n      if (!this.options.dpop) {\n        throw new AuthSdkError('DPoP is not configured for this client instance');\n      }\n\n      let { accessToken } = params;\n      if (!accessToken) {\n        accessToken = (this.tokenManager.getTokensSync()).accessToken;\n      }\n\n      if (!accessToken) {\n        throw new AuthSdkError('AccessToken is required to generate a DPoP Proof');\n      }\n\n      const keyPair = await findKeyPair(accessToken?.dpopPairId);\n      const proof = await generateDPoPProof({...params, keyPair, accessToken: accessToken.accessToken});\n      return {\n        Authorization: `DPoP ${accessToken.accessToken}`,\n        Dpop: proof\n      };\n    }\n\n    async clearDPoPStorage (clearAll=false): Promise<void> {\n      if (clearAll) {\n        return clearAllDPoPKeyPairs();\n      }\n\n      const tokens = await this.tokenManager.getTokens();\n      const keyPair = tokens.accessToken?.dpopPairId || tokens.refreshToken?.dpopPairId;\n\n      if (keyPair) {\n        await clearDPoPKeyPair(keyPair);\n      }\n    }\n\n    parseUseDPoPNonceError (headers: HeadersInit): string | null {\n      const wwwAuth = WWWAuthError.getWWWAuthenticateHeader(headers);\n      const wwwErr = WWWAuthError.parseHeader(wwwAuth ?? '');\n      if (isDPoPNonceError(wwwErr)) {\n        let nonce: string | null = null;\n        if (isFunction((headers as Headers)?.get)) {\n          nonce = (headers as Headers).get('DPoP-Nonce');\n        }\n        nonce = nonce ?? headers['dpop-nonce'] ?? headers['DPoP-Nonce'];\n        return nonce;\n      }\n\n      return null;\n    }\n  };\n\n}\n","import { REFERRER_PATH_STORAGE_KEY } from '../../constants';\nimport browserStorage from '../../browser/browserStorage';\nimport { OktaAuthStorageInterface } from '../../storage';\nimport { OktaAuthConstructor } from '../../base';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthOptions,\n  OriginalUriApi,\n  PKCETransactionMeta,\n} from '../types';\n\nexport function provideOriginalUri\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>> \n>\n(BaseClass: TBase) {\n  return class WithOriginalUri extends BaseClass implements OriginalUriApi {\n    setOriginalUri(originalUri: string, state?: string): void {\n      // always store in session storage\n      const sessionStorage = browserStorage.getSessionStorage();\n      sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n  \n      // to support multi-tab flows, set a state in constructor or pass as param\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n  \n    getOriginalUri(state?: string): string | undefined {\n      // Prefer shared storage (if state is available)\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        const originalUri = sharedStorage.getItem(state);\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n  \n      // Try to load from session storage\n      const storage = browserStorage.getSessionStorage();\n      return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n    }\n  \n    removeOriginalUri(state?: string): void {\n      // Remove from sessionStorage\n      const storage = browserStorage.getSessionStorage();\n      storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n  \n      // Also remove from shared storage\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem && sharedStorage.removeItem(state);\n      }\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n \n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport PCancelable from 'p-cancelable';\nimport { AuthSdkError } from '../errors';\nimport {\n  EVENT_ADDED,\n  EVENT_REMOVED,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface\n} from '../oidc';\nimport {\n  AuthState,\n  AuthStateLogOptions,\n  OktaAuthCoreOptions,\n} from './types';\nimport { PromiseQueue, getConsole } from '../util';\n\nexport const INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\n\n// only compare first level of authState\nconst isSameAuthState = (prevState: AuthState | null, state: AuthState) => {\n  // initial state is null\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated \n    && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n    && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n    && prevState.error === state.error;\n};\n\n\nexport class AuthStateManager\n<\n  M extends OAuthTransactionMeta,\n  S extends OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions\n>\n{\n  _sdk: OktaAuthOAuthInterface<M, S, O>;\n  _pending: { \n    updateAuthStatePromise: any;\n    canceledTimes: number; \n  };\n  _authState: AuthState | null;\n  _prevAuthState: AuthState | null;\n  _logOptions: AuthStateLogOptions;\n  _transformQueue: PromiseQueue;\n\n  constructor(sdk: OktaAuthOAuthInterface<M, S, O>) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = { ...DEFAULT_PENDING };\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    this._prevAuthState = null;\n    this._transformQueue = new PromiseQueue({\n      quiet: true\n    });\n\n    // Listen on tokenManager events to start updateState process\n    // \"added\" event is emitted in both add and renew process\n    // Only listen on \"added\" event to update auth state\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({ event: EVENT_ADDED, key, token });\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({ event: EVENT_REMOVED, key, token });\n      this.updateAuthState();\n    });\n  }\n\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n\n  getAuthState(): AuthState | null {\n    return this._authState;\n  }\n\n  getPreviousAuthState(): AuthState | null {\n    return this._prevAuthState;\n  }\n\n  async updateAuthState(): Promise<AuthState> {\n    const { transformAuthState, devMode } = this._sdk.options;\n\n    const log = (status) => {\n      const { event, key, token } = this._logOptions;\n      getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n      getConsole().log(key, token);\n      getConsole().log('Current authState', this._authState);\n      getConsole().groupEnd();\n      \n      // clear log options after logging\n      this._logOptions = {};\n    };\n\n    const emitAuthStateChange = (authState) => {\n      if (isSameAuthState(this._authState, authState)) {\n        devMode && log('unchanged'); \n        return;\n      }\n      this._prevAuthState = this._authState;\n      this._authState = authState;\n      // emit new authState object\n      this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, { ...authState });\n      devMode && log('emitted');\n    };\n\n    const finalPromise = (origPromise) => {       \n      return this._pending.updateAuthStatePromise.then(() => {\n        const curPromise = this._pending.updateAuthStatePromise;\n        if (curPromise && curPromise !== origPromise) {\n          return finalPromise(curPromise);\n        }\n        return this.getAuthState();\n      });\n    };\n\n    if (this._pending.updateAuthStatePromise) {\n      if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n        // stop canceling then starting a new promise\n        // let existing promise finish to prevent running into loops\n        devMode && log('terminated');\n        return finalPromise(this._pending.updateAuthStatePromise);\n      } else {\n        this._pending.updateAuthStatePromise.cancel();\n      }\n    }\n\n    /* eslint-disable complexity */\n    const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n      onCancel.shouldReject = false;\n      onCancel(() => {\n        this._pending.updateAuthStatePromise = null;\n        this._pending.canceledTimes = this._pending.canceledTimes + 1;\n        devMode && log('canceled');\n      });\n\n      const emitAndResolve = (authState) => {\n        if (cancelablePromise.isCanceled) {\n          resolve();\n          return;\n        }\n        // emit event and resolve promise \n        emitAuthStateChange(authState);\n        resolve();\n\n        // clear pending states after resolve\n        this._pending = { ...DEFAULT_PENDING };\n      };\n\n      this._sdk.isAuthenticated()\n        .then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n\n          // Enqueue transformAuthState so that it does not run concurrently\n          const promise: Promise<AuthState> = transformAuthState\n            ? this._transformQueue.push(transformAuthState, null, this._sdk, authState) as Promise<AuthState>\n            : Promise.resolve(authState);\n\n          promise\n            .then(authState => emitAndResolve(authState))\n            .catch(error => emitAndResolve({\n              accessToken, \n              idToken, \n              refreshToken,\n              isAuthenticated: false, \n              error\n            }));\n        });\n    });\n    /* eslint-enable complexity */\n    this._pending.updateAuthStatePromise = cancelablePromise;\n\n    return finalPromise(cancelablePromise);\n  }\n\n  subscribe(handler): void {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n  unsubscribe(handler?): void {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport { EVENT_EXPIRED, TokenManagerInterface, isRefreshToken } from '../oidc/types';\nimport { isBrowser } from '../features';\n\nexport class AutoRenewService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private options: ServiceManagerOptions;\n  private renewTimeQueue: Array<number>;\n  private started = false;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  \n  private shouldThrottleRenew(): boolean {\n    let res = false;\n    this.renewTimeQueue.push(Date.now());\n    if (this.renewTimeQueue.length >= 10) {\n      // get and remove first item from queue\n      const firstTime = this.renewTimeQueue.shift() as number;\n      const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n      res = (lastTime - firstTime) < 30 * 1000;\n    }\n    return res;\n  }\n\n  requiresLeadership() {\n    // If tokens sync storage is enabled, handle tokens expiration only in 1 leader tab\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  private processExpiredTokens() {\n    const tokenStorage = this.tokenManager.getStorage();\n    const tokens = tokenStorage.getStorage();\n    Object.keys(tokens).forEach(key => {\n      const token = tokens[key];\n      if (!isRefreshToken(token) && this.tokenManager.hasExpired(token)) {\n        this.onTokenExpiredHandler(key);\n      }\n    });\n  }\n\n  private onTokenExpiredHandler(key: string) {\n    if (this.options.autoRenew) {\n      if (this.shouldThrottleRenew()) {\n        const error = new AuthSdkError('Too many token renew requests');\n        this.tokenManager.emitError(error);\n      } else {\n        this.tokenManager.renew(key).catch(() => {}); // Renew errors will emit an \"error\" event \n      }\n    } else if (this.options.autoRemove) {\n      this.tokenManager.remove(key);\n    }\n  }\n\n  canStart() {\n    return (!!this.options.autoRenew || !!this.options.autoRemove) && !this.started;\n  }\n\n  async start() {\n    if (this.canStart()) {\n      this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      if (this.tokenManager.isStarted()) {\n        // If token manager has been already started, we could miss token expire events,\n        //  so need to process expired tokens manually.\n        this.processExpiredTokens();\n      }\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.renewTimeQueue = [];\n      this.started = false;\n    }\n  }\n\n  isStarted() {\n    return this.started;\n  }\n}\n","/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  return obj && typeof obj.then === 'function';\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\n\n/**\n * Returns the current unix time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ret = Date.now() * 1000; // milliseconds to microseconds\n  if (ret <= lastMs) {\n    ret = lastMs + 1;\n  }\n  lastMs = ret;\n  return ret;\n}\n\n/**\n * Check if WebLock API is supported.\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport function supportsWebLockAPI() {\n  if (typeof navigator !== 'undefined' && typeof navigator.locks !== 'undefined' && typeof navigator.locks.request === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}","import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    time: micro(),\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n  state.bc.onmessage = function (msgEvent) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msgEvent.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  // Deno runtime\n  // eslint-disable-next-line\n  if (typeof globalThis !== 'undefined' && globalThis.Deno && globalThis.Deno.args) {\n    return true;\n  }\n\n  // Browser runtime\n  if ((typeof window !== 'undefined' || typeof self !== 'undefined') && typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport var NativeMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","\n/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nexport class ObliviousSet<T = any> {\n    public readonly map = new Map();\n\n    /**\n     * Creating calls to setTimeout() is expensive,\n     * so we only do that if there is not timeout already open.\n     */\n    public _to: boolean = false;\n    constructor(\n        public readonly ttl: number\n    ) { }\n\n    has(value: T): boolean {\n        return this.map.has(value);\n    }\n\n    add(value: T): void {\n        this.map.set(value, now());\n\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(() => {\n                this._to = false;\n                removeTooOldValues(this);\n            }, 0);\n        }\n    }\n\n    clear() {\n        this.map.clear();\n    }\n}\n\n\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(\n    obliviousSet: ObliviousSet\n) {\n    const olderThen = now() - obliviousSet.ttl;\n    const iterator = obliviousSet.map[Symbol.iterator]();\n\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n\n        const next = iterator.next().value;\n\n        if (!next) {\n            return; // no more elements\n        }\n        const value = next[0];\n        const time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        } else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\n\nexport function now(): number {\n    return Date.now();\n}\n\n\n","export function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions));\n\n  // main\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true;\n\n  // indexed-db\n  if (!options.idb) options.idb = {};\n  //  after this time the messages get deleted\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150;\n  //  handles abrupt db onclose events.\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose;\n\n  // localstorage\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60;\n\n  // custom methods\n  if (originalOptions.methods) options.methods = originalOptions.methods;\n\n  // node\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}","/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n * \n * When working on this, ensure to use these performance optimizations:\n * @link https://rxdb.info/slow-indexeddb.html\n */\n\nimport { sleep, randomInt, randomToken, microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\n\n/**\n * Use relaxed durability for faster performance on all transactions.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport var TRANSACTION_SETTINGS = {\n  durability: 'relaxed'\n};\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n  return false;\n}\n\n/**\n * If possible, we should explicitly commit IndexedDB transactions\n * for better performance.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport function commitIndexedDBTransaction(tx) {\n  if (tx.commit) {\n    tx.commit();\n  }\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb();\n\n  // create table\n  var dbName = DB_PREFIX + channelName;\n\n  /**\n   * All IndexedDB databases are opened without version\n   * because it is a bit faster, especially on firefox\n   * @link http://nparashuram.com/IndexedDB/perf/#Open%20Database%20with%20version\n   */\n  var openRequest = IndexedDB.open(dbName);\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n  return new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n}\n\n/**\n * writes the new message to the database\n * so other readers can find it\n */\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = Date.now();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  return new Promise(function (res, rej) {\n    tx.oncomplete = function () {\n      return res();\n    };\n    tx.onerror = function (ev) {\n      return rej(ev);\n    };\n    var objectStore = tx.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n    commitIndexedDBTransaction(tx);\n  });\n}\nexport function getAllMessages(db) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        ret.push(cursor.value);\n        //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n        cursor[\"continue\"]();\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n\n  /**\n   * Optimization shortcut,\n   * if getAll() can be used, do not use a cursor.\n   * @link https://rxdb.info/slow-indexeddb.html\n   */\n  if (objectStore.getAll) {\n    var getAllRequest = objectStore.getAll(keyRangeValue);\n    return new Promise(function (res, rej) {\n      getAllRequest.onerror = function (err) {\n        return rej(err);\n      };\n      getAllRequest.onsuccess = function (e) {\n        res(e.target.result);\n      };\n    });\n  }\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n  return new Promise(function (res, rej) {\n    var openCursorRequest = openCursor();\n    openCursorRequest.onerror = function (err) {\n      return rej(err);\n    };\n    openCursorRequest.onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessagesById(channelState, ids) {\n  if (channelState.closed) {\n    return Promise.resolve([]);\n  }\n  var tx = channelState.db.transaction(OBJECT_STORE_ID, 'readwrite', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  return Promise.all(ids.map(function (id) {\n    var deleteRequest = objectStore[\"delete\"](id);\n    return new Promise(function (res) {\n      deleteRequest.onsuccess = function () {\n        return res();\n      };\n    });\n  }));\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = Date.now() - ttl;\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        var msgObk = cursor.value;\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk);\n          //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          commitIndexedDBTransaction(tx);\n          res(ret);\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(channelState) {\n  return getOldMessages(channelState.db, channelState.options.idb.ttl).then(function (tooOld) {\n    return removeMessagesById(channelState, tooOld.map(function (msg) {\n      return msg.id;\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parallel\n      writeBlockPromise: PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n    _readLoop(state);\n    return state;\n  });\n}\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n  return true;\n}\n\n/**\n * reads all new messages from the database and emits them\n */\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return PROMISE_RESOLVED_VOID;\n\n  // if no one is listening, we do not need to scan for new messages\n  if (!state.messagesCallback) return PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined sometimes\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */.filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return PROMISE_RESOLVED_VOID;\n  });\n}\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed() {\n  return !!getIdb();\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport var IndexedDBMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside webworkers because they have no access to localstorage\n * This is basically implemented to support IE9 or your grandmother's toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nimport { sleep, randomToken, microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {\n    // New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: Date.now(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n  var uuid = randomToken();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n  };\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === uuid) return; // own message\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  var ls = getLocalStorage();\n  if (!ls) return false;\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n  return defaultTime;\n}\nexport var LocalstorageMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    time: microSeconds(),\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport var SIMULATE_DELAY_TIME = 5;\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.forEach(function (channel) {\n        if (channel.name === channelState.name &&\n        // has same name\n        channel !== channelState &&\n        // not own channel\n        !!channel.messagesCallback &&\n        // has subscribers\n        channel.time < messageJson.time // channel not created after postMessage() call\n        ) {\n          channel.messagesCallback(messageJson);\n        }\n      });\n      res();\n    }, SIMULATE_DELAY_TIME);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return SIMULATE_DELAY_TIME;\n}\nexport var SimulateMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { NativeMethod } from './methods/native.js';\nimport { IndexedDBMethod } from './methods/indexed-db.js';\nimport { LocalstorageMethod } from './methods/localstorage.js';\nimport { SimulateMethod } from './methods/simulate.js';\n// the line below will be removed from es5/browser builds\n\n// order is important\nvar METHODS = [NativeMethod,\n// fastest\nIndexedDBMethod, LocalstorageMethod];\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean);\n\n  // the line below will be removed from es5/browser builds\n\n  // directly chosen\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage will be chosen\n   */\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) {\n    throw new Error(\"No usable method found in \" + JSON.stringify(METHODS.map(function (m) {\n      return m.type;\n    })));\n  } else {\n    return useMethod;\n  }\n}","import { isPromise, PROMISE_RESOLVED_FALSE, PROMISE_RESOLVED_VOID } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nexport var OPEN_BROADCAST_CHANNELS = new Set();\nvar lastId = 0;\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options);\n\n  // isListening\n  this._iL = false;\n\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n  this._onML = null;\n\n  /**\n   * _addEventListeners\n   */\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n\n  /**\n   * Unsent message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n  this._uMP = new Set();\n\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n  this._befC = [];\n\n  /**\n   * _preparePromise\n   */\n  this._prepP = null;\n  _prepareChannel(this);\n};\n\n// STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\nBroadcastChannel._pubkey = true;\n\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\nexport function clearNodeFolder(options) {\n  options = fillOptionsWithDefaults(options);\n  var method = chooseMethod(options);\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return PROMISE_RESOLVED_FALSE;\n  }\n}\n\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n}\n\n// PROTOTYPE\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was really hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _removeListenerObject(this, 'message', this._onML);\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n    if (this.closed) {\n      return;\n    }\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare\n    // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    })\n    // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    })\n    // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n  get type() {\n    return this.method.type;\n  },\n  get isClosed() {\n    return this.closed;\n  }\n};\n\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n\n    // add/remove to unsent messages list\n    broadcastChannel._uMP.add(sendPromise);\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n  _startListening(channel);\n}\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n  _stopListening(channel);\n}\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        if (msgObj.time >= listenerObject.time) {\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n    var time = channel.method.microSeconds();\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // no one is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { BroadcastChannel } from 'broadcast-channel';\nimport { isBrowser } from '../features';\nimport {\n  ServiceManagerOptions, ServiceInterface\n} from '../core/types';\nimport {\n  Token, Tokens, \n  EVENT_ADDED, EVENT_REMOVED, EVENT_RENEWED, EVENT_SET_STORAGE, TokenManagerInterface\n} from '../oidc/types';\nimport { AuthSdkError } from '../errors';\n\nexport type SyncMessage = {\n  type: string;\n  key?: string;\n  token?: Token;\n  oldToken?: Token;\n  storage?: Tokens;\n};\nexport class SyncStorageService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private options: ServiceManagerOptions;\n  private channel?: BroadcastChannel<SyncMessage>;\n  private started = false;\n  private enablePostMessage = true;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.onTokenAddedHandler = this.onTokenAddedHandler.bind(this);\n    this.onTokenRemovedHandler = this.onTokenRemovedHandler.bind(this);\n    this.onTokenRenewedHandler = this.onTokenRenewedHandler.bind(this);\n    this.onSetStorageHandler = this.onSetStorageHandler.bind(this);\n    this.onSyncMessageHandler = this.onSyncMessageHandler.bind(this);\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return !!this.options.syncStorage && isBrowser() && !this.started;\n  }\n\n  async start() {\n    if (!this.canStart()) {\n      return;\n    }\n    \n    const { syncChannelName } = this.options;\n    try {\n      // BroadcastChannel throws if no supported method can be found\n      this.channel = new BroadcastChannel(syncChannelName as string);\n    } catch (err) {\n      throw new AuthSdkError('SyncStorageService is not supported in current browser.');\n    }\n\n    this.tokenManager.on(EVENT_ADDED, this.onTokenAddedHandler);\n    this.tokenManager.on(EVENT_REMOVED, this.onTokenRemovedHandler);\n    this.tokenManager.on(EVENT_RENEWED, this.onTokenRenewedHandler);\n    this.tokenManager.on(EVENT_SET_STORAGE, this.onSetStorageHandler);\n    this.channel.addEventListener('message', this.onSyncMessageHandler);\n    this.started = true;\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_ADDED, this.onTokenAddedHandler);\n      this.tokenManager.off(EVENT_REMOVED, this.onTokenRemovedHandler);\n      this.tokenManager.off(EVENT_RENEWED, this.onTokenRenewedHandler);\n      this.tokenManager.off(EVENT_SET_STORAGE, this.onSetStorageHandler);\n      this.channel?.removeEventListener('message', this.onSyncMessageHandler);\n      await this.channel?.close();\n      this.channel = undefined;\n      this.started = false;\n    }\n  }\n\n  private onTokenAddedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_ADDED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRemovedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_REMOVED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRenewedHandler(key: string, token: Token, oldToken?: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_RENEWED,\n      key,\n      token,\n      oldToken\n    });\n  }\n\n  private onSetStorageHandler(storage: Tokens) {\n    this.channel?.postMessage({\n      type: EVENT_SET_STORAGE,\n      storage\n    });\n  }\n\n  /* eslint-disable complexity */\n  private onSyncMessageHandler(msg: SyncMessage) {\n    // Notes:\n    // 1. Using `enablePostMessage` flag here to prevent sync message loop.\n    //    If this flag is on, tokenManager event handlers do not post sync message.\n    // 2. IE11 has known issue with synchronization of LocalStorage cross tabs.\n    //    One workaround is to set empty event handler for `window.onstorage`.\n    //    But it's not 100% working, sometimes you still get old value from LocalStorage.\n    //    Better approch is to explicitly udpate LocalStorage with `setStorage`.\n\n    this.enablePostMessage = false;\n    switch (msg.type) {\n      case EVENT_SET_STORAGE:\n        this.tokenManager.getStorage().setStorage(msg.storage);\n        break;\n      case EVENT_ADDED:\n        this.tokenManager.emitAdded(msg.key!, msg.token!);\n        this.tokenManager.setExpireEventTimeout(msg.key!, msg.token!);\n        break;\n      case EVENT_REMOVED:\n        this.tokenManager.clearExpireEventTimeout(msg.key!);\n        this.tokenManager.emitRemoved(msg.key!, msg.token!);\n        break;\n      case EVENT_RENEWED:\n        this.tokenManager.emitRenewed(msg.key!, msg.token!, msg.oldToken);\n        break;\n      default:\n        break;\n    }\n    this.enablePostMessage = true;\n  }\n} ","import { addBrowser } from './browser.js';\nimport { addNode } from './node.js';\n\n/**\n * Use the code directly to prevent import problems\n * with the detect-node package.\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nvar USE_METHOD = isNode ? addNode : addBrowser;\nvar LISTENERS = new Set();\nvar startedListening = false;\nfunction startListening() {\n  if (startedListening) {\n    return;\n  }\n  startedListening = true;\n  USE_METHOD(runAll);\n}\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') {\n    throw new Error('Listener is no function');\n  }\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}","export function addNode(fn) {\n  process.on('exit', function () {\n    return fn();\n  });\n\n  /**\n   * on the following events,\n   * the process will not end if there are\n   * event-handlers attached,\n   * therefore we have to call process.exit()\n   */\n  process.on('beforeExit', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches ctrl+c event\n  process.on('SIGINT', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches uncaught exceptions\n  process.on('uncaughtException', function (err) {\n    return fn().then(function () {\n      console.trace(err);\n      process.exit(101);\n    });\n  });\n}","/* global WorkerGlobalScope */\n\nexport function addBrowser(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {\n    /**\n     * Because killing a worker does directly stop the excution\n     * of the code, our only chance is to overwrite the close function\n     * which could work some times.\n     * @link https://stackoverflow.com/q/72903255/3443137\n     */\n    var oldClose = self.close.bind(self);\n    self.close = function () {\n      fn();\n      return oldClose();\n    };\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') {\n      return;\n    }\n\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n}","import { add as unloadAdd } from 'unload';\n\n/**\n * sends and internal message over the broadcast-channel\n */\nexport function sendLeaderMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\nexport function beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector._hasLeader = true;\n  var unloadFn = unloadAdd(function () {\n    return leaderElector.die();\n  });\n  leaderElector._unl.push(unloadFn);\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      sendLeaderMessage(leaderElector, 'tell');\n    }\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n      sendLeaderMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n    }\n  };\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n  leaderElector._lstns.push(isLeaderListener);\n  return sendLeaderMessage(leaderElector, 'tell');\n}","import { randomToken } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\n\n/**\n * A faster version of the leader elector that uses the WebLock API\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport var LeaderElectionWebLock = function LeaderElectionWebLock(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  broadcastChannel._befC.push(function () {\n    return _this.die();\n  });\n  this._options = options;\n  this.isLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n  this._lstns = [];\n  this._unl = [];\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  this._wKMC = {}; // stuff for cleanup\n\n  // lock name\n  this.lN = 'pubkey-bc||' + broadcastChannel.method.type + '||' + broadcastChannel.name;\n};\nLeaderElectionWebLock.prototype = {\n  hasLeader: function hasLeader() {\n    var _this2 = this;\n    return navigator.locks.query().then(function (locks) {\n      var relevantLocks = locks.held ? locks.held.filter(function (lock) {\n        return lock.name === _this2.lN;\n      }) : [];\n      if (relevantLocks && relevantLocks.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    var _this3 = this;\n    if (!this._wLMP) {\n      this._wKMC.c = new AbortController();\n      var returnPromise = new Promise(function (res, rej) {\n        _this3._wKMC.res = res;\n        _this3._wKMC.rej = rej;\n      });\n      this._wLMP = new Promise(function (res) {\n        navigator.locks.request(_this3.lN, {\n          signal: _this3._wKMC.c.signal\n        }, function () {\n          // if the lock resolved, we can drop the abort controller\n          _this3._wKMC.c = undefined;\n          beLeader(_this3);\n          res();\n          return returnPromise;\n        })[\"catch\"](function () {});\n      });\n    }\n    return this._wLMP;\n  },\n  set onduplicate(_fn) {\n    // Do nothing because there are no duplicates in the WebLock version\n  },\n  die: function die() {\n    var _this4 = this;\n    this._lstns.forEach(function (listener) {\n      return _this4.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    if (this._wKMC.res) {\n      this._wKMC.res();\n    }\n    if (this._wKMC.c) {\n      this._wKMC.c.abort('LeaderElectionWebLock.die() called');\n    }\n    return sendLeaderMessage(this, 'death');\n  }\n};","import { sleep, randomToken, PROMISE_RESOLVED_VOID, PROMISE_RESOLVED_TRUE, supportsWebLockAPI } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\nimport { LeaderElectionWebLock } from './leader-election-web-lock.js';\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this._hasLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n  this._aplQ = PROMISE_RESOLVED_VOID;\n  // amount of unfinished applyOnce() calls\n  this._aplQC = 0;\n\n  // things to clean up\n  this._unl = []; // _unloads\n  this._lstns = []; // _listeners\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this._hasLeader = false;\n      }\n      if (msg.action === 'tell') {\n        _this._hasLeader = true;\n      }\n    }\n  };\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n  this._lstns.push(hasLeaderListener);\n};\nLeaderElection.prototype = {\n  hasLeader: function hasLeader() {\n    return Promise.resolve(this._hasLeader);\n  },\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce(\n  // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n    if (this.isLeader) {\n      return sleep(0, true);\n    }\n    if (this.isDead) {\n      return sleep(0, false);\n    }\n\n    /**\n     * Already applying more than once,\n     * -> wait for the apply queue to be finished.\n     */\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n\n    /**\n     * Add a new apply-run\n     */\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return PROMISE_RESOLVED_TRUE;\n      }\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2._hasLeader = true;\n          }\n        }\n      };\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other instances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n      return sendLeaderMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })\n      // send again in case another instance was just created\n      .then(function () {\n        return sendLeaderMessage(_this2, 'apply');\n      })\n      // let others time to respond\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n    };\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if (/* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n    return this._aLP;\n  },\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n  die: function die() {\n    var _this3 = this;\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this._hasLeader = false;\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    return sendLeaderMessage(this, 'death');\n  }\n};\n\n/**\n * @param leaderElector {LeaderElector}\n */\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return PROMISE_RESOLVED_VOID;\n  }\n  return new Promise(function (res) {\n    var resolved = false;\n    function finish() {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    }\n\n    // try once now\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n    var _tryOnFallBack = function tryOnFallBack() {\n      return sleep(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              _tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n    _tryOnFallBack();\n\n    // try when other leader dies\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector._hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n  return options;\n}\nexport function createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = supportsWebLockAPI() ? new LeaderElectionWebLock(channel, options) : new LeaderElection(channel, options);\n  channel._befC.push(function () {\n    return elector.die();\n  });\n  channel._leaderElector = elector;\n  return elector;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport {\n  BroadcastChannel,\n  createLeaderElection,\n  LeaderElector\n} from 'broadcast-channel';\nimport { isBrowser } from '../features';\n\ndeclare type OnLeaderHandler = (() => Promise<void>);\ndeclare type ServiceOptions = ServiceManagerOptions & {\n  onLeader?: OnLeaderHandler;\n};\n\nexport class LeaderElectionService implements ServiceInterface {\n  private options: ServiceOptions;\n  private channel?: BroadcastChannel;\n  private elector?: LeaderElector;\n  private started = false;\n\n  constructor(options: ServiceOptions = {}) {\n    this.options = options;\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n  }\n\n  private onLeaderDuplicate() {\n  }\n\n  private async onLeader() {\n    await this.options.onLeader?.();\n  }\n\n  isLeader() {\n    return !!this.elector?.isLeader;\n  }\n\n  hasLeader() {\n    return !!this.elector?.hasLeader;\n  }\n\n  async start() {\n    if (this.canStart()) {\n      const { electionChannelName } = this.options;\n      this.channel = new BroadcastChannel(electionChannelName as string);\n      this.elector = createLeaderElection(this.channel);\n      this.elector.onduplicate = this.onLeaderDuplicate;\n      this.elector.awaitLeadership().then(this.onLeader);\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      if (this.elector) {\n        await this.elector.die();\n        this.elector = undefined;\n      }\n      if (this.channel) {\n        // Workaround to fix error `Failed to execute 'postMessage' on 'BroadcastChannel': Channel is closed`\n        (this.channel as any).postInternal = () => Promise.resolve();\n        await this.channel.close();\n        this.channel = undefined;\n      }\n      this.started = false;\n    }\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return isBrowser() && !this.started;\n  }\n\n}\n","import { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport { TokenManagerInterface } from '../oidc/types';\nimport { isBrowser } from '../features';\n\nconst getNow = () => Math.floor(Date.now() / 1000);\n\nexport class RenewOnTabActivationService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private started = false;\n  private options: ServiceManagerOptions;\n  private lastHidden = -1;\n  onPageVisbilityChange: () => void;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    // store this context for event handler\n    this.onPageVisbilityChange = this._onPageVisbilityChange.bind(this);\n  }\n\n  // do not use directly, use `onPageVisbilityChange` (with binded this context)\n  /* eslint complexity: [0, 10] */\n  private _onPageVisbilityChange () {\n    if (document.hidden) {\n      this.lastHidden = getNow();\n    }\n    // renew will only attempt if tab was inactive for duration\n    else if (this.lastHidden > 0 && (getNow() - this.lastHidden >= this.options.tabInactivityDuration!)) {\n      const { accessToken, idToken } = this.tokenManager.getTokensSync();\n      if (!!accessToken && this.tokenManager.hasExpired(accessToken)) {\n        const key = this.tokenManager.getStorageKeyByType('accessToken');\n        // Renew errors will emit an \"error\" event\n        this.tokenManager.renew(key).catch(() => {});\n      }\n      else if (!!idToken && this.tokenManager.hasExpired(idToken)) {\n        const key = this.tokenManager.getStorageKeyByType('idToken');\n        // Renew errors will emit an \"error\" event\n        this.tokenManager.renew(key).catch(() => {});\n      }\n    }\n  }\n\n  async start () {\n    if (this.canStart() && !!document) {\n      document.addEventListener('visibilitychange', this.onPageVisbilityChange);\n      this.started = true;\n    }\n  }\n\n  async stop () {\n    if (document) {\n      document.removeEventListener('visibilitychange', this.onPageVisbilityChange);\n      this.started = false;\n    }\n  }\n\n  canStart(): boolean {\n    return isBrowser() &&\n    !!this.options.autoRenew &&\n    !!this.options.renewOnTabActivation &&\n    !this.started;\n  }\n\n  requiresLeadership(): boolean {\n    return false;\n  }\n\n  isStarted(): boolean {\n    return this.started;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport {\n  OAuthTransactionMeta,\n  OAuthStorageManagerInterface,\n} from '../../oidc';\n\nimport {\n  ServiceManagerInterface,\n  ServiceInterface,\n  ServiceManagerOptions,\n  OktaAuthCoreInterface,\n  OktaAuthCoreOptions\n} from '../types';\nimport { AutoRenewService,\n  SyncStorageService,\n  LeaderElectionService,\n  RenewOnTabActivationService\n} from '../../services';\nimport { removeNils } from '../../util';\n\nconst AUTO_RENEW = 'autoRenew';\nconst SYNC_STORAGE = 'syncStorage';\nconst LEADER_ELECTION = 'leaderElection';\nconst RENEW_ON_TAB_ACTIVATION = 'renewOnTabActivation';\n\nexport class ServiceManager\n<\n  M extends OAuthTransactionMeta,\n  S extends OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions\n>\nimplements ServiceManagerInterface \n{\n  private sdk: OktaAuthCoreInterface<M, S, O>;\n  private options: ServiceManagerOptions;\n  private services: Map<string, ServiceInterface>;\n  private started: boolean;\n\n  private static knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION, RENEW_ON_TAB_ACTIVATION];\n\n  private static defaultOptions: ServiceManagerOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true,\n    renewOnTabActivation: true,\n    tabInactivityDuration: 1800,    // 30 mins in seconds\n  };\n\n  constructor(sdk: OktaAuthCoreInterface<M, S, O>, options: ServiceManagerOptions = {}) {\n    this.sdk = sdk;\n    this.onLeader = this.onLeader.bind(this);\n\n    // TODO: backwards compatibility, remove in next major version - OKTA-473815\n    const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n    options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n    this.options = Object.assign({}, \n      ServiceManager.defaultOptions,\n      { autoRenew, autoRemove, syncStorage }, \n      {\n        electionChannelName: `${sdk.options.clientId}-election`,\n        syncChannelName: `${sdk.options.clientId}-sync`,\n      },\n      removeNils(options)\n    );\n\n    this.started = false;\n    this.services = new Map();\n\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  private async onLeader() {\n    if (this.started) {\n      // Start services that requires leadership\n      await this.startServices();\n    }\n  }\n\n  isLeader() {\n    return (this.getService(LEADER_ELECTION) as LeaderElectionService)?.isLeader();\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.canStart() && srv.requiresLeadership());\n  }\n\n  async start() {\n    if (this.started) {\n      return;     // noop if services have already started\n    }\n    await this.startServices();\n    this.started = true;\n  }\n  \n  async stop() {\n    await this.stopServices();\n    this.started = false;\n  }\n\n  getService(name: string): ServiceInterface | undefined {\n    return this.services.get(name);\n  }\n\n  private async startServices() {\n    for (const [name, srv] of this.services.entries()) {\n      if (this.canStartService(name, srv)) {\n        await srv.start();\n      }\n    }\n  }\n\n  private async stopServices() {\n    for (const srv of this.services.values()) {\n      await srv.stop();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private canStartService(name: string, srv: ServiceInterface): boolean {\n    let canStart = srv.canStart() && !srv.isStarted();\n    // only start election if a leader is required\n    if (name === LEADER_ELECTION) {\n      canStart &&= this.isLeaderRequired();\n    } else if (srv.requiresLeadership()) {\n      canStart &&= this.isLeader();\n    }\n    return canStart;\n  }\n\n  private createService(name: string): ServiceInterface {\n    const tokenManager = this.sdk.tokenManager;\n\n    let service: ServiceInterface;\n    switch (name) {\n      case LEADER_ELECTION:\n        service = new LeaderElectionService({...this.options, onLeader: this.onLeader});\n        break;\n      case AUTO_RENEW:\n        service = new AutoRenewService(tokenManager, {...this.options});\n        break;\n      case SYNC_STORAGE:\n        service = new SyncStorageService(tokenManager, {...this.options});\n        break;\n      case RENEW_ON_TAB_ACTIVATION:\n        service = new RenewOnTabActivationService(tokenManager, {...this.options});\n        break;\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n    return service;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\nimport { omit, getLink, toQueryString } from '../util';\nimport { get, post, httpRequest } from '../http';\n\nfunction sessionExists(sdk) {\n  return sdk.session.get()\n    .then(function(res) {\n      if (res.status === 'ACTIVE') {\n        return true;\n      }\n      return false;\n    })\n    .catch(function() {\n      return false;\n    });\n}\n\nfunction getSession(sdk) { \n  return get(sdk, '/api/v1/sessions/me', { withCredentials: true })\n  .then(function(session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function() {\n      return post(sdk, getLink(session, 'refresh').href, {}, { withCredentials: true });\n    };\n\n    res.user = function() {\n      return get(sdk, getLink(session, 'user').href, { withCredentials: true });\n    };\n\n    return res;\n  })\n  .catch(function() {\n    // Return INACTIVE status on failure\n    return {status: 'INACTIVE'};\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, { withCredentials: true });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' +\n    toQueryString({\n      checkAccountSetupComplete: true,\n      token: sessionToken,\n      redirectUrl: redirectUrl\n    }));\n}\n\nexport {\n  sessionExists,\n  getSession,\n  closeSession,\n  refreshSession,\n  setCookieAndRedirect\n};\n","import { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { OktaAuthConstructor } from '../base/types';\nimport { createSessionApi } from './factory';\nimport {\n  OktaAuthSessionInterface, SessionAPI,\n} from './types';\nimport { StorageManagerInterface } from '../storage/types';\n\nexport function mixinSession\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n{\n  return class OktaAuthSession extends Base implements OktaAuthSessionInterface<S, O>\n  {\n    session: SessionAPI;\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.session = createSessionApi(this);\n    }\n\n    // Ends the current Okta SSO session without redirecting to Okta.\n    closeSession(): Promise<boolean> {\n      return this.session.close() // DELETE /api/v1/sessions/me\n      .then(async () => {\n        // Clear all local tokens\n        this.clearStorage();\n        return true;\n      })\n      .catch(function(e) {\n        if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n          // Session does not exist or has already been closed\n          return false;\n        }\n        throw e;\n      });\n    }\n  };\n}\n","import { SessionAPI } from './types';\nimport { closeSession, getSession, refreshSession, sessionExists, setCookieAndRedirect } from './api';\nimport { OktaAuthBaseInterface } from '../base/types';\n\nexport function createSessionApi(sdk: OktaAuthBaseInterface): SessionAPI {\n  const session = {\n    close: closeSession.bind(null, sdk),\n    exists: sessionExists.bind(null, sdk),\n    get: getSession.bind(null, sdk),\n    refresh: refreshSession.bind(null, sdk),\n    setCookieAndRedirect: setCookieAndRedirect.bind(null, sdk)\n  };\n  return session;\n}\n","import { StorageManagerConstructor } from '../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../base/types';\n\nimport { OktaAuthCoreInterface, OktaAuthCoreOptions } from './types';\nimport { createOktaAuthBase } from '../base';\nimport { mixinStorage } from '../storage/mixin';\nimport { mixinHttp } from '../http/mixin';\nimport { mixinOAuth } from '../oidc/mixin';\nimport {\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../oidc/types';\nimport { mixinCore } from './mixin';\nimport { mixinSession } from '../session/mixin';\n\nexport function createOktaAuthCore<\n  M extends PKCETransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n): OktaAuthConstructor<OktaAuthCoreInterface<M, S, O, TM>>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  const Core = mixinCore<M, S, O, TM>(WithOAuth);\n  return Core;\n}\n","\n\n// Do not use this type in code, so it won't be emitted in the declaration output\nimport { removeNils } from '../util';\n\nimport * as features from '../features';\nimport * as constants from '../constants';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport Emitter from 'tiny-emitter';\n\nimport {\n  EventEmitter,\n  OktaAuthConstructor,\n  OktaAuthBaseInterface,\n  OktaAuthBaseOptions,\n  OktaAuthOptionsConstructor, \n  FeaturesAPI,\n} from './types';\n\nexport function createOktaAuthBase\n<\n  O extends OktaAuthBaseOptions = OktaAuthBaseOptions,\n>\n(\n  OptionsConstructor: OktaAuthOptionsConstructor<O>\n): OktaAuthConstructor<OktaAuthBaseInterface<O>>\n{\n  class OktaAuthBase implements OktaAuthBaseInterface<O>\n  {\n    options: O;\n    emitter: EventEmitter;\n    features: FeaturesAPI;\n    static features: FeaturesAPI = features;\n    static constants = constants;\n    \n    constructor(...args: any[]) {\n      const options = new OptionsConstructor(args.length ? args[0] || {} : {});\n      this.options = removeNils(options) as O; // clear out undefined values\n      this.emitter = new Emitter();\n      this.features = features;\n    }\n  }\n\n  // Hoist feature detection functions to prototype & static type\n  OktaAuthBase.features = OktaAuthBase.prototype.features = features;\n\n  // Also hoist constants for CommonJS users\n  Object.assign(OktaAuthBase, {\n    constants\n  });\n\n  return OktaAuthBase;\n}\n","import { OktaAuthBaseInterface, OktaAuthConstructor } from '../base/types';\nimport {\n  OktaAuthStorageInterface,\n  OktaAuthStorageOptions,\n  StorageManagerConstructor,\n  StorageManagerInterface,\n} from './types';\n\nexport function mixinStorage\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthStorageOptions = OktaAuthStorageOptions,\n  TBase extends OktaAuthConstructor<OktaAuthBaseInterface<O>> = OktaAuthConstructor<OktaAuthBaseInterface<O>>\n>\n(\n  Base: TBase, StorageManager: StorageManagerConstructor<S>\n): TBase & OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n{\n  return class OktaAuthStorage extends Base implements OktaAuthStorageInterface<S, O>\n  {\n    storageManager: S;\n    constructor(...args: any[]) {\n      super(...args);\n      const { storageManager, cookies, storageUtil } = this.options;\n      this.storageManager = new StorageManager(storageManager!, cookies!, storageUtil!);\n    }\n    clearStorage(): void {\n      // override in subclass\n    }\n  };\n}\n","import { OktaAuthStorageInterface, StorageManagerInterface } from '../storage/types';\nimport { OktaAuthConstructor } from '../base/types';\nimport {\n  HttpAPI,\n  OktaAuthHttpInterface,\n  OktaAuthHttpOptions,\n} from './types';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { setRequestHeader } from './headers';\nimport { toQueryString } from '../util';\nimport { get } from './request';\n\nexport function mixinHttp\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n{\n  return class OktaAuthHttp extends Base implements OktaAuthHttpInterface<S, O>\n  {\n    _oktaUserAgent: OktaUserAgent;\n    http: HttpAPI;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this._oktaUserAgent = new OktaUserAgent();\n\n      // HTTP\n      this.http = {\n        setRequestHeader: setRequestHeader.bind(null, this)\n      };\n    }\n\n    setHeaders(headers) {\n      this.options.headers = Object.assign({}, this.options.headers, headers);\n    }\n  \n    getIssuerOrigin(): string {\n      // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.options.issuer!.split('/oauth2/')[0];\n    }\n  \n    webfinger(opts): Promise<object> {\n      var url = '/.well-known/webfinger' + toQueryString(opts);\n      var options = {\n        headers: {\n          'Accept': 'application/jrd+json'\n        }\n      };\n      return get(this, url, options);\n    }\n  };\n}\n","import { parseOAuthResponseFromUrl } from '../oidc/parseFromUrl';\nimport { OktaAuthConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  PKCETransactionMeta,\n  Tokens,\n  TransactionManagerInterface,\n} from '../oidc/types';\nimport { AuthStateManager } from './AuthStateManager';\nimport { ServiceManager } from './ServiceManager';\nimport { OktaAuthCoreInterface, OktaAuthCoreOptions } from './types';\nimport { AuthSdkError } from '../errors';\n\nexport function mixinCore\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthCoreInterface<M, S, O, TM>>\n{\n  return class OktaAuthCore extends Base implements OktaAuthCoreInterface<M, S, O, TM>\n  {\n    authStateManager: AuthStateManager<M, S, O>;\n    serviceManager: ServiceManager<M, S, O>;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      // AuthStateManager\n      this.authStateManager = new AuthStateManager<M, S, O>(this);\n\n      // ServiceManager\n      this.serviceManager = new ServiceManager<M, S, O>(this, this.options.services);\n    }\n\n    async start() {\n      await this.serviceManager.start();\n      // TODO: review tokenManager.start\n      this.tokenManager.start();\n      if (!this.token.isLoginRedirect()) {\n        await this.authStateManager.updateAuthState();\n      }\n    }\n  \n    async stop() {\n      // TODO: review tokenManager.stop\n      this.tokenManager.stop();\n      await this.serviceManager.stop();\n    }\n\n    async handleRedirect(originalUri?: string): Promise<void> {\n      await this.handleLoginRedirect(undefined, originalUri);\n    }\n\n    // eslint-disable-next-line complexity\n    async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n      let state = this.options.state;\n  \n      // Store tokens and update AuthState by the emitted events\n      if (tokens) {\n        this.tokenManager.setTokens(tokens);\n        originalUri = originalUri || this.getOriginalUri(this.options.state);\n      } else if (this.isLoginRedirect()) {\n        try {\n          // For redirect flow, get state from the URL and use it to retrieve the originalUri\n          const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n          state = oAuthResponse.state;\n          originalUri = originalUri || this.getOriginalUri(state);\n          await this.storeTokensFromRedirect();\n        } catch(e) {\n          // auth state should be updated\n          await this.authStateManager.updateAuthState();\n          throw e;\n        }\n      } else {\n        return; // nothing to do\n      }\n      \n      // ensure auth state has been updated\n      await this.authStateManager.updateAuthState();\n  \n      // clear originalUri from storage\n      this.removeOriginalUri(state);\n  \n      // Redirect to originalUri\n      const { restoreOriginalUri } = this.options;\n      if (restoreOriginalUri) {\n        await restoreOriginalUri(this, originalUri);\n      } else if (originalUri) {\n        window.location.replace(originalUri);\n      }\n    }\n\n    handleIDPPopupRedirect (url = window.location.href) {\n      const res = parseOAuthResponseFromUrl(this, { responseMode: 'query', url });\n      if (res.state) {\n        const channel = new BroadcastChannel(`popup-callback:${res.state}`);\n        channel.postMessage(res);\n        channel.close();\n      }\n      else {\n        throw new AuthSdkError('Unable to parse auth code params');\n      }\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { isFingerprintSupported } from '../features';\nimport {\n  addListener,\n  removeListener\n} from '../oidc';\nimport { FingerprintOptions } from '../base/types';\nimport { OktaAuthHttpInterface } from '../http/types';\n\nconst isMessageFromCorrectSource = (iframe: HTMLIFrameElement, event: MessageEvent)\n: boolean => event.source === iframe.contentWindow;\n\nexport default function fingerprint(sdk: OktaAuthHttpInterface, options?: FingerprintOptions): Promise<string> {\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  const container = options?.container ?? document.body;\n  let timeout: NodeJS.Timeout;\n  let iframe: HTMLIFrameElement;\n  let listener: (this: Window, ev: MessageEvent) => void;\n  const promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    // eslint-disable-next-line complexity\n    listener = function listener(e: MessageEvent) {\n      if (!isMessageFromCorrectSource(iframe, e)) {\n        return;\n      }\n\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      let msg;\n      try {\n        msg = JSON.parse(e.data);\n      } catch (err) {\n        // iframe messages should all be parsable\n        // skip not parsable messages come from other sources in same origin (browser extensions)\n        // TODO: add namespace flag in okta-core to distinguish messages that come from other sources\n        return;\n      }\n\n      if (!msg) { return; }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint as string);\n      } else if (msg.type === 'FingerprintServiceReady') {\n        iframe?.contentWindow?.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      } else {\n        return reject(new AuthSdkError('No data'));\n      }\n    };\n    addListener(window, 'message', listener);\n\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    container.appendChild(iframe);\n\n    timeout = setTimeout(function() {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options?.timeout || 15000);\n  });\n\n  return promise.finally(function() {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (container.contains(iframe)) {\n      iframe.parentElement?.removeChild(iframe);\n    }\n  }) as Promise<string>;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { base64UrlToBuffer, bufferToBase64Url } from '../crypto/base64';\nimport {\n  ActivationData,\n  ChallengeData,\n  IdxAuthenticator,\n} from './types';\n\n\n// Get known credentials from list of enrolled authenticators\nconst getEnrolledCredentials = (authenticatorEnrollments: IdxAuthenticator[] = []) => {\n  const credentials: PublicKeyCredentialDescriptor[] = [];\n  authenticatorEnrollments.forEach((enrollement) => {\n    if (enrollement.key === 'webauthn') {\n      credentials.push({\n        type: 'public-key',\n        id: base64UrlToBuffer(enrollement.credentialId),\n      });\n    }\n  });\n  return credentials;\n};\n\n// Build options for navigator.credentials.create\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create\nexport const buildCredentialCreationOptions = (\n  activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      rp: activationData.rp,\n      user: {\n        id: base64UrlToBuffer(activationData.user.id),\n        name: activationData.user.name,\n        displayName: activationData.user.displayName\n      },\n      challenge: base64UrlToBuffer(activationData.challenge),\n      pubKeyCredParams: activationData.pubKeyCredParams,\n      attestation: activationData.attestation,\n      authenticatorSelection: activationData.authenticatorSelection,\n      excludeCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialCreationOptions;\n};\n\n\n// Build options for navigator.credentials.get\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get\nexport const buildCredentialRequestOptions = (\n  challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      challenge: base64UrlToBuffer(challengeData.challenge),\n      userVerification: challengeData.userVerification,\n      allowCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialRequestOptions;\n};\n\n// Build attestation for webauthn enroll\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse\nexport const getAttestation = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAttestationResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const attestation = bufferToBase64Url(response.attestationObject);\n  return {\n    id,\n    clientData,\n    attestation\n  };\n};\n\n// Build assertion for webauthn verification\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse\nexport const getAssertion = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAssertionResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const authenticatorData = bufferToBase64Url(response.authenticatorData);\n  const signatureData = bufferToBase64Url(response.signature);\n  return {\n    id,\n    clientData,\n    authenticatorData,\n    signatureData\n  };\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable complexity */\nimport { StorageManagerOptions, StorageUtil, OktaAuthStorageOptions } from '../types';\nimport { warn } from '../../util';\n\nimport { default as browserStorage } from '../../browser/browserStorage';\n\nexport function getStorage(): StorageUtil {\n  const storageUtil = Object.assign({}, browserStorage, {\n    inMemoryStore: {} // create unique storage for this instance\n  });\n  return storageUtil;\n}\n\nexport const STORAGE_MANAGER_OPTIONS: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  cache: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'sessionStorage',\n      'localStorage',\n      'cookie'\n    ]\n  },\n  'shared-transaction': {\n    storageTypes: [\n      'localStorage'\n    ]\n  },\n  'original-uri': {\n    storageTypes: [\n      'localStorage'\n    ]\n  }\n};\n\nexport function getCookieSettings(args: OktaAuthStorageOptions = {}, isHTTPS: boolean) {\n  // Secure cookies will be automatically used on a HTTPS connection\n  // Non-secure cookies will be automatically used on a HTTP connection\n  // secure option can override the automatic behavior\n  var cookieSettings = args.cookies || {};\n  if (typeof cookieSettings.secure === 'undefined') {\n    cookieSettings.secure = isHTTPS;\n  }\n  if (typeof cookieSettings.sameSite === 'undefined') {\n    cookieSettings.sameSite = cookieSettings.secure ? 'none' : 'lax';\n  }\n\n  // If secure=true, but the connection is not HTTPS, set secure=false.\n  if (cookieSettings.secure && !isHTTPS) {\n    // eslint-disable-next-line no-console\n    warn(\n      'The current page is not being served with the HTTPS protocol.\\n' +\n      'For security reasons, we strongly recommend using HTTPS.\\n' +\n      'If you cannot use HTTPS, set \"cookies.secure\" option to false.'\n    );\n    cookieSettings.secure = false;\n  }\n\n  // Chrome >= 80 will block cookies with SameSite=None unless they are also Secure\n  // If sameSite=none, but the connection is not HTTPS, set sameSite=lax.\n  if (cookieSettings.sameSite === 'none' && !cookieSettings.secure) {\n    cookieSettings.sameSite = 'lax';\n  }\n\n  return cookieSettings;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createBaseOptionsConstructor } from '../../base';\nimport { CookieOptions, OktaAuthStorageOptions, StorageManagerOptions, StorageUtil } from '../types';\nimport { getStorage, STORAGE_MANAGER_OPTIONS, getCookieSettings } from './node';\nimport { isHTTPS } from '../../features';\n\nexport function createStorageOptionsConstructor() {\n\n  const BaseOptionsConstructor = createBaseOptionsConstructor();\n  return class StorageOptionsConstructor extends BaseOptionsConstructor implements Required<OktaAuthStorageOptions> {\n    cookies: CookieOptions;\n    storageUtil: StorageUtil;\n    storageManager: StorageManagerOptions;\n    \n    constructor(args: any) {\n      super(args);\n      this.cookies = getCookieSettings(args, isHTTPS())!;\n      this.storageUtil = args.storageUtil || getStorage();\n      this.storageManager = { ...STORAGE_MANAGER_OPTIONS, ...args.storageManager };\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthBaseOptions } from './types';\n\nexport function createBaseOptionsConstructor() {\n\n  return class BaseOptionsConstructor implements Required<OktaAuthBaseOptions> {\n    devMode: boolean;\n\n    constructor(args: any) {\n      this.devMode = !!args.devMode;\n    }\n  };\n\n}\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport crossFetch from 'cross-fetch';\nimport { FetchOptions, HttpResponse } from '../http/types';\n\n// content-type = application/json OR application/ion+json\nconst appJsonContentTypeRegex = /application\\/\\w*\\+?json/;\n\nfunction readData(response: Response): Promise<object | string> {\n  if (response.headers.get('Content-Type') &&\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    response.headers.get('Content-Type')!.toLowerCase().indexOf('application/json') >= 0) {\n  return response.json()\n    // JSON parse can fail if response is not a valid object\n    .catch(e => {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status: number, data: object | string, response: Response) {\n  const isObject = typeof data === 'object';\n  const headers = {};\n  for (const pair of (response.headers as any).entries()) {\n    headers[pair[0]] = pair[1];\n  }\n  const result: HttpResponse = {\n    responseText: isObject ? JSON.stringify(data) : data as string,\n    status: status,\n    headers\n  };\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data as object;\n  }\n  return result;\n}\n\n/* eslint-disable complexity */\nfunction fetchRequest(method: string, url: string, args: FetchOptions) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n\n  if (body && typeof body !== 'string') {\n    // JSON encode body (if appropriate)\n    if (appJsonContentTypeRegex.test(contentType)) {\n      body = JSON.stringify(body);\n    }\n    else if (contentType === 'application/x-www-form-urlencoded') {\n      body = Object.entries(body)\n      .map( ([param, value]) => `${param}=${encodeURIComponent(value)}` )\n      .join('&');\n    }\n  }\n\n  var fetch = global.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body as string,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function(response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response)\n      .then(data => {\n        return formatResult(status, data, response);\n      })\n      .then(result => {\n        if (error || result.responseJSON?.error) {\n          // Throwing result object since error handling is done in http.js\n          throw result;\n        }\n        return result;\n      });\n  });\n}\n\nexport default fetchRequest;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { DEFAULT_MAX_CLOCK_SKEW } from '../../constants';\nimport { removeTrailingSlash, toAbsoluteUrl } from '../../util/url';\nimport { isBrowser } from '../../features';\nimport { createHttpOptionsConstructor } from '../../http/options';\nimport {\n  OAuthResponseMode,\n  OAuthResponseType,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  SetLocationFunction,\n  TokenManagerOptions,\n  TransactionManagerOptions,\n  DPoPOptions\n} from '../types';\nimport { enableSharedStorage } from './node';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nfunction assertValidConfig(args) {\n  args = args || {};\n\n  var scopes = args.scopes;\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' +\n      'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var issuer = args.issuer!;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.okta') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\n\nexport function createOAuthOptionsConstructor() {\n  const HttpOptionsConstructor = createHttpOptionsConstructor();\n  return class OAuthOptionsConstructor\n    extends HttpOptionsConstructor\n    implements Required<OktaAuthOAuthOptions>\n  {\n    // CustomUrls\n    issuer: string;\n    authorizeUrl: string;\n    userinfoUrl: string;\n    tokenUrl: string;\n    revokeUrl: string;\n    logoutUrl: string;\n    \n    // TokenParams\n    pkce: boolean;\n    clientId: string;\n    redirectUri: string;\n    responseType: OAuthResponseType | OAuthResponseType[];\n    responseMode: OAuthResponseMode;\n    state: string;\n    scopes: string[];\n    ignoreSignature: boolean;\n    codeChallenge: string;\n    codeChallengeMethod: string;\n    acrValues: string;\n    maxAge: string | number;\n    dpop: boolean;\n    dpopOptions: DPoPOptions;\n\n    // Additional options\n    tokenManager: TokenManagerOptions;\n    postLogoutRedirectUri: string;\n    restoreOriginalUri: (oktaAuth: OktaAuthOAuthInterface, originalUri?: string) => Promise<void>;\n    transactionManager: TransactionManagerOptions;\n\n    // For server-side web applications ONLY!\n    clientSecret: string;\n    setLocation: SetLocationFunction;\n\n    // Workaround for bad client time/clock\n    ignoreLifetime: boolean;\n    maxClockSkew: number;\n\n\n    // eslint-disable-next-line max-statements\n    constructor(options: any) {\n      super(options);\n      \n      assertValidConfig(options);\n      \n      this.issuer = removeTrailingSlash(options.issuer);\n      this.tokenUrl = removeTrailingSlash(options.tokenUrl);\n      this.authorizeUrl = removeTrailingSlash(options.authorizeUrl);\n      this.userinfoUrl = removeTrailingSlash(options.userinfoUrl);\n      this.revokeUrl = removeTrailingSlash(options.revokeUrl);\n      this.logoutUrl = removeTrailingSlash(options.logoutUrl);\n\n      this.pkce = options.pkce === false ? false : true; // PKCE defaults to true\n      this.clientId = options.clientId;\n      this.redirectUri = options.redirectUri;\n      if (isBrowser()) {\n        this.redirectUri = toAbsoluteUrl(options.redirectUri, window.location.origin); // allow relative URIs\n      }\n      this.responseType = options.responseType;\n      this.responseMode = options.responseMode;\n      this.state = options.state;\n      this.scopes = options.scopes;\n      // Give the developer the ability to disable token signature validation.\n      this.ignoreSignature = !!options.ignoreSignature;\n      this.codeChallenge = options.codeChallenge;\n      this.codeChallengeMethod = options.codeChallengeMethod;\n      this.acrValues = options.acrValues;\n      this.maxAge = options.maxAge;\n      this.dpop = options.dpop === true; // dpop defaults to false\n      this.dpopOptions = {\n        allowBearerTokens: false,\n        ...options.dpopOptions,\n      };\n\n      this.tokenManager = options.tokenManager;\n      this.postLogoutRedirectUri = options.postLogoutRedirectUri;\n      this.restoreOriginalUri = options.restoreOriginalUri;\n      this.transactionManager = { enableSharedStorage, ...options.transactionManager };\n      \n      this.clientSecret = options.clientSecret;\n      this.setLocation = options.setLocation;\n      \n      // As some end user's devices can have their date \n      // and time incorrectly set, allow for the disabling\n      // of the jwt liftetime validation\n      this.ignoreLifetime = !!options.ignoreLifetime;\n\n      // Digital clocks will drift over time, so the server\n      // can misalign with the time reported by the browser.\n      // The maxClockSkew allows relaxing the time-based\n      // validation of tokens (in seconds, not milliseconds).\n      // It currently defaults to 300, because 5 min is the\n      // default maximum tolerance allowed by Kerberos.\n      // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n      if (!options.maxClockSkew && options.maxClockSkew !== 0) {\n        this.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n      } else {\n        this.maxClockSkew = options.maxClockSkew;\n      }\n\n    }\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createStorageOptionsConstructor } from '../storage';\nimport { HttpRequestClient, OktaAuthHttpOptions, RequestOptions } from './types';\nimport fetchRequest from '../fetch/fetchRequest';\n\nexport function createHttpOptionsConstructor() {\n  const StorageOptionsConstructor = createStorageOptionsConstructor();\n  return class HttpOptionsConstructor extends StorageOptionsConstructor implements Required<OktaAuthHttpOptions> {\n    issuer: string;\n    transformErrorXHR: (xhr: object) => any;\n    headers: object;\n    httpRequestClient: HttpRequestClient;\n    httpRequestInterceptors: ((request: RequestOptions) => void)[];\n    pollDelay: number;\n    \n    constructor(args: any) {\n      super(args);\n      this.issuer = args.issuer;\n      this.transformErrorXHR = args.transformErrorXHR;\n      this.headers = args.headers;\n      this.httpRequestClient = args.httpRequestClient || fetchRequest;\n      this.httpRequestInterceptors = args.httpRequestInterceptors;\n      this.pollDelay = args.pollDelay;\n    }\n  };\n}\n","export const enableSharedStorage = true;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { StorageProvider, SimpleStorage } from './types';\n\n// formerly known as \"storageBuilder\". Represents an object saved under a key/name.\nexport class SavedObject implements StorageProvider {\n  storageProvider: SimpleStorage;\n  storageName: string;\n\n  constructor(storage: SimpleStorage, storageName: string) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  //\n  // SimpleStorage interface\n  //\n\n  getItem(key: string) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key: string, value: any) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key: string) {\n    return this.clearStorage(key);\n  }\n\n  //\n  // StorageProvider interface\n  //\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj?: any) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key?: string) {\n    if (!key) {\n      // clear all\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  TOKEN_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n} from '../constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  CookieOptions,\n  StorageManagerOptions,\n  SimpleStorage,\n  StorageManagerInterface\n} from './types';\nimport { SavedObject } from './SavedObject';\nimport { isBrowser } from '../features';\nimport { warn } from '../util';\n\nexport function logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageKey) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\n\nexport class BaseStorageManager implements StorageManagerInterface {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  // eslint-disable-next-line complexity\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // If both storageType and storageTypes are specified, then storageType will be used first\n    // If storageType cannot be used but it matches an entry in storageTypes, subsequent entries may be used as fallback\n    // if storageType does not match an entry in storageTypes then storageType is used with no fallback.\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n\n    if (!storageType) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      storageType = this.storageUtil.findStorageType(storageTypes!);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n}\n","import { createOAuthStorageManager } from '../oidc/storage';\nimport { PKCETransactionMeta } from '../oidc/types';\n\nexport function createCoreStorageManager<M extends PKCETransactionMeta = PKCETransactionMeta>() {\n  return createOAuthStorageManager<M>();\n}\n","import {\n  CookieOptions,\n  StorageManagerOptions,\n  StorageOptions,\n  StorageUtil\n} from '../storage/types';\nimport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../storage/BaseStorageManager';\nimport { TransactionStorage, OAuthTransactionMeta, OAuthStorageManagerInterface, PKCETransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { ORIGINAL_URI_STORAGE_NAME, SHARED_TRANSACTION_STORAGE_NAME, TRANSACTION_STORAGE_NAME } from '../constants';\n\n\nexport function createOAuthStorageManager<M extends OAuthTransactionMeta = PKCETransactionMeta>()\n{\n  return class OAuthStorageManager\n    extends BaseStorageManager\n    implements OAuthStorageManagerInterface<M>\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    getTransactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getSharedTansactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('shared-transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getOriginalUriStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('original-uri', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  };\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxTransactionMeta } from '../../idx/types/meta';\nimport { OAuthTransactionMeta, PKCETransactionMeta } from './meta';\nimport { OAuthStorageManagerInterface } from './storage';\n\nexport interface TransactionManagerOptions\n{\n  storageManager?: OAuthStorageManagerInterface;\n  enableSharedStorage?: boolean; // default true\n  saveNonceCookie?: boolean; // default true\n  saveStateCookie?: boolean; // default true\n  saveParamsCookie?: boolean; // default true\n  saveLastResponse?: boolean; // default true\n}\n\n\nexport type CustomAuthTransactionMeta = Record<string, string | undefined>;\n\nexport type TransactionMeta =\n  IdxTransactionMeta |\n  PKCETransactionMeta |\n  OAuthTransactionMeta |\n  CustomAuthTransactionMeta;\n\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isOAuthTransactionMeta(obj: any): obj is OAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nexport function isPKCETransactionMeta(obj: any): obj is PKCETransactionMeta {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).codeVerifier;\n}\n\nexport function isIdxTransactionMeta(obj: any): obj is IdxTransactionMeta {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).interactionHandle;\n}\n\nexport function isCustomAuthTransactionMeta(obj: any): obj is CustomAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  const isAllStringValues = Object.values(obj).find((value) => (typeof value !== 'string')) === undefined;\n  return isAllStringValues;\n}\n\nexport function isTransactionMeta(obj: any): obj is TransactionMeta {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { StorageProvider } from '../storage/types';\nimport {\n  TransactionMeta,\n  isTransactionMeta,\n  TransactionMetaOptions,\n  TransactionManagerOptions,\n  OAuthTransactionMeta,\n  OAuthStorageManagerInterface,\n  ClearTransactionMetaOptions,\n  TransactionManagerInterface,\n  PKCETransactionMeta\n} from './types';\nimport { warn } from '../util';\nimport {\n  clearTransactionFromSharedStorage,\n  loadTransactionFromSharedStorage,\n  pruneSharedStorage,\n  saveTransactionToSharedStorage\n} from './util/sharedStorage';\n\n\nexport function createTransactionManager\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>\n>\n()\n{\n  return class TransactionManager implements TransactionManagerInterface\n  {\n    options: TransactionManagerOptions;\n    storageManager: S;\n    enableSharedStorage: boolean;\n    saveLastResponse: boolean;\n\n    constructor(options: TransactionManagerOptions) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.storageManager = options.storageManager! as S;\n      this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n      this.saveLastResponse = options.saveLastResponse === false ? false : true;\n      this.options = options;\n    }\n\n    // eslint-disable-next-line complexity\n    clear(options: ClearTransactionMetaOptions = {}) {\n      const transactionStorage: StorageProvider = this.storageManager.getTransactionStorage();\n      const meta = transactionStorage.getStorage();\n\n      // Clear primary storage (by default, sessionStorage on browser)\n      transactionStorage.clearStorage();\n\n      // Usually we want to also clear shared storage unless another tab may need it to continue/complete a flow\n      if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n        const state = options.state || meta?.state;\n        if (state) {\n          clearTransactionFromSharedStorage(this.storageManager, state);\n        }\n      }\n    }\n\n    // eslint-disable-next-line complexity\n    save(meta: M, options: TransactionMetaOptions = {}) {\n      // There must be only one transaction executing at a time.\n      // Before saving, check to see if a transaction is already stored.\n      // An existing transaction indicates a concurrency/race/overlap condition\n\n      let storage: StorageProvider = this.storageManager.getTransactionStorage();\n      const obj = storage.getStorage();\n      // oie process may need to update transaction in the middle of process for tracking purpose\n      // false alarm might be caused \n      // TODO: revisit for a better solution, https://oktainc.atlassian.net/browse/OKTA-430919\n      if (isTransactionMeta(obj) && !options.muteWarning) {\n        // eslint-disable-next-line max-len\n        warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n      }\n\n      storage.setStorage(meta);\n\n      // Shared storage allows continuation of transaction in another tab\n      if (this.enableSharedStorage && meta.state) {\n        saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n      }\n    }\n\n    exists(options: TransactionMetaOptions = {}): boolean {\n      try {\n        const meta = this.load(options);\n        return !!meta;\n      } catch {\n        return false;\n      }\n    }\n\n    // load transaction meta from storage\n    // eslint-disable-next-line complexity,max-statements\n    load(options: TransactionMetaOptions = {}): TransactionMeta | null {\n\n      let meta: TransactionMeta;\n\n      // If state was passed, try loading transaction data from shared storage\n      if (this.enableSharedStorage && options.state) {\n        pruneSharedStorage(this.storageManager); // prune before load\n        meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n        if (isTransactionMeta(meta)) {\n          return meta;\n        }\n      }\n\n      let storage: StorageProvider = this.storageManager.getTransactionStorage();\n      meta = storage.getStorage();\n      if (isTransactionMeta(meta)) {\n        // if we have meta in the new location, there is no need to go further\n        return meta;\n      }\n\n      return null;\n    }\n\n  };\n}\n","import { OAuthStorageManagerInterface, OAuthTransactionMeta, isTransactionMeta } from '../types';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000; // 30 minutes\n\nexport function pruneSharedStorage<M extends OAuthTransactionMeta>(storageManager: OAuthStorageManagerInterface<M>) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nexport function saveTransactionToSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string, meta: M\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\n\nexport function loadTransactionFromSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\n\nexport function clearTransactionFromSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n","import { OktaAuthHttpInterface } from '../../http/types';\nimport { AccessToken } from '../../oidc/types';\n\nexport type TransactionLink = {\n  href: string;\n  hints?: {\n    allow?: string[];\n  };\n}\n\nexport type TransactionLinks = {\n  self: TransactionLink;\n  [property: string]: TransactionLink;\n}\n\ntype TransactionOptions = {\n  // TODO: move res type to http module\n  res: {\n    headers: Record<string, string>;\n    _links?: Record<string, TransactionLink>;\n    [property: string]: unknown;\n  };\n  accessToken: string | AccessToken;\n};\n\nexport default class BaseTransaction {\n  // Deprecated\n  headers?: Record<string, string>;\n\n  constructor(oktaAuth: OktaAuthHttpInterface, options: TransactionOptions) {\n    const { res } = options;\n    const { headers, ...rest } = res;\n    \n    // assign required fields from res\n    if (headers) {\n      this.headers = headers;\n    }\n\n    // add all rest fields from res\n    Object.keys(rest).forEach(key => {\n      if (key === '_links') {\n        return;\n      }\n      this[key] = rest[key];\n    });\n  }\n}\n\nexport interface TransactionType<T extends BaseTransaction = BaseTransaction> extends Function {\n  new (oktaAuth: OktaAuthHttpInterface, options: TransactionOptions): T;\n  prototype: T;\n}\n","import { \n  default as BaseTransaction,\n  TransactionType,\n  TransactionLinks\n} from './transactions/Base';\nimport { httpRequest } from '../http';\nimport { AuthSdkError } from '../errors';\nimport { MyAccountRequestOptions as RequestOptions } from './types';\nimport { RequestOptions as HttpRequestOptions } from '../http/types';\nimport { AccessToken, OktaAuthOAuthInterface } from '../oidc/types';\n\ntype SendRequestOptions = RequestOptions & {\n  url: string;\n  method: string;\n}\n\n/* eslint-disable complexity */\nexport async function sendRequest<\n  T extends BaseTransaction = BaseTransaction,\n  N extends 'plural' | 'single' = 'single',\n  NT = N extends 'plural' ? T[] : T\n> (\n  oktaAuth: OktaAuthOAuthInterface, \n  options: SendRequestOptions,\n  TransactionClass: TransactionType<T> = BaseTransaction as TransactionType<T>,\n): Promise<NT> {\n  const {\n    accessToken: accessTokenObj\n  } = oktaAuth.tokenManager.getTokensSync();\n\n  const atToken = options.accessToken || accessTokenObj;\n  const issuer = oktaAuth.getIssuerOrigin();\n  const { url, method, payload } = options;\n  const requestUrl = url.startsWith(issuer!) ? url : `${issuer}${url}`;\n\n  if (!atToken) {\n    throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n  }\n\n  let accessToken: string | AccessToken = atToken;\n\n  const httpOptions: HttpRequestOptions = {\n    headers: { 'Accept': '*/*;okta-version=1.0.0' },\n    url: requestUrl,\n    method,\n    ...(payload && { args: payload })\n  };\n\n  if (oktaAuth.options.dpop) {\n    if (typeof accessToken === 'string') {\n      throw new AuthSdkError('AccessToken object must be provided when using dpop');\n    }\n\n    const { Authorization, Dpop } = await oktaAuth.getDPoPAuthorizationHeaders({\n      method,\n      url: requestUrl,\n      accessToken\n    });\n    httpOptions.headers!.Authorization = Authorization;\n    httpOptions.headers!.Dpop = Dpop;\n  }\n  else {\n    accessToken = typeof accessToken === 'string' ? accessToken : accessToken.accessToken;\n    httpOptions.accessToken = accessToken;\n  }\n\n  const res = await httpRequest(oktaAuth, httpOptions);\n\n  let ret: T | T[];\n  if (Array.isArray(res)) {\n    ret = res.map(item => new TransactionClass(oktaAuth, { \n      res: item, \n      accessToken\n    }));\n  } else {\n    ret = new TransactionClass(oktaAuth, { \n      res, \n      accessToken\n    });\n  }\n  return ret as NT;\n}\n/* eslint-enable complexity */\n\nexport type GenerateRequestFnFromLinksOptions = {\n  oktaAuth: OktaAuthOAuthInterface;\n  accessToken: string | AccessToken;\n  methodName: string;\n  links: TransactionLinks;\n}\n\ntype IRequestFnFromLinks<T extends BaseTransaction> = (payload?) => Promise<T>;\n\nexport function generateRequestFnFromLinks<T extends BaseTransaction>(\n  {\n    oktaAuth, \n    accessToken,\n    methodName,\n    links,\n  }: GenerateRequestFnFromLinksOptions,\n  TransactionClass: TransactionType<T> = BaseTransaction as TransactionType<T>,\n): IRequestFnFromLinks<T> {\n  for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n    if (method.toLowerCase() === methodName) {\n      const link = links.self;\n      return (async (payload?) => sendRequest<T, 'single'>(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method,\n        payload,\n      }, TransactionClass));\n    }\n  }\n  \n  const link = links[methodName];\n  if (!link) {\n    throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n  }\n\n  return (async (payload?) => sendRequest<T, 'single'>(oktaAuth, {\n    accessToken,\n    url: link.href,\n    method: link.hints!.allow![0],\n    payload,\n  }, TransactionClass));\n}\n","import BaseTransaction from './Base';\n\nexport default class ProfileTransaction extends BaseTransaction {\n  createdAt: string;\n  modifiedAt: string;\n  profile: Record<string, string>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { createdAt, modifiedAt, profile } = options.res;\n    this.createdAt = createdAt;\n    this.modifiedAt = modifiedAt;\n    this.profile = profile;\n  }\n}\n","import BaseTransaction from './Base';\n\nexport default class ProfileSchemaTransaction extends BaseTransaction {\n  properties: Record<string, object>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    this.properties = options.res.properties;\n  }\n}\n","import {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta,\n  AccessToken\n} from '../oidc/types';\n\nexport type { \n  EmailTransaction, \n  EmailStatusTransaction,\n  EmailChallengeTransaction,\n  PhoneTransaction,\n  ProfileTransaction,\n  ProfileSchemaTransaction,\n  PasswordTransaction,\n  BaseTransaction\n} from './transactions';\n\nexport enum EmailRole {\n  PRIMARY = 'PRIMARY',\n  SECONDARY = 'SECONDARY'\n}\n\nexport enum Status {\n  VERIFIED = 'VERIFIED',\n  UNVERIFIED = 'UNVERIFIED'\n}\n\nexport enum PasswordStatus {\n  NOT_ENROLLED = 'NOT_ENROLLED',\n  ACTIVE = 'ACTIVE'\n}\n\nexport type EmailProfile = {\n  email: string;\n}\n\nexport type AddEmailPayload = {\n  profile: {\n    email: string;\n  };\n  sendEmail: boolean;\n  role: EmailRole;\n}\n\nexport type PhoneProfile = {\n  profile: {\n    phoneNumber: string;\n  };\n}\n\nexport type AddPhonePayload = {\n  profile: {\n    phoneNumber: string;\n  };\n  sendCode: boolean;\n  method: string;\n};\n\nexport type ChallengePhonePayload = {\n  method: string;\n}\n\nexport type VerificationPayload = {\n  verificationCode: string;\n};\n\nexport type EnrollPasswordPayload = {\n  profile: {\n    password: string;\n  }\n}\n\nexport type UpdatePasswordPayload = {\n  profile: {\n    password: string;\n    currentPassword?: string;\n  }\n}\n\nexport type UpdateProfilePayload = {\n  profile: {\n    firstName?: string;\n    lastName?: string;\n    email?: string;\n    login?: string;\n    [property: string]: any;\n  };\n};\n\nexport type MyAccountRequestOptions = {\n  id?: string;\n  emailId?: string;\n  challengeId?: string;\n  payload?: AddEmailPayload \n    | AddPhonePayload \n    | ChallengePhonePayload\n    | VerificationPayload \n    | UpdateProfilePayload\n    | EnrollPasswordPayload\n    | UpdatePasswordPayload;\n  accessToken?: string | AccessToken;\n}\n\nexport type IAPIFunction<T> = (\n  oktaAuth: OktaAuthOAuthInterface, \n  options?: MyAccountRequestOptions\n) => Promise<T>;\n\nexport interface OktaAuthMyAccountInterface\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions\n> \n  extends OktaAuthOAuthInterface<M, S, O>\n{\n  myaccount;\n}\n","import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  ProfileTransaction,\n  ProfileSchemaTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.profile.read\n */\nexport const getProfile: IAPIFunction<ProfileTransaction> = async (oktaAuth, options?) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, ProfileTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.profile.manage\n */\nexport const updateProfile: IAPIFunction<ProfileTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'PUT',\n    payload,\n    accessToken,\n  }, ProfileTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.profile.read\n */\nexport const getProfileSchema: IAPIFunction<ProfileSchemaTransaction> = async (\n  oktaAuth, \n  options?\n): Promise<ProfileSchemaTransaction> => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile/schema',\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, ProfileSchemaTransaction);\n  return transaction;\n};\n","import { EmailProfile, Status } from '../types';\nimport BaseTransaction from './Base';\n\nexport default class EmailStatusTransaction extends BaseTransaction {\n  id: string;\n  expiresAt: string;\n  profile: EmailProfile;\n  status: Status;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res } = options;\n    // assign required fields from res\n    const { id, profile, expiresAt, status } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n  }\n}\n","import EmailStatusTransaction from './EmailStatusTransaction';\nimport { \n  EmailProfile, \n  Status,\n  VerificationPayload, \n} from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class EmailChallengeTransaction extends BaseTransaction {\n  id: string;\n  expiresAt: string;\n  profile: EmailProfile;\n  status: Status;\n\n  poll: () => Promise<EmailStatusTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  verify: (payload: VerificationPayload) => Promise<EmailChallengeTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { accessToken, res } = options;\n    // assign required fields from res\n    const { id, expiresAt, profile, status, _links } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.poll = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'poll', \n        links: _links,\n      }, EmailStatusTransaction);\n      return await fn();\n    };\n    this.verify = async (payload) => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'verify', \n        links: _links,\n      }, EmailChallengeTransaction);\n      return await fn(payload);\n    };\n  }\n}\n","import EmailChallengeTransaction from './EmailChallengeTransaction';\nimport EmailStatusTransaction from './EmailStatusTransaction';\nimport { EmailProfile, EmailRole, Status, VerificationPayload } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class EmailTransaction extends BaseTransaction {\n  id: string;\n  profile: EmailProfile;\n  roles: EmailRole[];\n  status: Status;\n\n  // eslint-disable-next-line no-use-before-define\n  get: () => Promise<EmailTransaction>;\n  delete: () => Promise<BaseTransaction>;\n  challenge: () => Promise<EmailChallengeTransaction>;\n  poll?: () => Promise<EmailStatusTransaction>;\n  verify?: (payload: VerificationPayload) => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { accessToken, res } = options;\n    // assign required fields from res\n    const { id, profile, roles, status, _links } = res;\n    this.id = id;\n    this.profile = profile;\n    this.roles = roles;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.get = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'get', \n        links: _links,\n      }, EmailTransaction);\n      return await fn();\n    };\n    this.delete = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'delete', \n        links: _links \n      });\n      return await fn();\n    };\n    this.challenge = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'challenge', \n        links: _links,\n      }, EmailChallengeTransaction);\n      return await fn();\n    };\n    if (_links.poll) {\n      this.poll = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'poll', \n          links: _links,\n        }, EmailStatusTransaction);\n        return await fn();\n      };\n    }\n    if (_links.verify) {\n      this.verify = async (payload: VerificationPayload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'verify', \n          links: _links,\n        });\n        return await fn(payload);\n      };\n    }\n  }\n}\n","import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  EmailTransaction, \n  EmailChallengeTransaction \n} from './transactions';\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const getEmails: IAPIFunction<EmailTransaction[]> = async (\n  oktaAuth,\n  options?\n) => {\n  const transaction = await sendRequest<EmailTransaction, 'plural'>(oktaAuth, {\n    url: '/idp/myaccount/emails',\n    method: 'GET',\n    accessToken: options?.accessToken\n  }, EmailTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const getEmail: IAPIFunction<EmailTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${id}`,\n    method: 'GET',\n    accessToken,\n  }, EmailTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.manage\n */\nexport const addEmail: IAPIFunction<EmailTransaction> = async (\n  oktaAuth, \n  options\n): Promise<EmailTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/emails',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, EmailTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.manage\n */\nexport const deleteEmail: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${id}`,\n    method: 'DELETE',\n    accessToken\n  });\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const sendEmailChallenge: IAPIFunction<EmailChallengeTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${id}/challenge`,\n    method: 'POST',\n    accessToken,\n  }, EmailChallengeTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const getEmailChallenge: IAPIFunction<EmailChallengeTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { emailId, challengeId, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${emailId}/challenge/${challengeId}`,\n    method: 'POST',\n    accessToken,\n  }, EmailChallengeTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.manage\n */\nexport const verifyEmailChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { emailId, challengeId, payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${emailId}/challenge/${challengeId}/verify`,\n    method: 'POST',\n    payload,\n    accessToken\n  });\n  return transaction;\n};\n","import { ChallengePhonePayload, PhoneProfile, Status, VerificationPayload } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class PhoneTransaction extends BaseTransaction {\n  id: string;\n  profile: PhoneProfile;\n  status: Status;\n\n  // eslint-disable-next-line no-use-before-define\n  get: () => Promise<PhoneTransaction>;\n  delete: () => Promise<BaseTransaction>;\n  challenge: (payload: ChallengePhonePayload) => Promise<BaseTransaction>;\n  verify?: (payload: VerificationPayload) => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res, accessToken } = options;\n    // assign required fields from res\n    const { id, profile, status, _links } = res;\n    this.id = id;\n    this.profile = profile;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.get = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'get', \n        links: _links,\n      }, PhoneTransaction);\n      return await fn();\n    };\n    this.delete = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'delete', \n        links: _links \n      });\n      return await fn();\n    };\n    this.challenge = async (payload) => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'challenge', \n        links: _links \n      });\n      return await fn(payload);\n    };\n    if (_links.verify) {\n      this.verify = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'verify', \n          links: _links \n        });\n        return await fn(payload);\n      } ;\n    }\n  }\n}\n","import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  PhoneTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.phone.read\n */\nexport const getPhones: IAPIFunction<PhoneTransaction[]> = async (\n  oktaAuth,\n  options?\n) => {\n  const transaction = await sendRequest<PhoneTransaction, 'plural'>(oktaAuth, {\n    url: '/idp/myaccount/phones',\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, PhoneTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.read\n */\nexport const getPhone: IAPIFunction<PhoneTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { accessToken, id } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}`,\n    method: 'GET',\n    accessToken,\n  }, PhoneTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const addPhone: IAPIFunction<PhoneTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PhoneTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/phones',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, PhoneTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const deletePhone: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}`,\n    method: 'DELETE',\n    accessToken,\n  });\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const sendPhoneChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { accessToken, id, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}/challenge`,\n    method: 'POST',\n    payload,\n    accessToken\n  });\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const verifyPhoneChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { id, payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}/verify`,\n    method: 'POST',\n    payload,\n    accessToken\n  });\n  return transaction;\n};\n","import { EnrollPasswordPayload, UpdatePasswordPayload, PasswordStatus } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class PasswordTransaction extends BaseTransaction {\n  id: string;\n  created: string;\n  lastUpdated: string;\n  status: PasswordStatus;\n\n  // eslint-disable-next-line no-use-before-define\n  get?: () => Promise<PasswordTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  enroll?: (payload: EnrollPasswordPayload) => Promise<PasswordTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  update?: (payload: UpdatePasswordPayload) => Promise<PasswordTransaction>;\n  delete?: () => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res, accessToken } = options;\n    // assign required fields from res\n    const { id, status, created, lastUpdated, _links } = res;\n    this.id = id;\n    this.status = status;\n    this.created = created;\n    this.lastUpdated = lastUpdated;\n\n    // assign transformed fns to transaction\n    if (this.status == PasswordStatus.NOT_ENROLLED) {\n      this.enroll = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'enroll',\n          links: _links,\n        }, PasswordTransaction);\n        return await fn(payload);\n      };\n    }\n    else {\n      this.get = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'get',\n          links: _links,\n        }, PasswordTransaction);\n        return await fn();\n      };\n\n      this.update = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'put', \n          links: _links,\n        }, PasswordTransaction);\n        return await fn(payload);\n      };\n  \n      this.delete = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'delete', \n          links: _links \n        });\n        return await fn();\n      };\n    }\n  }\n}\n","import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  PasswordTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.password.read\n */\nexport const getPassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/password`,\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const enrollPassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PasswordTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/password',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const updatePassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PasswordTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/password',\n    method: 'PUT',\n    payload,\n    accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const deletePassword: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options?\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/password`,\n    method: 'DELETE',\n    accessToken: options?.accessToken,\n  });\n  return transaction;\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n\nimport { AuthnTransactionState } from '../types';\n\nexport function addStateToken(res, options?) {\n  var builtArgs = {} as AuthnTransactionState;\n  Object.assign(builtArgs, options);\n\n  // Add the stateToken if one isn't passed and we have one\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n\n  return builtArgs;\n}\n\nexport function getStateToken(res) {\n  return addStateToken(res);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity, max-statements */\nimport { post } from '../http';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { STATE_TOKEN_KEY_NAME } from '../constants';\nimport { OktaAuthHttpInterface } from '../http/types';\nimport { OktaAuthStorageOptions } from '../storage/types';\nimport { addStateToken } from './util/stateToken';\nimport { AuthnTransactionAPI } from './types';\nimport { OktaAuthBaseInterface } from '../base/types';\n\nexport function transactionStatus(sdk: OktaAuthHttpInterface, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn', args, { withCredentials: true });\n}\n\nexport function resumeTransaction(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = getSavedStateToken(sdk);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to resume'));\n    }\n  }\n  return transactionStatus(sdk, args)\n    .then(function(res) {\n      return tx.createTransaction(res);\n    });\n}\n\nexport function introspectAuthn (sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = getSavedStateToken(sdk);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to evaluate'));\n    }\n  }\n  return transactionStep(sdk, args)\n    .then(function (res) {\n      return tx.createTransaction(res);\n    });\n}\n\nexport function transactionStep(sdk: OktaAuthHttpInterface, args) {\n  args = addStateToken(sdk, args);\n  // v1 pipeline introspect API\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn/introspect', args, { withCredentials: true });\n}\n\nexport function transactionExists(sdk: OktaAuthBaseInterface<OktaAuthStorageOptions>) {\n  // We have a cookie state token\n  return !!getSavedStateToken(sdk);\n}\n\nexport function postToTransaction(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, url: string, args, options?) {\n  options = Object.assign({ withCredentials: true }, options);\n  return post(sdk, url, args, options)\n    .then(function(res) {\n      return tx.createTransaction(res);\n    });\n}\n\nexport function getSavedStateToken(sdk: OktaAuthBaseInterface<OktaAuthStorageOptions>) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const storage = sdk.options.storageUtil!.storage;\n    return storage.get(STATE_TOKEN_KEY_NAME);\n}\n","import { OktaAuthHttpInterface } from '../../http/types';\nimport { find, omit, toQueryString } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { get } from '../../http';\nimport { AuthnTransactionAPI, AuthnTransactionState } from '../types';\nimport { postToTransaction } from '../api';\nimport { addStateToken } from './stateToken';\n\n\n// query parameters to post url\ninterface PostToTransactionParams {\n  autoPush?: boolean;\n  rememberDevice?: boolean;\n  updatePhone?: boolean;\n}\n\n// eslint-disable-next-line max-params\nexport function link2fn(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, link, ref) {\n  if (Array.isArray(link)) {\n    return function(name, opts?) {\n      if (!name) {\n        throw new AuthSdkError('Must provide a link name');\n      }\n\n      var lk = find(link, {name: name});\n      if (!lk) {\n        throw new AuthSdkError('No link found for that name');\n      }\n\n      return link2fn(sdk, tx, res, obj, lk, ref)(opts);\n    };\n\n  } else if (link.hints &&\n      link.hints.allow &&\n      link.hints.allow.length === 1) {\n    var method = link.hints.allow[0];\n    switch (method) {\n\n      case 'GET':\n        return function() {\n          return get(sdk, link.href, { withCredentials: true });\n        };\n\n      case 'POST':\n        // eslint-disable-next-line max-statements,complexity\n        return function(opts: AuthnTransactionState) {\n          if (ref && ref.isPolling) {\n            ref.isPolling = false;\n          }\n\n          var data = addStateToken(res, opts);\n\n          if (res.status === 'MFA_ENROLL' || res.status === 'FACTOR_ENROLL') {\n            // Add factorType and provider\n            Object.assign(data, {\n              factorType: obj.factorType,\n              provider: obj.provider\n            });\n          }\n\n          var params = {} as PostToTransactionParams;\n          var autoPush = data.autoPush;\n          if (autoPush !== undefined) {\n            if (typeof autoPush === 'function') {\n              try {\n                params.autoPush = !!autoPush();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n              }\n            }\n            else if (autoPush !== null) {\n              params.autoPush = !!autoPush;\n            }\n            data = omit(data, 'autoPush');\n          }\n\n          var rememberDevice = data.rememberDevice;\n          if (rememberDevice !== undefined) {\n            if (typeof rememberDevice === 'function') {\n              try {\n                params.rememberDevice = !!rememberDevice();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n              }\n            }\n            else if (rememberDevice !== null) {\n              params.rememberDevice = !!rememberDevice;\n            }\n            data = omit(data, 'rememberDevice');\n\n          } else if (data.profile &&\n                    data.profile.updatePhone !== undefined) {\n            if (data.profile.updatePhone) {\n              params.updatePhone = true;\n            }\n            data.profile = omit(data.profile, 'updatePhone');\n          }\n          var href = link.href + toQueryString(params);\n          return postToTransaction(sdk, tx, href, data);\n        };\n    }\n  }\n}\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class AuthPollStopError extends CustomError {\n  constructor() {\n    const message = 'The poll was stopped by the sdk';\n    super(message);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { post } from '../../http';\nimport { isNumber, isObject, getLink, toQueryString, delay as delayFn } from '../../util';\nimport { DEFAULT_POLLING_DELAY } from '../../constants';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport AuthPollStopError from '../../errors/AuthPollStopError';\nimport { AuthnTransactionState } from '../types';\nimport { getStateToken } from './stateToken';\n\ninterface PollOptions {\n  delay?: number;\n  rememberDevice?: boolean;\n  autoPush?: boolean;\n  transactionCallBack?: (AuthnTransactionState) => void;\n}\n\nexport function getPollFn(sdk, res: AuthnTransactionState, ref) {\n  return function (options: PollOptions | number) {\n    var delay;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay = options;\n    } else if (isObject(options)) {\n      options = options as PollOptions;\n      delay = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay && delay !== 0) {\n      delay = DEFAULT_POLLING_DELAY;\n    }\n\n    // Get the poll function\n    var pollLink = getLink(res, 'next', 'poll');\n    // eslint-disable-next-line complexity\n    function pollFn() {\n      var opts = {} as PollOptions;\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      }\n      else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      }\n      else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true,\n        pollingIntent: true,\n      });\n    }\n\n    ref.isPolling = true;\n\n    var retryCount = 0;\n    var recursivePoll = function () {\n      // If the poll was manually stopped during the delay\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n\n      return pollFn()\n        .then(function (pollRes) {\n          // Reset our retry counter on success\n          retryCount = 0;\n\n          // If we're still waiting\n          if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n\n            // If the poll was manually stopped while the pollFn was called\n            if (!ref.isPolling) {\n              throw new AuthPollStopError();\n            }\n\n            if (typeof transactionCallBack === 'function') {\n              transactionCallBack(pollRes);\n            }\n\n            // Continue poll\n            return delayFn(delay).then(recursivePoll);\n\n          } else {\n            // Any non-waiting result, even if polling was stopped\n            // during a request, will return\n            ref.isPolling = false;\n            return sdk.tx.createTransaction(pollRes);\n          }\n        })\n        .catch(function(err) {\n          // Exponential backoff, up to 16 seconds\n          if (err.xhr &&\n              (err.xhr.status === 0 || err.xhr.status === 429) &&\n              retryCount <= 4) {\n            var delayLength = Math.pow(2, retryCount) * 1000;\n            retryCount++;\n            return delayFn(delayLength)\n              .then(recursivePoll);\n          }\n          throw err;\n        });\n    };\n    return recursivePoll()\n      .catch(function(err) {\n        ref.isPolling = false;\n        throw err;\n      });\n  };\n}\n","/* eslint-disable complexity */\nimport { OktaAuthHttpInterface } from '../../http/types';\nimport { clone, isObject, omit } from '../../util';\nimport { AuthnTransactionAPI } from '../types';\nimport { links2fns } from './links2fns';\n\nexport function flattenEmbedded(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, ref) {\n  obj = obj || res;\n  obj = clone(obj);\n\n  if (Array.isArray(obj)) {\n    var objArr = [];\n    for (var o = 0, ol = obj.length; o < ol; o++) {\n      objArr.push(flattenEmbedded(sdk, tx, res, obj[o], ref) as never);\n    }\n    return objArr;\n  }\n\n  var embedded = obj._embedded || {};\n\n  for (var key in embedded) {\n    if (!Object.prototype.hasOwnProperty.call(embedded, key)) {\n      continue;\n    }\n\n    // Flatten any nested _embedded objects\n    if (isObject(embedded[key]) || Array.isArray(embedded[key])) {\n      embedded[key] = flattenEmbedded(sdk, tx, res, embedded[key], ref);\n    }\n  }\n\n  // Convert any links on the embedded object\n  var fns = links2fns(sdk, tx, res, obj, ref);\n  Object.assign(embedded, fns);\n\n  obj = omit(obj, '_embedded', '_links');\n  Object.assign(obj, embedded);\n  return obj;\n}\n","import { OktaAuthHttpInterface } from '../../http/types';\nimport { AuthnTransactionFunctions, AuthnTransactionAPI } from '../types';\nimport { link2fn } from './link2fn';\nimport { getPollFn } from './poll';\n\nexport function links2fns(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, ref) {\n  var fns = {} as AuthnTransactionFunctions;\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n\n    var link = obj._links[linkName];\n    \n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n\n    switch (linkName) {\n      // poll is only found at the transaction\n      // level, so we don't need to pass the link\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n\n      default:\n        var fn = link2fn(sdk, tx, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { OktaAuthHttpInterface } from '../http/types';\nimport {\n  AuthnTransactionFunction,\n  AuthnTransaction,\n  AuthnTransactionAPI,\n  AuthnTransactionState\n} from './types';\nimport { flattenEmbedded } from './util/flattenEmbedded';\n\nexport class AuthnTransactionImpl implements AuthnTransaction {\n  next?: AuthnTransactionFunction;\n  cancel?: AuthnTransactionFunction;\n  skip?: AuthnTransactionFunction;\n  unlock?: AuthnTransactionFunction;\n  changePassword?: AuthnTransactionFunction;\n  resetPassword?: AuthnTransactionFunction;\n  answer?: AuthnTransactionFunction;\n  recovery?: AuthnTransactionFunction;\n  verify?: AuthnTransactionFunction;\n  resend?: AuthnTransactionFunction;\n  activate?: AuthnTransactionFunction;\n  poll?: AuthnTransactionFunction;\n  prev?: AuthnTransactionFunction;\n\n  data?: AuthnTransactionState;\n  stateToken?: string;\n  sessionToken?: string;\n  status: string;\n  user?: Record<string, any>;\n  factor?: Record<string, any>;\n  factors?: Array<Record<string, any> >;\n  policy?: Record<string, any>;\n  scopes?: Array<Record<string, any> >;\n  target?: Record<string, any>;\n  authentication?: Record<string, any>;\n  constructor(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res: AuthnTransactionState | null = null) {\n    this.data = undefined;\n    this.status = undefined as unknown as string;\n    if (res) {\n      this.data = res;\n\n      // Parse response from Authn V1\n      Object.assign(this, flattenEmbedded(sdk, tx, res, res, {}));\n      delete this.stateToken;\n\n      // RECOVERY_CHALLENGE has some responses without _links.\n      // Without _links, we emulate cancel to make it intuitive\n      // to return to the starting state. We may remove this\n      // when OKTA-75434 is resolved\n      if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n        this.cancel = function() {\n          return Promise.resolve(tx.createTransaction());\n        };\n      }\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { RequestData, RequestOptions, OktaAuthHttpInterface } from '../http/types';\nimport {\n  introspectAuthn,\n  transactionStatus,\n  transactionExists,\n  resumeTransaction,\n  postToTransaction\n} from './api';\nimport { AuthnTransactionImpl } from './AuthnTransactionImpl';\nimport { AuthnTransactionAPI, AuthnTransactionState } from './types';\n\n// Factory\nexport function createAuthnTransactionAPI(sdk: OktaAuthHttpInterface): AuthnTransactionAPI {\n  const tx: AuthnTransactionAPI = {\n    status: transactionStatus.bind(null, sdk),\n    resume(args) {\n      return resumeTransaction(sdk, tx, args);\n    },\n    exists: transactionExists.bind(null, sdk),\n    introspect(args) {\n      return introspectAuthn(sdk, tx, args);\n    },\n    createTransaction: (res?: AuthnTransactionState) => {\n      return new AuthnTransactionImpl(sdk, tx, res);\n    },\n    postToTransaction: (url: string, args?: RequestData, options?: RequestOptions) => {\n      return postToTransaction(sdk, tx, url, args, options);\n    }\n  };\n  return tx;\n}\n","import {\n  OktaAuthOptionsConstructor,\n} from '../base';\n\nimport {\n  IdxStorageManagerConstructor,\n  IdxTransactionManagerConstructor,\n  OktaAuthIdxOptions,\n  createIdxTransactionManager,\n  createOktaAuthIdx,\n  createIdxStorageManager,\n  createIdxOptionsConstructor\n} from '../idx';\n\nimport { mixinMyAccount } from '../myaccount';\nimport { mixinAuthn } from '../authn';\n\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface OktaAuthOptions extends OktaAuthIdxOptions {}\n\nconst OptionsConstructor: OktaAuthOptionsConstructor<OktaAuthOptions> = createIdxOptionsConstructor();\nconst StorageManager: IdxStorageManagerConstructor = createIdxStorageManager();\nconst TransactionManager: IdxTransactionManagerConstructor = createIdxTransactionManager();\n\n// Default bundle includes everything\nconst WithIdx = createOktaAuthIdx(StorageManager, OptionsConstructor, TransactionManager);\nconst WithMyAccount = mixinMyAccount(WithIdx);\nconst WithAuthn = mixinAuthn(WithMyAccount);\n\nclass OktaAuth extends WithAuthn {\n  constructor(options: OktaAuthOptions) {\n    super(options);\n  }\n}\n\nexport default OktaAuth;\nexport { OktaAuth };\nexport * from './common';\nexport * from '../idx';\nexport * from '../myaccount';\nexport * from '../authn';\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createCoreOptionsConstructor } from '../core/options';\nimport { FlowIdentifier } from './types/FlowIdentifier';\nimport { OktaAuthIdxOptions } from './types/options';\n\n\nexport function createIdxOptionsConstructor() {\n  const CoreOptionsConstructor = createCoreOptionsConstructor();\n  return class IdxOptionsConstructor\n    extends CoreOptionsConstructor \n    implements Required<OktaAuthIdxOptions>\n  {\n    flow: FlowIdentifier;\n    activationToken: string;\n    recoveryToken: string;\n  \n    // BETA WARNING: configs in this section are subject to change without a breaking change notice\n    idx: {\n      useGenericRemediator?: boolean;\n      exchangeCodeForTokens?: boolean;\n    };\n  \n    constructor(options: any) {\n      super(options);\n  \n      this.flow = options.flow;\n      this.activationToken = options.activationToken;\n      this.recoveryToken = options.recoveryToken;\n      this.idx = options.idx;\n    }\n  };\n  \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createOAuthOptionsConstructor } from '../oidc';\nimport { AuthState, OktaAuthCoreInterface, OktaAuthCoreOptions, ServiceManagerOptions } from './types';\n\n\nexport function createCoreOptionsConstructor()\n{\n  const OAuthOptionsConstructor = createOAuthOptionsConstructor();\n  return class CoreOptionsConstructor\n    extends OAuthOptionsConstructor\n    implements Required<OktaAuthCoreOptions>\n  {\n    services: ServiceManagerOptions;\n    transformAuthState: (oktaAuth: OktaAuthCoreInterface, authState: AuthState) => Promise<AuthState>;\n\n    constructor(options: any) {\n      super(options);\n      this.services = options.services;\n      this.transformAuthState = options.transformAuthState;\n    }\n  };\n}\n","import { CookieOptions, StorageManagerOptions, StorageOptions, StorageUtil } from '../storage/types';\nimport {  IdxTransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { IDX_RESPONSE_STORAGE_NAME } from '../constants';\nimport { createCoreStorageManager } from '../core/storage';\nimport { IdxResponseStorage } from './types/storage';\nimport { isBrowser } from '../features';\nimport { warn } from '../util';\nimport AuthSdkError from '../errors/AuthSdkError';\n\nexport function createIdxStorageManager<M extends IdxTransactionMeta>()\n{\n  const CoreStorageManager = createCoreStorageManager<M>();\n  return class IdxStorageManager extends CoreStorageManager\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    // intermediate idxResponse\n    // store for network traffic optimazation purpose\n    // TODO: revisit in auth-js 6.0 epic JIRA: OKTA-399791\n    getIdxResponseStorage(options?: StorageOptions): IdxResponseStorage | null {\n      let storage;\n      if (isBrowser()) {\n        // on browser side only use memory storage \n        try {\n          storage = this.storageUtil.getStorageByType('memory', options);\n        } catch (e) {\n          // it's ok to miss response storage\n          // eslint-disable-next-line max-len\n          warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n        }\n      } else {\n        // on server side re-use transaction custom storage\n        const transactionStorage = this.getTransactionStorage(options);\n        if (transactionStorage) {\n          storage = {\n            getItem: (key) => {\n              const transaction = transactionStorage.getStorage();\n              if (transaction && transaction[key]) {\n                return transaction[key];\n              }\n              return null;\n            },\n            setItem: (key, val) => {\n              const transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n              }\n              transaction[key] = val;\n              transactionStorage.setStorage(transaction);\n            },\n            removeItem: (key) => {\n              const transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                return;\n              }\n              delete transaction[key];\n              transactionStorage.setStorage(transaction);\n            }\n          };\n        }\n      }\n\n      if (!storage) {\n        return null;\n      }\n\n      return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n    }\n  };\n}\n","import { createOktaAuthCore } from '../../core/factory';\nimport { OktaAuthOptionsConstructor } from '../../base/types';\nimport { StorageManagerConstructor } from '../../storage/types';\nimport { IdxTransactionManagerInterface, OktaAuthIdxInterface, OktaAuthIdxConstructor } from '../types/api';\nimport { IdxTransactionMeta } from '../types/meta';\nimport { IdxStorageManagerInterface } from '../types/storage';\nimport { OktaAuthIdxOptions } from '../types/options';\nimport { mixinIdx } from '../mixin';\nimport { TransactionManagerConstructor } from '../../oidc/types';\nimport { OktaAuthCoreInterface } from '../../core/types';\n\nexport function createOktaAuthIdx<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n)\n: OktaAuthIdxConstructor<OktaAuthIdxInterface<M, S, O, TM> & OktaAuthCoreInterface<M, S, O, TM>>\n{\n  const Core = createOktaAuthCore<M, S, O, TM>(\n    StorageManagerConstructor,\n    OptionsConstructor,\n    TransactionManagerConstructor\n  );\n  const WithIdx = mixinIdx(Core);\n  return WithIdx;\n}\n","import { FingerprintAPI, OktaAuthConstructor } from '../base/types';\nimport { OktaAuthOAuthInterface } from '../oidc/types';\nimport {\n  IdxAPI, \n  IdxTransactionManagerInterface, \n  OktaAuthIdxInterface, \n  OktaAuthIdxConstructor, \n  OktaAuthIdxOptions, \n  WebauthnAPI\n} from './types';\nimport { IdxTransactionMeta } from './types/meta';\nimport { IdxStorageManagerInterface } from './types/storage';\nimport { createIdxAPI } from './factory/api';\nimport fingerprint from '../browser/fingerprint';\nimport * as webauthn from './webauthn';\n\nexport function mixinIdx\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n>\n(Base: TBase): TBase & OktaAuthIdxConstructor<OktaAuthIdxInterface<M, S, O, TM>>\n{\n  return class OktaAuthIdx extends Base implements OktaAuthIdxInterface<M, S, O, TM>\n  {\n    idx: IdxAPI;\n    fingerprint: FingerprintAPI;\n    static webauthn: WebauthnAPI = webauthn;\n    \n    constructor(...args: any[]) {\n      super(...args);\n      this.idx = createIdxAPI(this);\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n  };\n}\n","import { ClearTransactionMetaOptions, TransactionManagerOptions } from '../oidc/types';\nimport { createTransactionManager } from '../oidc/TransactionManager';\nimport { IdxTransactionMeta, IntrospectOptions } from './types';\nimport { isRawIdxResponse } from './types/idx-js';\nimport { IdxStorageManagerInterface, SavedIdxResponse } from './types/storage';\n\nexport function createIdxTransactionManager\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>\n>\n()\n{\n  const TransactionManager = createTransactionManager<M, S>();\n  return class IdxTransactionManager extends TransactionManager\n  {\n    constructor(options: TransactionManagerOptions) {\n      super(options);\n    }\n\n    clear(options: ClearTransactionMetaOptions = {}) {\n      super.clear(options);\n\n      if (options.clearIdxResponse !== false) {\n        this.clearIdxResponse();\n      }\n    }\n    \n    saveIdxResponse(data: SavedIdxResponse): void {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return;\n      }\n      storage.setStorage(data);\n    }\n\n    // eslint-disable-next-line complexity\n    loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null {\n      if (!this.saveLastResponse) {\n        return null;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return null;\n      }\n      const storedValue = storage.getStorage();\n      if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n        return null;\n      }\n\n      if (options) {\n        const { stateHandle, interactionHandle } = options;\n        // only perform this check if NOT using generic remediator\n        if (!options.useGenericRemediator && stateHandle && storedValue.stateHandle !== stateHandle) {\n          return null;\n        }\n        if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n          return null;\n        }\n      }\n\n      return storedValue;\n    }\n\n    clearIdxResponse(): void {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      storage?.clearStorage();\n    }\n  };\n}\n","import { OktaAuthConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta,\n} from '../oidc/types';\nimport { OktaAuthMyAccountInterface } from './types';\n\nimport * as MyAccountMethods from './api';\n\nexport function mixinMyAccount\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthMyAccountInterface<M, S, O>>\n{\n  return class OktaAuthMyAccount extends Base implements OktaAuthMyAccountInterface<M, S, O>\n  {\n    myaccount: any;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.myaccount = Object.entries(MyAccountMethods)\n        .filter(([ name ]) => name !== 'default')\n        .reduce((acc, [name, fn]) => {\n          acc[name] = (fn as any).bind(null, this);\n          return acc;\n        }, {});\n    }\n  };\n}\n","/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { \n  clone,\n} from '../util';\nimport fingerprint from '../browser/fingerprint';\nimport {\n  SigninWithCredentialsOptions,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  SigninOptions,\n  OktaAuthTxInterface,\n  AuthnTransaction,\n  AuthnTransactionAPI\n} from './types';\nimport {\n  createAuthnTransactionAPI,\n} from './factory';\nimport { StorageManagerInterface } from '../storage/types';\nimport { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { FingerprintAPI, OktaAuthConstructor } from '../base/types';\n\nexport function mixinAuthn\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthTxInterface<S, O>>\n{\n  return class OktaAuthTx extends Base implements OktaAuthTxInterface<S, O> {\n    tx: AuthnTransactionAPI; // legacy, may be removed in future version\n    authn: AuthnTransactionAPI;\n    fingerprint: FingerprintAPI;\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.authn = this.tx = createAuthnTransactionAPI(this);\n      \n      // Fingerprint API\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n\n    // Authn  V1\n    async signIn(opts: SigninOptions): Promise<AuthnTransaction> {\n      opts = clone(opts || {});\n      const _postToTransaction = (options?) => {\n        delete opts.sendFingerprint;\n        return this.tx.postToTransaction('/api/v1/authn', opts, options);\n      };\n      if (!opts.sendFingerprint) {\n        return _postToTransaction();\n      }\n      return this.fingerprint()\n      .then(function(fingerprint) {\n        return _postToTransaction({\n          headers: {\n            'X-Device-Fingerprint': fingerprint\n          }\n        });\n      });\n    }\n\n    // Authn  V1\n    async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthnTransaction> {\n      return this.signIn(opts);\n    }\n\n    // { username, (relayState) }\n    forgotPassword(opts): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/password', opts);\n    }\n\n    // { username, (relayState) }\n    unlockAccount(opts: ForgotPasswordOptions): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/unlock', opts);\n    }\n\n    // { recoveryToken }\n    verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/token', opts);\n    }\n\n  };\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nexport { _arrayLikeToArray as default };","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nexport { _unsupportedIterableToArray as default };","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  DataStrategyFunction,\n  PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_logV6DeprecationWarnings as logV6DeprecationWarnings,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DataStrategyMatch,\n  DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  PatchRoutesOnNavigationFunction,\n  PatchRoutesOnNavigationFunctionArgs,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: PatchRoutesOnNavigationFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        flushSync: flushSync,\n        viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  React.useEffect(\n    () => logV6DeprecationWarnings(future, router.future),\n    [future, router.future]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        viewTransition={viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          flushSync: options.flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as useViewTransitionState };\n\n//#endregion\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\n\nconst OktaError: React.FC<{ error: Error }> = ({ error }) => { \n  if(error.name && error.message) { \n    return <p>{error.name}: {error.message}</p>;\n  }\n  return <p>Error: {error.toString()}</p>;\n};\n\nexport default OktaError;\n","/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { AuthSdkError, AuthState, OktaAuth } from '@okta/okta-auth-js';\nimport OktaContext, { OnAuthRequiredFunction, RestoreOriginalUriFunction } from './OktaContext';\nimport OktaError from './OktaError';\nimport { compare as compareVersions } from 'compare-versions';\n\ndeclare const AUTH_JS: {\n  minSupportedVersion: string;\n}\n\ndeclare const PACKAGE_NAME: string;\ndeclare const PACKAGE_VERSION: string;\ndeclare const SKIP_VERSION_CHECK: string;\n\nconst Security: React.FC<{\n  oktaAuth: OktaAuth,\n  restoreOriginalUri: RestoreOriginalUriFunction, \n  onAuthRequired?: OnAuthRequiredFunction,\n  children?: React.ReactNode\n} & React.HTMLAttributes<HTMLDivElement>> = ({ \n  oktaAuth,\n  restoreOriginalUri, \n  onAuthRequired, \n  children\n}) => { \n  const [authState, setAuthState] = React.useState(() => {\n    if (!oktaAuth) {\n      return null;\n    }\n    return oktaAuth.authStateManager.getAuthState();\n  });\n\n  React.useEffect(() => {\n    if (!oktaAuth || !restoreOriginalUri) {\n      return;\n    }\n\n    // Add default restoreOriginalUri callback\n    // props.restoreOriginalUri is required, therefore if options.restoreOriginalUri exists, there are 2 callbacks\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (oktaAuth.options.restoreOriginalUri) {\n      console.warn('Two custom restoreOriginalUri callbacks are detected. The one from the OktaAuth configuration will be overridden by the provided restoreOriginalUri prop from the Security component.');\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    oktaAuth.options.restoreOriginalUri = (async (oktaAuth: unknown, originalUri: string) => {\n      return restoreOriginalUri(oktaAuth as OktaAuth, originalUri);\n    }) as ((oktaAuth: OktaAuth, originalUri?: string) => Promise<void>);\n\n  }, []); // empty array, only check on component mount\n\n  React.useEffect(() => {\n    if (!oktaAuth) {\n      return;\n    }\n\n    // Add okta-react userAgent\n    if (oktaAuth._oktaUserAgent) {\n      oktaAuth._oktaUserAgent.addEnvironment(`${PACKAGE_NAME}/${PACKAGE_VERSION}`);\n    } else {\n      console.warn('_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .');\n    }\n\n    // Update Security provider with latest authState\n    const currentAuthState = oktaAuth.authStateManager.getAuthState();\n    if (currentAuthState !== authState) {\n      setAuthState(currentAuthState);\n    }\n    const handler = (authState: AuthState) => {\n      setAuthState(authState);\n    };\n    oktaAuth.authStateManager.subscribe(handler);\n\n    // Trigger an initial change event to make sure authState is latest\n    oktaAuth.start();\n\n    return () => {\n      oktaAuth.authStateManager.unsubscribe(handler);\n    };\n  }, [oktaAuth]);\n\n  if (!oktaAuth) {\n    const err = new AuthSdkError('No oktaAuth instance passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (!restoreOriginalUri) {\n    const err = new AuthSdkError('No restoreOriginalUri callback passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (!oktaAuth._oktaUserAgent) {\n    console.warn('_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .');\n  }\n  else {\n    // use SKIP_VERSION_CHECK flag to control version check in tests\n    // OKTA-465157: remove SKIP_VERSION_CHECK\n    const isAuthJsSupported = SKIP_VERSION_CHECK === '1' ||\n      compareVersions(oktaAuth._oktaUserAgent.getVersion(), AUTH_JS.minSupportedVersion, '>=');\n    if (!isAuthJsSupported) {\n      const err = new AuthSdkError(`\n        Passed in oktaAuth is not compatible with the SDK,\n        minimum supported okta-auth-js version is ${AUTH_JS.minSupportedVersion}.\n      `);\n      return <OktaError error={err} />;\n    }\n  }\n\n  return (\n    <OktaContext.Provider value={{ \n      oktaAuth, \n      authState, \n      _onAuthRequired: onAuthRequired\n    }}>\n      {children}\n    </OktaContext.Provider>\n  );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthResumeFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\ninterface LoginCallbackProps {\n  errorComponent?: React.ComponentType<{ error: Error }>;\n  onAuthResume?: OnAuthResumeFunction;\n  loadingElement?: React.ReactElement;\n}\n\nlet handledRedirect = false;\n\nconst LoginCallback: React.FC<LoginCallbackProps> = ({ errorComponent, loadingElement = null, onAuthResume }) => { \n  const { oktaAuth, authState } = useOktaAuth();\n  const [callbackError, setCallbackError] = React.useState(null);\n\n  const ErrorReporter = errorComponent || OktaError;\n  React.useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore OKTA-464505: backward compatibility support for auth-js@5\n    const isInteractionRequired = oktaAuth.idx.isInteractionRequired || oktaAuth.isInteractionRequired.bind(oktaAuth);\n    if (onAuthResume && isInteractionRequired()) {\n      onAuthResume();\n      return;\n    }\n    // OKTA-635977: Prevents multiple calls of handleLoginRedirect() in React18 StrictMode\n    // Top-level variable solution follows: https://react.dev/learn/you-might-not-need-an-effect#initializing-the-application\n    if (!handledRedirect) {\n      oktaAuth.handleLoginRedirect().catch(e => {\n        setCallbackError(e);\n      })\n      handledRedirect = true;\n    }\n  }, [oktaAuth]);\n\n  const authError = authState?.error;\n  const displayError = callbackError || authError;\n  if (displayError) { \n    return <ErrorReporter error={displayError}/>;\n  }\n\n  return loadingElement;\n};\n\nexport default LoginCallback;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthRequiredFunction } from './OktaContext';\nimport * as ReactRouterDom from 'react-router-dom';\nimport { toRelativeUrl, AuthSdkError } from '@okta/okta-auth-js';\nimport OktaError from './OktaError';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet useMatch: any;\nif ('useRouteMatch' in ReactRouterDom) {\n  // trick static analyzer to avoid \"'useRouteMatch' is not exported\" error\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  useMatch = (ReactRouterDom as any)['useRouteMatch' in ReactRouterDom ? 'useRouteMatch' : ''];\n} else {\n  // throw when useMatch is triggered\n  useMatch = () => { \n    throw new AuthSdkError('Unsupported: SecureRoute only works with react-router-dom v5 or any router library with compatible APIs. See examples under the \"samples\" folder for how to implement your own custom SecureRoute Component.');\n  };\n}\n\nconst SecureRoute: React.FC<{\n  onAuthRequired?: OnAuthRequiredFunction;\n  errorComponent?: React.ComponentType<{ error: Error }>;\n} & ReactRouterDom.RouteProps & React.HTMLAttributes<HTMLDivElement>> = ({ \n  onAuthRequired,\n  errorComponent,\n  ...routeProps\n}) => { \n  const { oktaAuth, authState, _onAuthRequired } = useOktaAuth();\n  const match = useMatch(routeProps);\n  const pendingLogin = React.useRef(false);\n  const [handleLoginError, setHandleLoginError] = React.useState<Error | null>(null);\n  const ErrorReporter = errorComponent || OktaError;\n\n  React.useEffect(() => {\n    const handleLogin = async () => {\n      if (pendingLogin.current) {\n        return;\n      }\n\n      pendingLogin.current = true;\n\n      const originalUri = toRelativeUrl(window.location.href, window.location.origin);\n      oktaAuth.setOriginalUri(originalUri);\n      const onAuthRequiredFn = onAuthRequired || _onAuthRequired;\n      if (onAuthRequiredFn) {\n        await onAuthRequiredFn(oktaAuth);\n      } else {\n        await oktaAuth.signInWithRedirect();\n      }\n    };\n\n    // Only process logic if the route matches\n    if (!match) {\n      return;\n    }\n\n    if (!authState) {\n      return;\n    }\n\n    if (authState.isAuthenticated) {\n      pendingLogin.current = false;\n      return;\n    }\n\n    // Start login if app has decided it is not logged in and there is no pending signin\n    if(!authState.isAuthenticated) { \n      handleLogin().catch(err => {\n        setHandleLoginError(err as Error);\n      });\n    }  \n\n  }, [\n    authState,\n    oktaAuth, \n    match, \n    onAuthRequired, \n    _onAuthRequired\n  ]);\n\n  if (handleLoginError) {\n    return <ErrorReporter error={handleLoginError} />;\n  }\n\n  if (!authState || !authState.isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <ReactRouterDom.Route\n      { ...routeProps }\n    />\n  );\n};\n\nexport default SecureRoute;\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","'use strict';\n\nclass CancelError extends Error {\n\tconstructor(reason) {\n\t\tsuper(reason || 'Promise was canceled');\n\t\tthis.name = 'CancelError';\n\t}\n\n\tget isCanceled() {\n\t\treturn true;\n\t}\n}\n\nclass PCancelable {\n\tstatic fn(userFn) {\n\t\treturn (...arguments_) => {\n\t\t\treturn new PCancelable((resolve, reject, onCancel) => {\n\t\t\t\targuments_.push(onCancel);\n\t\t\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\t\t\tuserFn(...arguments_).then(resolve, reject);\n\t\t\t});\n\t\t};\n\t}\n\n\tconstructor(executor) {\n\t\tthis._cancelHandlers = [];\n\t\tthis._isPending = true;\n\t\tthis._isCanceled = false;\n\t\tthis._rejectOnCancel = true;\n\n\t\tthis._promise = new Promise((resolve, reject) => {\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = value => {\n\t\t\t\tif (!this._isCanceled || !onCancel.shouldReject) {\n\t\t\t\t\tthis._isPending = false;\n\t\t\t\t\tresolve(value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst onReject = error => {\n\t\t\t\tthis._isPending = false;\n\t\t\t\treject(error);\n\t\t\t};\n\n\t\t\tconst onCancel = handler => {\n\t\t\t\tif (!this._isPending) {\n\t\t\t\t\tthrow new Error('The `onCancel` handler was attached after the promise settled.');\n\t\t\t\t}\n\n\t\t\t\tthis._cancelHandlers.push(handler);\n\t\t\t};\n\n\t\t\tObject.defineProperties(onCancel, {\n\t\t\t\tshouldReject: {\n\t\t\t\t\tget: () => this._rejectOnCancel,\n\t\t\t\t\tset: boolean => {\n\t\t\t\t\t\tthis._rejectOnCancel = boolean;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn executor(onResolve, onReject, onCancel);\n\t\t});\n\t}\n\n\tthen(onFulfilled, onRejected) {\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\treturn this._promise.then(onFulfilled, onRejected);\n\t}\n\n\tcatch(onRejected) {\n\t\treturn this._promise.catch(onRejected);\n\t}\n\n\tfinally(onFinally) {\n\t\treturn this._promise.finally(onFinally);\n\t}\n\n\tcancel(reason) {\n\t\tif (!this._isPending || this._isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isCanceled = true;\n\n\t\tif (this._cancelHandlers.length > 0) {\n\t\t\ttry {\n\t\t\t\tfor (const handler of this._cancelHandlers) {\n\t\t\t\t\thandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis._reject(error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this._rejectOnCancel) {\n\t\t\tthis._reject(new CancelError(reason));\n\t\t}\n\t}\n\n\tget isCanceled() {\n\t\treturn this._isCanceled;\n\t}\n}\n\nObject.setPrototypeOf(PCancelable.prototype, Promise.prototype);\n\nmodule.exports = PCancelable;\nmodule.exports.CancelError = CancelError;\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n"],"names":["__global__","globalThis","self","global","__globalThis__","F","this","fetch","DOMException","prototype","exports","g","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","length","getOwnPropertyNames","consumed","body","_noBody","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","arrayBuffer","isConsumed","byteOffset","then","text","match","exec","encoding","readAsText","readBlobAsText","chars","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","AbortController","referrer","cache","reParamSearch","replace","Date","getTime","form","trim","split","bytes","decodeURIComponent","parseHeaders","rawHeaders","substr","line","parts","key","console","warn","message","Response","bodyInit","status","RangeError","ok","statusText","clone","response","redirectStatuses","redirect","location","err","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","setTimeout","ontimeout","onabort","open","href","fixUrl","withCredentials","responseType","names","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","module","IdxStatus","AuthenticatorKey","IdxFeature","isAuthenticator","id","getConsole","nativeConsole","window","log","group","groupEnd","removeNils","cleaned","prop","str","stringify","omit","newobj","_len","arguments","props","_key","p","find","collection","searchParams","c","item","found","getLink","linkName","altName","_links","link","CustomError","super","setPrototypeOf","isString","isObject","isFunction","fn","WWWAuthError","scheme","parameters","resp","_a","UNKNOWN_ERROR","errorCode","error_description","errorDescription","errorSummary","realm","parseHeader","regex","firstSpace","remaining","params","getWWWAuthenticateHeader","genRandomString","randomCharset","random","Math","floor","delay","ms","split2","delim","splice","isAbsoluteUrl","toQueryString","encodeURIComponent","removeTrailingSlash","path","trimmed","AuthSdkError","msg","errorLink","errorId","errorCauses","generateState","getIssuer","sdk","issuer","getOAuthBaseUrl","getOAuthUrls","authorizeUrl","userinfoUrl","tokenUrl","logoutUrl","revokeUrl","baseUrl","createOAuthMeta","tokenParams","oauthMeta","urls","clientId","redirectUri","responseMode","scopes","state","nonce","ignoreSignature","acrValues","extraParams","pkce","assign","codeVerifier","codeChallengeMethod","codeChallenge","STATE_TOKEN_KEY_NAME","DEFAULT_POLLING_DELAY","IOS_MAX_RETRY_COUNT","DEFAULT_MAX_CLOCK_SKEW","DEFAULT_CACHE_DURATION","TOKEN_STORAGE_NAME","CACHE_STORAGE_NAME","PKCE_STORAGE_NAME","TRANSACTION_STORAGE_NAME","SHARED_TRANSACTION_STORAGE_NAME","ORIGINAL_URI_STORAGE_NAME","IDX_RESPONSE_STORAGE_NAME","ACCESS_TOKEN_STORAGE_KEY","ID_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","REFERRER_PATH_STORAGE_KEY","MIN_VERIFIER_LENGTH","MAX_VERIFIER_LENGTH","DEFAULT_CODE_CHALLENGE_METHOD","IDX_API_VERSION","AuthApiError","meta","OAuthError","summary","a","atob","b","btoa","crypto","isWindowsPhone","isBrowser","document","isIE11OrLess","documentMode","getUserAgent","navigator","userAgent","isFingerprintSupported","agent","isPopupPostMessageSupported","isIE8or9","postMessage","isWebCryptoSubtleSupported","subtle","isTokenVerifySupported","hasTextEncoder","TextEncoder","isPKCESupported","isHTTPS","protocol","isLocalhost","hostname","isDPoPSupported","indexedDB","isIOS","MSStream","trackDateDocumentBecameVisible","dateDocumentBecameVisible","now","hidden","httpRequest","httpRequestInterceptors","interceptor","args","saveAuthnState","accessToken","storage","storageUtil","httpCache","storageManager","getHttpCache","cookies","pollingIntent","pollDelay","cacheResponse","cachedResponse","getStorage","expiresAt","oktaUserAgentHeader","_oktaUserAgent","getHttpHeader","res","ajaxOptions","data","waitForVisibleAndAwakenDocument","waitForAwakenDocument","recursiveFetch","retryCount","timeSinceDocumentIsVisible","pageVisibilityHandler","retryableFetch","httpRequestClient","catch","stateToken","delete","updateStorage","formatError","serverErr","transformErrorXHR","wwwAuthHeader","wwwAuthErr","max_age","acr_values","getOptions","getIssuerOrigin","post","postOptions","target","source","TokenKind","api","converter","defaultAttributes","attributes","expires","toUTCString","escape","stringifiedAttributes","attributeName","cookie","write","jar","read","remove","withAttributes","withConverter","freeze","isAccessToken","isIDToken","idToken","isRefreshToken","refreshToken","async","createTransactionMeta","authClient","token","prepareTokenParams","pkceMeta","flow","activationToken","recoveryToken","maxAge","hasSavedInteractionHandle","savedMeta","getSavedTransactionMeta","interactionHandle","transactionManager","load","isTransactionMetaValid","getTransactionMeta","validExistingMeta","saveTransactionMeta","save","muteWarning","clearTransactionMeta","clear","mismatch","some","isTransactionMetaValidForOptions","shouldValidateFlow","isTransactionMetaValidForFlow","getResponse","interact","clientSecret","client_id","scope","redirect_uri","code_challenge","code_challenge_method","activation_token","recovery_token","client_secret","interaction_handle","newMeta","isFieldMutable","field","mutable","divideSingleActionParamsByMutability","action","defaultParamsForAction","neededParamsForAction","immutableParamsForAction","_b","generateDirectFetch","_ref","actionDefinition","toPersist","accepts","endsWith","idx","makeIdxResponse","payload","responseJSON","idxResponse","stepUp","generateIdxAction","generator","defaultParams","neededParams","immutableParams","actionList","divideActionParamsByMutability","jsonpathRegex","SKIP_FIELDS","expandRelatesTo","k","query","steps","step","groups","_c","index","lastStep","pop","curr","jsonpath","innerValue","convertRemediationAction","remediation","rel","remediationActions","remediationValue","reduce","generateRemediationFunctions","actionFn","parseIdxResponse","remediationData","relatesTo","authenticatorChallenge","remediations","context","actions","filter","fieldValue","info","__rest","subField","parseNonRemediations","v1","makeIdxState","requestDidSucceed","rawIdxResponse","proceed","remediationChoice","paramsFromUser","remediationChoiceObject","neededToProceed","rawIdxState","interactionCode","successWithInteractionCode","parsersForVersion","version","validateVersionConfig","isRawIdxResponse","isOAuthError","introspect","savedIdxResponse","loadIdxResponse","domain","getOAuthDomain","stateHandle","Accept","titleCase","charAt","substring","getAuthenticatorFromRemediation","formatAuthenticator","incoming","authenticator","compareAuthenticators","auth1","auth2","Remediator","formatAuthenticators","authenticators","existing","authenticatorsData","acc","getName","canRemediate","idxRemediation","required","cur","getRequiredValues","hasData","getData","r","getAllValues","val","entry","getNextStep","_authClient","_context","inputs","getInputs","getAuthenticator","inputFromRemediation","visible","messages","alias","aliases","includes","getMessages","getValuesAfterProceed","authenticatorFromRemediation","_ref2","enrollmentId","_ref3","unwrapFormValue","formKeys","unwrappedForm","GenericRemediator","produces","rest","remediators","getFlowSpecification","_oktaAuth","isTerminalResponse","getMessagesFromIdxRemediationValue","messagesFromForm","optionValues","option","messagesFromOptions","getMessagesFromResponse","globalMessages","useGenericRemediator","fieldMessages","seen","filtered","i18n","getRemediatorClass","getRemediator","idxRemediations","remediator","_ref5","T","remediatorCandidates","nextStep","canSkip","canSkipFn","canResend","actionName","canResendFn","handleFailedResponse","terminal","removeActionFromValues","resend","removeActionFromOptions","remediate","actionFromValues","getActionFromValues","valuesWithoutExecutedAction","optionsWithoutExecutedAction","canceled","remediationAction","remediationName","filterValuesForRemediation","initializeValues","initializeData","PENDING","getFlow","_d","setFlow","flowSpec","oktaAuth","finalizeData","exchangeCodeForTokens","tokens","enabledFeatures","availableSteps","shouldSaveResponse","shouldClearTransaction","clearSharedStorage","PASSWORD_RECOVERY","REGISTRATION","SOCIAL_IDP","_ref4","ACCOUNT_UNLOCK","getEnabledFeatures","remediatorMap","remediatorClass","stepObj","startsWith","part1","part2","actionObj","getAvailableSteps","TERMINAL","hasActions","hasErrors","class","CANCELED","SUCCESS","getTokens","run","interactResponse","getDataFromIntrospect","autoRemediate","idxResponseFromRemediation","getDataFromRemediate","saveIdxResponse","authenticate","password","OKTA_PASSWORD","Authenticator","VerificationCodeAuthenticator","canVerify","verificationCode","otp","mapCredentials","passcode","idxRemediationValue","OktaVerifyTotp","totp","OktaPassword","revokeSessions","label","SecurityQuestionEnrollment","questionKey","answer","question","SecurityQuestionVerification","contextualData","enrolledQuestion","WebauthnEnrollment","clientData","attestation","WebauthnVerification","authenticatorData","signatureData","VerifyAuthenticator","SECURITY_QUESTION","OKTA_VERIFY","WEBAUTHN","challengeData","authenticatorEnrollments","getInputCredentials","valueKey","EnrollAuthenticator","EnrollPoll","startPolling","common","currentAuthenticator","poll","refresh","SelectEnrollmentChannel","channel","filterKey","EnrollmentChannelData","getInputEmail","getInputPhoneNumber","Boolean","email","phoneNumber","ChallengeAuthenticator","ChallengePoll","ResetAuthenticator","EnrollProfile","getCredentialsFromRemediation","userProfileFromValues","userProfile","mapUserProfile","profileAttributes","attributeValues","getInputUserProfile","getErrorMessages","errorRemediation","errors","Identify","identifier","ReEnrollAuthenticator","newPassword","ReEnrollAuthenticatorWarning","RedirectIdp","idp","SelectAuthenticator","findMatchedOption","matchedOption","isCurrentAuthenticator","isCurrentAuthenticatorEnrollment","currentAuthenticatorEnrollment","mapAuthenticator","selectedAuthenticator","selectedOption","getInputAuthenticator","SelectAuthenticatorAuthenticate","isRecoveryFlow","SelectAuthenticatorEnroll","SelectAuthenticatorUnlockAccount","authenticatorMap","methodTypeOption","methodTypeValue","methodType","getInputUsername","SelectEnrollProfile","AuthenticatorData","formatAuthenticatorData","getAuthenticatorData","mapAuthenticatorDataFromValues","AuthenticatorVerificationData","AuthenticatorEnrollmentData","Skip","skip","AuthenticationFlow","PasswordRecoveryFlow","RegistrationFlow","AccountUnlockFlow","cancel","urlParamsToObject","hashOrSearch","plus2space","paramSplit","fragment","param","EmailVerifyCallbackError","isEmailVerifyCallbackError","isEmailVerifyCallback","urlPath","parseEmailVerifyCallback","handleEmailVerifyCallback","search","canProceed","transaction","availablePollingRemeditaions","Number","isInteger","startTransaction","register","recoverPassword","handleInteractionCodeRedirect","savedState","URL","tokenManager","setTokens","unlockAccount","isInteractionRequiredError","isCodeFlow","getHashOrSearch","hash","isLoginRedirect","uri","authParams","isRedirectUri","codeFlow","hasErrorInUrl","hasCode","hasAuthorizationCode","hasInteractionCode","isInteractionRequired","createIdxAPI","newCtx","boundStartTransaction","bind","start","OktaUserAgent","environments","maybeAddNodeEnvironment","addEnvironment","env","getVersion","process","versions","node","headerName","headerValue","stringToBase64Url","base64ToBase64Url","b64","base64UrlToBase64","b64u","base64UrlToString","utf8","stringToBuffer","charCodeAt","base64UrlDecode","base64UrlToBuffer","from","bufferToBase64Url","bin","s","byte","getOidcHash","encode","digest","firstHalf","apply","verifyToken","algo","use","importKey","cryptoKey","jwt","signature","verify","PromiseQueue","quiet","queue","running","thisObject","queueItem","finally","dec2hex","dec","PKCE","generateVerifier","prefix","verifier","ceil","getRandomValues","getRandomString","computeChallenge","decodeToken","decodedToken","getDefaultTokenParams","dpop","defaultRedirectUri","DB_KEY","isDPoPNonceError","isWWWAuthError","cryptoRandomValue","byteLen","v","invokeStoreMethod","store","req","onupgradeneeded","createObjectStore","onsuccess","db","tx","objectStore","oncomplete","close","findKeyPair","pairId","clearDPoPKeyPair","createDPoPKeyPair","keyPairId","keyPair","algorithm","modulusLength","publicExponent","generateKey","generateKeyPair","storeKeyPair","clearDPoPKeyPairAfterRevoke","revokedToken","shouldClear","tokenType","dpopPairId","generateDPoPProof","kty","crv","n","x","y","exportKey","publicKey","alg","typ","jwk","claims","htm","htu","iat","jti","ath","hashAccessToken","signingKey","head","sign","createJwt","privateKey","makeTokenRequest","dpopKeyPair","proof","generateDPoPForTokenRequest","DPoP","dpopNonce","postToTokenEndpoint","authorizationCode","validateOptions","code","getPostData","getWellKnown","validationParams","configuredIssuer","validationOptions","aud","iss","acr","exp","ignoreLifetime","maxClockSkew","validateClaims","features","kid","wellKnown","jwksUri","cachedKey","clearStorage","getKey","verifyToken$1","at_hash","handleOAuthResponse","interaction_code","oauthParams","validateResponse","allowBearerTokens","dpopOptions","token_type","tokenDict","expiresIn","expires_in","access_token","id_token","refresh_token","accessJwt","idJwt","idTokenObj","getTokenOptions","handleResponseOptions","oauthResponse","tokenResponse","DEFAULT_TIMEOUT","addListener","eventTarget","attachEvent","removeListener","detachEvent","loadPopup","src","title","popupTitle","addPostMessageListener","timeout","responseHandler","timeoutId","origin","clearTimeout","preparePKCE","errorMessage","assertPKCESupport","validateCodeChallengeMethod","defaults","buildAuthorizeParams","oauthQueryParams","display","idpScope","loginHint","prompt","sessionToken","enrollAmrValues","mayBeArray","convertTokenParamsToOAuthParams","getToken","popupWindow","requestUrl","idpPopup","iframePromise","iframeEl","iframe","createElement","style","appendChild","loadFrame","contains","parentElement","removeChild","oauthPromise","closePoller","setInterval","closed","clearInterval","idpPromise","onmessage","event","isTrusted","addIDPPopupLisenter","getWithoutPrompt","getWithPopup","getWithIDPPopup","BroadcastChannel","cancelPromise","getWithRedirect","setLocation","getResponseMode","defaultResponseMode","parseOAuthResponseFromUrl","paramStr","nativeLoc","parseFromUrl","_getLocation","nativeHistory","_getHistory","nativeDoc","_getDocument","replaceState","pathname","removeSearch","removeHash","cleanOAuthResponseFromUrl","renewTokensWithRefresh","refreshTokenObject","renewTokenParams","endpointParams","grant_type","postRefreshToken","isSameRefreshToken","updateRefreshToken","removeRefreshToken","throwInvalidTokenError","getSingleToken","originalToken","renewToken","getTokensSync","renewTokens","revokeToken","token_type_hint","hintMap","oidcIntrospect","kind","ACCESS","introspection_endpoint","introspectUrl","authHeader","prepareEnrollAuthenticatorParams","prepareParams","getDefaultEnrollAuthenticatorParams","enrollAuthenticator","createEnrollAuthenticatorMeta","createTokenAPI","useQueue","getWithRedirectFn","parseFromUrlFn","parseFromUrlApi","history","revoke","renew","getUserInfo","accessTokenObject","idTokenObject","getDPoPAuthorizationHeaders","userInfo","sub","validateToken","SdkClock","localOffset","parseInt","EVENT_EXPIRED","EVENT_RENEWED","EVENT_ADDED","EVENT_REMOVED","EVENT_SET_STORAGE","DEFAULT_OPTIONS","autoRenew","autoRemove","syncStorage","clearPendingRemoveTokens","expireEarlySeconds","storageKey","TokenManager","emitter","storageOptions","secure","storageProvider","storageType","getTokenStorage","useSeparateCookies","clock","expireTimeouts","renewPromise","on","handler","off","setExpireEventTimeoutAll","started","stop","clearExpireEventTimeoutAll","isStarted","getExpireTime","hasExpired","emitExpired","emit","emitRenewed","freshToken","oldToken","emitAdded","emitRemoved","emitError","clearExpireEventTimeout","setExpireEventTimeout","expireTime","expireEventWait","max","expireEventTimeout","tokenStorage","resetExpireEventTimeoutAll","add","setStorage","emitSetStorageEvent","getSync","getStorageKeyByType","getTokenType","accessTokenCb","idTokenCb","refreshTokenCb","handleTokenCallback","handleAdded","handleRenewed","handleRemoved","types","existingTokens","newToken","existingToken","removedToken","shouldRenew","refreshKey","tokenKey","removedTokens","pendingRemove","addPendingRemoveFlags","browserHasLocalStorage","getLocalStorage","testStorage","browserHasSessionStorage","getSessionStorage","testStorageType","supported","getStorageByType","getCookieStorage","getInMemoryStorage","findStorageType","curType","nextType","onstorage","localStorage","sessionStorage","_this","sameSite","sessionCookie","getItem","setItem","removeItem","existingValues","valueToStore","inMemoryStore","cookieOptions","Cookies","mixinOAuth","Base","TransactionManagerConstructor","WithOriginalUri","BaseClass","setOriginalUri","originalUri","getOriginalUriStorage","getOriginalUri","removeOriginalUri","sharedStorage","_pending","handleLogin","_tokenQueue","endpoints","authorize","isAuthenticated","onExpiredToken","shouldRemove","signInWithRedirect","opts","additionalParams","getUser","getIdToken","getAccessToken","getRefreshToken","getOrRenewAccessToken","storeTokensFromRedirect","isPKCE","hasResponseType","isAuthorizationCodeFlow","invokeApiMethod","revokeAccessToken","accessTokenKey","revokeRefreshToken","refreshTokenKey","getSignOutRedirectUrl","postLogoutRedirectUri","idTokenHint","logoutUri","signOut","defaultUri","currentUri","clearTokensBeforeRedirect","sessionClosed","closeSession","Authorization","Dpop","clearDPoPStorage","clearAllDPoPKeyPairs","parseUseDPoPNonceError","wwwAuth","DEFAULT_PENDING","updateAuthStatePromise","canceledTimes","EVENT_AUTH_STATE_CHANGE","AuthStateManager","_sdk","_authState","_logOptions","_prevAuthState","_transformQueue","_setLogOptions","updateAuthState","getAuthState","getPreviousAuthState","transformAuthState","devMode","emitAuthStateChange","authState","isSameAuthState","prevState","finalPromise","origPromise","curPromise","cancelablePromise","PCancelable","_","onCancel","shouldReject","emitAndResolve","isCanceled","subscribe","unsubscribe","AutoRenewService","renewTimeQueue","onTokenExpiredHandler","shouldThrottleRenew","firstTime","requiresLeadership","processExpiredTokens","canStart","PROMISE_RESOLVED_TRUE","PROMISE_RESOLVED_VOID","sleep","time","resolveWith","randomToken","lastMs","microSeconds","ret","NativeMethod","channelName","micro","messagesCallback","bc","subFns","msgEvent","channelState","onMessage","messageJson","canBeUsed","Deno","_pubkey","averageResponseTime","ObliviousSet","ttl","Map","_to","obliviousSet","olderThen","removeTooOldValues","fillOptionsWithDefaults","originalOptions","webWorkerSupport","idb","fallbackInterval","onclose","localstorage","removeTimeout","maxParallelWrites","useFastPath","OBJECT_STORE_ID","TRANSACTION_SETTINGS","durability","getIdb","mozIndexedDB","webkitIndexedDB","msIndexedDB","commitIndexedDBTransaction","commit","getMessagesHigherThan","lastCursorId","keyRangeValue","IDBKeyRange","bound","Infinity","getAll","getAllRequest","rej","openCursorRequest","openCursor","ev","cursor","cleanOldMessages","msgObk","getOldMessages","tooOld","ids","all","deleteRequest","removeMessagesById","_readLoop","readNewMessages","newerMessages","useMessages","msgObj","uuid","eMIs","messagesCallbackTime","_filterMessage","sort","msgObjA","msgObjB","IndexedDBMethod","dbName","openRequest","keyPath","autoIncrement","createDatabase","writeBlockPromise","readQueuePromises","readerUuid","writeObject","writeMessage","min","ls","LocalstorageMethod","listener","newValue","addStorageEventListener","writeObj","createEvent","initEvent","dispatchEvent","defaultTime","SIMULATE_CHANNELS","Set","SimulateMethod","METHODS","ENFORCED_OPTIONS","OPEN_BROADCAST_CHANNELS","lastId","chooseMethods","concat","m","useMethod","chooseMethod","_iL","_onML","_addEL","internal","_uMP","_befC","_prepP","maybePromise","_state","_prepareChannel","_post","broadcastChannel","sendPromise","_hasMessageListeners","_addListenerObject","listenerFn","listenerObject","_startListening","_removeListenerObject","o","_stopListening","postInternal","listenObj","awaitPrepare","isClosed","SyncStorageService","enablePostMessage","onTokenAddedHandler","onTokenRemovedHandler","onTokenRenewedHandler","onSetStorageHandler","onSyncMessageHandler","syncChannelName","USE_METHOD","exit","trace","WorkerGlobalScope","oldClose","LISTENERS","startedListening","runAll","promises","sendLeaderMessage","leaderElector","msgJson","beLeader","isLeader","_hasLeader","unloadFn","unloadAdd","die","_unl","isLeaderListener","_dpLC","_dpL","_lstns","LeaderElectionWebLock","_options","isDead","_wKMC","lN","hasLeader","_this2","locks","relevantLocks","held","lock","awaitLeadership","_this3","_wLMP","returnPromise","onduplicate","_fn","_this4","uFn","LeaderElection","_aplQ","_aplQC","hasLeaderListener","createLeaderElection","_leaderElector","responseTime","elector","applyOnce","isFromFallbackInterval","stopCriteriaPromiseResolve","stopCriteria","stopCriteriaPromise","handleMessage","waitForAnswerTime","race","applyRun","_aLP","resolved","finish","whenDeathListener","_tryOnFallBack","_awaitLeadershipOnce","LeaderElectionService","onLeaderDuplicate","onLeader","electionChannelName","getNow","RenewOnTabActivationService","lastHidden","onPageVisbilityChange","_onPageVisbilityChange","tabInactivityDuration","renewOnTabActivation","AUTO_RENEW","SYNC_STORAGE","LEADER_ELECTION","RENEW_ON_TAB_ACTIVATION","ServiceManager","broadcastChannelName","defaultOptions","services","knownServices","svc","createService","startServices","getService","isLeaderRequired","srv","stopServices","canStartService","service","sessionExists","session","getSession","user","refreshSession","setCookieAndRedirect","redirectUrl","checkAccountSetupComplete","mixinSession","exists","createOktaAuthCore","StorageManagerConstructor","OptionsConstructor","OktaAuthBase","Emitter","constants","createOktaAuthBase","WithStorage","StorageManager","mixinStorage","WithHttp","http","setHeaders","webfinger","mixinHttp","Core","authStateManager","serviceManager","handleRedirect","handleLoginRedirect","restoreOriginalUri","handleIDPPopupRedirect","mixinCore","fingerprint","container","isMessageFromCorrectSource","contentWindow","getEnrolledCredentials","enrollement","credentialId","buildCredentialCreationOptions","activationData","rp","displayName","challenge","pubKeyCredParams","authenticatorSelection","excludeCredentials","buildCredentialRequestOptions","userVerification","allowCredentials","getAttestation","credential","clientDataJSON","attestationObject","getAssertion","STORAGE_MANAGER_OPTIONS","storageTypes","createStorageOptionsConstructor","BaseOptionsConstructor","cookieSettings","getCookieSettings","appJsonContentTypeRegex","fetchRequest","contentType","fetchPromise","crossFetch","readData","pair","formatResult","createOAuthOptionsConstructor","HttpOptionsConstructor","StorageOptionsConstructor","createHttpOptionsConstructor","RegExp","assertValidConfig","toAbsoluteUrl","enableSharedStorage","SavedObject","storageName","storageString","logServerSideMemoryStorageWarning","BaseStorageManager","storageManagerOptions","getOptionsForSection","sectionName","overrideOptions","createCoreStorageManager","getTransactionStorage","getSharedTansactionStorage","isObjectWithProperties","isOAuthTransactionMeta","isTransactionMeta","isCustomAuthTransactionMeta","createTransactionManager","saveLastResponse","transactionStorage","clearTransactionFromSharedStorage","dateCreated","saveTransactionToSharedStorage","pruneSharedStorage","loadTransactionFromSharedStorage","BaseTransaction","sendRequest","TransactionClass","accessTokenObj","atToken","httpOptions","generateRequestFnFromLinks","methodName","links","hints","allow","ProfileTransaction","createdAt","modifiedAt","profile","ProfileSchemaTransaction","properties","EmailRole","Status","PasswordStatus","getProfile","updateProfile","getProfileSchema","EmailStatusTransaction","EmailChallengeTransaction","EmailTransaction","roles","getEmails","getEmail","addEmail","deleteEmail","sendEmailChallenge","getEmailChallenge","emailId","challengeId","verifyEmailChallenge","PhoneTransaction","getPhones","getPhone","addPhone","deletePhone","sendPhoneChallenge","verifyPhoneChallenge","PasswordTransaction","created","lastUpdated","NOT_ENROLLED","enroll","update","getPassword","enrollPassword","updatePassword","deletePassword","addStateToken","builtArgs","transactionStatus","introspectAuthn","getSavedStateToken","transactionStep","createTransaction","transactionExists","postToTransaction","link2fn","ref","lk","isPolling","factorType","provider","autoPush","rememberDevice","updatePhone","AuthPollStopError","getPollFn","delay$1","transactionCallBack","pollLink","pollFn","getStateToken","recursivePoll","pollRes","factorResult","delayLength","pow","flattenEmbedded","objArr","ol","embedded","_embedded","fns","links2fns","AuthnTransactionImpl","createAuthnTransactionAPI","resume","resumeTransaction","CoreOptionsConstructor","OAuthOptionsConstructor","createCoreOptionsConstructor","createIdxOptionsConstructor","CoreStorageManager","getIdxResponseStorage","createIdxStorageManager","WithIdx","webauthn","mixinIdx","createOktaAuthIdx","TransactionManager","clearIdxResponse","storedValue","createIdxTransactionManager","WithAuthn","authn","signIn","_postToTransaction","sendFingerprint","signInWithCredentials","forgotPassword","verifyRecoveryToken","mixinAuthn","myaccount","OktaAuth","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","len","marker","runClearTimeout","Item","array","noop","nextTick","browser","argv","once","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","_typeof","_regeneratorRuntime","__esModule","t","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","h","l","f","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","isGeneratorFunction","mark","__proto__","awrap","reverse","prev","rval","handle","complete","delegateYield","_arrayLikeToArray","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","memo","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","basename","attr","getAttribute","stripBasename","isButtonElement","isInputElement","isFormDataSubmitterSupported","__reactRouterVersion","createBrowserRouter","routes","createRouter","future","_extends","v7_prependBasename","createBrowserHistory","hydrationData","parseHydrationData","UNSAFE_mapRouteProperties","dataStrategy","patchRoutesOnNavigation","initialize","createHashRouter","createHashHistory","_window","__staticRouterHydrationData","deserializeErrors","serialized","__type","UNSAFE_ErrorResponseImpl","__subType","ErrorConstructor","ViewTransitionContext","React","isTransitioning","FetchersContext","startTransitionImpl","flushSyncImpl","ReactDOM","useIdImpl","flushSyncSafe","cb","Deferred","reason","RouterProvider","fallbackElement","router","setStateImpl","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","v7_startTransition","optInStartTransition","startTransitionSafe","setState","newState","deletedFetchers","flushSync","viewTransitionOpts","fetchers","fetcher","current","isViewTransitionUnavailable","startViewTransition","skipTransition","currentLocation","nextLocation","finished","renderPromise","createHref","encodeLocation","go","navigate","to","preventScrollReset","dataRouterContext","static","routerFuture","v7_relativeSplatPath","UNSAFE_logV6DeprecationWarnings","UNSAFE_DataRouterContext","Provider","UNSAFE_DataRouterStateContext","Router","navigationType","historyAction","initialized","v7_partialHydration","MemoizedDataRoutes","DataRoutes","UNSAFE_useRoutesImpl","BrowserRouter","children","historyRef","v5Compat","listen","HashRouter","HistoryRouter","_ref6","ABSOLUTE_URL_REGEX","Link","_ref7","absoluteHref","onClick","relative","reloadDocument","viewTransition","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","useHref","internalOnClick","useLinkClickHandler","defaultPrevented","NavLink","_ref8","ariaCurrentProp","caseSensitive","className","classNameProp","end","styleProp","_excluded2","useResolvedPath","useLocation","routerState","useViewTransitionState","toPathname","locationPathname","nextLocationPathname","navigation","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","Form","_ref9","forwardedRef","fetcherKey","onSubmit","_excluded3","submit","useSubmit","formAction","useFormAction","formMethod","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref10","useScrollRestoration","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","UNSAFE_invariant","useDataRouterState","_temp","replaceProp","useNavigate","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","fetcherId","getUniqueFetcherId","UseSubmit","currentRouteId","UNSAFE_useRouteId","validateClientSideSubmission","formEncType","fromRouteId","_temp2","routeContext","UNSAFE_RouteContext","matches","indexValues","qs","route","joinPaths","useFetcher","_temp3","_route$matches","UseFetcher","routeId","defaultKey","setFetcherKey","getFetcher","deleteFetcher","submitImpl","FetcherForm","IDLE_FETCHER","useFetchers","UseFetchers","_ref11","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp4","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","capture","usePageHide","scrollY","sessionPositions","getKeyWithoutBasename","disableScrollRestoration","enableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","_ref12","when","blocker","useBlocker","confirm","currentPath","nextPath","matchPath","OktaContext","useOktaAuth","handledRedirect","LoginCallback","errorComponent","loadingElement","_ref$loadingElement","onAuthResume","_useOktaAuth","callbackError","_React$useState2","setCallbackError","OktaError","displayError","runtime","regeneratorRuntime","accidentalStrictMode","Function","CancelError","userFn","arguments_","executor","_cancelHandlers","_isPending","_isCanceled","_rejectOnCancel","_promise","_reject","defineProperties","boolean","onFulfilled","onRejected","onFinally","E","evtArr","evts","liveEvents"],"sourceRoot":""}