{"version":3,"file":"static/js/627.a7075540.chunk.js","mappings":"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","sources":["app/hooks/useOracleSettings.js","app/components/Breadcrumb.jsx","app/components/ChatAvatar.jsx","app/components/Chatbox.jsx","app/components/ChatHead.jsx","app/components/ConfirmationDialog.jsx","app/components/MatxMenu.jsx","app/components/MatxProgressBar.jsx","app/components/MatxSearchBox.jsx","app/components/MatxSidenav/MatxSidenav.jsx","app/components/MatxSidenav/MatxSidenavContainer.jsx","app/components/MatxSidenav/MatxSidenavContent.jsx","app/components/MatxSuspense.jsx","app/components/MatxTheme/MatxTheme.jsx","app/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx","app/components/massUpdatePartDescriptionInEnoviaAndERP.jsx","app/components/exportAllTemplateMapping.jsx","app/components/exportAllAdminGeneralProperties.jsx","app/components/exportAllAdminSystemSetups.jsx","app/components/MatxVerticalNav/MatxVerticalNav.jsx","app/components/SimpleCard.jsx","app/styles/utilities/_spacing.js","app/styles/GlobalCss.jsx","app/styles/utilities/_common.js","config/config.js","app/contexts/JWTAuthContext.js","app/auth/loginScreen.jsx","app/auth/AuthGuard.jsx","app/views/sessions/NotFound.jsx","app/utils/getBaseUrl.js","app/unAuthorizedPage.js","app/components/CustomSelect.jsx","app/homepage.js","app/components/Loadable.jsx","app/views/mcolist/McoListRoutes.js","app/privateRoutes.js","app/views/template/importDialog.jsx","app/views/template/exportTemplate.jsx","app/components/sortedExportDataHOC.jsx","app/views/template/template.jsx","app/views/template/templateWrapper.jsx","services/plantService.jsx","app/views/template/attributeDialog.jsx","app/views/template/createTemplate.jsx","app/views/template/editTemplate.jsx","app/views/template/templateRoutes.jsx","app/auth/authRoles.js","app/views/plants/exportPlants.jsx","app/views/plants/plants.js","app/views/plants/connectivityDetailsDialog.jsx","app/views/plants/createPlant.jsx","app/views/plants/editPlant.jsx","app/views/plants/plantRoutes.jsx","services/sourceListService.jsx","app/views/sourceList/createSourceList.jsx","app/views/sourceList/editSourceList.jsx","app/views/sourceList/exportSource.jsx","app/views/sourceList/sourceList.jsx","app/views/sourceList/sourceListroutes.jsx","services/mappingsService.jsx","app/views/mappings/createMappings.js","app/views/mappings/editMappings.js","app/views/mappings/mappings.js","app/views/mappings/mappingsroutes.js","app/views/businessUnit/exportBUList.jsx","app/views/businessUnit/buList.jsx","app/views/businessUnit/createBU.jsx","app/views/businessUnit/editBU.jsx","app/views/businessUnit/buRoutes.jsx","app/views/users/bulkImportUsersDialog.jsx","app/views/users/bulkExportUsersDialog.jsx","app/views/users/usersList.jsx","app/views/users/addEditUsers.jsx","app/views/users/usersRoutes.jsx","app/constant.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedDialog.jsx","services/historyManagementService.jsx","services/mvotempcompService.jsx","app/components/importMappingsDialog.jsx","app/contexts/MvoTempCompContext.js","app/hooks/useMVOtempComp.js","app/contexts/ParttypetemplateContext.js","app/hooks/usePartTypeTemplate.js","app/contexts/MVOallowedchangesContext.js","app/hooks/useMVOallowedChanges.js","app/contexts/SetCompTempContext.js","app/hooks/useCompTemp.js","app/contexts/BUPlantContext.js","app/hooks/useBUPlant.js","app/contexts/ExpenseMapContext.js","app/hooks/useExpenseMap.js","app/components/exportMappingTemplate.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedList.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedWrapper.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedroutes.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvoDialog.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvotemplateList.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvocompatibilityWrapper.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvocompatibiltyroutes.jsx","app/views/mappingPages/partTypeToTemplate/parttypetemplateDialog.jsx","app/views/mappingPages/partTypeToTemplate/parttypeToTemplateList.jsx","app/views/mappingPages/partTypeToTemplate/parttypetemplateWrapper.jsx","app/views/mappingPages/partTypeToTemplate/parttypeTotemplateroutes.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesDialog.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesList.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangeWrapper.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesroutes.jsx","app/views/mappingPages/setCompatibleTemplates/setcomptempDialog.jsx","app/views/mappingPages/setCompatibleTemplates/setcomptempList.jsx","app/views/mappingPages/setCompatibleTemplates/SetCompTempWrapper.jsx","app/views/mappingPages/setCompatibleTemplates/setcomptemproutes.jsx","app/views/mappingPages/buPlantMapping/buplantDialog.jsx","app/views/mappingPages/buPlantMapping/buplantList.jsx","app/views/mappingPages/buPlantMapping/buplantWrapper.jsx","app/views/mappingPages/buPlantMapping/buplantRoutes.jsx","app/views/mappingPages/expenseMapping/expensemapDialog.jsx","app/views/mappingPages/expenseMapping/expensemapList.jsx","app/views/mappingPages/expenseMapping/expensemapWrapper.jsx","app/views/mappingPages/expenseMapping/expensemapRoutes.jsx","app/views/draftChanges/commitChangesForm.jsx","app/views/draftChanges/draftChangesList.jsx","app/views/draftChanges/draftChangesWrapper.jsx","app/views/draftChanges/draftChangesroutes.jsx","app/views/history/historyList.jsx","app/views/history/historyWrapper.jsx","app/views/history/historyroutes.jsx","app/views/systemSetup/exportSetup.jsx","app/views/systemSetup/systemSetupForm.jsx","app/views/systemSetup/systemSetupList.jsx","app/RedirectRoute.js","app/CustomLoginCallback.js","app/routes.jsx","app/views/systemSetup/systemSetupRoutes.jsx","app/components/Fallback/Fallback.jsx","DragAndDrop/DragAndDrop.jsx","app/App.jsx","app/components/Typography.js","app/redux/actions/MCODetailsAction.js","app/components/BuConfirmationBox.jsx","app/contexts/OracleSettingsContext.js","app/redux/reducers/MCODetailsReducer.js","app/redux/reducers/GlobalDataReducer.js","app/redux/reducers/GlobalBUandInstanceReducer.js","app/redux/reducers/RootReducer.js","app/redux/Store.js","app/hooks/useSettings.js","app/components/MatxLayout/MatxLayout.jsx","services/usersService.jsx","services/temlplateService.jsx","app/utils/commonFunctions.js","app/utils/utils.js","app/utils/baseurl.js","services/buService.jsx","app/components/MatxTheme/themeColors.js","app/components/MatxTheme/components.js","app/components/MatxTheme/themeOptions.js","app/components/MatxTheme/initThemes.js","app/components/MatxLayout/settings.js","app/components/MatxLayout/Layout1/Layout1Settings.js","app/contexts/SettingsContext.js","app/utils/mcoUtils/commonUtils.js","app/components/MatxLayout/index.js","app/components/Loader.jsx","services/systemSettingsService.jsx","app/components/McoPages/CustomAlertBox.jsx","app/redux/actions/GlobalBUandInstanceAction.js","services/ApiInstance.js","app/components/CustomAlertBox.jsx","services/massUpdateService.jsx","config/index.js","services/templateMappingService.jsx","app/views/adminConfig/common.jsx","app/components/McoPages/PageError.jsx","services/SaaSExecutionService.jsx","services/OnPremExecutionService.jsx","services/mcoService.jsx","app/components/MatxLoading.jsx","app/utils/constant.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport OracleSettingsContext from 'app/contexts/OracleSettingsContext';\r\n\r\nconst useOracleSettings = () => useContext(OracleSettingsContext)\r\n\r\nexport default useOracleSettings\r\n","import React from 'react';\r\nimport { Breadcrumbs, Hidden, Icon, styled, useTheme } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport shortId from 'shortid';\r\n\r\nconst BreadcrumbRoot = styled('div')(() => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n}));\r\n\r\nconst BreadcrumbName = styled('h4')(() => ({\r\n  margin: 0,\r\n  fontSize: '16px',\r\n  paddingBottom: '1px',\r\n  verticalAlign: 'middle',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubName = styled('span')(({ theme }) => ({\r\n  textTransform: 'capitalize',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst Separator = styled('h4')(({ theme }) => ({\r\n  margin: 0,\r\n  marginLeft: 8,\r\n  paddingBottom: '3px',\r\n  color: theme.palette.text.hint,\r\n}));\r\n\r\nconst StyledIcon = styled(Icon)(() => ({\r\n  marginLeft: 8,\r\n  marginBottom: '4px',\r\n  verticalAlign: 'middle',\r\n}));\r\n\r\nconst Breadcrumb = ({ routeSegments }) => {\r\n  const theme = useTheme();\r\n  const hint = theme.palette.text.hint;\r\n\r\n  return (\r\n    <BreadcrumbRoot>\r\n      {/* {routeSegments ? (\r\n        <Hidden xsDown>\r\n          <BreadcrumbName>{routeSegments[routeSegments.length - 1]['name']}</BreadcrumbName>\r\n          <Separator>|</Separator>\r\n        </Hidden>\r\n      ) : null} */}\r\n\r\n      <Breadcrumbs\r\n        separator={<Icon sx={{ color: hint }}>navigate_next</Icon>}\r\n        sx={{ display: 'flex', alignItems: 'center', position: 'relative' }}\r\n      >\r\n        <NavLink to={\"/calist\"}>\r\n          <StyledIcon color=\"primary\">home</StyledIcon>\r\n        </NavLink>\r\n\r\n        {routeSegments\r\n          ? routeSegments.map((route, index) => {\r\n            return index !== routeSegments.length - 1 ? (\r\n              <NavLink key={shortId.generate()} to={route.path}>\r\n                <SubName key={shortId.generate()}>{route.name}</SubName>\r\n              </NavLink>\r\n            ) : (\r\n              // <SubName key={shortId.generate()}>{route.name}</SubName>\r\n              <BreadcrumbName key={shortId.generate()}>{route.name}</BreadcrumbName>\r\n            );\r\n          })\r\n          : null}\r\n      </Breadcrumbs>\r\n    </BreadcrumbRoot>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { Avatar, Box, styled } from '@mui/material';\r\n\r\nconst StyledAvatar = styled(Avatar)(() => ({\r\n  height: '40px',\r\n  width: '40px',\r\n}));\r\n\r\nconst StatusCircle = styled('div')(({ theme, status }) => ({\r\n  height: '14px',\r\n  width: '14px',\r\n  bottom: '0px',\r\n  right: '-3px',\r\n  borderRadius: '7px',\r\n  position: 'absolute',\r\n  border: '2px solid white',\r\n  background: status === 'online' ? theme.palette.primary.main : theme.palette.error.main,\r\n  color: status !== 'online' && 'white !important',\r\n}));\r\n\r\nconst ChatAvatar = ({ src, status }) => {\r\n  return (\r\n    <Box position=\"relative\">\r\n      <StyledAvatar src={src} />\r\n      <StatusCircle status={status} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatAvatar;\r\n","import { Avatar, Box, Divider, Icon, IconButton, styled, TextField, useTheme } from '@mui/material';\r\nimport { ChatAvatar } from 'app/components';\r\nimport { convertHexToRGB } from 'app/utils/utils';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport { H5, H6, Span } from './Typography';\r\nimport shortId from 'shortid';\r\n\r\nconst ChatContainer = styled('div')(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  background: '#fff',\r\n}));\r\n\r\nconst StyledScrollBar = styled(ScrollBar)(() => ({\r\n  flexGrow: 1,\r\n}));\r\n\r\nconst ProfileBox = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '12px 12px 12px 20px',\r\n  color: theme.palette.primary.main,\r\n  background: '#fafafa',\r\n}));\r\n\r\nconst ChatStatus = styled('div')(({ theme }) => ({\r\n  marginLeft: '12px',\r\n  color: theme.palette.primary.main,\r\n  '& h5': {\r\n    marginTop: 0,\r\n    fontSize: '14px',\r\n    marginBottom: '3px',\r\n  },\r\n  '& span': { fontWeight: '500' },\r\n}));\r\n\r\nconst ChatMessage = styled('div')(({ theme }) => ({\r\n  padding: '8px',\r\n  maxWidth: 240,\r\n  fontSize: '14px',\r\n  borderRadius: '4px',\r\n  marginBottom: '8px',\r\n  whiteSpace: 'pre-wrap',\r\n  wordBreak: 'break-word',\r\n  color: theme.palette.primary.main,\r\n  background: '#fafafa',\r\n}));\r\n\r\nconst MessageTime = styled('span')(({ theme }) => ({\r\n  fontSize: '13px',\r\n  fontWeight: '500',\r\n  color: theme.palette.primary.main,\r\n}));\r\n\r\nconst ChatImgContainer = styled('div')(({ theme }) => ({\r\n  padding: '20px',\r\n  display: 'flex',\r\n  justifyContent: 'flex-end',\r\n}));\r\n\r\nconst ChatImgBox = styled('div')(({ theme }) => ({\r\n  padding: '8px',\r\n  fontSize: '14px',\r\n  maxWidth: 240,\r\n  borderRadius: '4px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  color: theme.palette.primary.main,\r\n  background: '#fafafa',\r\n}));\r\n\r\nconst ChatImg = styled('img')(() => ({ width: '40px' }));\r\nconst ChatImgSize = styled(MessageTime)(() => ({}));\r\n\r\n// for previewing bot message\r\nconst globalMessageList = [];\r\n\r\nconst Chatbox = ({ togglePopup }) => {\r\n  const [isAlive, setIsAlive] = useState(true);\r\n  const [message, setMessage] = useState('');\r\n  const [messageList, setMessageList] = useState([]);\r\n  const currentUserId = '7863a6802ez0e277a0f98534';\r\n  const chatBottomRef = document.querySelector('#chat-scroll');\r\n\r\n  const sendMessageOnEnter = (event) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      let tempMessage = message.trim();\r\n      if (tempMessage !== '') {\r\n        let tempList = [...messageList];\r\n        let messageObject = {\r\n          text: tempMessage,\r\n          contactId: currentUserId,\r\n        };\r\n        tempList.push(messageObject);\r\n        globalMessageList.push(messageObject);\r\n        if (isAlive) setMessageList(tempList);\r\n        dummyReply();\r\n      }\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const dummyReply = async () => {\r\n    setTimeout(() => {\r\n      let tempList = [...messageList];\r\n      let messageObject = {\r\n        text: 'Good to hear from you. enjoy!!!',\r\n        contactId: 'opponents contact id',\r\n        avatar: '/assets/images/faces/13.jpg',\r\n        name: 'Frank Powell',\r\n      };\r\n\r\n      tempList.push(messageObject);\r\n      globalMessageList.push(messageObject);\r\n      if (isAlive) setMessageList(globalMessageList);\r\n    }, 2000);\r\n  };\r\n\r\n  const scrollToBottom = useCallback(() => {\r\n    if (chatBottomRef) {\r\n      chatBottomRef.scrollTo({\r\n        top: chatBottomRef.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [chatBottomRef]);\r\n\r\n  useEffect(() => {\r\n    if (isAlive) {\r\n      setMessageList([\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Do you ever find yourself falling into the “discount trap?”',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Giving away your knowledge or product just to gain clients?',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Yes',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Don’t feel bad. It happens to a lot of us',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Do you ever find yourself falling into the “discount trap?”',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Giving away your knowledge or product just to gain clients?',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Yes',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Don’t feel bad. It happens to a lot of us',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n      ]);\r\n    }\r\n  }, [isAlive]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n    return () => setIsAlive(false);\r\n  }, [messageList, scrollToBottom]);\r\n\r\n  const { palette } = useTheme();\r\n  const primary = palette.primary.main;\r\n  const textPrimary = palette.text.primary;\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ProfileBox>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <ChatAvatar src=\"/assets/images/face-2.jpg\" status=\"online\" />\r\n          <ChatStatus>\r\n            <H5>Ryan Todd</H5>\r\n            <Span>Active</Span>\r\n          </ChatStatus>\r\n        </Box>\r\n        <IconButton onClick={togglePopup}>\r\n          <Icon fontSize=\"small\">clear</Icon>\r\n        </IconButton>\r\n      </ProfileBox>\r\n      <StyledScrollBar id=\"chat-scroll\">\r\n        {messageList.map((item, ind) => (\r\n          <Box\r\n            key={shortId.generate()}\r\n            p=\"20px\"\r\n            display=\"flex\"\r\n            sx={{\r\n              justifyContent: currentUserId === item.contactId && 'flex-end',\r\n            }}\r\n          >\r\n            {currentUserId !== item.contactId && <Avatar src={item.avatar} />}\r\n            <Box ml=\"12px\">\r\n              {currentUserId !== item.contactId && (\r\n                <H5\r\n                  sx={{\r\n                    mb: '4px',\r\n                    fontSize: '14px',\r\n                    color: primary,\r\n                  }}\r\n                >\r\n                  {item.name}\r\n                </H5>\r\n              )}\r\n              <ChatMessage>{item.text}</ChatMessage>\r\n              <MessageTime>1 minute ago</MessageTime>\r\n            </Box>\r\n          </Box>\r\n        ))}\r\n\r\n        {/* example of image sent by current user*/}\r\n        <ChatImgContainer>\r\n          <Box ml=\"12px\">\r\n            <ChatImgBox>\r\n              <ChatImg alt=\"laptop\" src=\"/assets/images/laptop-1.png\" />\r\n              <Box ml=\"12px\">\r\n                <H6 sx={{ mt: 0, mb: '4px' }}>Asus K555LA.png</H6>\r\n                <ChatImgSize>21.5KB</ChatImgSize>\r\n              </Box>\r\n            </ChatImgBox>\r\n            <MessageTime>1 minute ago</MessageTime>\r\n          </Box>\r\n        </ChatImgContainer>\r\n      </StyledScrollBar>\r\n      <div>\r\n        <Divider\r\n          sx={{\r\n            background: `rgba(${convertHexToRGB(textPrimary)}, 0.15)`,\r\n          }}\r\n        />\r\n        <TextField\r\n          placeholder=\"Type here ...\"\r\n          multiline\r\n          rowsMax={4}\r\n          fullWidth\r\n          sx={{ '& textarea': { color: primary } }}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <Box display=\"flex\">\r\n                <IconButton size=\"small\">\r\n                  <Icon>tag_faces</Icon>\r\n                </IconButton>\r\n                <IconButton size=\"small\">\r\n                  <Icon>attachment</Icon>\r\n                </IconButton>\r\n              </Box>\r\n            ),\r\n            classes: { root: 'pl-5 pr-3 py-3 text-body' },\r\n          }}\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyUp={sendMessageOnEnter}\r\n        />\r\n      </div>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n","import { styled } from '@mui/material';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport clsx from 'clsx';\r\nimport { cloneElement, useState } from 'react';\r\n\r\nconst PopupRoot = styled('div')(({ theme }) => ({\r\n  '& .popupOpen': {\r\n    top: topBarHeight + 16,\r\n    [theme.breakpoints.down('sm')]: { bottom: 0 },\r\n  },\r\n  '& .closeIcon': {\r\n    position: 'absolute',\r\n    top: 6,\r\n    right: 6,\r\n  },\r\n}));\r\n\r\nconst Popup = styled('div')(({ theme }) => ({\r\n  position: 'fixed',\r\n  right: theme.spacing(2),\r\n  bottom: theme.spacing(2),\r\n  top: '100vh',\r\n  transition: 'top 250ms ease-in-out',\r\n  boxShadow: theme.shadows[6],\r\n  borderRadius: 6,\r\n  zIndex: 99999,\r\n  width: 360,\r\n  overflow: 'hidden',\r\n  '@media only screen and (max-width: 450px)': {\r\n    width: 'calc(100% - 32px)',\r\n    left: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ChatHead = ({ icon, children }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const togglePopup = async () => {\r\n    setOpen((open) => !open);\r\n  };\r\n\r\n  return (\r\n    <PopupRoot>\r\n      {cloneElement(icon, { onClick: togglePopup })}\r\n      <Popup className={clsx({ popupOpen: open })}>\r\n        {open ? cloneElement(children, { togglePopup }) : null}\r\n      </Popup>\r\n    </PopupRoot>\r\n  );\r\n};\r\n\r\nexport default ChatHead;\r\n","import { Button, Dialog, styled } from '@mui/material';\r\n\r\nconst DialogBox = styled('div')(() => ({\r\n  width: 360,\r\n  padding: '32px',\r\n  textAlign: 'center',\r\n  marginLeft: 'auto',\r\n  marginRight: 'auto',\r\n}));\r\n\r\nconst Title = styled('h4')(() => ({\r\n  margin: 0,\r\n  marginBottom: '8px',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst Controller = styled('div')(() => ({\r\n  margin: '8px',\r\n  paddingTop: '8px',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledButton = styled(Button)(({ theme }) => ({\r\n  margin: '8px',\r\n  paddingLeft: '24px',\r\n  paddingRight: '24px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n  transition: 'all 250ms',\r\n  '&.yesBtn': {\r\n    '&:hover': {\r\n      color: '#ffffff',\r\n      background: `${theme.palette.primary.main} !important`,\r\n      backgroundColor: `${theme.palette.primary.main} !important`,\r\n      fallbacks: [{ color: 'white !important' }],\r\n    },\r\n  },\r\n  '&.noBtn': {\r\n    '&:hover': {\r\n      color: '#ffffff',\r\n      background: `${theme.palette.secondary.main} !important`,\r\n      backgroundColor: `${theme.palette.secondary.main} !important`,\r\n      fallbacks: [{ color: 'white !important' }],\r\n    },\r\n  },\r\n}));\r\n\r\nconst ConfirmationDialog = ({\r\n  open,\r\n  onConfirmDialogClose,\r\n  text,\r\n  title = 'confirm',\r\n  onYesClick,\r\n}) => {\r\n  return (\r\n    <Dialog maxWidth=\"xs\" open={open} onClose={onConfirmDialogClose}>\r\n      <DialogBox>\r\n        <Title>{title}</Title>\r\n        <p>{text}</p>\r\n        <Controller>\r\n          <StyledButton className=\"yesBtn\" variant=\"outlined\" color=\"primary\" onClick={onYesClick}>\r\n            Yes\r\n          </StyledButton>\r\n          <StyledButton\r\n            className=\"noBtn\"\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={onConfirmDialogClose}\r\n          >\r\n            No\r\n          </StyledButton>\r\n        </Controller>\r\n      </DialogBox>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n","import { Menu, ThemeProvider } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport React, { Fragment } from 'react';\r\nimport shortId from 'shortid';\r\n\r\nconst MenuButton = styled(Box)(({ theme }) => ({\r\n  display: 'inline-block',\r\n  color: theme.palette.text.primary,\r\n  '& div:hover': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n}));\r\n\r\nconst MatxMenu = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const children = React.Children.toArray(props.children);\r\n  let { shouldCloseOnItemClick = true, horizontalPosition = 'left' } = props;\r\n  const { settings } = useSettings();\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MenuButton onClick={handleClick}>{props.menuButton}</MenuButton>\r\n      <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n        <Menu\r\n          elevation={8}\r\n          getContentAnchorEl={null}\r\n          anchorEl={anchorEl}\r\n          open={!!anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: horizontalPosition,\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: horizontalPosition,\r\n          }}\r\n        >\r\n          {children.map((child, index) => (\r\n            <div onClick={shouldCloseOnItemClick && handleClose} key={shortId.generate()}>\r\n              {child}\r\n            </div>\r\n          ))}\r\n        </Menu>\r\n      </ThemeProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MatxMenu;\r\n","import { Grid, LinearProgress, Typography } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport { Small } from './Typography';\r\n\r\nconst CustomLinearProgress = styled(LinearProgress)(() => ({\r\n  borderRadius: 2,\r\n  background: 'rgba(0, 0, 0, 0.1)',\r\n}));\r\n\r\nconst MatxProgressBar = ({\r\n  value = 75,\r\n  color = 'primary',\r\n  text = '',\r\n  spacing = 2,\r\n  coloredText = false,\r\n}) => {\r\n  const theme = useTheme();\r\n  const secondary = theme.palette.text.secondary;\r\n\r\n  return (\r\n    <Grid container spacing={spacing} alignItems=\"center\">\r\n      <Grid item xs={text ? 8 : 12}>\r\n        <CustomLinearProgress\r\n          color={color}\r\n          value={value}\r\n          variant=\"determinate\"\r\n        ></CustomLinearProgress>\r\n      </Grid>\r\n      {text !== '' && (\r\n        <Grid item xs={text ? 4 : false}>\r\n          <Typography color={color}>\r\n            <Small sx={{ color: coloredText ? '' : secondary }}>{text}</Small>\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MatxProgressBar;\r\n","import { Icon, IconButton } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport React, { useState } from 'react';\r\n\r\nconst SearchContainer = styled('div')(({ theme }) => ({\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 9,\r\n  width: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  height: topBarHeight,\r\n  background: theme.palette.primary.main,\r\n  color: theme.palette.text.primary,\r\n  '&::placeholder': {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nconst SearchInput = styled('input')(({ theme }) => ({\r\n  width: '100%',\r\n  border: 'none',\r\n  outline: 'none',\r\n  fontSize: '1rem',\r\n  paddingLeft: '20px',\r\n  height: 'calc(100% - 5px)',\r\n  background: theme.palette.primary.main,\r\n  color: theme.palette.text.primary,\r\n  '&::placeholder': { color: theme.palette.text.primary },\r\n}));\r\n\r\nconst MatxSearchBox = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const toggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const { palette } = useTheme();\r\n  const textColor = palette.text.primary;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!open && (\r\n        <IconButton onClick={toggle}>\r\n          <Icon sx={{ color: textColor }}>search</Icon>\r\n        </IconButton>\r\n      )}\r\n\r\n      {open && (\r\n        <SearchContainer>\r\n          <SearchInput type=\"text\" placeholder=\"Search here...\" autoFocus />\r\n          <IconButton onClick={toggle} sx={{ mx: 2, verticalAlign: 'middle' }}>\r\n            <Icon sx={{ color: textColor }}>close</Icon>\r\n          </IconButton>\r\n        </SearchContainer>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MatxSearchBox;\r\n","import { Box, styled, useMediaQuery, useTheme } from '@mui/material';\r\n\r\nconst SideNav = styled('div')(({ theme, width }) => ({\r\n  zIndex: 91,\r\n  width: width,\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  transition: 'width 250ms ease',\r\n  background: theme.palette.background.default,\r\n  [theme.breakpoints.down('sm')]: {\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n  },\r\n}));\r\n\r\nconst SideNavOverlay = styled('div')(() => ({\r\n  zIndex: 90,\r\n  width: '100%',\r\n  height: '100%',\r\n  position: 'absolute',\r\n  background: 'rgba(0, 0, 0, 0.74)',\r\n}));\r\n\r\nconst MatxSidenav = ({ sx, open, children, toggleSidenav, width = '220px' }) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  return (\r\n    <Box height=\"100%\" display=\"flex\">\r\n      <SideNav sx={sx} width={open || !isMobile ? width : '0px'}>\r\n        {children}\r\n      </SideNav>\r\n\r\n      {open && isMobile && <SideNavOverlay onClick={toggleSidenav} />}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MatxSidenav;\r\n","import { styled } from '@mui/material';\r\n\r\nconst Container = styled('div')(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  position: 'relative',\r\n}));\r\n\r\nconst MatxSidenavContainer = ({ children }) => {\r\n  return <Container>{children}</Container>;\r\n};\r\n\r\nexport default MatxSidenavContainer;\r\n","import { styled } from '@mui/material';\r\n\r\nconst Content = styled('div')(() => ({\r\n  flexGrow: 1,\r\n  height: '100%',\r\n  position: 'relative',\r\n}));\r\n\r\nconst MatxSidenavContent = ({ children }) => {\r\n  return <Content>{children}</Content>;\r\n};\r\n\r\nexport default MatxSidenavContent;\r\n","import { MatxLoading } from 'app/components';\r\nimport React, { Suspense } from 'react';\r\n\r\nconst MatxSuspense = ({ children }) => {\r\n  return <Suspense fallback={<MatxLoading />}>{children}</Suspense>;\r\n};\r\n\r\nexport default MatxSuspense;\r\n","import React from 'react';\r\nimport { CssBaseline, ThemeProvider } from '@mui/material';\r\nimport useSettings from 'app/hooks/useSettings';\r\n\r\nconst MatxTheme = ({ children }) => {\r\n  const { settings } = useSettings();\r\n  let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n\r\n  return (\r\n    <ThemeProvider theme={activeTheme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default MatxTheme;\r\n","import { ButtonBase, Icon } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport clsx from 'clsx';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst NavExpandRoot = styled('div')(({ theme }) => ({\r\n  '& .expandIcon': {\r\n    transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\r\n    transform: 'rotate(90deg)',\r\n    color: theme.palette.common.white,\r\n  },\r\n  '& .collapseIcon': {\r\n    transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\r\n    transform: 'rotate(0deg)',\r\n    color: theme.palette.common.white,\r\n  },\r\n  '& .expansion-panel': {\r\n    overflow: 'hidden',\r\n    transition: 'max-height 0.3s cubic-bezier(0, 0, 0.2, 1)',\r\n\r\n  },\r\n  '& .highlight': {\r\n    background: theme.palette.primary.main,\r\n  },\r\n  '&.compactNavItem': {\r\n    width: 44,\r\n    overflow: 'hidden',\r\n    justifyContent: 'center !important',\r\n    '& .itemText': { display: 'none' },\r\n    '& .itemIcon': { display: 'none' },\r\n  },\r\n}));\r\n\r\nconst BaseButton = styled(ButtonBase)(({ theme }) => ({\r\n  height: 44,\r\n  width: '100%',\r\n  whiteSpace: 'pre',\r\n  overflow: 'hidden',\r\n  paddingRight: '16px',\r\n  borderRadius: '4px',\r\n  marginBottom: '8px',\r\n  display: 'flex',\r\n  justifyContent: 'space-between !important',\r\n  color: theme.palette.text.primary,\r\n  //color: theme.palette.common.white,\r\n  '&:hover': { background: 'rgba(255, 255, 255, 0.08)' },\r\n  '& .icon': {\r\n    width: 36,\r\n    fontSize: '18px',\r\n    paddingLeft: '16px',\r\n    paddingRight: '16px',\r\n    verticalAlign: 'middle',\r\n    color: 'white',\r\n  },\r\n}));\r\n\r\nconst BulletIcon = styled('div')(({ theme }) => ({\r\n  width: 4,\r\n  height: 4,\r\n  color: 'inherit',\r\n  overflow: 'hidden',\r\n  marginLeft: '20px',\r\n  marginRight: '8px',\r\n  borderRadius: '300px !important',\r\n  background: theme.palette.primary.contrastText,\r\n\r\n}));\r\n\r\nconst ItemText = styled('span')(({ theme }) => ({\r\n  fontSize: '0.875rem',\r\n  paddingLeft: '0.8rem',\r\n  verticalAlign: 'middle',\r\n  color: theme.palette.common.white,\r\n  //color: 'white',\r\n}));\r\n\r\nconst BadgeValue = styled('div')(() => ({\r\n  padding: '1px 4px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n  //color: 'white',\r\n}));\r\n\r\nconst MatxVerticalNavExpansionPanel = ({ item, children, mode }) => {\r\n  const [collapsed, setCollapsed] = useState(true); // State to manage collapsed/expanded state\r\n  const elementRef = useRef(null); // Ref to track the DOM element\r\n  const componentHeight = useRef(0); // Ref to store the calculated height\r\n  const { pathname } = useLocation(); // To track the current route\r\n  const { name, icon, iconText, badge } = item; // Destructure item props\r\n\r\n  // Toggle collapsed state with additional checks for child clicks\r\n  const handleClick = (e) => {\r\n    // Prevent collapsing if a child is clicked\r\n    const isChildClick = e?.target?.closest('.submenu');\r\n    if (isChildClick) return;\r\n\r\n    componentHeight.current = 0;\r\n    calcaulateHeight(elementRef.current);\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const calcaulateHeight = useCallback((node) => {\r\n    if (node.name !== 'child') {\r\n      for (let child of node.children) {\r\n        calcaulateHeight(child);\r\n      }\r\n    }\r\n\r\n    if (node.name === 'child') componentHeight.current += node.scrollHeight;\r\n    else componentHeight.current += 44; //here 44 is node height\r\n    return;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!elementRef) return;\r\n\r\n    calcaulateHeight(elementRef.current);\r\n\r\n    // OPEN DROPDOWN IF CHILD IS ACTIVE OR NAME IS \"Search\"\r\n    for (let child of elementRef.current.children) {\r\n      if (child.getAttribute('href') === pathname || name === \"Search\") {\r\n        setCollapsed(false);\r\n      }\r\n    }\r\n  }, [pathname, calcaulateHeight, name]);\r\n\r\n  return (\r\n    <NavExpandRoot>\r\n      <BaseButton\r\n        className={clsx({\r\n          'has-submenu compactNavItem': true,\r\n          compactNavItem: mode === 'compact',\r\n          open: !collapsed,\r\n        })}\r\n        onClick={(e) => handleClick(e)} // Pass the event to handleClick\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          {icon && <Icon className=\"icon\">{icon}</Icon>}\r\n          {iconText && <BulletIcon />}\r\n          <ItemText className={`sidenavHoverShow`}>{name}</ItemText>\r\n        </Box>\r\n\r\n        {badge && <BadgeValue className=\"sidenavHoverShow itemIcon\">{badge.value}</BadgeValue>}\r\n\r\n        <div\r\n          className={clsx({\r\n            sidenavHoverShow: true,\r\n            collapseIcon: collapsed,\r\n            expandIcon: !collapsed,\r\n          })}\r\n        >\r\n          <Icon fontSize=\"small\" sx={{ verticalAlign: 'middle' }}>\r\n            chevron_right\r\n          </Icon>\r\n        </div>\r\n      </BaseButton>\r\n\r\n      <div\r\n        ref={elementRef}\r\n        className=\"expansion-panel submenu\"\r\n        style={collapsed ? { maxHeight: '0px' } : { maxHeight: componentHeight.current + 'px' }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </NavExpandRoot>\r\n  );\r\n};\r\n\r\nexport default React.memo(MatxVerticalNavExpansionPanel);","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from 'shortid';\r\nimport { BUService } from \"services/buService\";\r\nimport { MassUpdate } from \"services/massUpdateService\";\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl\r\n} from \"@mui/material\";\r\n\r\n\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\n// import download from 'downloadjs';\r\n// import CustomSelect from \"./CustomSelect\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialog-paper-root': {\r\n        backgroundColor: '#ffffff',\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst MassUpdatePartDescriptionInEnoviaAndERP = (props) => {\r\n    const buService = new BUService();\r\n    const massUpdate = new MassUpdate();\r\n    const { importMassupdateFile, setImportMassupdateFile, setOpenAlert, setOpenDesc, setIsLoading } = props;\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n    const [sampleFileUrl, setSampleFileUrl] = useState(null);\r\n    // const [bussinessUnitLists, setBussinessUnitLists] = useState([]);\r\n    const instance = localStorage.getItem('instance')\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n\r\n    // const [ERPTypeError, setERPTypeError] = useState(false);\r\n    // const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n    });\r\n\r\n    const importFileData = (e) => {\r\n        console.log('file selected')\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0])\r\n                setImportedFileName(e.target.files[0].name)\r\n                setNoFileError(false)\r\n            } else {\r\n                setNoFileError(true)\r\n                setImportedFileName(null)\r\n                setImportedFileData(null)\r\n            }\r\n        } else {\r\n            setNoFileError(true)\r\n            setImportedFileName(null)\r\n            setImportedFileData(null)\r\n        }\r\n    }\r\n    const handleCloseImport = () => {\r\n        setImportedFileData(null)\r\n        setImportMassupdateFile(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n        //console.info(event.target, 'importSelectionValues')\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (importedFileData === null || importedFileData.length < 1) {\r\n            setNoFileError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n\r\n        if (importedFileData !== null) {\r\n            //alert('file is upl7oaded')\r\n            if (window.confirm(`You have requested a report that will take some time to complete. This report will continue to run if you close this browser window. To access this report later, use 'Mass Update Part Description' > My Report.`)) {\r\n                setImportMassupdateFile(false);\r\n                setIsLoading(true);\r\n\r\n                console.log('ok for mass update')\r\n                let postData = {\r\n                    'file': importedFileData,\r\n                    data: {\r\n                        BU: importSelectionValues.BU,\r\n                        Instance: instance,\r\n                    }\r\n                };\r\n\r\n                // console.log(importSelectionValues, 'importSelectionValues');\r\n                console.log(postData, 'postData');\r\n                massUpdate.massUpdatePartDescription(postData).then((response) => {\r\n                    console.log(response, 'response 11111');\r\n                    setImportResponse(response)\r\n                    setimportfileBar(true);\r\n                    setImportedFileData(null)\r\n                    setImportedFileName(null)\r\n                    setImportMassupdateFile(false)\r\n\r\n                    setIsLoading(false);\r\n                    setOpenAlert(false);\r\n                    if (response?.status === \"success\") {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"success\",\r\n                            desc: response?.msg,\r\n                        });\r\n                    } else if (response?.status === \"failed\") {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"error\",\r\n                            desc: response?.msg,\r\n                        });\r\n                    }\r\n\r\n                    // if (!importResponse?.errorInTemplateCount || !importResponse?.errorInPlantCount) {\r\n                    //     updateRefreshData(true);\r\n                    //     fetchData()\r\n                    // }\r\n                });\r\n            }\r\n            console.log('cancle for mass update')\r\n        }\r\n    }\r\n    const handleImportfileBarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setimportfileBar(false);\r\n    };\r\n    const getUniqueValues = (column) => {\r\n        const values = new Set();\r\n        bussinessUnitLists?.forEach(item => {\r\n            values.add(item[column]);\r\n        })\r\n        return Array.from(values);\r\n    };\r\n    useEffect(() => {\r\n        if (bussinessUnitLists?.length === 0) {\r\n            // buService.getAllBuList().then((result) => {\r\n            //   setBussinessUnitLists(result.data)\r\n            // });\r\n        }\r\n    }, [bussinessUnitLists])\r\n    const handleDownload = () => {\r\n        let filelocation = 'massUpdate/sample-massUpdatepartDescription.xlsx'\r\n        massUpdate.downloadSampleFile(filelocation)\r\n    };\r\n    return (\r\n        <>\r\n            <Dialog open={importMassupdateFile}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Mass Update Part Description in Enovia and ERP\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Instance\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel id=\"bussinessUnit\">{instance}</InputLabel>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Upload File (Excel File)\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                                    Upload file\r\n                                                    <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                                </Button>\r\n                                                {noFileError && (<p>Please Select xlsx file to Upload </p>)}\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={2}>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <a\r\n                                                    // href={sampleFileUrl}\r\n                                                    onClick={handleDownload}\r\n                                                    download=\"Example-XLSX-document\"\r\n                                                    rel=\"noreferrer\"\r\n                                                    // target=\"_blank\"\r\n                                                    //style={{ color: \"blue\" }}\r\n                                                    style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                                                >\r\n                                                    Click Here\r\n                                                </a> to download the sample Excel template for the Part Description Update.\r\n\r\n                                                {/* <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={() => { download(sampleFileUrl) }}>\r\n                                                Download sample file\r\n                                            </Button> */}\r\n                                                {/* </a> */}\r\n                                            </div>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <b>Note:</b> Use only the Excel template, downloaded from this page. Other Excel templates\r\n                                                will not be accepted. The Excel file has four columns with Header labels in the\r\n                                                following order. Fields mark with * are the mandatory fields in the input excel.\r\n                                            </div>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                Part Type*<br />\r\n                                                Part Name*<br />\r\n                                                Part Revision*<br />\r\n                                                Part Description*<br />\r\n                                            </div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Snackbar\r\n                open={importfileBar}\r\n                autoHideDuration={6000}\r\n                onClose={handleImportfileBarClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleImportfileBarClose}\r\n                    severity={(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"success\" : \"error\"}\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    <AlertTitle>{(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"Success\" : \"Error\"}</AlertTitle>\r\n                    {\r\n                        (importResponse && (importResponse?.errorInTemplate?.length || importResponse?.errorInPlants?.length)) ? (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse?.msg} <br />\r\n                                    {\r\n                                        (importResponse?.errorInTemplateCount) ? (<>\r\n                                            Total Template Count: {importResponse?.errorInTemplateCount} <br />\r\n                                            Templates are: <br />\r\n                                            <ul>\r\n                                                {\r\n                                                    importResponse?.errorInTemplate?.map((eitem) => {\r\n                                                        return (\r\n                                                            <li key={shortId.generate()}>\r\n                                                                {eitem}\r\n                                                            </li>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </ul>\r\n                                        </>) : (<></>)\r\n                                    }\r\n\r\n                                    {\r\n                                        (importResponse?.errorInPlantCount) ? (\r\n                                            <>\r\n                                                Total Plant Count: {importResponse?.errorInPlantCount} <br />\r\n                                                Plants are: <br />\r\n                                                <ul>\r\n                                                    {\r\n                                                        importResponse?.errorInPlants?.map((eitem) => {\r\n                                                            return (\r\n                                                                <li key={shortId.generate()}>\r\n                                                                    {eitem}\r\n                                                                </li>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </ul>\r\n                                            </>\r\n                                        ) : (<></>)\r\n                                    }\r\n\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse.msg} <br />\r\n                                    Parts Description Updated: {importResponse.updateTemplates} <br />\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                    {/* Template imported successfully! */}\r\n                </Alert>\r\n            </Snackbar >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MassUpdatePartDescriptionInEnoviaAndERP;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { BUService } from \"services/buService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from \"@mui/material\";\r\n\r\n//import MuiAlert from \"@mui/material/Alert\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst ExportAllTemplateMapping = (props) => {\r\n    const buService = new BUService();\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { exportAllTempMapping, setExportAllTempMapping } = props;\r\n    // const [noFileError, setNoFileError] = useState(false);\r\n    // const [importResponse, setImportResponse] = useState(false);\r\n    // const [importfileBar, setimportfileBar] = useState(false);\r\n    // const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n    // const [sampleFileUrl, setSampleFileUrl] = useState(null);\r\n    //const [bussinessUnitLists, setBussinessUnitLists] = useState([]);\r\n    //const instance = localStorage.getItem('instance')\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    // const [ERPTypeError, setERPTypeError] = useState(false);\r\n    // const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n        dataToExport: 'masterData'\r\n    });\r\n\r\n    // const importFileData = (e) => {\r\n    //     console.log('file selected')\r\n    //     if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n    //         setImportedFileData(e.target.files[0])\r\n    //         setImportedFileName(e.target.files[0].name)\r\n    //         setNoFileError(false)\r\n    //     } else {\r\n    //         setNoFileError(true)\r\n    //         setImportedFileName(null)\r\n    //         setImportedFileData(null)\r\n    //     }\r\n    // }\r\n    const handleCloseImport = () => {\r\n        // setImportedFileData(null)\r\n        setExportAllTempMapping(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n        console.info(event.target, 'importSelectionValues')\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n\r\n        //if (importedFileData !== null) {\r\n        //alert('file is upl7oaded')\r\n        //if (window.confirm(`You have requested a report that will take some time to complete. This report will continue to run if you close this browser window. To access this report later, use 'Mass Update Part Description' > My Report.`)) {\r\n        //console.log('ok for mass update')\r\n        let postData = {\r\n            rdo: importSelectionValues.BU,\r\n            dataToExport: importSelectionValues.dataToExport,\r\n        }\r\n\r\n        // console.log(importSelectionValues, 'importSelectionValues');\r\n        console.log(postData, 'postData');\r\n        templateMappingService.exportAllTemplateMapping(postData).then((response) => {\r\n            console.log(response, 'response 11111');\r\n            // setImportResponse(response)\r\n            // setimportfileBar(true);\r\n            // setImportedFileData(null)\r\n            setImportedFileName(null)\r\n            //console.log(response, ';resprespresp')\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n            setExportAllTempMapping(false)\r\n        });\r\n        // }\r\n        // console.log('cancle for mass update')\r\n        //}\r\n    }\r\n\r\n    // const handleImportfileBarClose = (event, reason) => {\r\n    //     if (reason === \"clickaway\") {\r\n    //         return;\r\n    //     }\r\n    //     setimportfileBar(false);\r\n    // };\r\n    // const getUniqueValues = (column) => {\r\n    //     const values = new Set();\r\n    //     bussinessUnitLists?.forEach(item=>{\r\n    //         values.add(item[column]);\r\n    //     })\r\n    //     return Array.from(values);\r\n    // };\r\n    useEffect(() => {\r\n        if (bussinessUnitLists?.length === 0) {\r\n            // buService.getAllBuList().then((result) => {\r\n            //   setBussinessUnitLists(result.data)\r\n            // });\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Dialog open={exportAllTempMapping}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Export All Template Mappings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Data to Export\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <FormControl>\r\n                                                    {/* <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel> */}\r\n                                                    <RadioGroup\r\n                                                        row\r\n                                                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                                                        name=\"dataToExport\"\r\n                                                        defaultValue=\"masterData\"\r\n                                                        // value={value}\r\n                                                        onChange={handleImportOptionSelection}\r\n                                                    >\r\n                                                        <FormControlLabel value=\"masterData\" control={<Radio />} label=\"Master Data\" />\r\n                                                        <FormControlLabel value=\"draftData\" control={<Radio />} label=\"Proposed Changes\" />\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExportAllTemplateMapping;","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { BUService } from \"services/buService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from \"@mui/material\";\r\n\r\n//import MuiAlert from \"@mui/material/Alert\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst ExportAllGeneralPropertiesDialogBox = (props) => {\r\n    const buService = new BUService();\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { exportAllAdminGeneralPropertiesDialog, setExportAllAdminGeneralPropertiesDialog } = props;    \r\n    const [importedFileName, setImportedFileName] = useState(null);    \r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n        dataToExport: 'masterData'\r\n    });\r\n    \r\n    const handleCloseImport = () => {\r\n        // setImportedFileData(null)\r\n        setExportAllAdminGeneralPropertiesDialog(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n        let postData = {\r\n            rdo: importSelectionValues.BU,\r\n            dataToExport: importSelectionValues.dataToExport,\r\n        }\r\n        templateMappingService.exportAllAdminGeneralProperties(postData).then((response) => {\r\n            console.log(response, 'response 11111');\r\n            setImportedFileName(null)\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n            setExportAllAdminGeneralPropertiesDialog(false)\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Dialog open={exportAllAdminGeneralPropertiesDialog}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Export All Admin General Properties\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Data to Export\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <FormControl>\r\n                                                    {/* <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel> */}\r\n                                                    <RadioGroup\r\n                                                        row\r\n                                                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                                                        name=\"dataToExport\"\r\n                                                        defaultValue=\"masterData\"\r\n                                                        // value={value}\r\n                                                        onChange={handleImportOptionSelection}\r\n                                                    >\r\n                                                        <FormControlLabel value=\"masterData\" control={<Radio />} label=\"Master Data\" />\r\n                                                        <FormControlLabel value=\"draftData\" control={<Radio />} label=\"Proposed Changes\" />\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExportAllGeneralPropertiesDialogBox;","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { BUService } from \"services/buService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from \"@mui/material\";\r\n\r\n//import MuiAlert from \"@mui/material/Alert\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst ExportAllSystemSetupsDialogBox = (props) => {\r\n    const buService = new BUService();\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { exportAllAdminSystemSetupsDialog, setExportAllAdminSystemSetupsDialog } = props;    \r\n    const [importedFileName, setImportedFileName] = useState(null);    \r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n        dataToExport: 'masterData'\r\n    });\r\n    \r\n    const handleCloseImport = () => {\r\n        // setImportedFileData(null)\r\n        setExportAllAdminSystemSetupsDialog(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n        let postData = {\r\n            rdo: importSelectionValues.BU,\r\n            dataToExport: importSelectionValues.dataToExport,\r\n        }\r\n        templateMappingService.exportAllAdminSystemSetups(postData).then((response) => {\r\n            console.log(response, 'response 11111');\r\n            setImportedFileName(null)\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n            setExportAllAdminSystemSetupsDialog(false)\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Dialog open={exportAllAdminSystemSetupsDialog}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Export All Admin System System\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Data to Export\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <FormControl>\r\n                                                    {/* <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel> */}\r\n                                                    <RadioGroup\r\n                                                        row\r\n                                                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                                                        name=\"dataToExport\"\r\n                                                        defaultValue=\"masterData\"\r\n                                                        // value={value}\r\n                                                        onChange={handleImportOptionSelection}\r\n                                                    >\r\n                                                        <FormControlLabel value=\"masterData\" control={<Radio />} label=\"Master Data\" />\r\n                                                        <FormControlLabel value=\"draftData\" control={<Radio />} label=\"Proposed Changes\" />\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExportAllSystemSetupsDialogBox;","import { Box, ButtonBase, Icon, styled, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from '@mui/system';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport React, { Fragment, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Paragraph, Span } from '../Typography';\r\nimport MatxVerticalNavExpansionPanel from './MatxVerticalNavExpansionPanel';\r\nimport shortId from 'shortid';\r\n// import { getBasename } from \"app/utils/baseurl\";\r\nimport MassUpdatePartDescriptionInEnoviaAndERP from '../massUpdatePartDescriptionInEnoviaAndERP';\r\nimport ExportAllTemplateMapping from '../exportAllTemplateMapping';\r\nimport ExportAllGeneralPropertiesDialogBox from '../exportAllAdminGeneralProperties';\r\nimport CustomAlertBox from \"app/components/McoPages/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport ExportAllSystemSetupsDialogBox from '../exportAllAdminSystemSetups';\r\nconst ListLabel = styled(Paragraph)(({ theme, mode }) => ({\r\n  fontSize: '12px',\r\n  marginTop: '20px',\r\n  marginLeft: '15px',\r\n  marginBottom: '10px',\r\n  textTransform: 'uppercase',\r\n  display: mode === 'compact' && 'none',\r\n  color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst ExtAndIntCommon = {\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  borderRadius: '4px',\r\n  height: 44,\r\n  whiteSpace: 'pre',\r\n  marginBottom: '8px',\r\n  textDecoration: 'none',\r\n  justifyContent: 'space-between',\r\n  transition: 'all 150ms ease-in',\r\n  '&:hover': { background: 'rgba(255, 255, 255, 0.08)' },\r\n  '&.compactNavItem': {\r\n    overflow: 'hidden',\r\n    justifyContent: 'center !important',\r\n  },\r\n  '& .icon': {\r\n    fontSize: '18px',\r\n    paddingLeft: '16px',\r\n    paddingRight: '16px',\r\n    verticalAlign: 'middle',\r\n  },\r\n};\r\nconst ExternalLink = styled('a')(({ theme }) => ({\r\n  ...ExtAndIntCommon,\r\n  color: theme.palette.text.primary,\r\n}));\r\n\r\nconst InternalLink = styled(Box)(({ theme }) => ({\r\n  '& a': {\r\n    ...ExtAndIntCommon,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  '& .navItemActive': {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.16)',\r\n  },\r\n}));\r\n\r\nconst StyledText = styled(Span)(({ mode, theme }) => ({\r\n  fontSize: '0.875rem',\r\n  paddingLeft: '0.8rem',\r\n  display: mode === 'compact' && 'none',\r\n  color: theme.palette.common.white,\r\n}));\r\n\r\n//for mass update start\r\nconst StyledTextforMassUpdate = styled(Span)(({ mode, theme }) => ({\r\n  fontSize: '0.875rem',\r\n  paddingLeft: '0.8rem',\r\n  display: mode === 'compact' && 'none',\r\n  color: theme.palette.common.white,\r\n}));\r\n//for mass update end\r\nconst BulletIcon = styled('div')(({ theme }) => ({\r\n  padding: '2px',\r\n  marginLeft: '24px',\r\n  marginRight: '8px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n  background: theme.palette.common.white,\r\n}));\r\n\r\nconst BadgeValue = styled('div')(() => ({\r\n  padding: '1px 8px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n}));\r\n\r\nconst MatxVerticalNav = ({ items }) => {\r\n  const { settings, updateSettings } = useSettings();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { mode } = settings.layout1Settings.leftSidebar;\r\n  const theme = useTheme();\r\n  const isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  // const getBasenameVal = getBasename();\r\n  // const routePaths = getBasenameVal?.segment;\r\n  const [importMassupdateFile, setImportMassupdateFile] = useState(false)\r\n  const [exportAllTempMapping, setExportAllTempMapping] = useState(false)\r\n  const [exportAllAdminGeneralPropertiesDialog, setExportAllAdminGeneralPropertiesDialog] = useState(false)\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [exportAllAdminSystemSetupsDialog, setExportAllAdminSystemSetupsDialog] = useState(false)\r\n  const handleClickImportButton = (event) => {\r\n    if (event === 'massUpdate') {\r\n      setImportMassupdateFile(true)\r\n    } else if (event === 'exportAll') {\r\n      setExportAllTempMapping(true)\r\n    } else if (event === 'exportAllAdminGeneralProperties') {\r\n      setExportAllAdminGeneralPropertiesDialog(true)\r\n    } else if (event === 'exportAllAdminSystemSetups') {\r\n      setExportAllAdminSystemSetupsDialog(true)\r\n    }\r\n  }\r\n  // For NavLink components\r\n  const handleNavLinkClick = () => {\r\n    if (isMdScreen) {\r\n      updateSidebarMode({ mode: 'close' }); // Close the sidebar\r\n    }\r\n  };\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    let activeLayoutSettingsName = settings.activeLayout + 'Settings';\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    updateSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const renderLevels = (data) => {\r\n    return data.map((item, index) => {\r\n      if (item.type === 'label')\r\n        return (\r\n          <ListLabel key={shortId.generate()} mode={mode} className=\"sidenavHoverShow\">\r\n            {item.label}\r\n          </ListLabel>\r\n        );\r\n\r\n      if (item.children) {\r\n        return (\r\n          <MatxVerticalNavExpansionPanel mode={mode} item={item}>\r\n            <div style={{ marginLeft: '20px' }}>\r\n              {renderLevels(item.children)}\r\n            </div>\r\n          </MatxVerticalNavExpansionPanel>\r\n        );\r\n      } else if (item.type === 'extLink') {\r\n        return (\r\n          <ExternalLink\r\n            key={shortId.generate()}\r\n            href={item.path}\r\n            className={`${mode === 'compact' && 'compactNavItem'}`}\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n              {(() => {\r\n                if (item.icon) {\r\n                  return <Icon className=\"icon\">{item.icon}</Icon>;\r\n                } else {\r\n                  return <span className=\"item-icon icon-text\">{item.iconText}</span>;\r\n                }\r\n              })()}\r\n              <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                {item.name}\r\n              </StyledText>\r\n              <Box mx=\"auto\"></Box>\r\n              {item.badge && <BadgeValue>{item.badge.value}</BadgeValue>}\r\n            </ButtonBase>\r\n          </ExternalLink>\r\n        );\r\n      } else if (item.type === 'popup3') {\r\n        return (\r\n          <InternalLink key={shortId.generate()}>\r\n            {\r\n              (item.type === undefined || item.type === \"popup3\" || item.type !== \"popup\") ? (\r\n                <>\r\n                  {\r\n                    (item.type === \"popup3\") ? (\r\n                      <>\r\n                        <NavLink>\r\n                          <ButtonBase onClick={() => {\r\n                            handleClickImportButton(item.path)\r\n                          }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                            {item?.icon ? (\r\n                              <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                {item.icon}\r\n                              </Icon>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <BulletIcon\r\n                                  className={`nav-bullet`}\r\n                                  sx={{ display: mode === 'compact' && 'none' }}\r\n                                />\r\n                                <Box\r\n                                  className=\"nav-bullet-text\"\r\n                                  sx={{\r\n                                    ml: '20px',\r\n                                    fontSize: '11px',\r\n                                    display: mode !== 'compact' && 'none',\r\n                                  }}\r\n                                >\r\n                                  {item.iconText}\r\n                                </Box>\r\n                              </Fragment>\r\n                            )}\r\n                            <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledText>\r\n\r\n                            <Box mx=\"auto\" />\r\n\r\n                            {item.badge && (\r\n                              <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                            )}\r\n                          </ButtonBase>\r\n                        </NavLink>\r\n                        <ExportAllGeneralPropertiesDialogBox\r\n                          exportAllAdminGeneralPropertiesDialog={exportAllAdminGeneralPropertiesDialog}\r\n                          setExportAllAdminGeneralPropertiesDialog={setExportAllAdminGeneralPropertiesDialog}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <NavLink\r\n                        onClick={handleNavLinkClick}\r\n                        to={`${item.path}`}\r\n                        className={({ isActive }) =>\r\n                          isActive\r\n                            ? `navItemActive ${mode === 'compact' && 'compactNavItem'}`\r\n                            : `${mode === 'compact' && 'compactNavItem'}`\r\n                        }\r\n                      >\r\n                        <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          {item?.icon ? (\r\n                            <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                              {item.icon}\r\n                            </Icon>\r\n                          ) : (\r\n                            <Fragment>\r\n                              <BulletIcon\r\n                                className={`nav-bullet`}\r\n                                sx={{ display: mode === 'compact' && 'none' }}\r\n                              />\r\n                              <Box\r\n                                className=\"nav-bullet-text\"\r\n                                sx={{\r\n                                  ml: '20px',\r\n                                  fontSize: '11px',\r\n                                  display: mode !== 'compact' && 'none',\r\n                                }}\r\n                              >\r\n                                {item.iconText}\r\n                              </Box>\r\n                            </Fragment>\r\n                          )}\r\n                          <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                            {item.name}\r\n                          </StyledText>\r\n\r\n                          <Box mx=\"auto\" />\r\n\r\n                          {item.badge && (\r\n                            <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                          )}\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    )\r\n                  }\r\n                </>\r\n              ) :\r\n                (\r\n                  <>\r\n                    <InternalLink key={shortId.generate()}>\r\n                      <NavLink>\r\n                        <ButtonBase onClick={() => {\r\n                          handleClickImportButton(item.path)\r\n                        }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          <Fragment>\r\n                            <BulletIcon\r\n                              className={`nav-bullet`}\r\n                              sx={{ display: mode === 'compact' && 'none' }}\r\n                            />\r\n                            <StyledTextforMassUpdate mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledTextforMassUpdate>\r\n                          </Fragment>\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    </InternalLink>\r\n                    <MassUpdatePartDescriptionInEnoviaAndERP\r\n                      importMassupdateFile={importMassupdateFile}\r\n                      setImportMassupdateFile={setImportMassupdateFile}\r\n                      setOpenAlert={setOpenAlert}\r\n                      setOpenDesc={setOpenDesc}\r\n                      setIsLoading={setIsLoading}\r\n                    />\r\n                    {\r\n                      (openDesc) ? (\r\n                        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                      ) : (<></>)\r\n                    }\r\n                    {\r\n                      isLoading ? (\r\n                        <div className=\"textAlignCenter\">\r\n                          <Loader show={isLoading} />\r\n                        </div>\r\n                      ) : <></>\r\n                    }\r\n                  </>\r\n                )\r\n            }\r\n          </InternalLink>\r\n        );\r\n      } else if (item.type === 'popup6') {\r\n        return (\r\n          <InternalLink key={shortId.generate()}>\r\n            {\r\n              (item.type === undefined || item.type === \"popup6\" || item.type !== \"popup\") ? (\r\n                <>\r\n                  {\r\n                    (item.type === \"popup6\") ? (\r\n                      <>\r\n                        <NavLink>\r\n                          <ButtonBase onClick={() => {\r\n                            handleClickImportButton(item.path)\r\n                          }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                            {item?.icon ? (\r\n                              <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                {item.icon}\r\n                              </Icon>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <BulletIcon\r\n                                  className={`nav-bullet`}\r\n                                  sx={{ display: mode === 'compact' && 'none' }}\r\n                                />\r\n                                <Box\r\n                                  className=\"nav-bullet-text\"\r\n                                  sx={{\r\n                                    ml: '20px',\r\n                                    fontSize: '11px',\r\n                                    display: mode !== 'compact' && 'none',\r\n                                  }}\r\n                                >\r\n                                  {item.iconText}\r\n                                </Box>\r\n                              </Fragment>\r\n                            )}\r\n                            <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledText>\r\n\r\n                            <Box mx=\"auto\" />\r\n\r\n                            {item.badge && (\r\n                              <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                            )}\r\n                          </ButtonBase>\r\n                        </NavLink>\r\n                        <ExportAllSystemSetupsDialogBox\r\n                          exportAllAdminSystemSetupsDialog={exportAllAdminSystemSetupsDialog}\r\n                          setExportAllAdminSystemSetupsDialog={setExportAllAdminSystemSetupsDialog}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <NavLink\r\n                        onClick={handleNavLinkClick}\r\n                        to={`${item.path}`}\r\n                        className={({ isActive }) =>\r\n                          isActive\r\n                            ? `navItemActive ${mode === 'compact' && 'compactNavItem'}`\r\n                            : `${mode === 'compact' && 'compactNavItem'}`\r\n                        }\r\n                      >\r\n                        <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          {item?.icon ? (\r\n                            <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                              {item.icon}\r\n                            </Icon>\r\n                          ) : (\r\n                            <Fragment>\r\n                              <BulletIcon\r\n                                className={`nav-bullet`}\r\n                                sx={{ display: mode === 'compact' && 'none' }}\r\n                              />\r\n                              <Box\r\n                                className=\"nav-bullet-text\"\r\n                                sx={{\r\n                                  ml: '20px',\r\n                                  fontSize: '11px',\r\n                                  display: mode !== 'compact' && 'none',\r\n                                }}\r\n                              >\r\n                                {item.iconText}\r\n                              </Box>\r\n                            </Fragment>\r\n                          )}\r\n                          <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                            {item.name}\r\n                          </StyledText>\r\n\r\n                          <Box mx=\"auto\" />\r\n\r\n                          {item.badge && (\r\n                            <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                          )}\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    )\r\n                  }\r\n                </>\r\n              ) :\r\n                (\r\n                  <>\r\n                    <InternalLink key={shortId.generate()}>\r\n                      <NavLink>\r\n                        <ButtonBase onClick={() => {\r\n                          handleClickImportButton(item.path)\r\n                        }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          <Fragment>\r\n                            <BulletIcon\r\n                              className={`nav-bullet`}\r\n                              sx={{ display: mode === 'compact' && 'none' }}\r\n                            />\r\n                            <StyledTextforMassUpdate mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledTextforMassUpdate>\r\n                          </Fragment>\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    </InternalLink>\r\n                    <MassUpdatePartDescriptionInEnoviaAndERP\r\n                      importMassupdateFile={importMassupdateFile}\r\n                      setImportMassupdateFile={setImportMassupdateFile}\r\n                      setOpenAlert={setOpenAlert}\r\n                      setOpenDesc={setOpenDesc}\r\n                      setIsLoading={setIsLoading}\r\n                    />\r\n                    {\r\n                      (openDesc) ? (\r\n                        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                      ) : (<></>)\r\n                    }\r\n                    {\r\n                      isLoading ? (\r\n                        <div className=\"textAlignCenter\">\r\n                          <Loader show={isLoading} />\r\n                        </div>\r\n                      ) : <></>\r\n                    }\r\n                  </>\r\n                )\r\n            }\r\n          </InternalLink>\r\n        );\r\n      } else {\r\n        return (\r\n          <InternalLink key={shortId.generate()}>\r\n            {\r\n              (item.type === undefined || item.type === \"popup2\" || item.type !== \"popup\") ? (\r\n                <>\r\n                  {\r\n                    (item.type === \"popup2\") ? (\r\n                      <>\r\n                        <NavLink>\r\n                          <ButtonBase onClick={() => {\r\n                            handleClickImportButton(item.path)\r\n                          }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                            {item?.icon ? (\r\n                              <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                {item.icon}\r\n                              </Icon>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <BulletIcon\r\n                                  className={`nav-bullet`}\r\n                                  sx={{ display: mode === 'compact' && 'none' }}\r\n                                />\r\n                                <Box\r\n                                  className=\"nav-bullet-text\"\r\n                                  sx={{\r\n                                    ml: '20px',\r\n                                    fontSize: '11px',\r\n                                    display: mode !== 'compact' && 'none',\r\n                                  }}\r\n                                >\r\n                                  {item.iconText}\r\n                                </Box>\r\n                              </Fragment>\r\n                            )}\r\n                            <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledText>\r\n\r\n                            <Box mx=\"auto\" />\r\n\r\n                            {item.badge && (\r\n                              <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                            )}\r\n                          </ButtonBase>\r\n                        </NavLink>\r\n                        <ExportAllTemplateMapping\r\n                          exportAllTempMapping={exportAllTempMapping}\r\n                          setExportAllTempMapping={setExportAllTempMapping}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <NavLink\r\n                        onClick={handleNavLinkClick}\r\n                        to={`${item.path}`}\r\n                        className={({ isActive }) =>\r\n                          isActive\r\n                            ? `navItemActive ${mode === 'compact' && 'compactNavItem'}`\r\n                            : `${mode === 'compact' && 'compactNavItem'}`\r\n                        }\r\n                      >\r\n                        <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          {item?.icon ? (\r\n                            <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                              {item.icon}\r\n                            </Icon>\r\n                          ) : (\r\n                            <Fragment>\r\n                              <BulletIcon\r\n                                className={`nav-bullet`}\r\n                                sx={{ display: mode === 'compact' && 'none' }}\r\n                              />\r\n                              <Box\r\n                                className=\"nav-bullet-text\"\r\n                                sx={{\r\n                                  ml: '20px',\r\n                                  fontSize: '11px',\r\n                                  display: mode !== 'compact' && 'none',\r\n                                }}\r\n                              >\r\n                                {item.iconText}\r\n                              </Box>\r\n                            </Fragment>\r\n                          )}\r\n                          <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                            {item.name}\r\n                          </StyledText>\r\n\r\n                          <Box mx=\"auto\" />\r\n\r\n                          {item.badge && (\r\n                            <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                          )}\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    )\r\n                  }\r\n                </>\r\n              ) :\r\n                (\r\n                  <>\r\n                    <InternalLink key={shortId.generate()}>\r\n                      <NavLink>\r\n                        <ButtonBase onClick={() => {\r\n                          handleClickImportButton(item.path)\r\n                        }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          <Fragment>\r\n                            <BulletIcon\r\n                              className={`nav-bullet`}\r\n                              sx={{ display: mode === 'compact' && 'none' }}\r\n                            />\r\n                            <StyledTextforMassUpdate mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledTextforMassUpdate>\r\n                          </Fragment>\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    </InternalLink>\r\n                    <MassUpdatePartDescriptionInEnoviaAndERP\r\n                      importMassupdateFile={importMassupdateFile}\r\n                      setImportMassupdateFile={setImportMassupdateFile}\r\n                      setOpenAlert={setOpenAlert}\r\n                      setOpenDesc={setOpenDesc}\r\n                      setIsLoading={setIsLoading}\r\n                    />\r\n                    {\r\n                      (openDesc) ? (\r\n                        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                      ) : (<></>)\r\n                    }\r\n                    {\r\n                      isLoading ? (\r\n                        <div className=\"textAlignCenter\">\r\n                          <Loader show={isLoading} />\r\n                        </div>\r\n                      ) : <></>\r\n                    }\r\n                  </>\r\n                )\r\n            }\r\n          </InternalLink>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return <div className=\"navigation\">{renderLevels(items)}</div>;\r\n};\r\n\r\nexport default React.memo(MatxVerticalNav);","import React from 'react';\r\nimport { Card } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nconst CardRoot = styled(Card)(() => ({\r\n  height: '100%',\r\n  padding: '20px 24px',\r\n}));\r\n\r\nconst CardTitle = styled('div')(({ subtitle }) => ({\r\n  fontSize: '1rem',\r\n  fontWeight: '500',\r\n  textTransform: 'capitalize',\r\n  marginBottom: !subtitle && '16px',\r\n}));\r\n\r\nconst SimpleCard = ({ children, title, subtitle, icon }) => {\r\n  return (\r\n    <CardRoot elevation={6}>\r\n      <CardTitle subtitle={subtitle}>{title}</CardTitle>\r\n      {subtitle && <Box sx={{ mb: 2 }}>{subtitle}</Box>}\r\n      {children}\r\n    </CardRoot>\r\n  );\r\n};\r\n\r\nexport default SimpleCard;\r\n","import { styled as makeStyles } from '@mui/material/styles';\r\n\r\nexport const spacingStyles = makeStyles(({ palette, ...theme }) => ({\r\n    '@global': {\r\n        '.px-80': {\r\n            paddingRight: '80px',\r\n            paddingLeft: '80px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingRight: '16px',\r\n                paddingLeft: '16px',\r\n            },\r\n        },\r\n        '.px-sm-30': {\r\n            padding: '0px 30px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: '0px 16px',\r\n            },\r\n        },\r\n        '.p-sm-24': {\r\n            padding: '24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: '16px !important',\r\n            },\r\n        },\r\n        '.px-sm-24': {\r\n            padding: '0px 24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: '0px 12px !important',\r\n            },\r\n        },\r\n        '.pt-sm-24': {\r\n            paddingTop: '24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingTop: '16px !important',\r\n            },\r\n        },\r\n        '.pl-sm-24': {\r\n            paddingLeft: '24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingLeft: '16px !important',\r\n            },\r\n        },\r\n        '.m-auto': { margin: 'auto !important' },\r\n        '.mx-auto': {\r\n            marginLeft: 'auto !important',\r\n            marginRight: 'auto !important',\r\n        },\r\n        '.my-auto': {\r\n            marginTop: 'auto !important',\r\n            marginBottom: 'auto !important',\r\n        },\r\n        '.m-sm-30': {\r\n            margin: '30px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                margin: '16px',\r\n            },\r\n        },\r\n        '.mb-sm-30': {\r\n            marginBottom: '30px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                marginBottom: '16px',\r\n            },\r\n        },\r\n        '.w-full': { width: '100%' },\r\n        '.mui-invalid': { color: '#FF3D57' },\r\n        '.max-w-full': { maxWidth: '100% !important' },\r\n        '.min-w-full': { minWidth: '100% !important' },\r\n        '.min-w-full-screen': { minWidth: '100vw !important' },\r\n        '.w-full-screen': { width: '100vw' },\r\n        '.min-w-600': { minWidth: '600px' },\r\n        '.min-w-750': { minWidth: '750px' },\r\n        '.min-w-1050': { minWidth: '1050px' },\r\n        '.max-w-450': { maxWidth: '450px' },\r\n        '.max-w-550': { maxWidth: '550px' },\r\n        '.max-h-500': { maxHeight: '500px' },\r\n        '.max-w-600': { maxWidth: '600px' },\r\n        '.max-w-770': { maxWidth: '770px' },\r\n        '.max-w-800': { maxWidth: '800px' },\r\n        '.max-w-850': { maxWidth: '850px' },\r\n        '.max-w-900': { maxWidth: '900px' },\r\n        '.max-w-1340': { maxWidth: '1340px' },\r\n        '.h-full': { height: '100% !important' },\r\n        '.min-h-full': { minHeight: '100% !important' },\r\n        '.h-auto': { height: 'auto' },\r\n        '.h-full-screen': { height: '100vh' },\r\n        '.min-h-full-screen': { minHeight: '100vh !important' },\r\n        '.h-150px': { height: '150px !important' },\r\n        '.size-36': { height: '36px !important', width: '36px !important' },\r\n        '.size-24': { height: '24px !important', width: '24px !important' },\r\n        ...generateMarginPadding(0, 25, 0.25, 'rem'),\r\n        ...generateMarginPadding(1, 16, 1, 'px'),\r\n        ...generateMarginPadding(-25, -1, 0.25, 'rem'),\r\n        ...generateMarginPadding(-16, -1, 1, 'px'),\r\n        ...generateHeightWidh(),\r\n    },\r\n}))\r\n\r\nconst generateMarginPadding = (\r\n    start = 0,\r\n    end = 25,\r\n    increament = 0.25,\r\n    unit = 'rem'\r\n) => {\r\n    let classList = {}\r\n\r\n    for (let i = start; i <= end; i++) {\r\n        classList[`.m-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            margin: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mt-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginTop: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mb-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginBottom: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mr-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.ml-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginLeft: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mx-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginLeft: `${i * increament}${unit} !important`,\r\n            marginRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.my-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginTop: `${i * increament}${unit} !important`,\r\n            marginBottom: `${i * increament}${unit} !important`,\r\n        }\r\n\r\n        classList[`.p-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            padding: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pt-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingTop: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pb-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingBottom: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pr-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pl-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingLeft: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.px-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingLeft: `${i * increament}${unit} !important`,\r\n            paddingRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.py-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingTop: `${i * increament}${unit} !important`,\r\n            paddingBottom: `${i * increament}${unit} !important`,\r\n        }\r\n    }\r\n\r\n    return classList\r\n}\r\n\r\nconst generateHeightWidh = (\r\n    start = 0,\r\n    end = 400,\r\n    increament = 4,\r\n    unit = 'px'\r\n) => {\r\n    let classList = {}\r\n\r\n    for (let i = start; i <= end; i += increament) {\r\n        classList[`.w-${i}`] = {\r\n            width: `${i}${unit} !important`,\r\n        }\r\n        classList[`.min-w-${i}`] = {\r\n            minWidth: `${i}${unit} !important`,\r\n        }\r\n        classList[`.max-w-${i}`] = {\r\n            maxWidth: `${i}${unit} !important`,\r\n        }\r\n        classList[`.h-${i}`] = {\r\n            height: `${i}${unit} !important`,\r\n        }\r\n        classList[`.min-h-${i}`] = {\r\n            minHeight: `${i}${unit} !important`,\r\n        }\r\n        classList[`.max-h-${i}`] = {\r\n            maxHeight: `${i}${unit} !important`,\r\n        }\r\n    }\r\n\r\n    return classList\r\n}\r\n","import './VendorCss'\r\nimport React from 'react'\r\n// import { variableStyles } from './_variables'\r\n// import { positioningStyles } from './utilities/_positionings'\r\nimport { spacingStyles } from './utilities/_spacing'\r\n// import { borderStyles } from './utilities/_border'\r\n// import { shadowStyles } from './utilities/_shadows'\r\n// import { colorStyles } from './utilities/_color'\r\n// import { typographyStyles } from './utilities/_typography'\r\nimport { commonStyles } from './utilities/_common'\r\n\r\nconst GlobalCss = ({ children }) => {\r\n    // variableStyles()\r\n    // positioningStyles()\r\n    // spacingStyles()\r\n    // borderStyles()\r\n    // colorStyles()\r\n    // shadowStyles()\r\n    // typographyStyles()\r\n    // commonStyles()\r\n\r\n    return children || null\r\n}\r\n\r\nexport default React.memo(GlobalCss)\r\n","import { styled as makeStyles } from '@mui/material/styles';\r\n\r\nexport const commonStyles = makeStyles(({ palette, ...theme }) => ({\r\n    '@global': {\r\n        '.circular-image-small': {\r\n            height: '48px',\r\n            width: '48px',\r\n            borderRadius: '50%',\r\n            overflow: 'hidden',\r\n        },\r\n        '.card': { transition: 'all 0.3s ease' },\r\n        '.card:hover': { boxShadow: theme.shadows[12] },\r\n        '.card-title': {\r\n            fontSize: '1rem',\r\n            textTransform: 'capitalize',\r\n            fontWeight: '500',\r\n        },\r\n        '.card-subtitle': { fontSize: '0.875rem', color: 'var(--text-muted)' },\r\n        '.theme-dark .card-subtitle': { color: 'rgba(255, 255, 255, 0.54)' },\r\n        '.hide-on-mobile': { display: 'inherit' },\r\n        '@media screen and (max-width: 767px)': {\r\n            '.hide-on-mobile': { display: 'none !important' },\r\n            '.show-on-mobile': { display: 'inherit !important' },\r\n            '.invisible-on-pc': { visibility: 'visible' },\r\n        },\r\n        '@media screen and (min-width: 1200px)': {\r\n            '.hide-on-pc': { display: 'none !important' },\r\n        },\r\n        '@media screen and (max-width: 1200px)': {\r\n            '.show-on-pc': { display: 'none !important' },\r\n        },\r\n        '.VictoryContainer svg': { height: '100% !important' },\r\n        '.box-shadow-none': { boxShadow: 'none !important' },\r\n        '.circle-44': { height: '44px !important', width: '44px !important' },\r\n        '.circle-32': {\r\n            height: '32px !important',\r\n            minHeight: '32px !important',\r\n            width: '32px !important',\r\n        },\r\n        '.circle-32 .MuiFab-root': { minHeight: '32px !important' },\r\n        '.circle-32 .MuiIcon-root': { fontSize: '13px !important' },\r\n        '.show-on-mobile': { display: 'none !important' },\r\n        '.invisible-on-pc': { visibility: 'hidden' },\r\n        '.highlight-js pre': { whiteSpace: 'pre-line' },\r\n        '.cursor-pointer': {\r\n            cursor: 'pointer',\r\n        },\r\n        '.cursor-move': {\r\n            cursor: 'move',\r\n        },\r\n        '.avatar': {\r\n            height: '32px !important',\r\n            width: '32px !important',\r\n        },\r\n        '.face-group .avatar:not(:first-child)': {\r\n            marginLeft: '-0.875rem !important',\r\n        },\r\n        '.opacity-1': {\r\n            opacity: 1,\r\n        },\r\n        '.datatimeInputCls': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}))\r\n","import {\r\n  REACT_APP_EMRPDH_OKTA_CLIENT_ID,\r\n  REACT_APP_EMRPDH_OKTA_ISSUER,\r\n  REACT_APP_EMRPDH_OKTA_DOMAIN,\r\n} from \"./index\";\r\n\r\nconst CLIENT_ID = REACT_APP_EMRPDH_OKTA_CLIENT_ID;\r\nconst ISSUER = REACT_APP_EMRPDH_OKTA_ISSUER;\r\nconst domain = REACT_APP_EMRPDH_OKTA_DOMAIN;\r\n\r\nconst OKTA_TESTING_DISABLEHTTPSCHECK =\r\n  process.env.OKTA_TESTING_DISABLEHTTPSCHECK || false;\r\nconst REDIRECT_URI = `${window.location.origin}/login/callback`;\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  oidc: {\r\n    clientId: CLIENT_ID,\r\n    issuer: ISSUER,\r\n    redirectUri: REDIRECT_URI,\r\n    scopes: [\"openid\", \"profile\", \"email\", \"groups\"],\r\n    pkce: true,\r\n    disableHttpsCheck: OKTA_TESTING_DISABLEHTTPSCHECK,\r\n    domain: domain,\r\n  },\r\n  resourceServer: {\r\n    messagesUrl: `${window.location.origin}`,\r\n  },\r\n};\r\n","import React, { createContext, useEffect, useReducer } from 'react'\r\nimport jwtDecode from 'jwt-decode'\r\nimport axios from 'axios'\r\nimport { MatxLoading } from 'app/components'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    isInitialised: false,\r\n    user: null,\r\n}\r\n\r\nconst isValidToken = (accessToken) => {\r\n    if (!accessToken) {\r\n        return false\r\n    }\r\n\r\n    const decodedToken = jwtDecode(accessToken)\r\n    const currentTime = Date.now() / 1000\r\n    return decodedToken.exp > currentTime\r\n}\r\n\r\nconst setSession = (accessToken) => {\r\n    if (accessToken) {\r\n        localStorage.setItem('accessToken', accessToken)\r\n        axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`\r\n    } else {\r\n        localStorage.removeItem('accessToken')\r\n        delete axios.defaults.headers.common.Authorization\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INIT': {\r\n            const { isAuthenticated, user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated,\r\n                isInitialised: true,\r\n                user,\r\n            }\r\n        }\r\n        case 'LOGIN': {\r\n            const { user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user,\r\n            }\r\n        }\r\n        case 'LOGOUT': {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: null,\r\n            }\r\n        }\r\n        case 'REGISTER': {\r\n            const { user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user,\r\n            }\r\n        }\r\n        default: {\r\n            return { ...state }\r\n        }\r\n    }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    ...initialState,\r\n    method: 'JWT',\r\n    login: () => Promise.resolve(),\r\n    logout: () => { },\r\n    register: () => Promise.resolve(),\r\n})\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    const login = async (email, password) => {\r\n        const response = await axios.post('/api/auth/login', {\r\n            email,\r\n            password,\r\n        })\r\n        const { accessToken, user } = response.data\r\n\r\n        setSession(accessToken)\r\n\r\n        dispatch({\r\n            type: 'LOGIN',\r\n            payload: {\r\n                user,\r\n            },\r\n        })\r\n    }\r\n\r\n    const register = async (email, username, password) => {\r\n        const response = await axios.post('/api/auth/register', {\r\n            email,\r\n            username,\r\n            password,\r\n        })\r\n\r\n        const { accessToken, user } = response.data\r\n\r\n        setSession(accessToken)\r\n\r\n        dispatch({\r\n            type: 'REGISTER',\r\n            payload: {\r\n                user,\r\n            },\r\n        })\r\n    }\r\n\r\n    const logout = () => {\r\n        setSession(null)\r\n        dispatch({ type: 'LOGOUT' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        ; (async () => {\r\n            try {\r\n                const accessToken = window.localStorage.getItem('accessToken')\r\n\r\n                if (accessToken && isValidToken(accessToken)) {\r\n                    setSession(accessToken)\r\n                    const response = await axios.get('/api/auth/profile')\r\n                    const { user } = response.data\r\n\r\n                    dispatch({\r\n                        type: 'INIT',\r\n                        payload: {\r\n                            isAuthenticated: true,\r\n                            user,\r\n                        },\r\n                    })\r\n                } else {\r\n                    dispatch({\r\n                        type: 'INIT',\r\n                        payload: {\r\n                            isAuthenticated: false,\r\n                            user: null,\r\n                        },\r\n                    })\r\n                }\r\n            } catch (err) {\r\n                console.error(err)\r\n                dispatch({\r\n                    type: 'INIT',\r\n                    payload: {\r\n                        isAuthenticated: false,\r\n                        user: null,\r\n                    },\r\n                })\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    if (!state.isInitialised) {\r\n        return <MatxLoading />\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                ...state,\r\n                method: 'JWT',\r\n                login,\r\n                logout,\r\n                register,\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { toRelativeUrl } from '@okta/okta-auth-js';\r\n\r\nconst LoginScreen = () => {\r\n    const { authState, oktaAuth } = useOktaAuth();\r\n\r\n    const login = async () => {\r\n        // try {\r\n        //     oktaAuth.tokenManager.clear();\r\n        //     const response = await oktaAuth.signInWithRedirect();\r\n        //     // handle successful authentication here\r\n        // } catch (error) {\r\n        //     console.error('Authentication error:', error);\r\n        //     // handle error appropriately, e.g., display error message or redirect to login page\r\n        // }\r\n        try {\r\n            await oktaAuth.signInWithRedirect();\r\n        } catch (error) {\r\n            if (error.name === 'AuthApiError') {\r\n                // Handle AuthApiError\r\n                console.error('Authentication failed:', error.message);\r\n                // Display an error message to the user\r\n            } else {\r\n                // Handle other errors\r\n                console.error('An unexpected error occurred:', error);\r\n                // Display a generic error message to the user\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!authState) {\r\n            return;\r\n        }\r\n\r\n        if (!authState?.isAuthenticated) {\r\n            const originalUri = toRelativeUrl(window.location.href, window.location.origin);\r\n            oktaAuth.setOriginalUri(originalUri);\r\n            // oktaAuth.signInWithRedirect();\r\n\r\n            login();\r\n        }\r\n    }, [oktaAuth, !!authState, authState?.isAuthenticated]);\r\n\r\n    if (!authState || !authState?.isAuthenticated) {\r\n        return null;\r\n    }\r\n\r\n    return (<Outlet />);\r\n}\r\n\r\nexport default LoginScreen;","import React from \"react\";\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\n\r\nimport { useOktaAuth } from '@okta/okta-react'\r\nimport LoginScreen from \"./loginScreen\";\r\n\r\nconst AuthGuard = ({ children }) => {\r\n  const { authState } = useOktaAuth()\r\n\r\n  // let {\r\n  //   isAuthenticated,\r\n  //   // user\r\n  // } = useAuth();\r\n  // const { pathname } = useLocation();\r\n\r\n  // // IF YOU NEED ROLE BASED AUTHENTICATION,\r\n  // // UNCOMMENT ABOVE LINES\r\n  // // AND COMMENT OUT BELOW authenticated VARIABLE\r\n\r\n  // let authenticated = isAuthenticated;\r\n\r\n  const isAuthenticated = authState && authState.isAuthenticated\r\n  let authenticated = isAuthenticated;\r\n\r\n  return (\r\n    <>\r\n      {authenticated ? (\r\n        children\r\n      ) : (\r\n        // <Navigate replace to=\"/session/signin\" state={{ from: pathname }} />\r\n        <LoginScreen />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthGuard;\r\n","import { Box, Button, styled } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n}));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({\r\n  maxWidth: 320,\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst IMG = styled('img')(() => ({\r\n  width: '100%',\r\n  marginBottom: '32px',\r\n}));\r\n\r\nconst NotFoundRoot = styled(FlexBox)(() => ({\r\n  width: '100%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  height: '100vh !important',\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <NotFoundRoot>\r\n      <JustifyBox>\r\n        <IMG src=\"/assets/images/illustrations/404.svg\" alt=\"\" />\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          sx={{ textTransform: 'capitalize' }}\r\n          onClick={() => navigate(-1)}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </JustifyBox>\r\n    </NotFoundRoot>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Store } from \"app/redux/Store\";\r\nimport { getBasename } from \"app/utils/baseurl\";\r\nconst getBaseUrl_bk = () => {\r\n    const getStorevalue = Store.getState();\r\n    const currentPathValue = getStorevalue.globalData.segment || \"\";\r\n    return (currentPathValue === \"/\") ? currentPathValue : \"/\" + currentPathValue;\r\n}\r\nconst getBaseUrl = () => {\r\n    const getStorevalue = getBasename();\r\n   // return (getStorevalue?.segment === \"/\") ? getStorevalue?.segment : \"/\" + getStorevalue?.segment;\r\n    return (getStorevalue?.segment.startsWith(\"/\")) ? getStorevalue?.segment : \"/\" + getStorevalue?.segment;\r\n}\r\n\r\nexport default getBaseUrl;","import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport getBaseUrl from \"app/utils/getBaseUrl\";\r\nimport Button from '@mui/material/Button';\r\nimport { UserService } from \"services/usersService\";\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nconst UnauthorizedPage = () => {\r\n    const userService = new UserService();\r\n    const { authState, oktaAuth } = useOktaAuth();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const userInfo = location.state?.userInfo !== undefined ? location.state?.userInfo : false;\r\n    const NotAuthorized = location.state?.NotAuthorized !== undefined ? location.state?.NotAuthorized : false;\r\n    console.log(location.state?.NotAuthorized, 'location.state?.NotAuthorized')\r\n    console.log(NotAuthorized, 'NotAuthorized')\r\n    const [requestforAccess, setRequestforAccess] = useState(false);\r\n    const requestAccess = () => {\r\n        if (!requestforAccess) {\r\n            userService.requestForAccess({ userData: userInfo }).then((result) => {\r\n                setRequestforAccess(true);\r\n                // setIsLoading(false)\r\n                setTimeout(() => {\r\n                    logout()\r\n                }, 2000);\r\n            });\r\n        }\r\n    }\r\n    const logout = async () => {\r\n        try {\r\n            if (authState.isAuthenticated) {\r\n                // await oktaAuth.signOut();\r\n                await oktaAuth.signOut({\r\n                    postLogoutRedirectUri: window.location.origin,\r\n                });\r\n            }\r\n            // handle successful authentication here\r\n        } catch (error) {\r\n            // handle error appropriately, e.g., display error message or redirect to login page\r\n        }\r\n    };\r\n    return (\r\n        <div style={styles.container}>\r\n            <h1 style={styles.title}>Access Denied</h1>\r\n            {!NotAuthorized ?\r\n                <><p style={styles.message}>Sorry, you don't have permission to access the page.</p>\r\n                    {/* You can optionally add a button to redirect users to another page */}\r\n                    <Button variant=\"contained\" onClick={() => navigate(getBaseUrl() + '/calist')}>Go to Home</Button>\r\n                    {/* <button onClick={() => navigate(getBaseUrl() + '/calist')} style={styles.button}>Go to Home</button> */}\r\n                </>\r\n                :\r\n                <>\r\n                    <p style={styles.message}>Sorry, you don't have permission to access the application.</p>\r\n                    <p style={styles.message}>To access the application Please request by click on the button below.</p>\r\n                    <Button variant=\"contained\" onClick={requestAccess}>Request Access</Button>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100vh',\r\n        backgroundColor: '#f8f9fa',\r\n    },\r\n    title: {\r\n        fontSize: '2rem',\r\n        color: '#333',\r\n    },\r\n    message: {\r\n        fontSize: '1rem',\r\n        color: '#666',\r\n        textAlign: 'center',\r\n        marginTop: '10px',\r\n    },\r\n    // Optional button styles\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '10px 20px',\r\n        fontSize: '1rem',\r\n        backgroundColor: '#007bff',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        transition: 'background-color 0.3s ease',\r\n        textDecoration: 'none',\r\n        outline: 'none',\r\n        ':hover': {\r\n            backgroundColor: '#0056b3',\r\n        },\r\n    },\r\n};\r\n\r\nexport default UnauthorizedPage;\r\n","import React, { useEffect } from 'react';\r\nimport { Select, MenuItem } from '@mui/material';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import {bussinessUnitLists} from '../contexts/OracleSettingsContext'\r\n//export default function CustomSelect({ isdisabled = false, selectedvalue, defaultValue, optionValues, onChangeFunc, style = {} }) {\r\nexport default function CustomSelect({ isdisabled = false, selectedvalue, defaultValue, onChangeFunc, style = {}, size }) {\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    //console.log(bussinessUnitLists, 'bussinessUnitLists')\r\n    useEffect(() => {\r\n        if (defaultValue) {\r\n            onChangeFunc(defaultValue);\r\n        }\r\n    }, [defaultValue]);\r\n\r\n    return (\r\n        <Select\r\n            disabled={isdisabled}\r\n            className=\"form-control\"\r\n            defaultValue={defaultValue}\r\n            value={selectedvalue}\r\n            onChange={(e) => onChangeFunc(e.target.value)}\r\n            style={style}\r\n            size={size?size:'medium'}\r\n            displayEmpty // Enable displayEmpty prop\r\n            renderValue={(selected) => {\r\n                // Render the selected value\r\n                let selectedOption = [];\r\n                selectedOption = bussinessUnitLists?.find(\r\n                    (option) => (option.businessUnit === selected)\r\n                );\r\n\r\n                return (selectedOption?.businessUnit) ? selectedOption.buName : '';\r\n                //return (selectedOption?.value) ? selectedOption.label : '';\r\n            }}\r\n        >\r\n            {bussinessUnitLists?.map((option, index) => {\r\n                const listKey = \"dpKey\" + index;\r\n                return (\r\n                    <MenuItem value={option.businessUnit} key={listKey}>\r\n                        {/* {option.templateName ? option.instance + \"_\" + option.templateName + \"_\" + option.desc : ''} */}\r\n                        {/*option.templateName ? option.desc : ''*/}\r\n                        {option.buName}\r\n                    </MenuItem>\r\n                )\r\n            })}\r\n        </Select>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport CustomSelect from \"./components/CustomSelect\";\r\nimport { Grid, Select, MenuItem } from \"@mui/material\";\r\nimport { useSelector } from 'react-redux';\r\nimport { InstanceOptions } from \"./views/adminConfig/common.jsx\";\r\n\r\nconst Homepage = () => {\r\n  const globalBUandInstance = useSelector((state) => state.globalBUandInstance);\r\n  const [bussinessUnit, setBussinessUnit] = useState('')\r\n  const [instance, setInstance] = useState('')\r\n  const handleSelectChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === 'Instance') {\r\n      setInstance(value)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (globalBUandInstance.bu !== '') {\r\n      setBussinessUnit(globalBUandInstance.bu)\r\n    }\r\n    if (globalBUandInstance.instanse !== '') {\r\n      setInstance(globalBUandInstance.instanse)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n\r\n      <h1 style={styles.title}>Select RDO and Instance</h1>\r\n      <Grid container item md={6} sm={6} xs={12} className=\"font-medium\"\r\n        style={{ backgroundColor: 'lightblue', padding: '20px' }}\r\n      >\r\n        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n          <span>Design Organization:</span>\r\n          <CustomSelect\r\n            selectedvalue={bussinessUnit}\r\n            style={{ width: \"50%\" }}\r\n            // optionsValues={BUOptions}\r\n            defaultValue={bussinessUnit ? bussinessUnit : \"\"}\r\n            onChangeFunc={(selectedOptionValue) => {\r\n              setBussinessUnit(selectedOptionValue);\r\n              console.log(selectedOptionValue, 'selectedOptionValue')\r\n              //handleSelectChange()\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n          <span>Select Instance:</span>\r\n          <Select\r\n            labelId=\"Instance\"\r\n            id=\"Instance\"\r\n            name=\"Instance\"\r\n            fullWidth\r\n            style={{ width: \"50%\" }} // Set the width here\r\n            value={instance ? instance : ''}\r\n            onChange={handleSelectChange}\r\n          >\r\n            {InstanceOptions.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  title: {\r\n    fontSize: '2rem',\r\n    color: '#333',\r\n  },\r\n  message: {\r\n    fontSize: '1rem',\r\n    color: '#666',\r\n    textAlign: 'center',\r\n    marginTop: '10px',\r\n  },\r\n  // Optional button styles\r\n  button: {\r\n    marginTop: '20px',\r\n    padding: '10px 20px',\r\n    fontSize: '1rem',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s ease',\r\n    textDecoration: 'none',\r\n    outline: 'none',\r\n    ':hover': {\r\n      backgroundColor: '#0056b3',\r\n    },\r\n  },\r\n};\r\n\r\nexport default Homepage;\r\n","import { Suspense } from 'react';\r\nimport Loading from './MatxLoading';\r\n\r\nconst Loadable = (Component) => (props) => {\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <Component {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Loadable;\r\n","import Loadable from 'app/components/Loadable';\r\nimport React, { lazy } from 'react';\r\n\r\nconst CaList = Loadable(lazy(() => import('./CaList')));\r\nconst CaDetails = Loadable(lazy(() => import('./CaDetails')));\r\nconst McoList = Loadable(lazy(() => import('./McoList')));\r\nconst Mcodetails = Loadable(lazy(() => import('./Mcodetails')));\r\nconst TrackerProgressBar = Loadable(lazy(() => import('./TrackerProgressBar')));\r\nconst SpecCreationList = Loadable(lazy(() => import('./SpecCreationList')));\r\nconst ObsoletePartList = Loadable(lazy(() => import('./ObsoletePartList')));\r\nconst MyReportList = Loadable(lazy(() => import('./MyReports')));\r\n\r\nconst McoListRoutes = [\r\n    { path: '/calist', element: <CaList /> },\r\n    { path: '/caDetails/:ca_id', element: <CaDetails /> },\r\n    { path: '/mcolist', element: <McoList /> },\r\n    { path: '/mcodetail/:mco_id?', element: <Mcodetails /> },\r\n    { path: '/:mcoName/tracker', element: <TrackerProgressBar /> },\r\n    { path: '/specCreationList', element: <SpecCreationList /> },\r\n    { path: '/obsoletePartList', element: <ObsoletePartList /> },\r\n    { path: '/myreport', element: <MyReportList /> }\r\n];\r\n\r\nexport default McoListRoutes;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n    const { userDetails } = useOracleSettings();\r\n    const { authState } = useOktaAuth();\r\n    return (\r\n        (authState?.isAuthenticated && userDetails?.userinfo?.includes(\"admin\")) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n        // (authState?.isAuthenticated && userRoles?.includes(\"admin\")) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n        // (authState?.isAuthenticated && authState?.idToken?.claims?.userinfo?.includes(\"admin\")) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n        // (authState?.isAuthenticated) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\r\n\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Autocomplete,\r\n    Select,\r\n    MenuItem\r\n} from \"@mui/material\";\r\n\r\n\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nimport { templateService } from \"services/temlplateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n// import * as sampleTemplate from '../../../assets/sample-template.xlsx';\r\n\r\nimport download from 'downloadjs';\r\nimport {\r\n    instanceOptions,\r\n    ERPtypeOptions,\r\n    existInOracleOptions,\r\n    exportToERPOptions,\r\n    notOwningDivisionOptions,\r\n    BUOptions,\r\n} from \"../adminConfig/common\";\r\nimport { textAlign } from \"@mui/system\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\n\r\nconst ImportDialogBox = (props) => {\r\n    const { allTemplatesInfo, updateAllTemplate, bussinessUnitLists } = useOracleSettings();\r\n\r\n    const tempService = new templateService();\r\n    const { importTemplate, setImportTemplate, setTemplateData, setIsLoading } = props;\r\n    const [ERPTypeError, setERPTypeError] = useState(false);\r\n    const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null)\r\n\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        ERPType: [],\r\n        instance: [],\r\n        BU: [],\r\n    });\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const fileName = 'sample-template.xlsx';\r\n    const handleDownload = () => {\r\n        tempService.downloadSampleFile(fileName)\r\n    };\r\n\r\n    const handleImportTemplateSelection = (column, selectedValues) => {\r\n        console.log(column, '==values ==', selectedValues)\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [column]: column === 'BU' ? selectedValues : selectedValues.value,\r\n            };\r\n        })\r\n        if (column === 'ERPType') { setERPTypeError(false) }\r\n        if (column === 'instance') { setinstanceError(false) }\r\n        if (column === 'BU') { setBUError(false) }\r\n        console.info(importSelectionValues, 'importSelectionValues')\r\n    }\r\n\r\n    const getUniqueValues = (column) => {\r\n        const values = new Set();\r\n\r\n        //console.log(allTemplatesInfo, 'allTemplatesInfo vvvvv');\r\n\r\n        /*  allTemplatesInfo?.forEach((subscriber) => {\r\n             if (column === \"plants\") {\r\n                 subscriber[column]?.forEach((plant) => {\r\n                     values.add(plant.plantName);\r\n                 });\r\n             } else if (column === \"BU\") {\r\n                 subscriber[column]?.forEach((BU) => {\r\n                     values.add(BU);\r\n                 });\r\n             } else {\r\n                 values.add(subscriber[column]);\r\n             }\r\n         });\r\n         return Array.from(values); */\r\n        bussinessUnitLists?.forEach(item => {\r\n            values.add(item[column]);\r\n        })\r\n        return Array.from(values);\r\n    };\r\n\r\n    const importFileData = (e) => {\r\n        //  console.log(e.target.files[0].name, 'rowData')\r\n        //  console.log(e.target.files[0].type, 'rowData')\r\n        //  console.log(e.target.files[0].name.split('.').pop(), 'file name')\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0]);\r\n                setImportedFileName(e.target.files[0].name);\r\n                setNoFileError(false);\r\n            } else {\r\n                setNoFileError(true);\r\n                setImportedFileName(null);\r\n                setImportedFileData(null);\r\n            }\r\n        } else {\r\n            setNoFileError(true);\r\n            setImportedFileName(null);\r\n            setImportedFileData(null);\r\n        }\r\n    }\r\n\r\n    const handleCloseImportTemplate = () => {\r\n        setImportSelectionValues((prev) => {\r\n            return {\r\n                ERPType: [],\r\n                instance: [],\r\n                BU: []\r\n            }\r\n        })\r\n        setImportedFileData(null)\r\n        setImportTemplate(false)\r\n        setImportedFileName(null)\r\n        setNoFileError(false)\r\n        setERPTypeError(false)\r\n        setinstanceError(false)\r\n        setBUError(false)\r\n    };\r\n    const handleImportfileBarClick = () => {\r\n        setimportfileBar(true);\r\n    };\r\n\r\n    const handleImportTemplate = () => {\r\n        if (importSelectionValues.ERPType === null || importSelectionValues.ERPType.length < 1) { setERPTypeError(true) }\r\n        if (importSelectionValues.instance === null || importSelectionValues.instance.length < 1) { setinstanceError(true) }\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) { setBUError(true) }\r\n        if (importedFileData === null || importedFileData.length < 1) { setNoFileError(true) }\r\n        // console.log(importSelectionValues, 'importSelectionValueshandleImportTemplate')\r\n        if (importSelectionValues.ERPType.length > 1 && importSelectionValues.instance.length > 1 && importSelectionValues.BU.length > 1 && importedFileData !== null) {\r\n            let postData = { 'file': importedFileData, data: importSelectionValues };\r\n            setIsLoading(true);\r\n            setImportTemplate(false)\r\n            tempService.importTemplate(postData).then(async (response) => {\r\n                setImportResponse(response)\r\n                let desc;\r\n                let severity;\r\n                if (response.errorCount > 0) {\r\n                    desc = (\r\n                        <div style={{ color: 'red' }}>\r\n                            {/* Failure <br /> */}\r\n                            New Template Added: {response.newTemplateAdded} <br />\r\n                            Template Updated: {response.updateTemplates} <br />\r\n                            Error in Template: {response.errorCount} <br />\r\n                        </div>\r\n                    );\r\n                    severity = 'error';\r\n                    setOpenAlert(true);\r\n                    setOpenDesc({\r\n                        severity: severity,\r\n                        desc: desc,\r\n                    });\r\n                    setIsLoading(false);\r\n                } else {\r\n                    desc = (\r\n                        <div>\r\n                            Success <br />\r\n                            New Template Added: {response.newTemplateAdded} <br />\r\n                            Template Updated: {response.updateTemplates} <br />\r\n                            Error in Template: {response.errorCount} <br />\r\n                        </div>\r\n                    );\r\n                    severity = 'success';\r\n                    setIsLoading(false);\r\n\r\n                }\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: severity,\r\n                    desc: desc,\r\n                });\r\n                setImportSelectionValues((prev) => {\r\n                    return {\r\n                        ERPType: [],\r\n                        instance: [],\r\n                        BU: []\r\n                    }\r\n                })\r\n                setImportedFileData(null)\r\n                setImportedFileName(null)\r\n                // setTimeout(() => {\r\n                //     setImportTemplate(false)\r\n                // }, 200);\r\n\r\n                await tempService.getAllTemplateList().then((result) => {\r\n                    setTemplateData(result.template);\r\n                    updateAllTemplate(result.template);\r\n                });\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n    }\r\n    const handleImportfileBarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setImportSelectionValues((prev) => {\r\n            return {\r\n                ERPType: [],\r\n                instance: [],\r\n                BU: []\r\n            }\r\n        })\r\n        setimportfileBar(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(allTemplatesInfo, 'allTemplatesInfo cccc');\r\n    }, [allTemplatesInfo])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={importTemplate}>\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Import Template\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                Design Organization\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={getUniqueValues(\"buName\")}\r\n                                                value={importSelectionValues.BU}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"BU\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select RDO\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.BU.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {BUError && (<p style={{ textAlign: \"left\", color: \"red\" }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                ERP Type\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={ERPtypeOptions}\r\n                                                value={importSelectionValues.ERPType}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"ERPType\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select ERP Type\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.ERPType.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {ERPTypeError && (<p style={{ textAlign: \"left\", color: \"red\" }}>please select ERP Type</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                Instance\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={instanceOptions}\r\n                                                value={importSelectionValues.instance}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"instance\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select Instance\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                // getOptionLabel={(option) => option}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.instance.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {instanceError && (<p style={{ textAlign: \"left\", color: \"red\" }}>please select Instance</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                            Upload file\r\n                                            <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                        </Button>\r\n                                        {noFileError && (<p style={{ textAlign: \"left\", color: \"red\" }}>Please Select xlsx file to Upload </p>)}\r\n                                    </div>\r\n                                    {importedFileName && (<p>{importedFileName}</p>)}\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        {/* <a\r\n                                            href={sampleTemplate}\r\n                                            download=\"Example-XLSX-document\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noreferrer\"\r\n                                        > */}\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={handleDownload}>\r\n                                            Download sample file\r\n                                        </Button>\r\n                                        {/* </a> */}\r\n                                    </div>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleCloseImportTemplate}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleImportTemplate}>Import</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* <Snackbar\r\n                open={importfileBar}\r\n                autoHideDuration={3000}\r\n                onClose={handleImportfileBarClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleImportfileBarClose}\r\n                    severity=\"success\"\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    {importResponse && (\r\n                        <div>\r\n                            {importResponse.msg} <br />\r\n                            New Template Added: {importResponse.newTemplateAdded} <br />\r\n                            Template Updated: {importResponse.updateTemplates} <br />\r\n                            Error in Template: {importResponse.errorCount} <br />\r\n                        </div>\r\n                    )}\r\n                </Alert>\r\n            </Snackbar> */}\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} sx={{ '& .MuiAlertTitle-root': { backgroundColor: 'red' } }} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImportDialogBox;","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.templateData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n\r\n\r\n  /* export template data start */\r\n  //const [exportResponse, setExportResponse] = useState('');\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    //console.log(dataToExport, 'vdataToExport')\r\n    console.log(props?.filterTemplateData, 'filterTemplateData')\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.templateData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        'Template Name': item.templateName,\r\n        'Description': item.desc,\r\n        'ERP Type': item.ERPType,\r\n         Instance: item.instance,\r\n        'Design Organization': Array.isArray(item?.BU) && item?.BU.length > 0\r\n          ? item?.BU.join(', ')\r\n          : null,\r\n        // attributes: typeof item.attributes == \"object\"? JSON.stringify(item.attributes):null,\r\n        //RDO: typeof item.BU == \"object\" && item.BU.length>0 ? JSON.stringify(item.BU.join(', ')):null,\r\n        // ExportToERP: item.exportToERP,\r\n        // ExistInOracle: item.existInOracle,\r\n        // NotOwningDivision: item.notOwningDivision,\r\n        //Name: item.Name\r\n      }\r\n      return res\r\n    })\r\n    //console.log(exportData, 'inside template export exportData')\r\n    //return;\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Template' }).then((response) => {\r\n      setExportResponse(response)\r\n      //console.log(response, ';resprespresp')\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.templateData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n      //console.log(filteredTempData, 'filteredTempData')\r\n    }\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import React from 'react';\r\n\r\nconst sortedExportDataHOC = (WrappedComponent) => {\r\n    return ({ data = [], sortInfo = {}, initialData = [], ...props }) => {\r\n        const sortData = (data, sortInfo) => {\r\n            if (!Array.isArray(data)) {\r\n                return [];\r\n            }\r\n\r\n            if (!sortInfo || !sortInfo.id) {\r\n                return initialData; // Return initial data if sortInfo is null or empty\r\n            }\r\n\r\n            const field = sortInfo.id || sortInfo.name || sortInfo.columnName;\r\n            const direction = sortInfo.dir === 1 ? 1 : -1;\r\n\r\n            return [...data].sort((a, b) => {\r\n                const aValue = String(a[field] || '').toLowerCase();\r\n                const bValue = String(b[field] || '').toLowerCase();\r\n\r\n                if (aValue < bValue) return -direction;\r\n                if (aValue > bValue) return direction;\r\n                return 0;\r\n            });\r\n        };\r\n\r\n        const sortedData = sortData(data, sortInfo);\r\n        return <WrappedComponent data={sortedData} sortInfo={sortInfo} {...props} />;\r\n    };\r\n};\r\n\r\nexport default sortedExportDataHOC;","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport Loader from 'app/components/Loader';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Box,\r\n  styled,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport ImportDialogBox from \"./importDialog\";\r\nimport ExportDialogBox from \"./exportTemplate\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst Template = () => {\r\n  const location = useLocation();\r\n  let toastState = location.state;\r\n  const { updateAllTemplate } = useOracleSettings();\r\n  const tempService = new templateService();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [templateData, setTemplateData] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [selectedDelTemplate, setselectedDelTemplate] = useState();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filteredTempData, setFilteredTempData] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const sortedFilterTempData = sortDataByKey(filteredTempData, \"templateName\");\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteTemplateDialog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditTemplate(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    tempService.getAllTemplateList()\r\n      .then((result) => {\r\n        setTemplateData(result.template);\r\n        setInitialData(result.template); // Set initial data\r\n        setFilteredTempData(result.template);\r\n        updateAllTemplate(result.template);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFilteredTempData(templateData);\r\n  }, [templateData]);\r\n\r\n  useEffect(() => {\r\n    if (toastState?.status) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: toastState?.status,\r\n        desc: toastState?.message,\r\n      });\r\n    }\r\n    toastState = {};\r\n\r\n    // Clear the state value on page refresh\r\n    window.onbeforeunload = () => {\r\n      window.history.replaceState({}, document.title);\r\n    };\r\n  }, [toastState]);\r\n\r\n  //************Search code************* */\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n  // *************Search code ends *******/\r\n  const navigate = useNavigate();\r\n  const templateModeRef = useRef(\"initialValue\");\r\n  const handleCreateTemplate = () => {\r\n    templateModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createTemplate\");\r\n    }, 200);\r\n  };\r\n  const handleEditTemplate = (editSelectedTemplate) => {\r\n    templateModeRef.current = \"edit\";\r\n    const selectedTempalteData = editSelectedTemplate;\r\n    setTimeout(() => {\r\n      navigate(`/editTemplate/${selectedTempalteData?.id}`, {\r\n        state: { templateMode: templateModeRef.current, selectedTempalteData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteTemplateDialog = (Deltemplate) => {\r\n    setDeleteDialog(true);\r\n    setselectedDelTemplate(Deltemplate);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setselectedDelTemplate(null);\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteTemplate = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      setIsLoading(true);\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await tempService.deleteTemplate(selRowsId).then(async (response) => {\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n\r\n        await tempService.getAllTemplateList().then((result) => {\r\n          setTemplateData(result.template);\r\n          setInitialData(result.template); // Set initial data\r\n          setFilteredTempData(result.template);\r\n          updateAllTemplate(result.template);\r\n        });\r\n      })\r\n    } catch (error) {\r\n      return error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleImportTemplateDialog = () => {\r\n    setImportTemplate(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    if (templateData) {\r\n      const new_FilteredData = templateData.filter((subscriber) => {\r\n        return (searchValue === \"\" ||\r\n          subscriber?.templateName?.toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          subscriber.desc\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          subscriber.plants?.some((plant) =>\r\n            plant.plantName\r\n              .toLowerCase()\r\n              .includes(searchValue.toLowerCase())\r\n          ) ||\r\n          subscriber.BU?.some((BU) =>\r\n            BU.toLowerCase().includes(searchValue.toLowerCase())\r\n          ) ||\r\n          subscriber.instance\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          subscriber.ERPType.toLowerCase().includes(\r\n            searchValue.toLowerCase()\r\n          ))\r\n      })\r\n      setFilteredTempData(new_FilteredData);\r\n    }\r\n  }, [searchValue, templateData]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedTemplate = sortedExportDataHOC(Template);\r\n    // const sortedData = SortedTemplate({ data: templateData, sortInfo, filteredTempData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    const sortedData = SortedTemplate({ data: templateData, sortInfo, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setTemplateData(sortedData.props.data);\r\n    //setFilteredTempData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Template\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateTemplate}\r\n              style={{ marginRight: \"10px\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 10px 0 0px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 0px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleImportTemplateDialog}\r\n              style={{ marginRight: '10px' }}\r\n            >\r\n              Import\r\n            </Button>\r\n\r\n            <ExportDialogBox templateData={templateData} filterTemplateData={selectedRows} />\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br></br>\r\n            <DataGrid\r\n              idProperty=\"id\"\r\n              showZebraRows={false}\r\n              style={{ minHeight: 550 }}\r\n              defaultLimit={100}\r\n              columns={[\r\n                {\r\n                  name: \"templateName\",\r\n                  header: <Tooltip title={'Name'}>Template Name</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                  render: ({ data }) => <div>{data?.templateName}</div>,\r\n                },\r\n                {\r\n                  name: \"desc\",\r\n                  header: <Tooltip title={\"Description\"}>Description</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                  render: ({ data }) => <div>{data?.desc}</div>,\r\n                },\r\n                {\r\n                  name: \"ERPType\",\r\n                  header: <Tooltip title={\"ERP Type\"}>ERP Type</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                },\r\n                {\r\n                  name: \"instance\",\r\n                  header: <Tooltip title={\"Instance\"}>Instance</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                },\r\n                {\r\n                  name: \"BU\",\r\n                  header: <Tooltip title={\"Design Organization\"}>Design Organization</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                  render: ({ data }) => <div>{(data?.BU) ? data.BU.sort().map((item) => item).join(\", \") : ''}</div>,\r\n                },\r\n              ]}\r\n              dataSource={sortedFilterTempData}\r\n              checkboxColumn\r\n              selected={selected}\r\n              onSelectionChange={onSelectionChange}\r\n              handle={ref => gridRef.current = ref ? ref.current : null}\r\n              pagination\r\n              renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n              onSortInfoChange={handleSortInfoChange}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the template{\" \"}\r\n                <b>{selectedDelTemplate?.templateName}</b> with instance{\" \"}\r\n                <b>{selectedDelTemplate?.instance}</b>\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted templates?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteTemplate}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <ImportDialogBox\r\n        importTemplate={importTemplate}\r\n        setImportTemplate={setImportTemplate}\r\n        setTemplateData={setTemplateData}\r\n        setIsLoading={setIsLoading}\r\n      />\r\n\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n\r\n      {\r\n        isLoading ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Loader show={isLoading} />\r\n          </div>\r\n        ) : <></>\r\n      }\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Template;","import React from \"react\";\r\nimport Template from \"./template\";\r\n// import { TemplateProvider } from \"app/contexts/\";\r\n\r\nconst TemplateWrapper = () => {\r\n    return (\r\n        <>\r\n            {/* <TemplateProvider> */}\r\n            <Template />\r\n            {/* </TemplateProvider> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TemplateWrapper;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class PlantService {\r\n  getAllPlantsList = () => {\r\n    return ApiInstance\r\n      .get(`${BACKEND_API_URL}/plant/getplants`, REACT_APP_BACKEND_API_HEADER)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getAllPlantsList\", e);\r\n        return [];\r\n      });\r\n  };\r\n  getPlantById = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/plant/getPlantById`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getPlantById\", e);\r\n        return [];\r\n      });\r\n  };\r\n  addnewPlant = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/plant/addPlant`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updatePlant = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/plant/updatePlant`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deletePlant = (ids) => {\r\n    return ApiInstance.delete(\r\n      `${BACKEND_API_URL}/plant/deletePlant`,\r\n      { data: { ids } },\r\n      REACT_APP_BACKEND_API_HEADER\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting plant:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst AttributeDialog = ({\r\n  open,\r\n  handleDialogClose,\r\n  tempObject,\r\n  handleAttributeChange,\r\n  handleAddAttribute,\r\n  newKey,\r\n  newValue,\r\n  handleAddRow,\r\n  handleDeleteRow,\r\n  keyerror,\r\n  attributeForm,\r\n  valuesInputList,\r\n}) => {\r\n  const InputTypeOptions = [\r\n    { value: \"text\", label: \"text\" },\r\n    { value: \"select\", label: \"select\" },\r\n  ];\r\n  const DataTypeOptions = [\r\n    { value: \"int\", label: \"int\" },\r\n    { value: \"string\", label: \"string\" },\r\n    { value: \"long\", label: \"long\" },\r\n    { value: \"bool\", label: \"bool\" },\r\n  ];\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {attributeForm === null ? \"Add Attribute\" : \"Edit Attribute\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Name:\r\n              {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              name=\"name\"\r\n              value={tempObject.name || \"\"}\r\n              onChange={handleAttributeChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Mandatory: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                value={tempObject.mandatory || \"YES\"}\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"mandatory\"\r\n                onChange={handleAttributeChange}\r\n              >\r\n                <FormControlLabel value=\"Y\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"N\" control={<Radio />} label=\"No\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Material master:{\" \"}\r\n              {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                value={tempObject.material_master || \"Y\"}\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"material_master\"\r\n                onChange={handleAttributeChange}\r\n              >\r\n                <FormControlLabel value=\"Y\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"N\" control={<Radio />} label=\"No\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Data type: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              labelId=\"DataType-label\"\r\n              id=\"DataType-select\"\r\n              name=\"dataType\"\r\n              fullWidth\r\n              value={tempObject.dataType || \"\"}\r\n              onChange={handleAttributeChange}\r\n            >\r\n              {DataTypeOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.value}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Input Type: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              labelId=\"InputType-label\"\r\n              id=\"InputType-select\"\r\n              name=\"inputType\"\r\n              fullWidth\r\n              value={tempObject.inputType || \"\"}\r\n              onChange={handleAttributeChange}\r\n            >\r\n              {InputTypeOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          {tempObject.inputType === \"select\" && (\r\n            <>\r\n              <Grid item md={3} sm={4} xs={12}>\r\n                <span>\r\n                  Values: {/* <span className={classes.spanRed}>*</span>:*/}\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={3} style={{ marginLeft: \"3px\" }}>\r\n                    <TextField\r\n                      name=\"newKey\"\r\n                      label=\"value\"\r\n                      value={newKey}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleAttributeChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      name=\"newValue\"\r\n                      label=\"display value\"\r\n                      value={newValue}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleAttributeChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      style={{ fontSize: \"30px\", marginTop: \"6px\" }}\r\n                      onClick={handleAddRow}\r\n                    >\r\n                      <b>+</b>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{ color: \"red\" }}>{keyerror}</p>\r\n                <div\r\n                  style={{\r\n                    height: \"100px\",\r\n                    overflowY: \"auto\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    alignContent: \"center\",\r\n                  }}\r\n                >\r\n                  {valuesInputList.map((row, index) => (\r\n                    <Paper\r\n                      key={index}\r\n                      style={{\r\n                        paddingLeft: \"50px\",\r\n                        marginBottom: \"8px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginLeft: \"2px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <p>\r\n                            <b>{row.key}</b>:<b>{row.value}</b>\r\n                          </p>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                          <IconButton onClick={() => handleDeleteRow(index)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Default values: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              name=\"defaultValues\"\r\n              value={tempObject.defaultValues || \"\"}\r\n              onChange={handleAttributeChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddAttribute}>\r\n          {attributeForm === null ? \"Add\" : \"Update\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AttributeDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  IconButton,\r\n  Grid,\r\n  TextField,\r\n  Paper,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { styled as makeStyles } from \"@mui/material/styles\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { templateService } from \"services/temlplateService\";\r\nimport { PlantService } from \"services/plantService\";\r\n\r\nimport AttributeDialog from \"./attributeDialog\";\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  existInOracleOptions,\r\n  exportToERPOptions,\r\n  notOwningDivisionOptions,\r\n  BUOptions,\r\n} from \"../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { caseInsensitiveSort, generateRandomId } from \"../../utils/utils\";\r\nimport shortId from 'shortid';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nconst defaultFormValue = {\r\n  name: null,\r\n  mandatory: null,\r\n  material_master: null,\r\n  dataType: null,\r\n  inputType: null,\r\n  values: null,\r\n  defaultValues: null,\r\n};\r\n\r\nexport default function CreateTemplate() {\r\n  const tempService = new templateService();\r\n  const { bussinessUnitLists } = useOracleSettings();\r\n  const plantService = new PlantService();\r\n  const [plantData, setPlantData] = useState();\r\n\r\n  const [templateForm, setTemplateForm] = useState({\r\n    exportToERP: \"Y\",\r\n    existInOracle: \"N\",\r\n    notOwningDivision: \"Y\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n\r\n  //**********AttributeComplete States************************** */\r\n  const [diabox, setDiabox] = useState(false);\r\n  const [attributeData, setAttributeData] = useState([]);\r\n  const [attributeForm, setAttributeForm] = useState(null);\r\n  const [tempObject, setTempObject] = useState({});\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  //**********AttributeComplete States end ************************** */\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n    });\r\n  }, []);\r\n\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  // const handleBUChange = (event) => {\r\n  //   setSelectedBU(event.target.value);\r\n  // };\r\n\r\n  const handleSelectChange = (event, type) => {\r\n    const selectedValues = event.target.value;\r\n\r\n    if (type === \"BU\") {\r\n      setSelectedBU(selectedValues);\r\n    } else if (type === \"plants\") {\r\n      const selectedPlantsInfo = plantData.filter((option) =>\r\n        selectedValues.includes(option.plantName)\r\n      );\r\n\r\n      const extractedInfo = selectedPlantsInfo.map((option) => ({\r\n        plantName: option.plantName,\r\n        id: option.id,\r\n      }));\r\n\r\n      setSelectedPlants(extractedInfo);\r\n    }\r\n  };\r\n\r\n  //********all atrribute functions */\r\n  const handleAttributeChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddAttribute = () => {\r\n    const updatedTempObject = {\r\n      ...tempObject,\r\n      values: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n\r\n    if (updatedTempObject.material_master === \"\") {\r\n      updatedTempObject[\"material_master\"] = \"Y\";\r\n    }\r\n    if (updatedTempObject.mandatory === \"\") {\r\n      updatedTempObject[\"mandatory\"] = \"Y\";\r\n    }\r\n    if (Object.keys(updatedTempObject.values).length) {\r\n      updatedTempObject[\"values\"] = [updatedTempObject.values];\r\n    }\r\n\r\n    if (attributeForm !== null) {\r\n      const updatedAttributeData = [...attributeData];\r\n      updatedAttributeData[attributeForm] = updatedTempObject;\r\n      setAttributeData(updatedAttributeData);\r\n    } else {\r\n      setAttributeData((prevAttributeData) => [\r\n        ...prevAttributeData,\r\n        updatedTempObject,\r\n      ]);\r\n    }\r\n\r\n    setDiabox(false);\r\n    setTempObject(defaultFormValue);\r\n    setValuesInputList([]);\r\n    setAttributeForm(null);\r\n  };\r\n\r\n  const handleDeleteAttribute = (index) => {\r\n    setAttributeData((prevData) => {\r\n      const updatedData = [...prevData];\r\n      updatedData.splice(index, 1);\r\n      return updatedData;\r\n    });\r\n  };\r\n  const handleEditAttribute = (index) => {\r\n    if (index >= 0 && index < attributeData.length) {\r\n      setAttributeForm(index);\r\n      setDiabox(true);\r\n      setTempObject({ ...attributeData[index] });\r\n\r\n      const attindex = attributeData[index]?.values[0];\r\n      const valuesArray = Object.entries(attindex || {}).map(\r\n        ([key, value]) => ({\r\n          key,\r\n          value,\r\n        })\r\n      );\r\n\r\n      setValuesInputList(valuesArray);\r\n    }\r\n  };\r\n\r\n  const handleAddNewAttribute = () => {\r\n    setAttributeForm(null);\r\n    setDiabox(true);\r\n    setTempObject({\r\n      name: \"\",\r\n      mandatory: \"\",\r\n      material_master: \"\",\r\n      dataType: \"\",\r\n      inputType: \"\",\r\n      defaultValues: \"\",\r\n    });\r\n    setValuesInputList([]);\r\n  };\r\n\r\n  //********all atrribute functions ends */\r\n\r\n  const handleTemplateFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    let updatedForm = {};\r\n  \r\n    if (name === \"ERPtype\") {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: null,\r\n        plants: null,\r\n        url: null,\r\n        username: null,\r\n        port: null,\r\n        authkey: null,\r\n        material_master: null,\r\n        SalesOrg: null,\r\n        ECN_required: null,\r\n        bomusage: null,\r\n  \r\n        [name]: value,\r\n      };\r\n    } else if (name === \"plant\") {\r\n      const {\r\n        id,\r\n        plantName,\r\n        material_master,\r\n        SalesOrg,\r\n        ECN_required,\r\n        bomusage,\r\n        ConnectivityDetails,\r\n      } = value;\r\n  \r\n      const { url, username, password, port, authkey } = ConnectivityDetails;\r\n  \r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: id,\r\n        plantName: plantName,\r\n        SalesOrg: SalesOrg,\r\n        url: url,\r\n        material_master: material_master,\r\n        username: username,\r\n        password: password,\r\n        port: port,\r\n        authkey: authkey,\r\n        ECN_required: ECN_required,\r\n        bomusage: bomusage,\r\n      };\r\n    } else {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        [name]: value,\r\n      };\r\n    }\r\n    // if (updatedForm.ERPType === \"SAP\") {\r\n    //   updatedForm.exportToERP = \"\";\r\n    //   updatedForm.existInOracle = \"\";\r\n    //   updatedForm.notOwningDivision = \"\";\r\n    // }\r\n    setTemplateForm(updatedForm);\r\n  };\r\n  \r\n  const handleTemplateNameBlur = (event) => {\r\n    const { name, value } = event.target;\r\n    const trimmedValue = value.trim().replace(/\\s+/g, ' '); // Trim and replace multiple spaces\r\n    setTemplateForm((prevForm) => ({\r\n      ...prevForm,\r\n      [name]: trimmedValue,\r\n    }));\r\n  };\r\n\r\n  const filteredPlant = plantData?.filter(\r\n    (plant) =>\r\n      plant.ERPType === templateForm.ERPType &&\r\n      plant.instance === templateForm.instance\r\n  );\r\n  //console.log(filteredPlant, \"2323232 plant \");\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    // setSnackbarMessage(message);\r\n    // setSnackbarSeverity(severity);\r\n    // setsnackBar(true);\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  const handleSubmitTempForm = async () => {\r\n    const randomid = Math.floor(100000 + generateRandomId() * 900000);\r\n\r\n    if (\r\n      templateForm.templateName?.trim() === \"\" ||\r\n      !templateForm.templateName ||\r\n      templateForm.desc?.trim() === \"\" ||\r\n      !templateForm.desc ||\r\n      // templateForm.plantName?.trim() === \"\" ||\r\n      // !templateForm.plantName ||\r\n      templateForm.ERPType?.trim() === \"\" ||\r\n      !templateForm.ERPType ||\r\n      (templateForm.ERPType === \"SAP\" && !templateForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the required details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const updatedForm = {\r\n      ...templateForm,\r\n      id: randomid.toString(),\r\n      attributes: attributeData,\r\n      BU: selectedBU,\r\n      plants: selectedplants,\r\n    };\r\n\r\n    tempService.addnewTemplate(updatedForm).then((resp) => {\r\n      if (resp && Object.keys(resp)?.length && resp?.status === \"failed\") {\r\n        const altHtml = resp?.message?.map((citem) => {\r\n          return (<li key={shortId.generate()}>{citem}</li>)\r\n        });\r\n        handlesnackBarClick(altHtml, \"error\");\r\n        return;\r\n      }\r\n      // handlesnackBarClick(\"Template added successfully!\", \"success\");\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/template\", { state: { message: 'Template added successfully', status: \"success\" } });\r\n      }, 200);\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  const sortedBusinessUnitList = sortDataByKey(bussinessUnitLists, \"businessUnit\");\r\n  \r\n  // console.log(templateForm, \"tempform data\");\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Template\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid item md={9} sm={6} xs={6}>\r\n          <form>\r\n            <h4>Create Template</h4>\r\n\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Template Name</span> <span className={classes.spanRed}>*</span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"templateName\"\r\n                  value={templateForm.templateName}\r\n                  onChange={handleTemplateFormChange}\r\n                  onBlur={handleTemplateNameBlur}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Description</span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"desc\"\r\n                  value={templateForm.desc}\r\n                  onChange={handleTemplateFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={templateForm.ERPType}\r\n                  onChange={handleTemplateFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              {(templateForm.ERPType === \"SAP\" ||\r\n                templateForm.ERPType === \"ORACLE\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Instance</span>{\" \"}\r\n                      <span className={classes.spanRed}>*</span>\r\n                      {/* <span className={classes.spanRed}>*</span> */}\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        // label=\"instance\"\r\n                        id=\"instance\"\r\n                        name=\"instance\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={templateForm.instance}\r\n                        onChange={handleTemplateFormChange}\r\n                      >\r\n                        {instanceOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n              {/* {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Export to ERP </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"exportToERP\"\r\n                      name=\"exportToERP\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.exportToERP}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {exportToERPOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Exist in Oracle </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"existInOracle\"\r\n                      name=\"existInOracle\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.existInOracle}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {existInOracleOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Not Owning Division </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"notOwningDivision\"\r\n                      name=\"notOwningDivision\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.notOwningDivision}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {notOwningDivisionOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )} */}\r\n\r\n              {(templateForm.ERPType === \"ORACLE\" ||\r\n                templateForm.ERPType === \"SAP\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Design Organization <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        style={{ width: \"100%\" }}\r\n                        multiple\r\n                        name=\"BU\"\r\n                      value={selectedBU.sort(caseInsensitiveSort)}\r\n                        onChange={(e) => handleSelectChange(e, \"BU\")}\r\n                      renderValue={(selected) => selected.sort(caseInsensitiveSort).join(\", \")}\r\n                        MenuProps={{\r\n                          sx: {\r\n                            \"&& .Mui-selected\": {\r\n                              backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        {bussinessUnitLists.map((option) => (\r\n                          <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                            {option.businessUnit}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n              {/* <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Plant</span> <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  multiple\r\n                  name=\"plants\"\r\n                  value={selectedplants.map((item) => item.plantName)}\r\n                  onChange={(e) => handleSelectChange(e, \"plants\")}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                >\r\n                  {filteredPlant?.map((option) => (\r\n                    <MenuItem key={option.id} value={option.plantName}>\r\n                      {option.plantName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid> */}\r\n\r\n              {(templateForm.ERPType === \"SAP\") && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Attributes</span>\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <span>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        margin=\"2px\"\r\n                        onClick={handleAddNewAttribute}\r\n                      >\r\n                        Add Attribute\r\n                      </Button>\r\n                    </span>\r\n                    <br />\r\n                    &nbsp;\r\n                    <Grid md={4}>\r\n                      <span>\r\n                        <div\r\n                          style={{\r\n                            height: \"154px\",\r\n                            overflowY: \"auto\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            width: \"500px\",\r\n                          }}\r\n                        >\r\n                          {attributeData.map((attrivar, aindex) => (\r\n                            <Paper\r\n                              key={aindex}\r\n                              style={{\r\n                                paddingLeft: \"50px\",\r\n                                marginBottom: \"8px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                alignItems: \"center\",\r\n                                height: \"46px\",\r\n                              }}\r\n                            >\r\n                              <Grid container alignItems=\"center\" spacing={3}>\r\n                                <Grid item md={9} sm={8} xs={12}>\r\n                                  <p>\r\n                                    <b>Name:</b> {attrivar.name}\r\n                                    <IconButton\r\n                                      onClick={() => handleEditAttribute(aindex)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteAttribute(aindex)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </p>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Paper>\r\n                          ))}\r\n                        </div>\r\n                      </span>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleSubmitTempForm}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </form>\r\n\r\n          <Snackbar\r\n            open={snackBar}\r\n            autoHideDuration={3000}\r\n            onClose={handlesnackbarClose}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n          >\r\n            <Alert\r\n              onClose={handlesnackbarClose}\r\n              severity={snackbarseverity}\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              {snackbarmessage}\r\n            </Alert>\r\n          </Snackbar>\r\n          {(openDesc) ? (\r\n            <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n          ) : (<></>)}\r\n          {/* add attribute dialog box code */}\r\n          <AttributeDialog\r\n            open={diabox}\r\n            handleDialogClose={handleDialogClose}\r\n            attributeForm={attributeForm}\r\n            tempObject={tempObject}\r\n            handleAttributeChange={handleAttributeChange}\r\n            handleAddAttribute={handleAddAttribute}\r\n            newKey={newKey}\r\n            newValue={newValue}\r\n            handleAddRow={handleAddRow}\r\n            handleDeleteRow={handleDeleteRow}\r\n            keyerror={keyerror}\r\n            valuesInputList={valuesInputList}\r\n          />\r\n        </Grid>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  IconButton,\r\n  Grid,\r\n  TextField,\r\n  Paper,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport AttributeDialog from \"./attributeDialog\";\r\nimport Loader from 'app/components/Loader';\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  existInOracleOptions,\r\n  exportToERPOptions,\r\n  notOwningDivisionOptions,\r\n  BUOptions,\r\n} from \"../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport shortId from 'shortid';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nimport { caseInsensitiveSort } from \"app/utils/utils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\nconst defaultFormValue = {\r\n  name: null,\r\n  mandatory: null,\r\n  material_master: null,\r\n  dataType: null,\r\n  inputType: null,\r\n  values: null,\r\n  defaultValues: null,\r\n};\r\n\r\nexport default function EditTemplate() {\r\n  const tempService = new templateService();\r\n  const { refreshData, bussinessUnitLists } = useOracleSettings();\r\n  const plantService = new PlantService();\r\n  const [plantData, setPlantData] = useState();\r\n  const classes = useStyles();\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n\r\n  //**********AttributeComplete States************************** */\r\n  const [diabox, setDiabox] = useState(false);\r\n\r\n  const [attributeForm, setAttributeForm] = useState(null);\r\n  const [tempObject, setTempObject] = useState({});\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  //**********AttributeComplete States end ************************** */\r\n  let navigate = useNavigate();\r\n  const location = useLocation();\r\n  const params = useParams();\r\n\r\n  const [selectedTemplateObj, setSelectedTemplateObj] = useState();\r\n  const [templateForm, setTemplateForm] = useState({});\r\n  const [attributeData, setAttributeData] = useState([]);\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n    });\r\n  }, []);\r\n\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  //********all atrribute functions */\r\n  const handleAttributeChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddAttribute = () => {\r\n    const updatedTempObject = {\r\n      ...tempObject,\r\n      values: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n\r\n    if (updatedTempObject.material_master === \"\") {\r\n      updatedTempObject[\"material_master\"] = selectedTemplateObj;\r\n    }\r\n    if (updatedTempObject.mandatory === \"\") {\r\n      updatedTempObject[\"mandatory\"] = \"Y\";\r\n    }\r\n\r\n    if (Object.keys(updatedTempObject.values).length) {\r\n      updatedTempObject[\"values\"] = [updatedTempObject.values];\r\n    }\r\n\r\n    if (attributeForm !== null) {\r\n      const updatedAttributeData = [...attributeData];\r\n      updatedAttributeData[attributeForm] = updatedTempObject;\r\n      setAttributeData(updatedAttributeData);\r\n    } else {\r\n      if (attributeData) {\r\n        setAttributeData((prevAttributeData) => [\r\n          ...prevAttributeData,\r\n          updatedTempObject,\r\n        ]);\r\n      } else {\r\n        const newAttr = [updatedTempObject]\r\n        setAttributeData(newAttr);\r\n      }\r\n    }\r\n\r\n    setDiabox(false);\r\n    setTempObject(defaultFormValue);\r\n    setValuesInputList([]);\r\n    setAttributeForm(null);\r\n  };\r\n\r\n  const handleDeleteAttribute = (index) => {\r\n    if (index >= 0 && index < attributeData.length) {\r\n      const updatedAttributeData = [...attributeData];\r\n      updatedAttributeData.splice(index, 1);\r\n      setAttributeData(updatedAttributeData);\r\n    }\r\n  };\r\n  const handleEditAttribute = (index) => {\r\n    if (index >= 0 && index < attributeData.length) {\r\n      setAttributeForm(index);\r\n      setDiabox(true);\r\n\r\n      const selectedAttribute = { ...attributeData[index] };\r\n\r\n      const attindex = attributeData[index]?.values[0];\r\n      const valuesArray = Object.entries(attindex || {})?.map(\r\n        ([key, value]) => ({\r\n          key,\r\n          value,\r\n        })\r\n      );\r\n\r\n      setValuesInputList(valuesArray);\r\n\r\n      setTempObject(selectedAttribute);\r\n    }\r\n  };\r\n\r\n  const handleAddNewAttribute = () => {\r\n    setAttributeForm(null);\r\n    setDiabox(true);\r\n    setTempObject({\r\n      name: \"\",\r\n      mandatory: \"\",\r\n      material_master: \"\",\r\n      dataType: \"\",\r\n      inputType: \"\",\r\n      defaultValues: \"\",\r\n    });\r\n    setValuesInputList([]);\r\n  };\r\n\r\n  //********all atrribute functions ends */\r\n\r\n  const handleSelectChange = (event, type) => {\r\n    const selectedValues = event.target.value;\r\n\r\n    if (type === \"BU\") {\r\n      setSelectedBU(selectedValues);\r\n    } else if (type === \"plants\") {\r\n      const selectedPlantsInfo = plantData?.filter((option) =>\r\n        selectedValues.includes(option.plantName)\r\n      );\r\n\r\n      const extractedInfo = selectedPlantsInfo?.map((option) => ({\r\n        plantName: option.plantName,\r\n        id: option.id,\r\n      }));\r\n\r\n      setSelectedPlants(extractedInfo);\r\n    }\r\n  };\r\n\r\n  const handleTemplateFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    let updatedForm = {};\r\n\r\n    if (name === \"ERPtype\") {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: null,\r\n        plants: null,\r\n        url: null,\r\n        username: null,\r\n        port: null,\r\n        authkey: null,\r\n        material_master: null,\r\n        SalesOrg: null,\r\n        ECN_required: null,\r\n        bomusage: null,\r\n        //oracle changes\r\n        // exportToERP: null,\r\n        // existInOracle: null,\r\n        // notOwningDivision: null,\r\n        BU: null,\r\n\r\n        [name]: value,\r\n      };\r\n    } else if (name === \"plant\") {\r\n      const {\r\n        id,\r\n        plantName,\r\n        material_master,\r\n        ECN_required,\r\n        bomusage,\r\n        SalesOrg,\r\n        ConnectivityDetails,\r\n      } = value;\r\n\r\n      const { url, username, password, port, authkey } = ConnectivityDetails;\r\n\r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: id,\r\n        plantName: plantName,\r\n        ECN_required: ECN_required,\r\n        bomusage: bomusage,\r\n        SalesOrg: SalesOrg,\r\n        url: url,\r\n        material_master: material_master,\r\n        username: username,\r\n        password: password,\r\n        port: port,\r\n        authkey: authkey,\r\n      };\r\n    } else {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        [name]: value,\r\n      };\r\n    }\r\n\r\n    // if (updatedForm.ERPType === \"SAP\") {\r\n    //   updatedForm.exportToERP = \"\";\r\n    //   updatedForm.existInOracle = \"\";\r\n    //   updatedForm.notOwningDivision = \"\";\r\n    // }\r\n\r\n    setTemplateForm(updatedForm);\r\n  };\r\n\r\n  const filteredPlant = plantData?.filter(\r\n    (plant) =>\r\n      plant.ERPType === templateForm.ERPType &&\r\n      plant.instance === templateForm.instance\r\n  );\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    // setSnackbarMessage(message);\r\n    // setSnackbarSeverity(severity);\r\n    // setsnackBar(true);\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  const handleSubmitTempForm = async () => {\r\n    if (\r\n      templateForm.templateName?.trim() === \"\" ||\r\n      !templateForm.templateName ||\r\n      templateForm.desc?.trim() === \"\" ||\r\n      !templateForm.desc ||\r\n      // templateForm.plantName?.trim() === \"\" ||\r\n      // !templateForm.plantName ||\r\n      templateForm.ERPType?.trim() === \"\" ||\r\n      !templateForm.ERPType ||\r\n      (templateForm.ERPType === \"SAP\" && !templateForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the required details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    setTemplateForm((prevData) => {\r\n      const updatedForm = {\r\n        ...prevData,\r\n        id: templateForm.id,\r\n        templates: templateForm.templates,\r\n        attributes: attributeData,\r\n        BU: selectedBU,\r\n        plants: selectedplants,\r\n      };\r\n\r\n      tempService.updateTemplate(updatedForm).then((resp) => {\r\n        if (resp && Object.keys(resp)?.length && resp?.status === \"failed\") {\r\n          const altHtml = resp?.message?.map((citem) => {\r\n            return (<li key={shortId.generate()}>{citem}</li>)\r\n          });\r\n          handlesnackBarClick(altHtml, \"error\");\r\n          return;\r\n        }\r\n        // handlesnackBarClick(\"Template updated successfully\", \"success\");\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/template\", { state: { message: resp.msg, status: resp.status } });\r\n        }, 200);\r\n      });\r\n\r\n      return updatedForm;\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (params?.tempId) {\r\n      setIsLoading(true);\r\n      tempService.getTemplateById({ id: params?.tempId }).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp && Object?.keys(resp)?.length) {\r\n          const selectedTemplate = resp;\r\n\r\n          setSelectedTemplateObj(selectedTemplate);\r\n\r\n          setSelectedBU(\r\n            selectedTemplate.BU\r\n          );\r\n          setAttributeData(\r\n            selectedTemplate.attributes\r\n          );\r\n          setSelectedPlants(\r\n            selectedTemplate.plants\r\n          );\r\n          setTemplateForm({\r\n            id: selectedTemplate.id,\r\n            templates: selectedTemplate.templates,\r\n            templateName: selectedTemplate.templateName,\r\n            desc: selectedTemplate.desc,\r\n            ERPType: selectedTemplate.ERPType,\r\n            instance: selectedTemplate.instance,\r\n            plantId: selectedTemplate.plantId,\r\n            plantName: selectedTemplate.plantName,\r\n            port: selectedTemplate.port,\r\n            url: selectedTemplate.url,\r\n            username: selectedTemplate.username,\r\n            attributes: selectedTemplate.attributes,\r\n            ECN_required: selectedTemplate.ECN_required,\r\n            bomusage: selectedTemplate.bomusage,\r\n            //oracle changes\r\n            BU: selectedTemplate.BU,\r\n            // exportToERP: selectedTemplate.exportToERP,\r\n            // existInOracle: selectedTemplate.existInOracle,\r\n            // notOwningDivision: selectedTemplate.notOwningDivision,\r\n          });\r\n        } else {\r\n          navigate(\"/template\", { state: { message: \"Template not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/template\", { state: { message: \"Template not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n sortDataByKey(bussinessUnitLists, \"businessUnit\");\r\n  \r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Template\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid item md={9} sm={6} xs={6}>\r\n          <form>\r\n            <h4>Edit Template</h4>\r\n\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Template Name</span>\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"templateName\"\r\n                  value={templateForm.templateName}\r\n                  onChange={handleTemplateFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  disabled\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Description</span>\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"desc\"\r\n                  value={templateForm.desc}\r\n                  onChange={handleTemplateFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              {(templateForm.ERPType === \"SAP\" ||\r\n                templateForm.ERPType === \"ORACLE\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>ERP Type </span>\r\n                      <span className={classes.spanRed}>*</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        labelId=\"ERPType-label\"\r\n                        id=\"ERPType-select\"\r\n                        name=\"ERPType\"\r\n                        fullWidth\r\n                        value={templateForm?.ERPType}\r\n                        onChange={handleTemplateFormChange}\r\n                      >\r\n                        {ERPtypeOptions?.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Instance</span>\r\n                      <span className={classes.spanRed}>*</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        label=\"instance\"\r\n                        id=\"instance\"\r\n                        name=\"instance\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={templateForm.instance}\r\n                        onChange={handleTemplateFormChange}\r\n                      >\r\n                        {instanceOptions?.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n              {/* {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Export to ERP </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"exportToERP\"\r\n                      name=\"exportToERP\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.exportToERP}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {exportToERPOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Exist in Oracle </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"existInOracle\"\r\n                      name=\"existInOracle\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.existInOracle}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {existInOracleOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Not Owning Division </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"notOwningDivision\"\r\n                      name=\"notOwningDivision\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.notOwningDivision}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {notOwningDivisionOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )} */}\r\n\r\n              {(templateForm.ERPType === \"ORACLE\" || templateForm.ERPType === \"SAP\") && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>\r\n                      Design Organization <span className={classes.spanRed}>*</span>\r\n                    </span>\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      style={{ width: \"100%\" }}\r\n                      multiple\r\n                      name=\"BU\"\r\n                      value={selectedBU.sort(caseInsensitiveSort)}\r\n                      onChange={(e) => handleSelectChange(e, \"BU\")}\r\n                      renderValue={(selected) => selected.sort(caseInsensitiveSort).join(\", \")}\r\n                      MenuProps={{\r\n                        sx: {\r\n                          \"&& .Mui-selected\": {\r\n                            backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                          }\r\n                        }\r\n                      }}\r\n                    >\r\n                      {bussinessUnitLists?.map((option) => (\r\n                        <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                          {option.businessUnit}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {/* <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Plants</span>\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  multiple\r\n                  name=\"plants\"\r\n                  value={selectedplants.map((item) => item.plantName)}\r\n                  onChange={(e) => handleSelectChange(e, \"plants\")}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                >\r\n                  {filteredPlant?.map((option) => (\r\n                    <MenuItem key={option.id} value={option.plantName}>\r\n                      {option.plantName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid> */}\r\n\r\n              {(templateForm.ERPType === \"SAP\") && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Attributes</span>\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <span>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        margin=\"2px\"\r\n                        onClick={handleAddNewAttribute}\r\n                      >\r\n                        Add Attribute\r\n                      </Button>\r\n                    </span>\r\n                    <br />\r\n                    &nbsp;\r\n                    <Grid md={4}>\r\n                      <span>\r\n                        <div\r\n                          style={{\r\n                            height: \"154px\",\r\n                            overflowY: \"auto\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            width: \"500px\",\r\n                          }}\r\n                        >\r\n                          {attributeData?.map((attrivar, aindex) => (\r\n                            <Paper\r\n                              key={aindex}\r\n                              style={{\r\n                                paddingLeft: \"50px\",\r\n                                marginBottom: \"8px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                alignItems: \"center\",\r\n                                height: \"46px\",\r\n                              }}\r\n                            >\r\n                              <Grid container alignItems=\"center\" spacing={3}>\r\n                                <Grid item md={9} sm={8} xs={12}>\r\n                                  <p>\r\n                                    <b>Name:</b> {attrivar.name}\r\n                                    <IconButton\r\n                                      onClick={() => handleEditAttribute(aindex)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteAttribute(aindex)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </p>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Paper>\r\n                          ))}\r\n                        </div>\r\n                      </span>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleSubmitTempForm}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n\r\n          <Snackbar\r\n            open={snackBar}\r\n            autoHideDuration={3000}\r\n            onClose={handlesnackbarClose}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n          >\r\n            <Alert\r\n              onClose={handlesnackbarClose}\r\n              severity={snackbarseverity}\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              {snackbarmessage}\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          {(openDesc) ? (\r\n            <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n          ) : (<></>)}\r\n          {\r\n            (refreshData || isLoading) ? (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <Loader show={true} />\r\n              </div>\r\n            ) : <></>\r\n          }\r\n\r\n          {/* add attribute dialog box code */}\r\n          <AttributeDialog\r\n            open={diabox}\r\n            handleDialogClose={handleDialogClose}\r\n            attributeForm={attributeForm}\r\n            tempObject={tempObject}\r\n            handleAttributeChange={handleAttributeChange}\r\n            handleAddAttribute={handleAddAttribute}\r\n            newKey={newKey}\r\n            newValue={newValue}\r\n            handleAddRow={handleAddRow}\r\n            handleDeleteRow={handleDeleteRow}\r\n            keyerror={keyerror}\r\n            valuesInputList={valuesInputList}\r\n          />\r\n        </Grid>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\n// import { authRoles } from \"../../auth/authRoles\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport TemplateWrapper from \"./templateWrapper\";\r\nimport CreateTemplate from \"./createTemplate\";\r\nimport EditTemplate from \"./editTemplate\";\r\n\r\nconst templateRoutes = [\r\n  {\r\n    path: \"/template\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <TemplateWrapper />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n\r\n  {\r\n    path: \"/createTemplate\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateTemplate />\r\n      </PrivateRoute>\r\n    ),\r\n    // auth: authRoles.admin,\r\n  },\r\n\r\n  {\r\n    path: \"/editTemplate/:tempId\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditTemplate />\r\n      </PrivateRoute>\r\n    ),\r\n    // auth: authRoles.admin,\r\n  },\r\n];\r\n\r\nexport default templateRoutes;\r\n","export const authRoles = {\r\n    sa: ['SA'], // Only Super Admin has access\r\n    admin: ['SA', 'ADMIN'], // Only SA & Admin has access\r\n    editor: ['SA', 'ADMIN', 'EDITOR'], // Only SA & Admin & Editor has access\r\n    guest: ['SA', 'ADMIN', 'EDITOR', 'GUEST'], // Everyone has access\r\n}\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.plantData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.plantData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        'Plant Name': item.plantName,\r\n        'ERP Type': item.ERPType,\r\n        Instance: item.instance,\r\n        \"Export To ERP\": item.exportToERP,\r\n      }\r\n      return res\r\n    })\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Plants' }).then((response) => {\r\n      setExportResponse(response)\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.plantData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n    }\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportPlants\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst Plant = () => {\r\n  const plantService = new PlantService();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [plantData, setPlantData] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [selectedDelPlant, setSelectedDelPlant] = useState();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const handleDeleteDialog = () => {\r\n    handleDeletePlantDialog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditPlant(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n\r\n  const fetchPlants = () => {\r\n    setIsLoading(true);\r\n    plantService.getAllPlantsList()\r\n      .then((result) => {\r\n        setPlantData(result);\r\n        setInitialData(result); // Set initial data\r\n        setFilteredPlantData(result);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlants();\r\n  }, []);\r\n\r\n  const [filteredPlantData, setFilteredPlantData] = useState([]);\r\n  let sortedPlanteData = sortDataByKey([...filteredPlantData], \"plantName\");\r\n    \r\n  useEffect(() => {\r\n    setFilteredPlantData(plantData);\r\n  }, [plantData]);\r\n  // ***** Global search functionality ********\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  // ***** Global search functionality ends********\r\n\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n  const handleCreatePlant = () => {\r\n    plantModeRef.current = \"create\"; // Update the ref with the new value of plantMode\r\n    setTimeout(() => {\r\n      navigate(\"/createPlant\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n  const handleDeletePlantDialog = (DeletePlant) => {\r\n    setDeleteDialog(true);\r\n    setSelectedDelPlant(DeletePlant);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeletePlant = async () => {\r\n    setDeleteDialog(false);\r\n\r\n    try {\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await plantService.deletePlant(selRowsId);\r\n      setSelected({});\r\n      setSelectedRows([]);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n    });\r\n    handlesnackBarClick(\"Plant deleted successfully\", \"success\");\r\n  };\r\n\r\n  const handleEditPlant = (editSelectedPlant) => {\r\n    plantModeRef.current = \"edit\";\r\n    const selectedPlantData = editSelectedPlant;\r\n    setTimeout(() => {\r\n      navigate(`/editPlant/${selectedPlantData?.id}`, {\r\n        state: { plantMode: plantModeRef.current, selectedPlantData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    const new_FilteredData = plantData.filter((subscriber) => {\r\n      return (searchValue === \"\" ||\r\n        subscriber.plantName\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.instance\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.ERPType.toLowerCase().includes(\r\n          searchValue.toLowerCase()\r\n        ))\r\n    });\r\n    setFilteredPlantData(new_FilteredData);\r\n  }, [searchValue, plantData]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedPlant = sortedExportDataHOC(Plant);\r\n    const sortedData = SortedPlant({ data: plantData, sortInfo, sortedPlanteData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setPlantData(sortedData.props.data);\r\n    setFilteredPlantData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Plant\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreatePlant}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <ExportDialogBox\r\n              plantData={sortInfo && Object.keys(sortInfo).length === 0 ? sortedPlanteData : plantData}\r\n              filterTemplateData={selectedRows} />\r\n          </Grid>\r\n\r\n\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br />\r\n            {isLoading ? (\r\n              // Display loading spinner while data is being fetched\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  minHeight: 550\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              // Render DataGrid once data is loaded\r\n              <DataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                style={{ minHeight: 550 }}\r\n                defaultLimit={100}\r\n                columns={[\r\n                  {\r\n                    name: \"plantName\",\r\n                    header: <Tooltip title={'Name'}>Plant Name</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.plantName}</div>,\r\n                  },\r\n                  {\r\n                    name: \"ERPType\",\r\n                    header: <Tooltip title={\"ERP Type\"}>ERP Type</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.ERPType}</div>,\r\n                  },\r\n                  {\r\n                    name: \"instance\",\r\n                    header: <Tooltip title={\"instance\"}>Instance</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"exportToERP\",\r\n                    header: <Tooltip title={\"Export To ERP\"}>Export To ERP</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  // {\r\n                  //   name: \"orgId\",\r\n                  //   header: <Tooltip title={\"Org Id\"}>Org Id</Tooltip>,\r\n                  //   defaultFlex: 1,\r\n                  //   defaultWidth: 50,\r\n                  // },\r\n                  // {\r\n                  //   name: \"BU\",\r\n                  //   header: <Tooltip title={\"Design Organization\"}>Design Organization</Tooltip>,\r\n                  //   defaultFlex: 1,\r\n                  //   defaultWidth: 50,\r\n                  //   render: ({ data }) => <div>{(data?.BU) ? data.BU.map((item) => item).join(\", \") : ''}</div>,\r\n                  // },\r\n                ]}\r\n                  dataSource={sortInfo === null ? filteredPlantData : sortedPlanteData}\r\n                // rowHeight={null}\r\n                checkboxColumn\r\n                selected={selected}\r\n                onSelectionChange={onSelectionChange}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                pagination\r\n                renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                onSortInfoChange={handleSortInfoChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Plant\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the plant <b>{selectedDelPlant?.plantName}</b>{\" \"}\r\n                with instance <b>{selectedDelPlant?.instance}</b> having Design Organizations{\" \"}\r\n                {/* <b>\r\n                  {selectedDelPlant?.BU.map((buname) => {\r\n                    return buname;\r\n                  }).join(\",\")}\r\n                </b> */}\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted plants?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeletePlant}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Plant;","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\nexport default function ConnectivityDetailsDialog({\r\n  open,\r\n  connDetails,\r\n  handleCDChange,\r\n  handleAddCD,\r\n  connectivityError,\r\n  handleDialogClose,\r\n  plantForm,\r\n}) {\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>Add Connectivity details</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>URL :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"URL\"\r\n              name=\"url\"\r\n              value={connDetails.url}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>Username :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              value={connDetails.username}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>Password :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              value={connDetails?.password || \"\"}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>AuthKey :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Authkey\"\r\n              name=\"authkey\"\r\n              value={connDetails.authkey}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>Port :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Port\"\r\n              name=\"port\"\r\n              value={connDetails.port}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          {plantForm.ERPType === \"SAP\" && (\r\n            <>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>sapsysnum :</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"sapsysnum\"\r\n                  name=\"sapsysnum\"\r\n                  value={connDetails.sapsysnum}\r\n                  onChange={handleCDChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>sapclientid :</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"sapclientid\"\r\n                  name=\"sapclientid\"\r\n                  value={connDetails.sapclientid}\r\n                  onChange={handleCDChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <p style={{ color: \"red\" }}>{connectivityError}</p>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddCD}>Add</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { Formik, Form } from \"formik\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  styled\r\n} from \"@mui/material\";\r\nimport ConnectivityDetailsDialog from \"./connectivityDetailsDialog\";\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  bomusageOptions,\r\n  exportToERPOptions,\r\n} from \"../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\nexport default function CreatePlant() {\r\n  const plantService = new PlantService();\r\n  const { bussinessUnitLists } = useOracleSettings();\r\n  const [allPlantData, setallPlantData] = useState();\r\n  const [diaBox, setDiabox] = useState(false);\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    id: \"\",\r\n    plants: \"\",\r\n    ERPType: \"\",\r\n    instance: \"\",\r\n    Connectivitydetails: {},\r\n  };\r\n  const [plantForm, setPlantForm] = useState({\r\n    BU: [],\r\n    exportToERP: \"Y\", // Initialize BU as an empty array\r\n    ERPType: \"\",\r\n    instance: \"\",\r\n    orgId: \"\",\r\n    plantName: \"\",\r\n    SalesOrg: \"\",\r\n    aliasPlant: \"\",\r\n    material_master: \"\",\r\n    ECN_required: \"\",\r\n    bomusage: \"\",\r\n    // ... other fields\r\n  });\r\n  const [connDetails, setconnDetails] = useState({});\r\n  const [connectivityError, setconnectivityError] = useState();\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  let navigate = useNavigate();\r\n\r\n  const materialMasterOption = [\r\n    {\r\n      value: \"Y\",\r\n      label: \"Yes\",\r\n    },\r\n    {\r\n      value: \"N\",\r\n      label: \"No\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setallPlantData(result.plant);\r\n    });\r\n  }, []);\r\n\r\n  //console.log(diaBox, \"dialogbox status\");\r\n\r\n  const handleAddPlant = () => {\r\n    const newPlant = {\r\n      id:\r\n        plantForm.plantName +\r\n        \"_\" +\r\n        plantForm.ERPType +\r\n        \"_\" +\r\n        plantForm.instance,\r\n      plants: plantForm.plantName + \"_\" + plantForm.ERPType,\r\n      plantName: plantForm.plantName,\r\n      ERPType: plantForm.ERPType,\r\n      orgId: plantForm.orgId,\r\n      SalesOrg: plantForm.SalesOrg,\r\n      aliasPlant: plantForm.aliasPlant,\r\n      material_master: plantForm.material_master,\r\n      ECN_required: plantForm.ECN_required,\r\n      bomusage: plantForm.bomusage,\r\n      // BU: plantForm.ERPType === \"SAP\" ? \"\" : selectedBU,\r\n      // exportToERP: plantForm.ERPType === \"SAP\" ? \"\" : plantForm.exportToERP,\r\n      exportToERP: plantForm.exportToERP,\r\n      ConnectivityDetails: connDetails,\r\n    };\r\n\r\n    if (plantForm?.instance) {\r\n      newPlant[\"instance\"] = plantForm?.instance;\r\n      newPlant[\"id\"] =\r\n        plantForm.plantName +\r\n        \"_\" +\r\n        plantForm.ERPType +\r\n        \"_\" +\r\n        plantForm.instance;\r\n      newPlant[\"plants\"] =\r\n        plantForm.plantName +\r\n        \"_\" +\r\n        plantForm.ERPType +\r\n        \"_\" +\r\n        plantForm.instance;\r\n    }\r\n\r\n    if (\r\n      plantForm.plantName?.trim() === \"\" || !plantForm.plantName ||\r\n      plantForm.ERPType?.trim() === \"\" || !plantForm.ERPType ||\r\n      plantForm.instance?.trim() === \"\" || !plantForm.instance ||\r\n      plantForm.exportToERP?.trim() === \"\" || !plantForm.exportToERP ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.plantName?.trim() === \"\" || !plantForm.plantName)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.material_master?.trim() === \"\" || !plantForm.material_master)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.bomusage?.trim() === \"\" || !plantForm.bomusage)) ||\r\n      (plantForm.ERPType === \"SAP\" && !plantForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill required details \", \"error\");\r\n    } else {\r\n      plantService.addnewPlant(newPlant).then((resp) => {\r\n        if (resp && resp?.data && resp?.data?.length) {\r\n          if (resp?.data[0]?.id) {\r\n            handlesnackBarClick(\"Plant added successfully!\", \"success\");\r\n\r\n            setTimeout(() => {\r\n              navigate(\"/plants\");\r\n            }, 2000);\r\n          } else if (resp?.data[0]?.msg) {\r\n            handlesnackBarClick(resp?.data[0]?.msg, \"error\");\r\n          }\r\n        } else {\r\n          //console.log(\"No data in resp.\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCDChange = (e) => {\r\n    setconnDetails({\r\n      ...connDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddCD = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  const handlePlantFromChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...plantForm,\r\n      [name]: value,\r\n    };\r\n    setPlantForm(updatedForm);\r\n  };\r\n\r\n  const handleBUChange = (event) => {\r\n    setSelectedBU(event.target.value);\r\n  };\r\n  //connectivity form methods\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n    setconnectivityError(\"\");\r\n    setconnDetails(\"\");\r\n  };\r\n\r\n  // snackbar code\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  //console.log(plantForm, \"plantform\");\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Plant\" }]} />\r\n      </Box>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={() => {\r\n        }}\r\n      >\r\n        <Form>\r\n          <SimpleCard>\r\n            <Grid item md={9} sm={6} xs={6}>\r\n              <h4>Create Plant</h4>\r\n\r\n              <Grid container spacing={3} alignItems=\"center\">\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    Plant Name <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                </Grid>\r\n\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <TextField\r\n                    name=\"plantName\"\r\n                    value={plantForm.plantName}\r\n                    onChange={handlePlantFromChange}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n\r\n\r\n\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    ERP Type <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                </Grid>\r\n\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <Select\r\n                    id=\"ERPType\"\r\n                    name=\"ERPType\"\r\n                    fullWidth\r\n                    displayEmpty\r\n                    value={plantForm.ERPType}\r\n                    onChange={handlePlantFromChange}\r\n                  >\r\n                    {ERPtypeOptions.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n\r\n                {(plantForm.ERPType === \"SAP\" || plantForm.ERPType === \"ORACLE\" || plantForm.ERPType === \"JDE\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Organization Id<span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <TextField\r\n                        label=\"Organization Id\"\r\n                        name=\"orgId\"\r\n                        value={plantForm.orgId}\r\n                        onChange={handlePlantFromChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {(plantForm.ERPType === \"SAP\" ||\r\n                  plantForm.ERPType === \"ORACLE\" || plantForm.ERPType === \"JDE\") && (\r\n                    <>\r\n                      <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                        <span>\r\n                          Instance <span className={classes.spanRed}>*</span>\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item md={9} sm={8} xs={12}>\r\n                        <Select\r\n                          id=\"instance\"\r\n                          name=\"instance\"\r\n                          fullWidth\r\n                          displayEmpty\r\n                          value={plantForm.instance}\r\n                          onChange={handlePlantFromChange}\r\n                        >\r\n                          {instanceOptions.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n\r\n                {[\"ORACLE\", \"SAP\", \"JDE\"]?.includes(plantForm.ERPType) && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Export to ERP</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"exportToERP\"\r\n                        name=\"exportToERP\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.exportToERP}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {exportToERPOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {/* {plantForm.ERPType === \"ORACLE\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Design Organization <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        style={{ width: \"100%\" }}\r\n                        multiple\r\n                        value={selectedBU}\r\n                        onChange={handleBUChange}\r\n                        renderValue={(selected) => selected.join(\", \")}\r\n                        MenuProps={{\r\n                          sx: {\r\n                            \"&& .Mui-selected\": {\r\n                              backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        {bussinessUnitLists.map((option) => (\r\n                          <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                            {option.businessUnit}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )} */}\r\n\r\n                {plantForm.ERPType === \"SAP\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Default Sales Org<span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <TextField\r\n                        label=\"Sales Org\"\r\n                        name=\"SalesOrg\"\r\n                        value={plantForm.SalesOrg}\r\n                        onChange={handlePlantFromChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Material Master <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"material_master\"\r\n                        name=\"material_master\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.material_master}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    {plantForm.material_master === \"Y\" && (\r\n                      <>\r\n                        <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                          <span>\r\n                            Plant Alias Name\r\n                            <span className={classes.spanRed}>*</span>\r\n                          </span>\r\n                        </Grid>\r\n\r\n                        <Grid item md={9} sm={8} xs={12}>\r\n                          <TextField\r\n                            name=\"aliasPlant\"\r\n                            value={plantForm.aliasPlant}\r\n                            onChange={handlePlantFromChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        ECN Required <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"ECN_required\"\r\n                        name=\"ECN_required\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.ECN_required}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        BOM Usage <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"bomusage\"\r\n                        name=\"bomusage\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.bomusage}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {bomusageOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    {console.log(plantForm.ERPType, 'plantForm.ERPType')}\r\n                    {plantForm.ERPType === \"SAP\" && (\r\n                      <>\r\n                        <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                          <span>Connectivity Details </span>\r\n                        </Grid>\r\n\r\n                        <Grid item md={9} sm={8} xs={12}>\r\n                          <span>\r\n                            {Object.keys(connDetails).length === 0 && (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                margin=\"2px\"\r\n                                onClick={() => {\r\n                                  setDiabox(true);\r\n                                }}\r\n                              >\r\n                                Add Connectivity Details\r\n                              </Button>\r\n                            )}\r\n                            {Object.keys(connDetails).length > 0 && (\r\n                              <Grid item md={12} sm={8} xs={12}>\r\n                                <>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <p>\r\n                                      <b>URL :</b> {connDetails.url}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Username :</b> {connDetails.username}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Pass :</b> {connDetails.password}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>AuthKey :</b> {connDetails.authkey}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Port :</b> {connDetails.port}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    {plantForm.ERPType === \"SAP\" && (\r\n                                      <>\r\n                                        <p>\r\n                                          <b>sapsysnum :</b> {connDetails.sapsysnum}\r\n                                        </p>{\" \"}\r\n                                        &nbsp;\r\n                                        <p>\r\n                                          <b>sapclientid :</b> {connDetails.sapclientid}\r\n                                        </p>{\" \"}\r\n                                      </>\r\n                                    )}\r\n                                    <p>\r\n                                      {\" \"}\r\n                                      <EditIcon\r\n                                        onClick={() => {\r\n                                          setDiabox(true);\r\n                                        }}\r\n                                      />\r\n                                    </p>\r\n                                  </div>\r\n                                </>\r\n                              </Grid>\r\n                            )}\r\n                          </span>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleAddPlant}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleCancel}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </SimpleCard>\r\n        </Form>\r\n      </Formik>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      {/* dialogBox */}\r\n\r\n      <ConnectivityDetailsDialog\r\n        open={diaBox}\r\n        onClose={handleDialogClose}\r\n        connDetails={connDetails}\r\n        handleDialogClose={handleDialogClose}\r\n        handleCDChange={handleCDChange}\r\n        handleAddCD={handleAddCD}\r\n        connectivityError={connectivityError}\r\n        plantForm={plantForm}\r\n        classes={classes}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { Formik, Form } from \"formik\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  bomusageOptions,\r\n  BUOptions,\r\n  exportToERPOptions,\r\n} from \"../adminConfig/common\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport ConnectivityDetailsDialog from \"./connectivityDetailsDialog\";\r\nimport { Grid, TextField, Select, MenuItem, Box, styled } from \"@mui/material\";\r\nimport Loader from 'app/components/Loader';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\nexport default function EditPlant() {\r\n  const { refreshData } = useOracleSettings();\r\n  const plantService = new PlantService();\r\n  const [allPlantData, setallPlantData] = useState();\r\n  const [diaBox, setDiabox] = useState(false);\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    id: \"\",\r\n    plants: \"\",\r\n    ERPType: \"\",\r\n    instance: \"\",\r\n    Connectivitydetails: {},\r\n  };\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [connectivityError, setconnectivityError] = useState();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  // const selectedPlant = location.state?.selectedPlantData;\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [plantForm, setPlantForm] = useState({});\r\n  const [connDetails, setConnDetails] = useState({});\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [selectedPlant, setSelectedPlant] = useState({});\r\n\r\n  const materialMasterOption = [\r\n    {\r\n      value: \"Y\",\r\n      label: \"Yes\",\r\n    },\r\n    {\r\n      value: \"N\",\r\n      label: \"No\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setallPlantData(result.plant);\r\n    });\r\n  }, []);\r\n\r\n  //plantform methods\r\n\r\n  const handleAddPlant = async () => {\r\n    setIsLoading(true);\r\n    const newPlant = {\r\n      id: plantForm.id,\r\n      plants: plantForm.plants,\r\n      plantName: plantForm.plantName,\r\n      ERPType: plantForm.ERPType,\r\n      SalesOrg: plantForm.SalesOrg,\r\n      aliasPlant: plantForm.aliasPlant,\r\n      material_master: plantForm.material_master,\r\n      ECN_required: plantForm.ECN_required,\r\n      bomusage: plantForm.bomusage,\r\n      ConnectivityDetails: connDetails,\r\n      // BU: plantForm.ERPType === \"SAP\" ? \"\" : selectedBU,\r\n      // exportToERP: plantForm.ERPType === \"SAP\" ? \"\" : plantForm.exportToERP,\r\n      exportToERP: plantForm.exportToERP,\r\n    };\r\n\r\n    if (plantForm?.instance) {\r\n      newPlant[\"instance\"] = plantForm?.instance;\r\n    }\r\n    if (\r\n      plantForm.plantName?.trim() === \"\" || !plantForm.plantName ||\r\n      plantForm.ERPType?.trim() === \"\" || !plantForm.ERPType ||\r\n      plantForm.instance?.trim() === \"\" || !plantForm.instance ||\r\n      plantForm.exportToERP?.trim() === \"\" || !plantForm.exportToERP ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.plantName?.trim() === \"\" || !plantForm.plantName)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.material_master?.trim() === \"\" || !plantForm.material_master)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.bomusage?.trim() === \"\" || !plantForm.bomusage)) ||\r\n      (plantForm.ERPType === \"SAP\" && !plantForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill required details \", \"error\");\r\n      setIsLoading(false);\r\n    } else {\r\n      setIsLoading(true);\r\n      await plantService.updatePlant(newPlant).then((resp) => {\r\n        if (resp?.data?.id) {\r\n          handlesnackBarClick(\"Plant updated successfully\", \"success\");\r\n          setTimeout(() => {\r\n            setIsLoading(false);\r\n            navigate(\"/plants\");\r\n          }, 2000);\r\n        } else if (resp.msg) {\r\n          setIsLoading(false);\r\n          // console.log(resp.msg, \"res.msg\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCDChange = (e) => {\r\n    setConnDetails({\r\n      ...connDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddCD = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  const handlePlantFromChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...plantForm,\r\n      [name]: value,\r\n    };\r\n    setPlantForm(updatedForm);\r\n  };\r\n\r\n  const handleBUChange = (event) => {\r\n    setSelectedBU(event.target.value);\r\n  };\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n    setconnectivityError(\"\");\r\n  };\r\n\r\n  // snackbar code\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  function hasValues(obj) {\r\n    for (let key in obj) {\r\n      if (obj.hasOwnProperty(key) && obj[key] !== \"\" && obj[key] !== undefined) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (params?.plantId) {\r\n      setIsLoading(true);\r\n      plantService.getPlantById({ id: params?.plantId }).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp?.data && Object?.keys(resp?.data)?.length) {\r\n          const selectedPlantObj = resp?.data;\r\n          setSelectedPlant(\r\n            selectedPlantObj\r\n          );\r\n          setSelectedBU(\r\n            selectedPlantObj?.BU\r\n          );\r\n          setPlantForm({\r\n            id: selectedPlantObj?.id,\r\n            plants: selectedPlantObj?.plants,\r\n            plantName: selectedPlantObj?.plantName,\r\n            SalesOrg: selectedPlantObj?.SalesOrg,\r\n            aliasPlant: selectedPlantObj?.aliasPlant,\r\n            ERPType: selectedPlantObj?.ERPType,\r\n            instance: selectedPlantObj?.instance,\r\n            material_master: selectedPlantObj?.material_master,\r\n            ECN_required: selectedPlantObj?.ECN_required,\r\n            bomusage: selectedPlantObj?.bomusage,\r\n            exportToERP: selectedPlantObj?.exportToERP,\r\n\r\n            Connectivitydetails: {\r\n              url: selectedPlantObj?.ConnectivityDetails?.url,\r\n              username: selectedPlantObj?.ConnectivityDetails?.username,\r\n              password: selectedPlantObj?.ConnectivityDetails?.password,\r\n              authkey: selectedPlantObj?.ConnectivityDetails?.authkey,\r\n              port: selectedPlantObj?.ConnectivityDetails?.port,\r\n            },\r\n          });\r\n          setConnDetails({\r\n            url: selectedPlantObj?.ConnectivityDetails?.url,\r\n            username: selectedPlantObj?.ConnectivityDetails?.username,\r\n            password: selectedPlantObj?.ConnectivityDetails?.password,\r\n            authkey: selectedPlantObj?.ConnectivityDetails?.authkey,\r\n            port: selectedPlantObj?.ConnectivityDetails?.port,\r\n            sapsysnum: selectedPlantObj?.ConnectivityDetails?.sapsysnum,\r\n            sapclientid: selectedPlantObj?.ConnectivityDetails?.sapclientid,\r\n          });\r\n        } else {\r\n          navigate(\"/plants\", { state: { message: \"Plant not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/plants\", { state: { message: \"Plant not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Plant\" }]} />\r\n      </Box>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={() => {\r\n        }}\r\n      >\r\n        <Form>\r\n          <SimpleCard>\r\n            <Grid item md={9} sm={6} xs={6}>\r\n              <h4>Edit Plant</h4>\r\n\r\n              <Grid container spacing={3} alignItems=\"center\">\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    Plant Name <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                </Grid>\r\n\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <TextField\r\n                    disabled\r\n                    name=\"plantName\"\r\n                    value={plantForm.plantName}\r\n                    onChange={handlePlantFromChange}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    ERP Type <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                  {/* <span className={classes.spanRed}>*</span> */}\r\n                </Grid>\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <Select\r\n                    id=\"ERPType\"\r\n                    name=\"ERPType\"\r\n                    label=\"ERPType\"\r\n                    fullWidth\r\n                    disabled\r\n                    displayEmpty\r\n                    value={[plantForm?.ERPType]}\r\n                    onChange={handlePlantFromChange}\r\n                  >\r\n                    {ERPtypeOptions.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n\r\n                {(plantForm.ERPType === \"SAP\" ||\r\n                  plantForm.ERPType === \"ORACLE\") && (\r\n                    <>\r\n                      <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                        <span>\r\n                          Instance <span className={classes.spanRed}>*</span>\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item md={9} sm={8} xs={12}>\r\n                        <Select\r\n                          label=\"instance\"\r\n                          id=\"instance\"\r\n                          name=\"instance\"\r\n                          disabled\r\n                          fullWidth\r\n                          displayEmpty\r\n                          value={plantForm.instance}\r\n                          onChange={handlePlantFromChange}\r\n                        >\r\n                          {instanceOptions.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n\r\n                {[\"ORACLE\", \"SAP\"]?.includes(plantForm.ERPType) && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Export To ERP</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"exportToERP\"\r\n                        name=\"exportToERP\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.exportToERP}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {exportToERPOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {/* {plantForm.ERPType === \"ORACLE\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Design Organization\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        style={{ width: \"100%\" }}\r\n                        multiple\r\n                        value={selectedBU}\r\n                        onChange={handleBUChange}\r\n                        renderValue={(selected) => selected.join(\", \")}\r\n                        MenuProps={{\r\n                          sx: {\r\n                            \"&& .Mui-selected\": {\r\n                              backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        {BUOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )} */}\r\n\r\n                {plantForm.ERPType === \"SAP\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Default Sales Org\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <TextField\r\n                        label=\"SalesOrg\"\r\n                        name=\"SalesOrg\"\r\n                        defaultValue={plantForm.SalesOrg}\r\n                        onChange={handlePlantFromChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Material Master\r\n                      </span>\r\n                      {/* <span className={classes.spanRed}>*</span> */}\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"material_master\"\r\n                        name=\"material_master\"\r\n                        label=\"material_master\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.material_master}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    {plantForm.material_master === \"Y\" && (\r\n                      <>\r\n                        <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                          <span>\r\n                            Plantname Alias\r\n                          </span>\r\n                        </Grid>\r\n\r\n                        <Grid item md={9} sm={8} xs={12}>\r\n                          <TextField\r\n                            label=\"aliasPlant\"\r\n                            name=\"aliasPlant\"\r\n                            value={plantForm.aliasPlant}\r\n                            onChange={handlePlantFromChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        ECN Required\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"ECN_required\"\r\n                        name=\"ECN_required\"\r\n                        label=\"ECN_required\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.ECN_required}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        BOM Usage\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"bomusage\"\r\n                        name=\"bomusage\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.bomusage}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {bomusageOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    {hasValues(connDetails) && (<>\r\n\r\n                      <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                        <span>Connectivity Details </span>\r\n                      </Grid>\r\n\r\n                      <Grid item md={9} sm={8} xs={12}>\r\n                        <span>\r\n                          {Object.keys(connDetails).length === 0 ||\r\n                            (selectedPlant?.ConnectivityDetails === null && (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                margin=\"2px\"\r\n                                onClick={() => {\r\n                                  setDiabox(true);\r\n                                }}\r\n                              >\r\n                                Add Connectivity Details\r\n                              </Button>\r\n                            ))}\r\n                          {(Object.keys(connDetails).length > 0 ||\r\n                            selectedPlant?.ConnectivityDetails !== null) && (\r\n                              <Grid item md={12} sm={8} xs={12}>\r\n                                <>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <p>\r\n                                      <b>URL :</b> {connDetails.url}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Username :</b> {connDetails.username}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Pass :</b> {connDetails.password}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>authkey :</b> {connDetails.authkey}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Port :</b> {connDetails.port}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    {plantForm.ERPType === \"SAP\" && (\r\n                                      <>\r\n                                        <p>\r\n                                          <b>sapsysnum :</b> {connDetails.sapsysnum}\r\n                                        </p>{\" \"}\r\n                                        &nbsp;\r\n                                        <p>\r\n                                          <b>sapclientid :</b> {connDetails.sapclientid}\r\n                                        </p>{\" \"}\r\n                                      </>\r\n                                    )}\r\n                                    <p>\r\n                                      {\" \"}\r\n                                      <EditIcon\r\n                                        onClick={() => {\r\n                                          setDiabox(true);\r\n                                        }}\r\n                                      />\r\n                                    </p>\r\n                                  </div>\r\n                                </>\r\n                              </Grid>\r\n                            )}\r\n                        </span>\r\n                      </Grid>\r\n                    </>)}\r\n                  </>\r\n                )}\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleAddPlant}\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleCancel}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </SimpleCard>\r\n        </Form>\r\n      </Formik>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n\r\n      {\r\n        (refreshData || isLoading) ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Loader show={true} />\r\n          </div>\r\n        ) : <></>\r\n      }\r\n\r\n      {/* dialogBox */}\r\n      <ConnectivityDetailsDialog\r\n        open={diaBox}\r\n        onClose={handleDialogClose}\r\n        connDetails={connDetails}\r\n        handleDialogClose={handleDialogClose}\r\n        handleCDChange={handleCDChange}\r\n        handleAddCD={handleAddCD}\r\n        connectivityError={connectivityError}\r\n        plantForm={plantForm}\r\n        classes={classes}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { authRoles } from \"../../auth/authRoles\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nimport Plants from \"./plants\";\r\nimport CreatePlant from \"./createPlant\";\r\nimport EditPlant from \"./editPlant\";\r\n\r\nconst plantRoutes = [\r\n  {\r\n    path: \"/plants\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <Plants />\r\n      </PrivateRoute>\r\n    )\r\n    // auth: authRoles.admin,\r\n  },\r\n  {\r\n    path: \"/createPlant\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreatePlant />\r\n      </PrivateRoute>\r\n    )\r\n    // auth: authRoles.admin,\r\n  },\r\n  {\r\n    path: \"/editPlant/:plantId\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditPlant />\r\n      </PrivateRoute>\r\n    )\r\n    // auth: authRoles.admin,\r\n  },\r\n];\r\n\r\nexport default plantRoutes;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class SourceListService {\r\n  getAllSourceList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/sourceList/getSource`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getSourceDetails\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteSource = (ids) => {\r\n    return ApiInstance.delete(\r\n      `${BACKEND_API_URL}/sourceList/deleteSource`,\r\n      { data: { ids } },\r\n      REACT_APP_BACKEND_API_HEADER\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting source:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewSource = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/sourceList/addSource`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewSource\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateSource = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/sourceList/updateSource`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  getSourceById = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/sourceList/getSourceById`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getPlantById\", e);\r\n        return [];\r\n      });\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function CreateSourceList() {\r\n  const [sourceForm, setSourceForm] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const sourceListService = new SourceListService();\r\n  const handleAddSource = () => {\r\n    if (\r\n      sourceForm.source?.trim() === \"\" ||\r\n      !sourceForm.source ||\r\n      sourceForm.environment?.trim() === \"\" ||\r\n      !sourceForm.environment ||\r\n      sourceForm.instance?.trim() === \"\" ||\r\n      !sourceForm.instance ||\r\n      sourceForm.ERPType?.trim() === \"\" ||\r\n      !sourceForm.ERPType\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newSource = {\r\n      source: sourceForm.source,\r\n      environment: sourceForm.environment,\r\n      instance: sourceForm.instance,\r\n      ERPType: sourceForm.ERPType,\r\n    };\r\n    sourceListService.addnewSource(newSource).then((resp) => {\r\n      if (resp?.data?.id) {\r\n        handlesnackBarClick(\"Source added successfully!\", \"success\");\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/sourceList\");\r\n        }, 2000);\r\n      } else if (resp?.data[0]?.msg) {\r\n        //console.log(resp?.data[0]?.msg, \"res.msg\");\r\n\r\n        handlesnackBarClick(resp.data[0].msg, \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSourceFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...sourceForm,\r\n      [name]: value,\r\n    };\r\n    setSourceForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Source\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Create Source</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Source <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"source\"\r\n                  value={sourceForm.source}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Instance <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"instance\"\r\n                  value={sourceForm.instance}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Environment <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"environment\"\r\n                  value={sourceForm.environment}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={sourceForm.ERPType}\r\n                  onChange={handleSourceFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleAddSource}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={2} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function EditSourceList() {\r\n  const { refreshData } = useOracleSettings();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const sourceListService = new SourceListService();\r\n  // const selectedSource = location.state?.selectedSourceData;\r\n  const [sourceForm, setSourceForm] = useState({});\r\n\r\n  const handleAddSource = async () => {\r\n    setIsLoading(true);\r\n    if (\r\n      sourceForm.source?.trim() === \"\" ||\r\n      !sourceForm.source ||\r\n      sourceForm.environment?.trim() === \"\" ||\r\n      !sourceForm.environment ||\r\n      sourceForm.instance?.trim() === \"\" ||\r\n      !sourceForm.instance ||\r\n      sourceForm.ERPType?.trim() === \"\" ||\r\n      !sourceForm.ERPType\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    const newSource = {\r\n      source: sourceForm.source,\r\n      environment: sourceForm.environment,\r\n      instance: sourceForm.instance,\r\n      ERPType: sourceForm.ERPType,\r\n    };\r\n    sourceListService.updateSource(newSource).then((resp) => {\r\n      handlesnackBarClick(\"Source updated successfully\", \"success\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n        navigate(\"/sourceList\");\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const handleSourceFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...sourceForm,\r\n      [name]: value,\r\n    };\r\n    setSourceForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  useEffect(() => {\r\n    if (params?.sourceId) {\r\n      setIsLoading(true);\r\n      sourceListService.getSourceById({ id: params?.sourceId }).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp?.data && Object?.keys(resp?.data)?.length) {\r\n          const selectedSource = resp?.data;\r\n          setSourceForm({\r\n            source: selectedSource.source,\r\n            environment: selectedSource.environment,\r\n            instance: selectedSource.instance,\r\n            ERPType: selectedSource.ERPType,\r\n          });\r\n        } else {\r\n          navigate(\"/sourceList\", { state: { message: \"Source not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/sourceList\", { state: { message: \"Source not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Source\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Edit Source</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Source <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"source\"\r\n                  disabled\r\n                  value={sourceForm.source}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Instance <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"instance\"\r\n                  disabled\r\n                  value={sourceForm.instance}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Environment <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"environment\"\r\n                  value={sourceForm.environment}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  disabled\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={[sourceForm.ERPType]}\r\n                  onChange={handleSourceFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleAddSource}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={2} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n\r\n        {\r\n          (refreshData || isLoading) ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Loader show={true} />\r\n            </div>\r\n          ) : <></>\r\n        }\r\n\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.sourceData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  console.log('props', props);\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.sourceData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        Source: item.source,\r\n        Instance: item.instance,\r\n        Environment: item.environment,\r\n        'ERP Type': item.ERPType\r\n      }\r\n      return res\r\n    })\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Source' }).then((response) => {\r\n      setExportResponse(response)\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.sourceData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n    }\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\n\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportSource\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst SourceList = () => {\r\n  const [selectedSource, setselectedSource] = useState();\r\n  const [sourceData, setsourceData] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const sourceListService = new SourceListService();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n  const [unSortSourceData, setUnSortSourceData] = useState([])\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteSourceDilaog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditSource(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    sourceListService.getAllSourceList()\r\n      .then((result) => {\r\n        setsourceData(result);\r\n        setInitialData(result); // Set initial data\r\n        setFilteredSourceData(result);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const [filteredSourceData, setFilteredSourceData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredSourceData(sourceData);\r\n  }, [sourceData]);\r\n\r\n  let sortedSourceData = sortDataByKey([...filteredSourceData], \"source\");\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n  const handleSearch = () => {\r\n  };\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n  const handleCreateSourceList = () => {\r\n    plantModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createSourceList\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleEditSource = (editSelectedSource) => {\r\n    plantModeRef.current = \"edit\";\r\n    const selectedSourceData = editSelectedSource;\r\n    setTimeout(() => {\r\n      navigate(`/editSourceList/${selectedSourceData?.id}`, {\r\n        state: { plantMode: plantModeRef.current, selectedSourceData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteSourceDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n    setselectedSource(DeleteSource);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteSource = async () => {\r\n    setDeleteDialog(false);\r\n\r\n    try {\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await sourceListService.deleteSource(selRowsId).then(result => {\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: result?.status,\r\n          desc: result?.msg,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n    sourceListService.getAllSourceList().then((result) => {\r\n      setsourceData(result);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    const new_FilteredData = sourceData.filter((subscriber) => {\r\n      return (searchValue === \"\" ||\r\n        subscriber.source\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.environment\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.instance\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.ERPType.toLowerCase().includes(\r\n          searchValue.toLowerCase()\r\n        ))\r\n    })\r\n\r\n    setFilteredSourceData(new_FilteredData);\r\n  }, [searchValue, sourceData]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedSource = sortedExportDataHOC(SourceList);\r\n    const sortedData = SortedSource({ data: sourceData, sortInfo, sortedSourceData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setsourceData(sortedData.props.data);\r\n    setFilteredSourceData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Source\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateSourceList}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <ExportDialogBox sourceData={sourceData} filterTemplateData={selectedRows} />\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br></br>\r\n            {isLoading ? (\r\n              // Display loading spinner while data is being fetched\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  minHeight: 550\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              // Render DataGrid once data is loaded\r\n              <DataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                style={{ minHeight: 550 }}\r\n                defaultLimit={100}\r\n                columns={[\r\n                  {\r\n                    name: \"source\",\r\n                    header: <Tooltip title={'Name'}>Source</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.source}</div>,\r\n                  },\r\n                  {\r\n                    name: \"instance\",\r\n                    header: <Tooltip title={\"Instance\"}>Instance</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"environment\",\r\n                    header: <Tooltip title={\"Environment\"}>Environment</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"ERPType\",\r\n                    header: <Tooltip title={\"ERP Type\"}>ERP Type</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.ERPType}</div>,\r\n                  }\r\n                ]}\r\n                dataSource={sortInfo==null ? filteredSourceData : sortedSourceData}\r\n                checkboxColumn\r\n                selected={selected}\r\n                onSelectionChange={onSelectionChange}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                pagination\r\n                renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                onSortInfoChange={handleSortInfoChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Source\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the source <b>{selectedSource?.source}</b>{\" \"}\r\n                having instance <b>{selectedSource?.instance}</b> and ERPType{\" \"}\r\n                <b>{selectedSource?.ERPType}</b>\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted sources?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteSource}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SourceList;","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport CreateSourceList from \"./createSourceList\";\r\nimport EditSourceList from \"./editSourceList\";\r\nimport SourceList from \"./sourceList\";\r\n\r\nconst sourceListRoutes = [\r\n  {\r\n    path: \"/sourceList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <SourceList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/createSourceList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateSourceList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/editSourceList/:sourceId\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditSourceList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n];\r\n\r\nexport default sourceListRoutes;\r\n","import {\r\n    BACKEND_API_URL,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n} from '../config'\r\nimport ApiInstance from './ApiInstance';\r\n\r\n\r\nexport class MappingsService {\r\n\r\n\r\n    getAllMappings = () => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/mappings/getMappings`, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error(\"getSourceDetails\", e);\r\n            return [];\r\n        });\r\n    };\r\n\r\n    deleteMapping = (mappingId) => {\r\n        return ApiInstance.delete(`${BACKEND_API_URL}/mappings/deleteMapping/${mappingId}`, REACT_APP_BACKEND_API_HEADER)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting source:', error);\r\n                throw error;\r\n            });\r\n    };\r\n\r\n    addnewMapping = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mappings/addMapping`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            // console.log(data, 'data in post call');\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error('addnewSource', e);\r\n            return [];\r\n        });\r\n    };\r\n\r\n    updateMapping = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mappings/updateMapping`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            //console.log(data, 'data in post call');\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error('addnewPlant', e);\r\n            return [];\r\n        });\r\n    };\r\n}","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Paper,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\n\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport { MappingsService } from \"services/mappingsService\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function CreateMapping() {\r\n  const [sourceForm, setSourceForm] = useState({});\r\n  const [mappingForm, setMappingForm] = useState({});\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [tempObject, setTempObject] = useState({});\r\n\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const sourceListService = new SourceListService();\r\n  const mappingService = new MappingsService();\r\n  const handleAddMapping = () => {\r\n    if (\r\n      mappingForm.Name?.trim() === \"\" ||\r\n      !mappingForm.Name ||\r\n      mappingForm.ERPType?.trim() === \"\" ||\r\n      !mappingForm.ERPType ||\r\n      valuesInputList.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newMaping = {\r\n      Name: mappingForm.Name,\r\n      ERPType: mappingForm.ERPType,\r\n      List: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n    mappingService.addnewMapping(newMaping).then((resp) => {\r\n      if (resp && resp?.data && resp?.data?.length) {\r\n        if (resp?.data[0]?.id) {\r\n          handlesnackBarClick(\"Mapping added successfully!\", \"success\");\r\n\r\n          setTimeout(() => {\r\n            navigate(\"/mappings\");\r\n          }, 200);\r\n        } else if (resp?.data[0]?.msg) {\r\n          handlesnackBarClick(resp?.data[0]?.msg, \"error\");\r\n        }\r\n      } else {\r\n        console.log(\"No data in resp.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //*********mapping values*******/\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleMappingvalueChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // console.log(\r\n  //   valuesInputList,\r\n  //   \"values\"\r\n  // );\r\n  //**********values code end******/\r\n\r\n  const handleMappingFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...mappingForm,\r\n      [name]: value,\r\n    };\r\n    setMappingForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setSnackbarMessage(message);\r\n    setSnackbarSeverity(severity);\r\n    setsnackBar(true);\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  //console.log(mappingForm, \"mappingForm\");\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Mapping\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Create Mapping</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  name=\"Name\"\r\n                  value={mappingForm.Name}\r\n                  onChange={handleMappingFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={mappingForm.ERPType}\r\n                  onChange={handleMappingFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Mapping values <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={3} style={{ marginLeft: \"3px\" }}>\r\n                    <TextField\r\n                      name=\"newKey\"\r\n                      label=\"key\"\r\n                      value={newKey}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      name=\"newValue\"\r\n                      label=\"value\"\r\n                      value={newValue}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      style={{ fontSize: \"30px\", marginTop: \"6px\" }}\r\n                      onClick={handleAddRow}\r\n                    >\r\n                      <b>+</b>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{ color: \"red\" }}>{keyerror}</p>\r\n                <div\r\n                  style={{\r\n                    height: \"100px\",\r\n                    overflowY: \"auto\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    alignContent: \"center\",\r\n                    width: \"51%\",\r\n                  }}\r\n                >\r\n                  {valuesInputList.map((row, index) => (\r\n                    <Paper\r\n                      key={index}\r\n                      style={{\r\n                        paddingLeft: \"50px\",\r\n                        marginBottom: \"8px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginLeft: \"2px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <p>\r\n                            <b>{row.key}</b>:<b>{row.value}</b>\r\n                          </p>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                          <IconButton onClick={() => handleDeleteRow(index)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n              <span>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddMapping}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </span>\r\n              {/* <span className={classes.spanRed}>*</span> */}\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        <Snackbar\r\n          open={snackBar}\r\n          autoHideDuration={3000}\r\n          onClose={handlesnackbarClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        >\r\n          <Alert\r\n            onClose={handlesnackbarClose}\r\n            severity={snackbarseverity}\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            {snackbarmessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Paper,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { MappingsService } from \"services/mappingsService\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function EditMapping() {\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [tempObject, setTempObject] = useState({});\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const location = useLocation();\r\n  const mappingService = new MappingsService();\r\n  const selectedMapping = location.state?.selectedMappingData;\r\n  //console.log(selectedMapping, \"selected from list to edit \");\r\n  const [mappingForm, setMappingForm] = useState({\r\n    Name: selectedMapping.Name,\r\n    ERPType: selectedMapping.ERPType,\r\n  });\r\n\r\n  const reversedList = Object.entries(selectedMapping.List).map(([key, value]) => ({ key, value }));\r\n  //console.log(reversedList, \"reversed list    \")\r\n  const [valuesInputList, setValuesInputList] = useState(reversedList);\r\n\r\n\r\n  const handleAddMapping = () => {\r\n    if (\r\n      mappingForm.Name?.trim() === \"\" ||\r\n      !mappingForm.Name ||\r\n      mappingForm.ERPType?.trim() === \"\" ||\r\n      !mappingForm.ERPType ||\r\n      valuesInputList.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newMaping = {\r\n      Name: mappingForm.Name,\r\n      ERPType: mappingForm.ERPType,\r\n      List: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n    mappingService.updateMapping(newMaping).then((resp) => {\r\n      setTimeout(() => {\r\n        navigate(\"/mappings\");\r\n      }, 200);\r\n    });\r\n\r\n    handlesnackBarClick(\"Mapping updated successfully\", \"success\");\r\n  };\r\n\r\n  //*********mapping values*******/\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleMappingvalueChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  //**********values code end******/\r\n\r\n  const handleMappingFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...mappingForm,\r\n      [name]: value,\r\n    };\r\n    setMappingForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setSnackbarMessage(message);\r\n    setSnackbarSeverity(severity);\r\n    setsnackBar(true);\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  //console.log(mappingForm, \"mappingForm\");\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Mapping\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Edit Mapping</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  name=\"Name\"\r\n                  disabled\r\n                  value={mappingForm.Name}\r\n                  onChange={handleMappingFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={mappingForm.ERPType}\r\n                  onChange={handleMappingFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Mapping values <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={3} style={{ marginLeft: \"3px\" }}>\r\n                    <TextField\r\n                      name=\"newKey\"\r\n                      label=\"key\"\r\n                      value={newKey}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      name=\"newValue\"\r\n                      label=\"value\"\r\n                      value={newValue}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      style={{ fontSize: \"30px\", marginTop: \"6px\" }}\r\n                      onClick={handleAddRow}\r\n                    >\r\n                      <b>+</b>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{ color: \"red\" }}>{keyerror}</p>\r\n                <div\r\n                  style={{\r\n                    height: \"100px\",\r\n                    overflowY: \"auto\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    alignContent: \"center\",\r\n                    width: \"51%\",\r\n                  }}\r\n                >\r\n                  {valuesInputList.map((row, index) => (\r\n                    <Paper\r\n                      key={index}\r\n                      style={{\r\n                        paddingLeft: \"50px\",\r\n                        marginBottom: \"8px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginLeft: \"2px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <p>\r\n                            <b>{row.key}</b>:<b>{row.value}</b>\r\n                          </p>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                          <IconButton onClick={() => handleDeleteRow(index)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n              <span>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddMapping}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </span>\r\n              {/* <span className={classes.spanRed}>*</span> */}\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        <Snackbar\r\n          open={snackBar}\r\n          autoHideDuration={3000}\r\n          onClose={handlesnackbarClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        >\r\n          <Alert\r\n            onClose={handlesnackbarClose}\r\n            severity={snackbarseverity}\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            {snackbarmessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\n\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nimport {\r\n  Box,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  InputLabel,\r\n  Grid,\r\n  TextField,\r\n  Autocomplete,\r\n} from \"@mui/material\";\r\n\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { MappingsService } from \"services/mappingsService\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst Mappings = () => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [selectedMapping, setSelectedMapping] = useState();\r\n  const [mappingData, setMappingData] = useState();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filteredRows, setFilteredRows] = useState([]);\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const mappingService = new MappingsService();\r\n  useEffect(() => {\r\n    mappingService.getAllMappings().then((result) => {\r\n      setMappingData(result);\r\n    });\r\n  }, []);\r\n  //console.log(mappingData, \"mappingData\");\r\n\r\n  const [filteredMappingData, setFilteredMappingData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredMappingData(mappingData);\r\n  }, [mappingData]);\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n\r\n    if (newSearchValue === \"\") {\r\n      setFilteredMappingData(mappingData);\r\n    } else {\r\n      const filteredData = mappingData?.filter(\r\n        (subscriber) =>\r\n          subscriber?.Name?.toLowerCase().includes(\r\n            newSearchValue.toLowerCase()\r\n          ) ||\r\n          subscriber.ERPType?.toLowerCase().includes(\r\n            newSearchValue.toLowerCase()\r\n          )\r\n      );\r\n      setFilteredMappingData(filteredData);\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (searchValue === \"\") {\r\n      setFilteredMappingData(mappingData);\r\n    } else {\r\n      const filteredData = mappingData.filter((subscriber) =>\r\n        subscriber?.Name.toLowerCase().includes(searchValue.toLowerCase())\r\n      );\r\n      setFilteredMappingData(filteredData);\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n\r\n  const handleCreateMappings = () => {\r\n    plantModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createMappings\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleEditMapping = (editselectedMapping) => {\r\n    plantModeRef.current = \"edit\";\r\n\r\n    const selectedMappingData = editselectedMapping;\r\n    setTimeout(() => {\r\n      navigate(\"/editMappings\", {\r\n        state: { plantMode: plantModeRef.current, selectedMappingData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteMappingDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n\r\n    setSelectedMapping(DeleteSource);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteMapping = async () => {\r\n    setDeleteDialog(false);\r\n    // console.log(selectedMapping.id, \" selected deleted plant \");\r\n\r\n    try {\r\n      await mappingService.deleteMapping(selectedMapping.id);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete plant:\", error);\r\n    }\r\n\r\n    mappingService.getAllMappings().then((result) => {\r\n      setMappingData(result);\r\n    });\r\n\r\n    handlesnackBarClick();\r\n  };\r\n\r\n  const handlesnackBarClick = () => {\r\n    setsnackBar(true);\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n  // ****************filters**********************\r\n  const [filterValues, setFilterValues] = useState({\r\n    Name: [],\r\n\r\n    ERPType: [],\r\n  });\r\n\r\n  const handleFilterChange = (column, selectedValues) => {\r\n    setFilterValues((prevFilterValues) => ({\r\n      ...prevFilterValues,\r\n      [column]: selectedValues,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let dataToShow = mappingData;\r\n\r\n    if (filterValues[\"Name\"].length > 0) {\r\n      dataToShow = dataToShow.filter((row) =>\r\n        filterValues[\"Name\"].includes(row[\"Name\"])\r\n      );\r\n    }\r\n\r\n    if (filterValues[\"ERPType\"].length > 0) {\r\n      dataToShow = dataToShow.filter((row) =>\r\n        filterValues[\"ERPType\"].includes(row[\"ERPType\"])\r\n      );\r\n    }\r\n\r\n    setFilteredRows(dataToShow);\r\n  }, [filterValues]);\r\n\r\n  const getUniqueValues = (column) => {\r\n    const values = new Set();\r\n    mappingData?.forEach((subscriber) => values.add(subscriber[column]));\r\n    return Array.from(values);\r\n  };\r\n\r\n  // *******filters end***********\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Mappings\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateMappings}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <StyledTable>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {/* <TableCell align=\"left\">Id</TableCell> */}\r\n                  {/*<TableCell align=\"left\">ID</TableCell>*/}\r\n                  <TableCell align=\"left\">\r\n                    <InputLabel\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        color: \"rgba(52, 49, 76, 1)\",\r\n                      }}\r\n                    >\r\n                      Mapping Name\r\n                    </InputLabel>\r\n\r\n                    <br />\r\n                    <Autocomplete\r\n                      style={{ width: \"70%\" }}\r\n                      multiple\r\n                      options={getUniqueValues(\"Name\")}\r\n                      value={filterValues.Name}\r\n                      onChange={(_, newValue) =>\r\n                        handleFilterChange(\"Name\", newValue)\r\n                      }\r\n                      renderValue={() => null}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          variant=\"outlined\"\r\n                          label=\"Filter Name\"\r\n                          placeholder=\"Search...\"\r\n                        />\r\n                      )}\r\n                      PaperProps={{\r\n                        style: {\r\n                          maxHeight: \"200px\",\r\n                        },\r\n                      }}\r\n                      disableCloseOnSelect\r\n                      isOptionEqualToValue={(option, value) => option === value}\r\n                      getOptionLabel={(option) => option}\r\n                      getOptionSelected={(option, value) =>\r\n                        filterValues.Name.includes(value)\r\n                      }\r\n                      ChipProps={{\r\n                        style: {\r\n                          fontSize: \"8px\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    <InputLabel\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        color: \"rgba(52, 49, 76, 1)\",\r\n                      }}\r\n                    >\r\n                      ERP Type\r\n                    </InputLabel>\r\n\r\n                    <br />\r\n                    <Autocomplete\r\n                      style={{ width: \"70%\" }}\r\n                      multiple\r\n                      options={getUniqueValues(\"ERPType\")}\r\n                      value={filterValues.ERPType}\r\n                      onChange={(_, newValue) =>\r\n                        handleFilterChange(\"ERPType\", newValue)\r\n                      }\r\n                      renderValue={() => null}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          variant=\"outlined\"\r\n                          label=\"Filter ERP Type\"\r\n                          placeholder=\"Search...\"\r\n                        />\r\n                      )}\r\n                      PaperProps={{\r\n                        style: {\r\n                          maxHeight: \"200px\",\r\n                        },\r\n                      }}\r\n                      disableCloseOnSelect\r\n                      isOptionEqualToValue={(option, value) => option === value}\r\n                      getOptionLabel={(option) => option}\r\n                      getOptionSelected={(option, value) =>\r\n                        filterValues.ERPType.includes(value)\r\n                      }\r\n                      ChipProps={{\r\n                        style: {\r\n                          fontSize: \"8px\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <InputLabel\r\n                      style={{\r\n                        paddingBottom: \"85px\",\r\n                        fontWeight: \"bold\",\r\n                        color: \"rgba(52, 49, 76, 1)\",\r\n                      }}\r\n                    >\r\n                      Actions\r\n                    </InputLabel>\r\n                  </TableCell>\r\n\r\n                  {/* <TableCell align=\"right\">Action</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {filteredMappingData?.length > 0 ? (\r\n                  filteredMappingData\r\n                    .filter(\r\n                      (subscriber) =>\r\n                        (searchValue === \"\" ||\r\n                          subscriber.Name.toLowerCase().includes(\r\n                            searchValue.toLowerCase()\r\n                          ) ||\r\n                          subscriber?.ERPType.toLowerCase().includes(\r\n                            searchValue.toLowerCase()\r\n                          )) &&\r\n                        (filterValues.Name.length === 0 ||\r\n                          filterValues.Name.includes(subscriber.Name)) &&\r\n                        (filterValues.ERPType.length === 0 ||\r\n                          filterValues.ERPType.includes(subscriber.ERPType))\r\n                    )\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((subscriber, index) => {\r\n                      return (\r\n                        <TableRow key={index}>\r\n                          {/* <TableCell align=\"left\">{subscriber.id}</TableCell>*/}\r\n                          {/* <TableCell align=\"left\">{subscriber.name}</TableCell> */}\r\n                          <TableCell\r\n                            align=\"left\"\r\n                            style={{ textTransform: \"none\" }}\r\n                          >\r\n                            {subscriber.Name}\r\n                          </TableCell>\r\n\r\n                          <TableCell\r\n                            align=\"left\"\r\n                            style={{ textTransform: \"none\" }}\r\n                          >\r\n                            {subscriber.ERPType}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            align=\"left\"\r\n                            style={{ textTransform: \"none\" }}\r\n                          >\r\n                            <EditIcon\r\n                              id={subscriber.id}\r\n                              onClick={() => handleEditMapping(subscriber)}\r\n                            />{\" \"}\r\n                            <DeleteIcon\r\n                              onClick={() =>\r\n                                handleDeleteMappingDilaog(subscriber)\r\n                              }\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })\r\n                ) : (\r\n                  <>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      colSpan={5}\r\n                      style={{ textAlign: \"center\" }}\r\n                    >\r\n                      {\"No result found!\"}\r\n                    </TableCell>\r\n                  </>\r\n                )}\r\n              </TableBody>\r\n            </StyledTable>\r\n            {mappingData?.length ? (\r\n              <TablePagination\r\n                sx={{ px: 2 }}\r\n                page={page}\r\n                component=\"div\"\r\n                rowsPerPage={rowsPerPage}\r\n                count={mappingData?.length}\r\n                onPageChange={handleChangePage}\r\n                rowsPerPageOptions={[10, 25, 50]}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\r\n                backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <Snackbar\r\n        open={snackBar}\r\n        autoHideDuration={3000}\r\n        onClose={handlesnackbarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handlesnackbarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          Mapping deleted successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Do you want to delete the source <b>{selectedMapping?.Name}</b>{\" \"}\r\n            having ERP type <b>{selectedMapping?.ERPType}</b>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteMapping}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Mappings;\r\n","import React from 'react';\r\nimport { authRoles } from \"../../auth/authRoles\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport CreateMapping from \"./createMappings\";\r\nimport EditMapping from \"./editMappings\";\r\n\r\nimport Mappings from \"./mappings\";\r\n\r\nconst mappingsroutes = [\r\n  {\r\n    path: \"/mappings\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <Mappings />\r\n      </PrivateRoute>\r\n    ),\r\n    auth: authRoles.admin\r\n  },\r\n  {\r\n    path: \"/createMappings\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateMapping />\r\n      </PrivateRoute>\r\n    ),\r\n    auth: authRoles.admin,\r\n  },\r\n  {\r\n    path: \"/editMappings\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditMapping />\r\n      </PrivateRoute>\r\n    ),\r\n    auth: authRoles.admin,\r\n  },\r\n];\r\n\r\nexport default mappingsroutes;\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.buData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false);\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.buData) || [];\r\n\r\n    // Check if props.sortInfo is an empty object\r\n    if (!props.sortInfo || Object.keys(props.sortInfo).length === 0) {\r\n      data = data.sort((a, b) => {\r\n        const aValue = a.businessUnit?.toLowerCase() || '';\r\n        const bValue = b.businessUnit?.toLowerCase() || '';\r\n        if (aValue < bValue) return -1;\r\n        if (aValue > bValue) return 1;\r\n        return 0;\r\n      });\r\n    }\r\n   \r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        'Design Organization': item.businessUnit,\r\n        'Export To ERP Disabled': item.exportToERPdisabled,\r\n        'Export To ERP Bypassed': item.exportToERPbyPassed,\r\n        'Enable BOS Transfer': item.enableBOSTransfer,\r\n        'Context DFF': item.contextDEF,\r\n        'EMR Division ARG': item.EMRDivisionORGValue,\r\n        'Product Hierarchy': item.productHierarchy,\r\n        'Plant Name': item?.plants?.length > 0 ? item?.plants?.map(plant => plant?.plantName).join(\"\\n\") : null,\r\n        'Do Not Send To ERP': item.doNotSendToERP.join(\"\\n\"),\r\n        'Oracle Existing': item.oracleExisting.join(\"\\n\"),\r\n        'Make Without BOM List': item.makeWithoutBOMList.join(\"\\n\"),\r\n        'Not Owning Division List': item.notOwningDivisionList.join(\"\\n\"),\r\n        //ERPType: item.ERPType,\r\n        //Instance: item.instance,\r\n        // attributes: typeof item.attributes == \"object\"? JSON.stringify(item.attributes):null,\r\n        //RDO: typeof item.BU == \"object\" && item.BU.length>0 ? JSON.stringify(item.BU.join(', ')):null,\r\n        // ExportToERP: item.exportToERP,\r\n        // ExistInOracle: item.existInOracle,\r\n        // NotOwningDivision: item.notOwningDivision,\r\n        //Name: item.Name\r\n      }\r\n      return res\r\n    })\r\n    //console.log(exportData, 'inside template export exportData')\r\n    //return;\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Design Organization' }).then((response) => {\r\n      setExportResponse(response)\r\n      //console.log(response, ';resprespresp')\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.buData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n      //console.log(filteredTempData, 'filteredTempData')\r\n    }\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { BUService } from \"services/buService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportBUList\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst BUList = () => {\r\n  const { bussinessUnitLists, updateBussinessUnitLists } = useOracleSettings();\r\n  const location = useLocation();\r\n  let toastState = location.state;\r\n  const [selectedSource, setselectedSource] = useState();\r\n  const [buData, setBUData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const buService = new BUService();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // State to keep track of sorting information\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [initialData, setInitialData] = useState([]);\r\n  \r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    const styles = \r\n    {\r\n          backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n          zIndex: 99,\r\n          background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n          height: \"auto !important\",\r\n          whiteSpace: \"normal\"\r\n        }\r\n    return styles;\r\n  };\r\n \r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteSourceDilaog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditSource(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (!bussinessUnitLists) {\r\n      buService.getAllBuList()\r\n        .then((result) => {\r\n          setBUData(result.data);\r\n          updateBussinessUnitLists(result.data);\r\n          setInitialData(result.data); // Set initial data\r\n          setFilteredBUData(result.data);\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setTimeout(() => {\r\n        setBUData(bussinessUnitLists);\r\n        setInitialData(bussinessUnitLists);\r\n        setIsLoading(false);\r\n      }, 500);\r\n\r\n    }\r\n  }, [bussinessUnitLists]);\r\n  const [filteredBUData, setFilteredBUData] = useState([]);\r\n  useEffect(() => {\r\n    setFilteredBUData(buData);\r\n  }, [buData]);\r\n\r\n  const sortedFilteredBuData =  sortDataByKey([...filteredBUData], \"buName\");\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n  const handleCreateBUList = () => {\r\n    plantModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createBU\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n  const handleEditSource = (editSelectedSource) => {\r\n    plantModeRef.current = \"edit\";\r\n    const selectedBUData = editSelectedSource;\r\n    setTimeout(() => {\r\n      navigate(`/editBU/${selectedBUData?.id}`, {\r\n        state: { plantMode: plantModeRef.current, selectedBUData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteSourceDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n    setselectedSource(DeleteSource);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteSource = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await buService.deleteBU(selRowsId).then(response => {\r\n        console.log(response, 'delete response')\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete BU:\", error);\r\n    }\r\n    buService.getAllBuList().then((result) => {\r\n      setBUData(result.data);\r\n      updateBussinessUnitLists(result.data)\r\n      setInitialData(result.data);\r\n    });\r\n  };\r\n\r\n  // ****************filters**********************\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    if (buData) {\r\n      const new_FilteredData = buData.filter((subscriber) => {\r\n        return (searchValue === \"\" ||\r\n          subscriber.buName\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase())\r\n        )\r\n      })\r\n      setFilteredBUData(new_FilteredData);\r\n    }\r\n  }, [searchValue, buData]);\r\n  useEffect(() => {\r\n    if (toastState?.status) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: toastState?.status,\r\n        desc: toastState?.message,\r\n      });\r\n      buService.getAllBuList().then((result) => {\r\n        setBUData(result.data);\r\n        updateBussinessUnitLists(result.data)\r\n        setInitialData(result.data); \r\n      });\r\n    }\r\n    toastState = {};\r\n\r\n    // Clear the state value on page refresh\r\n    window.onbeforeunload = () => {\r\n      window.history.replaceState({}, document.title);\r\n    };\r\n  }, [toastState]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedbuList = sortedExportDataHOC(BUList);\r\n    const sortedData = SortedbuList({ data: buData, sortInfo, sortedFilteredBuData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setBUData(sortedData.props.data);\r\n    setFilteredBUData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Design Organization\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateBUList}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <ExportDialogBox sortInfo={sortInfo} buData={buData} filterTemplateData={selectedRows} />\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br />\r\n            {isLoading ? (\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  minHeight: 550,\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              <DataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                defaultLimit={100}\r\n                rowStyle={rowStyle}\r\n                // style={{ minHeight: 550 }}\r\n                columns={[\r\n                  {\r\n                    name: \"buName\",\r\n                    header: <Tooltip title={'Design Organization'}>Design Organization</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.buName}</div>,\r\n                  },\r\n                  {\r\n                    name: \"exportToERPdisabled\",\r\n                    header: <Tooltip title={\"Export To ERP Disabled\"}>Export To ERP Disabled</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"exportToERPbyPassed\",\r\n                    header: <Tooltip title={\"Export To ERP Bypassed\"}>Export To ERP Bypassed</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"enableBOSTransfer\",\r\n                    header: <Tooltip title={\"Enable BOS Transfer\"}>Enable BOS Transfer</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"contextDFF\",\r\n                    header: <Tooltip title={\"Context DFF\"}>Context DFF</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.contextDEF}</div>,\r\n                  },\r\n                  {\r\n                    name: \"EMRDivisionORGValue\",\r\n                    header: <Tooltip title={\"EMR Division ORG Value\"}>EMR Division ARG</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.EMRDivisionORGValue}</div>,\r\n                  },\r\n                  {\r\n                    name: \"productHierarchy\",\r\n                    header: <Tooltip title={\"Product Hierarchy\"}>Product Hierarchy</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.productHierarchy}</div>,\r\n                  },\r\n                  {\r\n                    name: \"plants\",\r\n                    header: <Tooltip title={\"Plant Name\"}>Plant Name</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.plants\r\n                          .sort((a, b) => a.plantName.localeCompare(b.plantName))\r\n                          .map((item, index) => (\r\n                            <div key={index}>{item?.plantName}</div>\r\n                          ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"DoNotSendToERP\",\r\n                    header: <Tooltip title={\"DoNotSendToERP\"}>Do Not Send To ERP</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.doNotSendToERP\r\n                          .sort((a, b) => a.localeCompare(b)) \r\n                          .map((item, index) => (\r\n                            <div key={index}>{item}</div>\r\n                          ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"OracleExisting\",\r\n                    header: <Tooltip title={\"OracleExisting\"}>Oracle Existing</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.oracleExisting.sort((a, b)=>a.localeCompare(b))\r\n                        .map((item, index) => (\r\n                          <div key={index}>{item}</div> \r\n                        ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"MakeWithoutBOMList\",\r\n                    header: <Tooltip title={\"Make Without BOMList\"}>Make Without BOM List</Tooltip>,\r\n                    defaultFlex: 0,\r\n                    defaultWidth: 170,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.makeWithoutBOMList.sort((a, b)=>a.localeCompare(b))\r\n                        .map((item, index) => (\r\n                          <div key={index}>{item}</div>\r\n                        ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"NotOwningDivisionList\",\r\n                    header: <Tooltip title={\"Not Owning DivisionList\"}>Not Owning Division List</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 100,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.notOwningDivisionList.sort((a, b)=>a.localeCompare(b))\r\n                        .map((item, index) => (\r\n                          <div key={index}>{item}</div> \r\n                        ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ]}\r\n                dataSource={sortedFilteredBuData}\r\n                // rowHeight={null}\r\n                checkboxColumn\r\n                selected={selected}\r\n                onSelectionChange={onSelectionChange}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                pagination\r\n                renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                onSortInfoChange={handleSortInfoChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Design Organization\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the RDO <b>{selectedSource?.buName}</b> having\r\n                plants{\" \"}\r\n                <b>\r\n                  {\" \"}\r\n                  {selectedSource?.plants\r\n                    .map((plant) => {\r\n                      return plant.plantName;\r\n                    })\r\n                    .join(\",\")}{\" \"}\r\n                </b>\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted Design Organization?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteSource}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BUList;","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { exportToERPOptions, enableBOSTransferOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { BUService } from \"services/buService\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nexport default function CreateBU() {\r\n  const {\r\n    refreshData,\r\n    templatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [buForm, setBuFrom] = useState({\r\n    exportToERPdisabled: \"N\",\r\n    exportToERPbyPassed: \"N\",\r\n    enableBOSTransfer: \"Y\",\r\n  });\r\n  const [plantData, setPlantData] = useState([]);\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n  const [DoNotSendToERP, setDoNotSendToERP] = useState([]);\r\n  const [OracleExisting, setOracleExisting] = useState([]);\r\n  const [MakeWithoutBOMList, setMakeWithoutBOMList] = useState([]);\r\n  const [NotOwningDivisionList, setNotOwningDivisionList] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  let navigate = useNavigate();\r\n  const buService = new BUService();\r\n\r\n  const plantService = new PlantService();\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  const handleAddbuName = () => {\r\n    if (\r\n      buForm.buName?.trim() === \"\" ||\r\n      !buForm.buName ||\r\n      selectedplants.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n    const newbuName = {\r\n      id: buForm.buName,\r\n      buName: buForm.buName,\r\n      exportToERPdisabled: buForm.exportToERPdisabled,\r\n      contextDEF: buForm.contextDEF,\r\n      EMRDivisionORGValue: buForm.EMRDivisionORGValue,\r\n      productHierarchy: buForm.productHierarchy,\r\n      exportToERPbyPassed: buForm.exportToERPbyPassed,\r\n      enableBOSTransfer: buForm.enableBOSTransfer,\r\n      plants: selectedplants?.map((option) => {\r\n        return {\r\n          id: option?.id,\r\n          plantName: option?.plantName\r\n        }\r\n      }) || [],\r\n      doNotSendToERP: DoNotSendToERP?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      oracleExisting: OracleExisting?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      makeWithoutBOMList: MakeWithoutBOMList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      notOwningDivisionList: NotOwningDivisionList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n    };\r\n    setIsLoading(true);\r\n    buService.addnewBU(newbuName).then((resp) => {\r\n      setIsLoading(false);\r\n      if (resp.status === 'success') {\r\n        setTimeout(() => {\r\n          navigate(\"/buList\", { state: { message: resp.msg, status: resp.status } });\r\n        }, 200);\r\n      } else if (resp.status === 'error') {\r\n        handlesnackBarClick(resp.msg, \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlebuFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...buForm,\r\n      [name]: value,\r\n    };\r\n    setBuFrom(updatedForm);\r\n  };\r\n  const handlePlantsChange = (selectedObj) => {\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => plantData.some((existing) => existing.plantName === item.plantName)\r\n    ) || [];\r\n    setSelectedPlants(newselectedObj);\r\n  };\r\n\r\n  const handleTemplateChange = (name, selectedObj) => {\r\n    console.log(`New Value: ${name} - `, selectedObj);\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => templatesInfo.some((existing) => existing.templateName === item.templateName)\r\n    ) || [];\r\n    if (name === 'DoNotSendToERP') {\r\n      setDoNotSendToERP(newselectedObj)\r\n    }\r\n    else if (name === 'OracleExisting') {\r\n      setOracleExisting(newselectedObj);\r\n    }\r\n    else if (name === 'MakeWithoutBOMList') {\r\n      setMakeWithoutBOMList(newselectedObj)\r\n    }\r\n    else if (name === 'NotOwningDivisionList') {\r\n      setNotOwningDivisionList(newselectedObj)\r\n    }\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  sortDataByKey(plantData, 'plantName');\r\n  sortDataByKey(templatesInfo, 'templateName');\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Design Organization\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Create Design Organization</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                Design Organization <span style={{ color: \"#FF3D57\" }}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"buName\"\r\n                  value={buForm.buName}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Export to ERP Disabled </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"exportToERPdisabled\"\r\n                  id=\"exportToERPdisabled\"\r\n                  name=\"exportToERPdisabled\"\r\n                  fullWidth\r\n                  value={buForm.exportToERPdisabled}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Export To ERP Bypassed\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"exportToERPbyPassed\"\r\n                  id=\"exportToERPbyPassed\"\r\n                  name=\"exportToERPbyPassed\"\r\n                  fullWidth\r\n                  value={buForm.exportToERPbyPassed}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Enable BOS Transfer </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"enableBOSTransfer\"\r\n                  id=\"enableBOSTransfer\"\r\n                  name=\"enableBOSTransfer\"\r\n                  fullWidth\r\n                  value={'Y'}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {enableBOSTransferOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Context DFF\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"contextDEF\"\r\n                  value={buForm.contextDEF}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  EMR Division ARG\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"EMRDivisionORGValue\"\r\n                  value={buForm.EMRDivisionORGValue}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Product Hierarchy\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"productHierarchy\"\r\n                  value={buForm.productHierarchy}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Plant Name <span style={{ color: \"#FF3D57\" }}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={selectedplants}\r\n                  getOptionLabel={(option) => option.plantName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handlePlantsChange(newValue)\r\n                  }}\r\n                  options={plantData}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.plantName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* add templates  */}\r\n              {/* DoNotSendToERP */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Do Not Send To ERP\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={DoNotSendToERP}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"DoNotSendToERP\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* OracleExisting */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Oracle Existing\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={OracleExisting}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"OracleExisting\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* MakeWithoutBOMList */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Make Without BOM List\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={MakeWithoutBOMList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"MakeWithoutBOMList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* NotOwningDivisionList */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Not Owning Division List\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={NotOwningDivisionList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"NotOwningDivisionList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* add templates  */}\r\n              <Grid item md={12} sm={12} xs={12} className=\"font-medium\" style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleCancel}\r\n                  style={{ marginRight: \"20px\" }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddbuName}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n\r\n        {\r\n          (refreshData || isLoading) ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Loader show={refreshData} />\r\n            </div>\r\n          ) : <></>\r\n        }\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { exportToERPOptions, enableBOSTransferOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { BUService } from \"services/buService\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function EditBU() {\r\n  const {\r\n    refreshData,\r\n    templatesInfo,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n  const [plantData, setPlantData] = useState([]);\r\n  const location = useLocation();\r\n  // const selectBU = location.state?.selectedBUData;\r\n  const [selectBU, setSelectBU] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [buForm, setBuFrom] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const buService = new BUService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const plantService = new PlantService();\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const handleAddbuName = () => {\r\n    if (\r\n      buForm.buName?.trim() === \"\" ||\r\n      !buForm.buName ||\r\n      selectedplants.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newbuName = {\r\n      id: buForm.id,\r\n      buName: buForm.buName,\r\n      exportToERPdisabled: buForm.exportToERPdisabled,\r\n      contextDEF: buForm.contextDEF,\r\n      EMRDivisionORGValue: buForm.EMRDivisionORGValue,\r\n      productHierarchy: buForm.productHierarchy,\r\n      exportToERPbyPassed: buForm.exportToERPbyPassed,\r\n      enableBOSTransfer: buForm.enableBOSTransfer,\r\n      plants: selectedplants?.map((option) => {\r\n        return {\r\n          id: option?.id,\r\n          plantName: option?.plantName\r\n        }\r\n      }) || [],\r\n      doNotSendToERP: DoNotSendToERP?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      oracleExisting: OracleExisting?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      makeWithoutBOMList: MakeWithoutBOMList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      notOwningDivisionList: NotOwningDivisionList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n    };\r\n    setIsLoading(true);\r\n    buService.updateBU(newbuName).then((resp) => {\r\n      setIsLoading(false);\r\n      if (resp.status === 'success') {\r\n        setIsLoading(false);\r\n        tempMapService.getAlltemplateMappings().then((result) => {\r\n          updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n          setIsLoading(true);\r\n        });\r\n        setTimeout(() => {\r\n          navigate(\"/buList\", { state: { message: resp.msg, status: resp.status } });\r\n        }, 200);\r\n      } else if (resp.status === 'error') {\r\n        handlesnackBarClick(resp.msg, resp.status);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlebuFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...buForm,\r\n      [name]: value,\r\n    };\r\n    console.log(updatedForm, \"===================updatedForm\");\r\n    setBuFrom(updatedForm);\r\n  };\r\n\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n  const [DoNotSendToERP, setDoNotSendToERP] = useState([]);\r\n  const [OracleExisting, setOracleExisting] = useState([]);\r\n  const [MakeWithoutBOMList, setMakeWithoutBOMList] = useState([]);\r\n  const [NotOwningDivisionList, setNotOwningDivisionList] = useState([]);\r\n  const handlePlantsChange = (selectedObj) => {\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => plantData.some((existing) => existing.plantName === item.plantName)\r\n    ) || [];\r\n    setSelectedPlants(newselectedObj);\r\n  };\r\n  const handleTemplateChange = (name, selectedObj) => {\r\n    console.log(\"New Value:\", selectedObj);\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => templatesInfo.some((existing) => existing.templateName === item.templateName)\r\n    ) || [];\r\n    if (name === 'DoNotSendToERP') {\r\n      setDoNotSendToERP(newselectedObj)\r\n    }\r\n    else if (name === 'OracleExisting') {\r\n      setOracleExisting(newselectedObj);\r\n    }\r\n    else if (name === 'MakeWithoutBOMList') {\r\n      setMakeWithoutBOMList(newselectedObj)\r\n    }\r\n    else if (name === 'NotOwningDivisionList') {\r\n      setNotOwningDivisionList(newselectedObj)\r\n    }\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  const getTemplValues = (fieldValue) => {\r\n    const newselectedObj = templatesInfo?.filter(\r\n      (item) => fieldValue.some((templateName) => templateName === item.templateName)\r\n    ) || [];\r\n    return newselectedObj;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (selectBU?.plants) {\r\n      const newselectedObj = plantData?.filter(\r\n        (item) => selectBU?.plants.some((eitem) => eitem?.plantName === item?.plantName)\r\n      ) || [];\r\n      setSelectedPlants(newselectedObj)\r\n    }\r\n    if (selectBU?.doNotSendToERP) {\r\n      const newselectedObj = getTemplValues(selectBU?.doNotSendToERP);\r\n      setDoNotSendToERP(newselectedObj)\r\n    }\r\n    if (selectBU?.oracleExisting) {\r\n      const newselectedObj = getTemplValues(selectBU?.oracleExisting);\r\n      setOracleExisting(newselectedObj)\r\n    }\r\n    if (selectBU?.makeWithoutBOMList) {\r\n      const newselectedObj = getTemplValues(selectBU.makeWithoutBOMList);\r\n      setMakeWithoutBOMList(newselectedObj)\r\n    }\r\n    if (selectBU?.notOwningDivisionList) {\r\n      const newselectedObj = getTemplValues(selectBU.notOwningDivisionList);\r\n      setNotOwningDivisionList(newselectedObj)\r\n    }\r\n  }, [selectBU, plantData, templatesInfo]);\r\n\r\n  useEffect(() => {\r\n    if (params?.buId) {\r\n      setIsLoading(true);\r\n      buService.getBusinessUnitbyid([{ id: params?.buId }]).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp?.data?.length && (resp?.data?.[0] && Object?.keys(resp?.data?.[0])?.length)) {\r\n          setSelectBU(resp?.data[0]);\r\n          const selectBUValue = resp?.data[0];\r\n          setBuFrom({\r\n            id: selectBUValue.id,\r\n            buName: selectBUValue.buName,\r\n            exportToERPdisabled: selectBUValue.exportToERPdisabled,\r\n            exportToERPbyPassed: selectBUValue.exportToERPbyPassed,\r\n            enableBOSTransfer: selectBUValue.enableBOSTransfer,\r\n            contextDEF: selectBUValue.contextDEF,\r\n            EMRDivisionORGValue: selectBUValue.EMRDivisionORGValue,\r\n            productHierarchy: selectBUValue.productHierarchy,\r\n          });\r\n        } else {\r\n          navigate(\"/buList\", { state: { message: \"Design Organization not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/buList\", { state: { message: \"Design Organization not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n  sortDataByKey(plantData, 'plantName');\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Design Organization\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Edit Design Organization</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Design Organization <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"buName\"\r\n                  disabled\r\n                  value={buForm.buName}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Export to ERP Disabled </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  id=\"exportToERPdisabled\"\r\n                  name=\"exportToERPdisabled\"\r\n                  fullWidth\r\n                  value={buForm?.exportToERPdisabled ? buForm?.exportToERPdisabled : \"N\"}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Export To ERP ByPassed\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  id=\"exportToERPbyPassed\"\r\n                  name=\"exportToERPbyPassed\"\r\n                  fullWidth\r\n                  value={buForm?.exportToERPbyPassed ? buForm?.exportToERPbyPassed : \"N\"}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Enable BOS Transfer </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"enableBOSTransfer\"\r\n                  id=\"enableBOSTransfer\"\r\n                  name=\"enableBOSTransfer\"\r\n                  fullWidth\r\n                  value={buForm?.enableBOSTransfer ? buForm?.enableBOSTransfer : 'Y'}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {enableBOSTransferOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Context DFF\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"contextDEF\"\r\n                  value={buForm.contextDEF}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  EMR Division ARG\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"EMRDivisionORGValue\"\r\n                  value={buForm.EMRDivisionORGValue}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Product Hierarchy\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"productHierarchy\"\r\n                  value={buForm.productHierarchy}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Plant Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={selectedplants}\r\n                  getOptionLabel={(option) => option.plantName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handlePlantsChange(newValue)\r\n                  }}\r\n                  options={plantData}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.plantName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <InfoIcon style={{ marginTop: '5px' }} color=\"secondary\" fontSize=\"small\" /><span style={{ marginBottom: '20px' }}> Changing Plants will affect the Template Mappings.</span>\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Do Not Send To ERP\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={DoNotSendToERP}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"DoNotSendToERP\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Oracle Existing\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={OracleExisting}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"OracleExisting\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Make Without BOM List\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={MakeWithoutBOMList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"MakeWithoutBOMList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Not Owning Division List\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={NotOwningDivisionList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"NotOwningDivisionList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={12} sm={12} xs={12} className=\"font-medium\" style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleCancel}\r\n                  style={{ marginRight: \"20px\" }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddbuName}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n\r\n        {\r\n          (refreshData || isLoading) ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Loader show={true} />\r\n            </div>\r\n          ) : <></>\r\n        }\r\n      </form>\r\n    </Container >\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport BUList from \"./buList\";\r\nimport CreateBU from \"./createBU\";\r\nimport EditBU from \"./editBU\";\r\n\r\nconst buListRoutes = [\r\n  {\r\n    path: \"/buList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <BUList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/createBU\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateBU />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/editBU/:buId\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditBU />\r\n      </PrivateRoute>\r\n    )\r\n  }\r\n];\r\nexport default buListRoutes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from \"shortid\";\r\nimport { MCOService } from \"services/mcoService\";\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Box,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { UserService } from \"services/usersService\";\r\n// import download from 'downloadjs';\r\n// import CustomSelect from \"./CustomSelect\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled(\"input\")({\r\n  clip: \"rect(0 0 0 0)\",\r\n  clipPath: \"inset(50%)\",\r\n  height: 1,\r\n  overflow: \"hidden\",\r\n  position: \"absolute\",\r\n  bottom: 0,\r\n  left: 0,\r\n  whiteSpace: \"nowrap\",\r\n  width: 1,\r\n});\r\n\r\nconst BulkImportUsers = ({\r\n  userImportDialog,\r\n  setUserImportDialog,\r\n  setUserData,\r\n}) => {\r\n  const mcoService = new MCOService();\r\n  // const { importBulkUpdateFile, setImportBulkUpdateFile, savePartAndOracleTempInRedux } = props;\r\n  const userService = new UserService();\r\n  const [noFileError, setNoFileError] = useState(false);\r\n  const [importResponse, setImportResponse] = useState(false);\r\n  const [importfileBar, setimportfileBar] = useState(false);\r\n  const [importedFileData, setImportedFileData] = useState(null);\r\n  const [importedFileName, setImportedFileName] = useState(null);\r\n  const instance = localStorage.getItem(\"instance\");\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const importFileData = (e) => {\r\n    console.log(\"file selected\");\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const fileType = file.name.split('.').pop();\r\n      if (fileType === 'xlsx' || fileType === 'xls') {\r\n        // if (\r\n        //   e.target.files[0].name.split(\".\").pop() == \"xlsx\" ||\r\n        //   e.target.files[0].name.split(\".\").pop() === \"xls\"\r\n        // ) {\r\n        setImportedFileData(e.target.files[0]);\r\n        setImportedFileName(e.target.files[0].name);\r\n        setNoFileError(false);\r\n      } else {\r\n        setNoFileError(true);\r\n        setImportedFileName(null);\r\n        setImportedFileData(null);\r\n      }\r\n    } else {\r\n      setNoFileError(true);\r\n      setImportedFileName(null);\r\n      setImportedFileData(null);\r\n    }\r\n  };\r\n\r\n  // const handleCloseImport = () => {\r\n  //     setImportedFileData(null)\r\n  //     setImportBulkUpdateFile(false);\r\n  // };\r\n  const handleImportFile1 = () => {\r\n    let hasError = false;\r\n    if (importedFileData === null || importedFileData.length < 1) {\r\n      setNoFileError(true);\r\n      hasError = true;\r\n    }\r\n    if (hasError) {\r\n      return;\r\n    }\r\n\r\n    if (importedFileData !== null) {\r\n      //alert('file is upl7oaded')\r\n      let postData = {\r\n        file: importedFileData,\r\n        data: {\r\n          Instance: instance,\r\n        },\r\n      };\r\n\r\n      // console.log(importSelectionValues, 'importSelectionValues');\r\n      console.log(postData, \"postData\");\r\n      userService.importUser(postData).then((response) => {\r\n        console.log(response, \"response 11111\");\r\n        if (response.status === \"success\") {\r\n          console.log(\r\n            response,\r\n            \"response 22222 file uploaded successfully and user added\"\r\n          );\r\n        }\r\n        setImportResponse(response);\r\n        setimportfileBar(true);\r\n        setImportedFileData(null);\r\n        setImportedFileName(null);\r\n        //   setImportBulkUpdateFile(false)\r\n        handleCloseImportDialog();\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n      });\r\n      userService.getAllUsersList().then((result) => {\r\n        setUserData(result.data);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleImportFile = async () => {\r\n    if (!importedFileData || importedFileData.length < 1) {\r\n      setNoFileError(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const postData = {\r\n        file: importedFileData,\r\n        data: {\r\n          Instance: instance,\r\n        },\r\n      };\r\n\r\n      console.log(postData, \"postData\");\r\n\r\n      const response = await userService.importUser(postData);\r\n      console.log(response, \"response 11111\");\r\n\r\n      // Determine the status from the response\r\n      const status = response.status || \"error\";\r\n\r\n      // Common tasks for both success and failure cases\r\n      setImportResponse(response);\r\n      setimportfileBar(true);\r\n      setImportedFileData(null);\r\n      setImportedFileName(null);\r\n      handleCloseImportDialog();\r\n\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: status,\r\n        desc: status === \"success\" ? response?.msg : response.errors.join(\", \"),\r\n      });\r\n\r\n      if (status === \"success\") {\r\n        console.log(\r\n          response,\r\n          \"response 22222 file uploaded successfully and user added\"\r\n        );\r\n        const result = await userService.getAllUsersList();\r\n        setUserData(result.data);\r\n      } else {\r\n        console.log(status, \"response status\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error importing file:\", error);\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: \"error\",\r\n        desc: \"An error occurred while importing the file.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    let filelocation = \"sample-bulkUserUpload.xlsx\";\r\n    mcoService.downloadSampleFile(filelocation);\r\n  };\r\n  const handleCloseImportDialog = () => {\r\n    setUserImportDialog(false);\r\n    setImportedFileData(null);\r\n    setImportedFileName(null);\r\n  };\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={userImportDialog}\r\n        onClose={handleCloseImportDialog}\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: \"#fff\",\r\n            boxShadow: \"none\",\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Bulk Upload Required Users\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <StyledTable>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell align=\"left\">Upload File (Excel File)</TableCell>\r\n                    <TableCell align=\"left\">\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        <Button\r\n                          component=\"label\"\r\n                          variant=\"contained\"\r\n                          startIcon={<CloudUploadIcon />}\r\n                        >\r\n                          Upload file\r\n                          <VisuallyHiddenInput\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            accept=\".xls, .xlsx\"\r\n                            onChange={importFileData}\r\n                          />\r\n                        </Button>\r\n                        {noFileError && (\r\n                          <p>Please Select xlsx file to Upload </p>\r\n                        )}\r\n                      </div>\r\n                      {importedFileName && <p>{importedFileName}</p>}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell colSpan={2}>\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        <a\r\n                          // href={sampleFileUrl}\r\n                          onClick={handleDownload}\r\n                          download=\"Example-XLSX-document\"\r\n                          rel=\"noreferrer\"\r\n                          // target=\"_blank\"\r\n                          //style={{ color: \"blue\" }}\r\n                          style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                        >\r\n                          Click Here\r\n                        </a>{\" \"}\r\n                        to download the sample Excel template for bulk user\r\n                        upload.\r\n                        {/* <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={() => { download(sampleFileUrl) }}>\r\n                                                Download sample file\r\n                                            </Button> */}\r\n                        {/* </a> */}\r\n                      </div>\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        <b>Note:</b> Upload file must contain six columns with\r\n                        header labels in following order.\r\n                      </div>\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        1. User Name\r\n                        <br />\r\n                        3. Name\r\n                        <br />\r\n                        4. Email\r\n                        <br />\r\n                        5. Is Authorized\r\n                        <br />\r\n                        6. User Group\r\n                        <br />\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </StyledTable>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleImportFile}>Upload</Button>\r\n          <Button onClick={handleCloseImportDialog}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {openDesc ? (\r\n        <CustomAlertBox\r\n          openAlert={openAlert}\r\n          openDesc={openDesc}\r\n          setOpenAlert={setOpenAlert}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BulkImportUsers;\r\n","import { SimpleCard } from \"app/components\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport { Grid, Box } from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { getUserInfo } from \"@okta/okta-auth-js\";\r\nimport { UserService } from 'services/usersService';\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst BulkExportUsers = ({\r\n  userExportDialog,\r\n  setUserExportDialog,\r\n  userData,\r\n  selectedRows,\r\n}) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [dataToExport, setDataToExport] = useState(userData || []);\r\n  const [value, setValue] = useState(\"allData\");\r\n  const userService = new UserService();\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n\r\n  const handleCloseExportUser = () => {\r\n    setUserExportDialog(false);\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n\r\n  /* export template data start */\r\n  const exportTemplateHandle = () => {\r\n    console.log(userData, \"userData in bulk export inside export template.\");\r\n\r\n    let data = (value !== \"allData\" ? selectedRows : userData) || [];\r\n    let exportData = data?.map((item) => {\r\n      let res = {\r\n        // userId: item.userId,\r\n        \"Name\": item.name,\r\n        \"User Name\": item.userName,\r\n        Email: item.email,\r\n        \"Is Authorized\": item.is_authorized,\r\n        \"User Group\": item.userinfo.join(\", \"), // Convert array to comma-separated string\r\n      };\r\n      return res;\r\n    });\r\n\r\n    console.log(data, 'data')\r\n    userService\r\n      .exportUser({ data: exportData, sheet_name: \"Users\" })\r\n      .then((response) => {\r\n        setExportResponse(response);\r\n        //console.log(response, ';resprespresp')\r\n        handleExportfileBarClick(\"User exported successfully!\", \"success\");\r\n\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n      });\r\n    handleCloseExportUser();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const newValue = event.target.value;\r\n    setValue(newValue);\r\n\r\n    if (newValue === \"allData\") {\r\n      setDataToExport(userData);\r\n    } else {\r\n      setDataToExport(selectedRows);\r\n    }\r\n  };\r\n\r\n\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Dialog open={userExportDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Users\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">\r\n                        Select Data to Export\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"allData\"\r\n                          control={<Radio />}\r\n                          label=\"All Data\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"selectedData\"\r\n                          disabled={selectedRows.length === 0}\r\n                          control={<Radio />}\r\n                          label=\"Selected Data\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseExportUser}>Cancel</Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {openDesc ? (\r\n        <CustomAlertBox\r\n          openAlert={openAlert}\r\n          openDesc={openDesc}\r\n          setOpenAlert={setOpenAlert}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BulkExportUsers;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport BulkImportUsers from \"./bulkImportUsersDialog\";\r\nimport { Box, styled, Grid, TextField } from \"@mui/material\";\r\n\r\nimport { UserService } from \"services/usersService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport BulkExportUsers from \"./bulkExportUsersDialog\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst UserList = () => {\r\n  const location = useLocation();\r\n  let toastState = location.state;\r\n  const [userData, setUserData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const userService = new UserService();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [userImportDialog, setUserImportDialog] = useState(false);\r\n  const [userExportDialog, setUserExportDialog] = useState(false);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap =\r\n    gridRef && gridRef.current && gridRef.current.dataMap\r\n      ? gridRef.current.dataMap\r\n      : null;\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"name\",\r\n      header: \"Name\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.name}</div>,\r\n    },\r\n    {\r\n      name: \"userName\",\r\n      header: \"User Name\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.userName}</div>,\r\n    },\r\n    {\r\n      name: \"email\",\r\n      header: \"Email\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.email}</div>,\r\n    },\r\n    {\r\n      name: \"is_authorized\",\r\n      header: \"Is Authorized\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => (\r\n        <div>{data?.is_authorized === \"Y\" ? \"Yes\" : \"No\"}</div>\r\n      ),\r\n    },\r\n    {\r\n      name: \"userinfo\",\r\n      header: \"User Group\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => (\r\n        <div>\r\n          {data?.userinfo ? data.userinfo.map((item) => item).join(\", \") : \"\"}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteUserDilaog(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditUser(selectedRows[0]);\r\n  };\r\n\r\n  // ===========Import Export Functions==========//\r\n  const handleImportDialog = () => {\r\n    setUserImportDialog(true);\r\n  };\r\n  const handleExportDialog = () => {\r\n    setUserExportDialog(true);\r\n  };\r\n  const handleCloseImportDialog = () => {\r\n    console.log(\"close dialog\");\r\n    setUserImportDialog(false);\r\n  };\r\n  const handleCloseExportDialog = () => {\r\n    setUserExportDialog(false);\r\n  };\r\n  // ===========Import Export Functions==========//\r\n\r\n  // ==============table===========\r\n\r\n  useEffect(() => {\r\n    console.log(userData, \"userData inside useEffect\");\r\n    if (userData.length === 0) {\r\n      setIsLoading(true);\r\n      userService.getAllUsersList().then((result) => {\r\n        setUserData(result.data);\r\n        setInitialData(result.data); // Set initial data\r\n        setIsLoading(false);\r\n      });\r\n    } else {\r\n      setUserData(userData);\r\n    }\r\n  }, []);\r\n  const [filteredBUData, setFilteredBUData] = useState([]);\r\n\r\n// Ensure filteredBUData is an array\r\nconst validFilteredBUData = Array.isArray(filteredBUData) ? filteredBUData : [];\r\nlet sortedUsersData = sortDataByKey([...validFilteredBUData], \"name\");\r\n\r\n  useEffect(() => {\r\n    setFilteredBUData(userData);\r\n    setInitialData(sortedUsersData);\r\n  }, [userData]);\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => { };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleCreateUser = () => {\r\n    setTimeout(() => {\r\n      navigate(\"/addEditUser\", {\r\n        state: { isEdit: false },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleEditUser = (editSelectedUser) => {\r\n    const selectedUserData = editSelectedUser;\r\n    setTimeout(() => {\r\n      navigate(\"/addEditUser\", {\r\n        state: { isEdit: true, selectedUserData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteUserDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteUser = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      setIsLoading(true);\r\n      console.log(selectedRows, \"selectedRows\");\r\n      const selRowsId = selectedRows?.map((item) => item?.id);\r\n      await userService.deleteUser(selRowsId).then((response) => {\r\n        console.log(response, \"delete response\");\r\n        setIsLoading(false);\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete User:\", error);\r\n    }\r\n    userService.getAllUsersList().then((result) => {\r\n      setUserData(result.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails =\r\n      selRowsData && Object.keys(selRowsData).map((key) => selRowsData[key]);\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      const new_FilteredData = userData.filter((subscriber) => {\r\n        return (\r\n          searchValue === \"\" ||\r\n          subscriber.name.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          subscriber.email.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          subscriber.userName.toLowerCase().includes(searchValue.toLowerCase())\r\n        );\r\n      });\r\n      setFilteredBUData(new_FilteredData);\r\n    }\r\n  }, [searchValue, userData]);\r\n  useEffect(() => {\r\n    if (toastState?.status) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: toastState?.status,\r\n        desc: toastState?.message,\r\n      });\r\n      userService.getAllUsersList().then((result) => {\r\n        setUserData(result.data);\r\n        setInitialData(result.data); // Set initial data\r\n      });\r\n    }\r\n    toastState = {};\r\n\r\n    // Clear the state value on page refresh\r\n    window.onbeforeunload = () => {\r\n      window.history.replaceState({}, document.title);\r\n    };\r\n  }, [toastState]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedUserData = sortedExportDataHOC(UserList);\r\n    const sortedData = SortedUserData({ data: userData, sortedUsersData, sortInfo, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setUserData(sortedData.props.data);\r\n    setFilteredBUData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Users\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateUser}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleImportDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Import\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleExportDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Export\r\n            </Button>\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br></br>\r\n            {isLoading ? (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"100vh\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              filteredBUData && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={{ minHeight: 550 }}\r\n                  defaultLimit={100}\r\n                  columns={columns}\r\n                    dataSource={sortInfo === null ? filteredBUData : sortedUsersData}\r\n                  // rowHeight={null}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={(ref) => (gridRef.current = ref ? ref.current : null)}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  onSortInfoChange={handleSortInfoChange}\r\n                  />\r\n              )\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {openDesc ? (\r\n        <CustomAlertBox\r\n          openAlert={openAlert}\r\n          openDesc={openDesc}\r\n          setOpenAlert={setOpenAlert}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Design Organization\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Do you want to delete the seleted User(s)?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteUser}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <BulkExportUsers\r\n        userExportDialog={userExportDialog}\r\n        handleCloseExportDialog={handleCloseExportDialog}\r\n        setUserImportDialog={setUserImportDialog}\r\n        setUserExportDialog={setUserExportDialog}\r\n        selectedRows={selectedRows}\r\n        userData={sortInfo && Object.keys(sortInfo).length === 0 ? sortedUsersData : userData} />\r\n        <BulkImportUsers\r\n        userImportDialog={userImportDialog}\r\n        setUserImportDialog={setUserImportDialog}\r\n        setUserData={setUserData}\r\n\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { is_authorizedOptions } from \"../adminConfig/common\";\r\nimport { userGroupOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { UserService } from \"services/usersService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = {\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n};\r\n\r\nexport default function AddEditUser() {\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const location = useLocation();\r\n  const isEdit = location.state?.isEdit;\r\n  const selectedUser = location.state?.selectedUserData !== undefined ? location.state?.selectedUserData : {};\r\n  const [userForm, setUserFrom] = useState({\r\n    id: selectedUser.userId !== undefined ? selectedUser.userId : Date.now().toString(),\r\n    userName: selectedUser.userName,\r\n    name: selectedUser.name,\r\n    email: selectedUser.email,\r\n    is_authorized: selectedUser.is_authorized !== undefined ? selectedUser.is_authorized : 'Y',\r\n    userinfo: selectedUser.userinfo !== undefined ? selectedUser.userinfo : []\r\n  });\r\n  const classes = useStyles;\r\n  let navigate = useNavigate();\r\n  const userService = new UserService();\r\n\r\n  const handleAddbuName = () => {\r\n    if (\r\n      userForm.userName?.trim() === \"\" ||\r\n      !userForm.userName ||\r\n      userForm.name?.trim() === \"\" ||\r\n      !userForm.name ||\r\n      userForm.email?.trim() === \"\" ||\r\n      !userForm.email ||\r\n      userGroup.length === 0 ||\r\n      userForm.is_authorized?.trim() === \"\" ||\r\n      !userForm.is_authorized\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newbuName = {\r\n      id: userForm.id,\r\n      userName: userForm.userName,\r\n      name: userForm.name,\r\n      email: userForm.email,\r\n      is_authorized: userForm.is_authorized,\r\n      userinfo: userGroup,\r\n    };\r\n    if (isEdit) {\r\n      userService.updateUser({ userData: newbuName }).then((resp) => {\r\n        if (resp.status === 'success') {\r\n          setTimeout(() => {\r\n            navigate(\"/userList\", { state: { message: resp.msg, status: resp.status } });\r\n          }, 200);\r\n        } else if (resp.status === 'error') {\r\n          handlesnackBarClick(resp.msg, resp.status);\r\n        }\r\n      })\r\n    } else {\r\n      userService.addnewUser({ userData: newbuName }).then((resp) => {\r\n        if (resp.status === 'success') {\r\n          setTimeout(() => {\r\n            navigate(\"/userList\", { state: { message: resp.msg, status: resp.status } });\r\n          }, 200);\r\n        } else if (resp.status === 'error') {\r\n          handlesnackBarClick(resp.msg, resp.status);\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleUserFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...userForm,\r\n      [name]: value,\r\n    };\r\n    setUserFrom(updatedForm);\r\n  };\r\n  const [userGroup, setUserGroup] = useState(selectedUser.userinfo || []);\r\n  const handleuserGroupChange = (event) => {\r\n    const selectedValues = event.target.value;\r\n    const userGroupInfo = userGroupOptions.filter((option) =>\r\n      selectedValues.includes(option)\r\n    );\r\n    setUserGroup(userGroupInfo);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: isEdit ? \"Edit User\" : \"Create User\" }]} />\r\n      </Box>\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>{isEdit ? \"Edit User\" : \"Create User\"}</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"name\"\r\n                  value={userForm.name}\r\n                  onChange={handleUserFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  User Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"userName\"\r\n                  // disabled={isEdit}\r\n                  value={userForm.userName}\r\n                  onChange={handleUserFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Email <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  disabled={isEdit}\r\n                  value={userForm.email}\r\n                  onChange={handleUserFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Is Authorized</span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  id=\"is_authorized\"\r\n                  name=\"is_authorized\"\r\n                  fullWidth\r\n                  value={userForm.is_authorized ? userForm.is_authorized : ''}\r\n                  onChange={handleUserFormChange}\r\n                >\r\n                  {is_authorizedOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  User Group <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  multiple\r\n                  value={userGroup.map((item) => item)}\r\n                  onChange={handleuserGroupChange}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                  MenuProps={{\r\n                    sx: {\r\n                      \"&& .Mui-selected\": {\r\n                        backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  {userGroupOptions?.map((option) => (\r\n                    <MenuItem key={option} value={option}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleAddbuName}\r\n                  >\r\n                    {isEdit ? \"Update\" : \"Create\"}\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n      </form>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport USERList from \"./usersList\";\r\nimport AddEditUser from \"./addEditUsers\";\r\n\r\nconst userListRoutes = [\r\n  {\r\n    path: \"/userList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <USERList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/addEditUser\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <AddEditUser />\r\n      </PrivateRoute>\r\n    )\r\n  }\r\n];\r\n\r\nexport default userListRoutes;\r\n","const Constant ={\r\n    \"adminConstant\":{\r\n        \"common\":{\r\n            \"deleteNote\":\"Data will not be romeved from the master data. It will be added to your draft changes only.\",\r\n        },\r\n        \"buplantList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"Plant\": \"PLANT\",\r\n                \"BomStatus\": \"BOM STATUS\",\r\n                \"PoORG\": \"PO ORG\",\r\n                \"RduOuSetORG\": \"RDU OU SET ORG\",\r\n            }\r\n        },\r\n        \"expensemapList\":{\r\n            \"tooltip\":{\r\n                \"EXPENSE_TEMPLATE\": \"Template\",\r\n                \"RDO\": \"Design Organization\",\r\n                \"PlantName\":\"Plant Name\"\r\n            }\r\n        },\r\n        \"mvoallowedchangesList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"mvoTemplatesFrom\": \"MVO Template - From\",\r\n                \"mvoTemplatesTo\": \"MVO Template - To\",\r\n            }\r\n        },\r\n        \"mvoTemplateList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"TemplateOptionMVO\": \"Template MVO\",\r\n                \"HasMBom\":\"Has MBom\",\r\n                \"OnMBom\":\"ON MBom\",\r\n                \"Optional\":\"Optional\",\r\n                \"PoExist\":\"PO Exist\",\r\n                \"EBomAllowed\":\"EBOM Allowed\",\r\n                \"AllowableOrgTemplate\": \"Org Allowed Templates - Status\",\r\n            }\r\n        },\r\n        \"orgAllowedList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"AllowableOrgTemplate\": \"Template Name\",\r\n                \"HasMBom\":\"Has MBOM\",\r\n                \"EBOM\":\"EBOM Allowed\",\r\n                \"Optional\":\"Optional\",\r\n                \"PoCheck\":\"PO Org Check\",\r\n                \"OnMbom\":\"ON MBOM\",\r\n                \"status\":\"status\"\r\n            }\r\n        },\r\n        \"parttypetemplateList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"TemplateOptionsMVO\": \"Enovia Part Type\",\r\n                \"allowableOrgTemplatesExclusive\":\"Org Allowed Templates - Exclusive use\"\r\n            }\r\n        },\r\n        \"setComptempList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"TemplateForOrgExist\": \"Template for Org(s) Existing\",\r\n                \"TemplateForOrgModify\":\"Template for Org Modifying\"\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Constant","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { notOwningDivisionOptions } from \"../../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst OrgAllowedDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  selectedPlants,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddOrgAllowedValues,\r\n  isEdit,\r\n  selectedBU\r\n}) => {\r\n\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnitLists,\r\n  } = useOracleSettings();\r\n  const filteredPlants = () => {\r\n    return bussinessUnitLists?.find((plant) => plant.buName === selectedBU)?.plants || []\r\n  };\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      console.log(tempData, 'tempData tempData tempData')\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo]);\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Org Allowed Templates \" : \"Add OrgAllowed Templates\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Design Organization <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"DataType-select\"\r\n              name=\"BUID\"\r\n              fullWidth\r\n              value={selectedBU}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled\r\n            >\r\n              {filteredBUOptions?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Template Name <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              name=\"ALLOWABLE_ORG_TEMPLATES\"\r\n              fullWidth\r\n              value={orgAllowedForm.ALLOWABLE_ORG_TEMPLATES}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled={isEdit}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Has MBOM <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"Has_MBOM\"\r\n              name=\"Has_MBOM\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.Has_MBOM !== undefined ? orgAllowedForm.Has_MBOM : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              On MBOM <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"On_MBOM\"\r\n              name=\"On_MBOM\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.On_MBOM !== undefined ? orgAllowedForm.On_MBOM : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              EBOM Allowed <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"EBOM_Allowed\"\r\n              name=\"EBOM_Allowed\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.EBOM_Allowed !== undefined ? orgAllowedForm.EBOM_Allowed : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Optional <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"Optional\"\r\n              name=\"Optional\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.Optional !== undefined ? orgAllowedForm.Optional : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              PO Org Check: <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"PO_Org_Exist_Check\"\r\n              name=\"PO_Org_Exist_Check\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.PO_Org_Exist_Check !== undefined ? orgAllowedForm.PO_Org_Exist_Check : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Plants <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              multiple\r\n              name=\"plants\"\r\n              value={selectedPlants}\r\n              onChange={handleorgAllowedFormChange}\r\n              renderValue={(selected) => selected?.join(\", \")}\r\n              MenuProps={{\r\n                sx: {\r\n                  \"&& .Mui-selected\": {\r\n                    backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {filteredPlants()?.map((option) => (\r\n                <MenuItem key={option.plantName} value={option.plantName}>\r\n                  {option.plantName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddOrgAllowedValues}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default OrgAllowedDialog;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class HistoryManagementService {\r\n\r\n  // draftChanges services\r\n  getAlldraftChanges = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/draftChanges/getDraftChanges`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTemplateMapping = (tempMappingId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/draftChanges/deletedraftChanges/${tempMappingId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting deletedraftChanges:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/draftChanges/adddraftChanges`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        //console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"adddraftChanges\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/draftChanges/updatedraftChanges`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updatedraftChanges\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  applyDraftChanges = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/draftChanges/acceptChanges`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"applyDraftChanges\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  discardDraftChanges = (dataId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/draftChanges/deletedraftChanges/${dataId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting discardDraftChanges:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  // mappingHistory services\r\n  getAllmappingHistory = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/mappingHistory/getMappingHistory`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class MVOtempcompService {\r\n  getAlltempcompMappings = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/newtemplateMappings/getTemplateMappings`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTempCompMapping = (tempMappingId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/newtemplateMappings/deleteTemplateMappings/${tempMappingId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting deleteTemplateMappings:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewTempCompMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/addTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTempCompMapping = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/newtemplateMappings/updateTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  softDeleteTempCompMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/softDeleteTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"softDeleteTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from 'shortid';\r\n\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\r\n\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Autocomplete,\r\n} from \"@mui/material\";\r\n\r\n\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport Loader from 'app/components/Loader';\r\n\r\nimport download from 'downloadjs';\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\n\r\nconst ImportMappingsDialog = (props) => {\r\n    const {\r\n        allTemplatesInfo,\r\n        // updateTemplateLists,\r\n        updateRefreshData,\r\n        bussinessUnitLists\r\n    } = useOracleSettings();\r\n\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { importTemplate, setImportTemplate, fetchData } = props;\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n\r\n    const [sampleFileUrl, setSampleFileUrl] = useState(null);\r\n\r\n    const [ERPTypeError, setERPTypeError] = useState(false);\r\n    const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        ERPType: [],\r\n        instance: [],\r\n        BU: [],\r\n    });\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n\r\n    const importFileData = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0])\r\n                setImportedFileName(e.target.files[0].name)\r\n                setNoFileError(false)\r\n            } else {\r\n                setNoFileError(true)\r\n                setImportedFileName(null)\r\n                setImportedFileData(null);\r\n            }\r\n        } else {\r\n            setNoFileError(true)\r\n            setImportedFileName(null)\r\n            setImportedFileData(null);\r\n        }\r\n    }\r\n\r\n    const handleCloseImportTemplate = () => {\r\n        setImportedFileData(null)\r\n        setImportTemplate(false);\r\n    };\r\n\r\n    const handleImportTemplate = () => {\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            return;\r\n        }\r\n\r\n        if (importedFileData === null || importedFileData.length < 1) {\r\n            setNoFileError(true);\r\n            return;\r\n        }\r\n        if (importedFileData !== null) {\r\n            let postData = {\r\n                'file': importedFileData,\r\n                data: {\r\n                    BU: importSelectionValues.BU,\r\n                    MappingType: props?.MappingType,\r\n                }\r\n            };\r\n\r\n            // console.log(importSelectionValues, 'importSelectionValues');\r\n            // console.log(postData, 'postData');\r\n            // return;\r\n            setIsLoading(true);\r\n            templateMappingService.importTemplate(postData).then((response) => {\r\n                // console.log(response, 'response 11111');\r\n                setImportResponse(response)\r\n                setimportfileBar(true);\r\n                setImportedFileData(null)\r\n                setImportedFileName(null)\r\n                setImportTemplate(false);\r\n                let desc = {};\r\n                let severity='';\r\n                if (response && response.status === 'error') {\r\n                    desc = (\r\n                        <div style={{ color: 'red' }}>\r\n                            {response?.msg} <br />\r\n                            {response?.errorInTemplateCount && (\r\n                                <>\r\n                                    Total Template Count: {response.errorInTemplateCount} <br />\r\n                                    Templates are: <br />\r\n                                    <ul>\r\n                                        {response.errorInTemplate.map((eitem) => (\r\n                                            <li key={shortId.generate()}>{eitem}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </>\r\n                            )}\r\n\r\n                            {response?.errorInPlantCount && (\r\n                                <>\r\n                                    Total Plant Count: {response.errorInPlantCount} <br />\r\n                                    Plants are: <br />\r\n                                    <ul>\r\n                                        {response.errorInPlants.map((eitem) => (\r\n                                            <li key={shortId.generate()}>{eitem}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    );\r\n                    severity = 'error';\r\n                } else {\r\n                    if (response.errorCount > 0 || (!response.newTemplateAdded && !response.updateTemplates)) {\r\n                        desc = (\r\n                            <div style={{ color: 'red' }}>\r\n                                Failure <br />\r\n                                New Template Added: {response.newTemplateAdded} <br />\r\n                                Template Updated: {response.updateTemplates} <br />\r\n                                {response.errorCount > 0 && <>Error in Template: {response.errorCount} <br /></>}\r\n                            </div>\r\n                        );\r\n                        severity = 'error';\r\n                    } else {\r\n                        desc = (\r\n                            <div>\r\n                                {response.msg} <br />\r\n                                New Template Added: {response.newTemplateAdded} <br />\r\n                                Template Updated: {response.updateTemplates} <br />\r\n                            </div>\r\n                        );\r\n                        severity = 'success';\r\n                    }\r\n                }\r\n\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: severity,\r\n                    desc: desc,\r\n                });\r\n                setIsLoading(false);\r\n                if (severity === 'error') return; // Stop further execution if there is an error\r\n                if (!response?.errorInTemplateCount || !response?.errorInPlantCount) {\r\n                    updateRefreshData(true);\r\n                    fetchData();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const handleImportfileBarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setimportfileBar(false);\r\n    };\r\n\r\n    const handleImportTemplateSelection = (column, selectedValues) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [column]: selectedValues,\r\n            };\r\n        })\r\n        if (column === 'ERPType') { setERPTypeError(false) }\r\n        if (column === 'instance') { setinstanceError(false) }\r\n        if (column === 'BU') { setBUError(false) }\r\n        console.info(importSelectionValues, 'importSelectionValues')\r\n    }\r\n\r\n    const getUniqueValues = (column) => {\r\n        const values = new Set();\r\n\r\n        // console.log(allTemplatesInfo, 'allTemplatesInfo 11111');\r\n\r\n        // allTemplatesInfo?.forEach((subscriber) => {\r\n        //     if (column === \"plants\") {\r\n        //         subscriber[column]?.forEach((plant) => {\r\n        //             values.add(plant.plantName);\r\n        //         });\r\n        //     } else if (column === \"BU\") {\r\n        //         subscriber[column]?.forEach((BU) => {\r\n        //             values.add(BU);\r\n        //         });\r\n        //     } else {\r\n        //         values.add(subscriber[column]);\r\n        //     }\r\n        // });\r\n        bussinessUnitLists?.forEach(item => {\r\n            values.add(item[column]);\r\n        })\r\n        return Array.from(values);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let getsampleFileUrl = null;\r\n        switch (props?.MappingType) {\r\n            case \"orgallowedvalues\":\r\n                getsampleFileUrl = \"sample-orgAllowedTemplate.xlsx\";\r\n                break;\r\n            case \"mvoTemplateCompatibility\":\r\n                getsampleFileUrl = \"sample-mvotemplatecompatibility.xlsx\";\r\n                break;\r\n            case \"parttypetotemplate\":\r\n                getsampleFileUrl = \"sample-partTypeToTemplate.xlsx\";\r\n                break;\r\n            case \"mvoallowedchanges\":\r\n                getsampleFileUrl = \"sample-mvoallowedchanges.xlsx\";\r\n                break;\r\n            case \"setcompatibletemplates\":\r\n                getsampleFileUrl = \"sample-setcompatibletemplates.xlsx\";\r\n                break;\r\n            case \"buplantmapping\":\r\n                getsampleFileUrl = \"sample-RDOPlantMapping.xlsx\";\r\n                break;\r\n            case \"expensemapping\":\r\n                getsampleFileUrl = \"sample-expensemapping.xlsx\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setSampleFileUrl(getsampleFileUrl);\r\n    }, [props.MappingType]);\r\n\r\n    // useEffect(() => {\r\n    //     templateMappingService.getAlltemplateMappings().then((result) => {\r\n    //         updateTemplateLists(result?.data?.templateMappingList);\r\n    //     });\r\n    // }, [])\r\n    const handleDownload = () => {\r\n        templateMappingService.downloadSampleFile(sampleFileUrl)\r\n    };\r\n    return (\r\n        <>\r\n            <Dialog open={importTemplate}\r\n                style={{\r\n                    zIndex: 999, // Set your desired z-index value\r\n                }}>\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    {props.title}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                Design Organization\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={getUniqueValues(\"buName\")}\r\n                                                // options={getBuList}\r\n                                                value={importSelectionValues.BU}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"BU\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select RDO\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.BU.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                            Upload file\r\n                                            <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                        </Button>\r\n                                        {noFileError && (<p>Please Select xlsx file to Upload </p>)}\r\n                                    </div>\r\n                                    {importedFileName && (<p>{importedFileName}</p>)}\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        {/* <a\r\n                                            href={sampleFileUrl}\r\n                                            download=\"Example-XLSX-document\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noreferrer\"\r\n                                        > */}\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={handleDownload}>\r\n                                            Download sample file\r\n                                        </Button>\r\n                                        {/* </a> */}\r\n                                    </div>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleCloseImportTemplate}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleImportTemplate}>Import</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* <Snackbar\r\n                open={importfileBar}\r\n                autoHideDuration={6000}\r\n                onClose={handleImportfileBarClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleImportfileBarClose}\r\n                    severity={(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"success\" : \"error\"}\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    <AlertTitle>{(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"Success\" : \"Error\"}</AlertTitle>\r\n                    {\r\n                        (importResponse && (importResponse?.errorInTemplate?.length || importResponse?.errorInPlants?.length)) ? (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse?.msg} <br />\r\n                                    {\r\n                                        (importResponse?.errorInTemplateCount) ? (<>\r\n                                            Total Template Count: {importResponse?.errorInTemplateCount} <br />\r\n                                            Templates are: <br />\r\n                                            <ul>\r\n                                                {\r\n                                                    importResponse?.errorInTemplate?.map((eitem) => {\r\n                                                        return (\r\n                                                            <li key={shortId.generate()}>\r\n                                                                {eitem}\r\n                                                            </li>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </ul>\r\n                                        </>) : (<></>)\r\n                                    }\r\n\r\n                                    {\r\n                                        (importResponse?.errorInPlantCount) ? (\r\n                                            <>\r\n                                                Total Plant Count: {importResponse?.errorInPlantCount} <br />\r\n                                                Plants are: <br />\r\n                                                <ul>\r\n                                                    {\r\n                                                        importResponse?.errorInPlants?.map((eitem) => {\r\n                                                            return (\r\n                                                                <li key={shortId.generate()}>\r\n                                                                    {eitem}\r\n                                                                </li>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </ul>\r\n                                            </>\r\n                                        ) : (<></>)\r\n                                    }\r\n\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse.msg} <br />\r\n                                    New Template Added: {importResponse.newTemplateAdded} <br />\r\n                                    Template Updated: {importResponse.updateTemplates} <br />\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </Alert>\r\n            </Snackbar > */}\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} sx={{ '& .MuiAlertTitle-root': { backgroundColor: 'red' } }} />\r\n            ) : (<></>)}\r\n\r\n            {\r\n                isLoading ? (\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <Loader show={isLoading} />\r\n                    </div>\r\n                ) : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImportMappingsDialog;","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst MVOtemplatecompContext = createContext({\r\n    mvotemplatecompInfo: [],\r\n    updateMVOtempcompLists: () => [],\r\n})\r\n\r\nexport const MVOtempcompProvider = ({ children }) => {\r\n    const [mvotemplatecompInfo, setMvotemplatecompInfo] = useState([]);\r\n\r\n    const updateMVOtempcompLists = (values) => {\r\n        setMvotemplatecompInfo(values);\r\n       // console.log(values, \"inside update  333\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(mvotemplatecompInfo, \"templatesContext\");\r\n    }, [mvotemplatecompInfo]);\r\n\r\n    return (\r\n        <MVOtemplatecompContext.Provider\r\n            value={{\r\n                mvotemplatecompInfo,\r\n                updateMVOtempcompLists,\r\n            }}\r\n        >\r\n            {children}\r\n        </MVOtemplatecompContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MVOtemplatecompContext;","import { useContext } from 'react';\r\nimport MVOtemplatecompContext from 'app/contexts/MvoTempCompContext';\r\n\r\nconst useMVOtempComp = () => useContext(MVOtemplatecompContext)\r\n\r\nexport default useMVOtempComp\r\n      ","import { createContext, useState, useEffect } from \"react\";\r\n\r\nconst PartTypeTemplateContext = createContext({\r\n  parttypetemplateinfo: [],\r\n  updateParttypeTemplate: () => [],\r\n});\r\n\r\nexport const ParttypetemplateProvider = ({ children }) => {\r\n  const [parttypetemplateinfo, setPartTypeTemplateinfo] = useState([]);\r\n\r\n  const updateParttypeTemplate = (values) => {\r\n    setPartTypeTemplateinfo(values);\r\n    //console.log(values, \"inside update context 2222\");\r\n  };\r\n\r\n  useEffect(() => {\r\n   // console.log(parttypetemplateinfo, \"templatesContext\");\r\n  }, [parttypetemplateinfo]);\r\n\r\n  return (\r\n    <PartTypeTemplateContext.Provider\r\n      value={{\r\n        parttypetemplateinfo,\r\n        updateParttypeTemplate,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartTypeTemplateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PartTypeTemplateContext;\r\n","import { useContext } from 'react';\r\nimport PartTypeTemplateContext from 'app/contexts/ParttypetemplateContext';\r\n\r\nconst usePartTypeTemplate = () => useContext(PartTypeTemplateContext)\r\n\r\nexport default usePartTypeTemplate\r\n      ","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst MVOallowedchangesContext = createContext({\r\n    mvoallowedchangesinfo: [],\r\n    updateMVOallowedchanges: () => [],\r\n})\r\n\r\nexport const MVOallowedchangesProvider = ({ children }) => {\r\n    const [mvoallowedchangesinfo, setmvoallowedchangesInfo] = useState([]);\r\n\r\n    const updateMVOallowedchanges = (values) => {\r\n        setmvoallowedchangesInfo(values);\r\n       // console.log(values, \"inside update context\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(mvoallowedchangesinfo, \"templatesContext\");\r\n    }, [mvoallowedchangesinfo]);\r\n\r\n    return (\r\n        <MVOallowedchangesContext.Provider\r\n            value={{\r\n                mvoallowedchangesinfo,\r\n                updateMVOallowedchanges,\r\n            }}\r\n        >\r\n            {children}\r\n        </MVOallowedchangesContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MVOallowedchangesContext;","import { useContext } from 'react';\r\n\r\nimport MVOallowedchangesContext from '../contexts/MVOallowedchangesContext'\r\n\r\nconst useMVoallowedchanges = () => useContext(MVOallowedchangesContext)\r\n\r\nexport default useMVoallowedchanges\r\n      ","import { createContext, useState, useEffect } from \"react\";\r\n\r\nconst SetTempCompContext = createContext({\r\n  comptempInfo: [],\r\n  updatecomptempList: () => [],\r\n});\r\n\r\nexport const SetTempCompProvider = ({ children }) => {\r\n  const [comptempInfo, setcomptempInfo] = useState([]);\r\n\r\n  const updatecomptempList = (values) => {\r\n    setcomptempInfo(values);\r\n   // console.log(values, \"inside update context\");\r\n  };\r\n\r\n  useEffect(() => {\r\n   // console.log(comptempInfo, \"templatesContext\");\r\n  }, [comptempInfo]);\r\n\r\n  return (\r\n    <SetTempCompContext.Provider\r\n      value={{\r\n        comptempInfo,\r\n        updatecomptempList,\r\n      }}\r\n    >\r\n      {children}\r\n    </SetTempCompContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SetTempCompContext;\r\n","import { useContext } from 'react';\r\n\r\nimport SetTempCompProvider from '../contexts/SetCompTempContext';\r\n\r\n\r\nconst useCompTemp = () => useContext(SetTempCompProvider)\r\n\r\nexport default useCompTemp\r\n      ","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst BUPlantContext = createContext({\r\n    buplantsInfo: [],\r\n    updatebuplantsInfo: () => [],\r\n})\r\n\r\nexport const BUPlantProvider = ({ children }) => {\r\n    const [buplantsInfo, setBuplantInfo] = useState([]);\r\n\r\n    const updatebuplantsInfo = (values) => {\r\n        setBuplantInfo(values);\r\n       // console.log(values, \"inside update context\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(buplantsInfo, \"templatesContext\");\r\n    }, [buplantsInfo]);\r\n\r\n    return (\r\n        <BUPlantContext.Provider\r\n            value={{\r\n                buplantsInfo,\r\n                updatebuplantsInfo,\r\n            }}\r\n        >\r\n            {children}\r\n        </BUPlantContext.Provider>\r\n    );\r\n};\r\n\r\nexport default BUPlantContext;","import { useContext } from 'react';\r\n\r\nimport BUPlantContext from 'app/contexts/BUPlantContext';\r\n\r\nconst useBUPlant = () => useContext(BUPlantContext)\r\n\r\nexport default useBUPlant\r\n      ","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst ExpenseMappingContext = createContext({\r\n    expensemapInfo: [],\r\n    updateExpenseMap: () => [],\r\n})\r\n\r\nexport const ExpenseMapProvider = ({ children }) => {\r\n    const [expensemapInfo, setExpensemapInfo] = useState([]);\r\n\r\n    const updateExpenseMap = (values) => {\r\n        setExpensemapInfo(values);\r\n       // console.log(values, \"inside update context\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(expensemapInfo, \"templatesContext\");\r\n    }, [expensemapInfo]);\r\n\r\n    return (\r\n        <ExpenseMappingContext.Provider\r\n            value={{\r\n                expensemapInfo,\r\n                updateExpenseMap,\r\n            }}\r\n        >\r\n            {children}\r\n        </ExpenseMappingContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ExpenseMappingContext;","import { useContext } from 'react';\r\n\r\nimport ExpenseMappingContext from 'app/contexts/ExpenseMapContext';\r\n\r\nconst useExpenseMap = () => useContext(ExpenseMappingContext)\r\n\r\nexport default useExpenseMap\r\n      ","import { SimpleCard } from \"app/components\"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport useMVOtempComp from \"app/hooks/useMVOtempComp\";\r\nimport usePartTypeTemplate from \"app/hooks/usePartTypeTemplate\";\r\nimport useMVoallowedchanges from \"app/hooks/useMVOallowedChanges\";\r\nimport useCompTemp from \"app/hooks/useCompTemp\";\r\nimport useBUPlant from \"app/hooks/useBUPlant\";\r\nimport useExpenseMap from \"app/hooks/useExpenseMap\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\nimport { sortAndReorderData } from \"app/utils/utils\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportMappingTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState([]);\r\n  const { templatesInfo, bussinessUnit, mappingTemplatesInfo } = useOracleSettings();\r\n  const { mvotemplatecompInfo } = useMVOtempComp();\r\n  const { parttypetemplateinfo } = usePartTypeTemplate();\r\n  const { mvoallowedchangesinfo } = useMVoallowedchanges();\r\n  const { comptempInfo } = useCompTemp();\r\n  const { buplantsInfo } = useBUPlant();\r\n  const { expensemapInfo } = useExpenseMap();\r\n  const [value, setValue] = useState('allData');\r\n  //const AllTempData = templatesInfo;\r\n  const filteredTempData = props.filterTemplateData;\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  let bu = localStorage.getItem('bussinessUnit');\r\n\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleExportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n  \r\n  function isObjectBlank(obj) { \r\n    return obj && Object.keys(obj).length === 0 && obj.constructor === Object; \r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (mappingTemplatesInfo) {\r\n      mappingTemplatesInfo.forEach(template => {\r\n        const details = template.details;\r\n        if (details) {\r\n          details.allowableOrgTemplates && details.allowableOrgTemplates.sort((a, b) => {\r\n            const key = a.ALLOWABLE_ORG_TEMPLATE ? 'ALLOWABLE_ORG_TEMPLATE' : 'org_allowed_template';\r\n            return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : 0;\r\n          });\r\n\r\n          details.MVO_TEMPLATES_TO && details.MVO_TEMPLATES_TO.sort((a, b) => {\r\n            return a.MVO_TEMPLATE_TO < b.MVO_TEMPLATE_TO ? -1 : a.MVO_TEMPLATE_TO > b.MVO_TEMPLATE_TO ? 1 : 0;\r\n          });\r\n\r\n          details.TEMPLATE_ORG_MODIFYING && details.TEMPLATE_ORG_MODIFYING.sort((a, b) => {\r\n            return a.TEMPLATE_ORG_MODIFYING < b.TEMPLATE_ORG_MODIFYING ? -1 : a.TEMPLATE_ORG_MODIFYING > b.TEMPLATE_ORG_MODIFYING ? 1 : 0;\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    let mappingType = props.MappingType;\r\n\r\n    if (mappingType === \"mvoallowedchanges\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'MVO_TEMPLATE_FROM';\r\n      props.sortInfo.columnName = 'MVO_TEMPLATE_FROM';\r\n    }\r\n    if (mappingType === \"mvoTemplateCompatibility\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'MVO_TEMPLATE_OPTION';\r\n      props.sortInfo.columnName = 'MVO_TEMPLATE_OPTION';\r\n    }\r\n    if (mappingType === \"parttypetotemplate\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'ENGG_ITEM_TYPE';\r\n      props.sortInfo.columnName = 'ENGG_ITEM_TYPE';\r\n    }\r\n    // if (mappingType === \"orgallowedvalues\" && isObjectBlank(props?.sortInfo)) {\r\n    //   props.sortInfo.dir = 1;\r\n    //   props.sortInfo.name = 'ALLOWABLE_ORG_TEMPLATES';\r\n    //   props.sortInfo.columnName = 'ALLOWABLE_ORG_TEMPLATES';\r\n    // }\r\n    if (mappingType === \"setcompatibletemplates\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'TEMPLATE_ORG_EXISTING';\r\n      props.sortInfo.columnName = 'TEMPLATE_ORG_EXISTING';\r\n    }\r\n    if (mappingType === \"expensemapping\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'EXPENSE_TEMPLATE';\r\n      props.sortInfo.columnName = 'EXPENSE_TEMPLATE';\r\n    }\r\n    let AllTempData = mappingType && mappingTemplatesInfo ? mappingTemplatesInfo.filter(\r\n      (item) => item.MappingType === mappingType) : [];\r\n    // switch (mappingType) {\r\n    //   case \"orgallowedvalues\":\r\n    //     AllTempData = templatesInfo\r\n    //   break;\r\n    //   case \"mvoTemplateCompatibility\":\r\n    //     AllTempData = mvotemplatecompInfo\r\n    //   break;\r\n    //   case \"parttypetotemplate\":\r\n    //     AllTempData = parttypetemplateinfo\r\n    //   break;\r\n    //   case \"mvoallowedchanges\":\r\n    //     AllTempData = mvoallowedchangesinfo\r\n    //   break;\r\n    //   case \"setcompatibletemplates\":\r\n    //     AllTempData = comptempInfo\r\n    //   break;\r\n    //   case \"buplantmapping\":\r\n    //     AllTempData = buplantsInfo\r\n    //   break;\r\n    //   case \"expensemapping\":\r\n    //     AllTempData = expensemapInfo\r\n    //   break;\r\n    //   default:  AllTempData = templatesInfo\r\n    //     break;\r\n    // } \r\n    if (value === 'allData' && props.sortInfo) {\r\n      AllTempData.sort((a, b) => {\r\n        const field = props.sortInfo.id || props.sortInfo.name || props.sortInfo.columnName;\r\n        const aValue = a[field]?.toLowerCase() || '';\r\n        const bValue = b[field]?.toLowerCase() || '';\r\n        if (aValue < bValue) {\r\n          return props.sortInfo.dir === 1 ? -1 : 1;\r\n        }\r\n        if (aValue > bValue) {\r\n          return props.sortInfo.dir === 1 ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    \r\n    }\r\n    let data = value === 'allData' ? AllTempData : props?.filterTemplateData;\r\n    data = data?.filter(item => item.BUID === bussinessUnit);\r\n\r\n    let exportData = data.map(item => {\r\n      if (mappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\") {\r\n        let res = {\r\n          \"Template Name\": item?.details?.ALLOWABLE_ORG_TEMPLATES,\r\n          \"Design Organization\": item.BUID,\r\n          \"Has MBOM\": item?.details?.Has_MBOM,\r\n          \"On MBOM\": item?.details?.On_MBOM,\r\n          \"EBOM Allowed\": item?.details?.EBOM_Allowed,\r\n          \"Optional\": item?.details?.Optional,\r\n          \"PO Org Check\": item?.details?.PO_Org_Exist_Check,\r\n          ...item?.details?.Plants\r\n        };\r\n        // // res = {...res, ...item?.details?.Plants}\r\n        //  console.log(res, 'newRes')\r\n        //  console.log(item?.details?.Plants, '...item?.details?.Plants')\r\n        //  //let sorted = {...res, ...item?.details?.Plants}\r\n        //  const addObjectResource = Object.assign(res, item?.details?.Plants);\r\n        //  console.log(addObjectResource, 'addObjectResource')\r\n        return res\r\n      } else if (mappingType === 'mvoTemplateCompatibility' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.allowableOrgTemplates?.map((item1, index) => {\r\n          let res = {\r\n            \"Template MVO\": index === 0 ? item.details.MVO_TEMPLATE_OPTION : null,\r\n            \"Org Allowed Templates\": item1.ALLOWABLE_ORG_TEMPLATE,\r\n            \"Status:\": item1.status,\r\n            \"Design Organization\": index===0?item.BUID:null,\r\n\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'parttypetotemplate' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.allowableOrgTemplates?.map((item1, index) => {\r\n          let res = {\r\n            \"Enovia Part Type\": index === 0 ? item.details.ENGG_ITEM_TYPE : null,\r\n            \"Org Allowed Templates\": item1.org_allowed_template,\r\n            \"Exclusive Use\": item1.exclusive_use,\r\n            \"Design Organization\": index===0?item.BUID:null,\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'mvoallowedchanges' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.MVO_TEMPLATES_TO?.map((item1, index) => {\r\n          let res = {\r\n            \"MVO Template - From\": index === 0 ? item.details.MVO_TEMPLATE_FROM : null,\r\n            \"MVO Template - To\": item1.MVO_TEMPLATE_TO,\r\n            \"Design Organization\": index===0?item.BUID:null,\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'setcompatibletemplates' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.TEMPLATE_ORG_MODIFYING?.map((item1, index) => {\r\n          let res = {\r\n            \"Template for Org(s) Existing\": index === 0 ? item.details.TEMPLATE_ORG_EXISTING : null,\r\n            \"Template for Org Modifying\": item1.TEMPLATE_ORG_MODIFYING,\r\n            \"Design Organization\": index===0?item.BUID:null\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'buplantmapping' && item.actionFlag !== \"Delete\") {\r\n        //console.log(item, 'inside export data')\r\n        let res = {\r\n          // \"Design Organization\": item.BUID,\r\n          // \"Plants\": item.details.PLANT,\r\n          // \"BOM/NOBOM\": item.details.BOM_STATUS,\r\n          // \"PO Org\": item.details.PO_ORG,\r\n          // \"RDO OU Org set\": item.details.RDU_OU_ORG_SET,\r\n          Entity: item.details.Entity,\r\n          ...Object.keys(item.details.PLANT).sort().reduce((acc, key) => {\r\n            acc[key] = item.details.PLANT[key];\r\n            return acc;\r\n          }, {})\r\n        };\r\n        return res\r\n      } else if (mappingType === 'expensemapping' && item.actionFlag !== \"Delete\") {\r\n        let res = {\r\n          \"Template\": item.details.EXPENSE_TEMPLATE,\r\n          \"Design Organization\": bussinessUnit,\r\n          ...item.details.EXPENSE_PLANTS\r\n        }\r\n        return res\r\n      }\r\n    })\r\n\r\nlet filterData = exportData.flat().filter(item => item !== null && item !== undefined);\r\n\r\nsetDataToExport(filterData);\r\n  }, [bussinessUnit,\r\n    templatesInfo,\r\n    mvotemplatecompInfo,\r\n    parttypetemplateinfo,\r\n    mvoallowedchangesinfo,\r\n    comptempInfo,\r\n    buplantsInfo,\r\n    expensemapInfo,\r\n    value,\r\n    mappingTemplatesInfo,\r\n    props.filterTemplateData,\r\n    props.sortInfo\r\n  ])\r\n\r\n  /* export template data start */\r\n  const exportTemplateHandle = () => {\r\n    //console.log(dataToExport, 'dataToExport dataToExport dataToExport')\r\n    if (dataToExport) {\r\n      let dataToPass = dataToExport;\r\n      if (props.title === \"RDO Plant Mapping\") {\r\n        dataToPass = sortAndReorderData(dataToExport);\r\n      }\r\n      if (props.title === \"Org Allowed Templates\") {\r\n        if (props.MappingType === \"orgallowedvalues\" && isObjectBlank(props?.sortInfo)) {\r\n          props.sortInfo.dir = 1;\r\n          props.sortInfo.name = 'ALLOWABLE_ORG_TEMPLATES';\r\n          props.sortInfo.columnName = 'ALLOWABLE_ORG_TEMPLATES';\r\n        }\r\n        if (props.sortInfo) {\r\n          dataToPass.sort((a, b) => {\r\n            let field = props.sortInfo.id || props.sortInfo.name || props.sortInfo.columnName;\r\n            // Check if the field is 'ALLOWABLE_ORG_TEMPLATES' and sort by 'Template Name'\r\n            if (field === 'ALLOWABLE_ORG_TEMPLATES') {\r\n              field = 'Template Name';\r\n            }\r\n            const aValue = a[field]?.toLowerCase() || '';\r\n            const bValue = b[field]?.toLowerCase() || '';\r\n            if (aValue < bValue) {\r\n              return props.sortInfo.dir === 1 ? -1 : 1;\r\n            }\r\n            if (aValue > bValue) {\r\n              return props.sortInfo.dir === 1 ? 1 : -1;\r\n            }\r\n            return 0;\r\n          });\r\n        }\r\n      }\r\n      tempService.exportTemplate({ 'data': dataToPass, 'sheet_name': props.title.substring(0, 26), 'bussiness_unit': bu }).then((response) => {\r\n        setExportResponse(response)\r\n        //console.log(response, ';resprespresp')\r\n        handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n      });\r\n    }\r\n    setExportTemplate(false)\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleExportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleExportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n          \r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportMappingTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport OrgAllowedDialog from \"./orgallowedDialog\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from \"../../../components/importMappingsDialog\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst OrgAllowedValuesList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [selectedPlants, setSelectedPlants] = useState([]);\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [orgallowedData, setorgallowedData] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const gridStyle = { minHeight: 550 };\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [selected, setSelected] = useState({});\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteTempMapping = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    handlesnackBarClick(\"Template Mapping deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  // ****************filters**********************\r\n\r\n  // *********org allowed values dialog methods**********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setSelectedPlants([]);\r\n    }\r\n\r\n    if (name === \"ALLOWABLE_ORG_TEMPLATES\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        'BUID': bussinessUnit,\r\n      });\r\n      setSelectedPlants([]);\r\n    }\r\n\r\n    // If the event comes from the multi-select dropdown\r\n    if (name === \"plants\") {\r\n      setSelectedPlants(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  }\r\n\r\n  const handleAddOrgAllowedValues = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) =>\r\n        template.templateName === orgAllowedForm.ALLOWABLE_ORG_TEMPLATES\r\n    );\r\n    const filteredPlants =\r\n      bussinessUnitLists?.find((plant) => plant.buName === orgAllowedForm.BUID)?.plants ||\r\n      [];\r\n\r\n    const resultPayload = {};\r\n\r\n    // Iterate over filteredPlants\r\n    filteredPlants.forEach((plant) => {\r\n      const plantName = plant.plantName;\r\n      resultPayload[plantName] = selectedPlants?.includes(plantName) ? \"Y\" : \"N\";\r\n    });\r\n    if (\r\n      !orgAllowedForm.ALLOWABLE_ORG_TEMPLATES ||\r\n      !orgAllowedForm.BUID ||\r\n      selectedPlants?.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        BUID: orgAllowedForm.BUID,\r\n        MappingType: \"orgallowedvalues\",\r\n        id: templateid[0].id + \"_\" + orgAllowedForm.BUID.trim(),\r\n        details: {\r\n          ALLOWABLE_ORG_TEMPLATES: orgAllowedForm.ALLOWABLE_ORG_TEMPLATES,\r\n          Has_MBOM: orgAllowedForm.Has_MBOM !== undefined ? orgAllowedForm.Has_MBOM : 'Y',\r\n          EBOM_Allowed: orgAllowedForm.EBOM_Allowed !== undefined ? orgAllowedForm.EBOM_Allowed : 'Y',\r\n          Optional: orgAllowedForm.Optional !== undefined ? orgAllowedForm.Optional : 'Y',\r\n          PO_Org_Exist_Check: orgAllowedForm.PO_Org_Exist_Check !== undefined ? orgAllowedForm.PO_Org_Exist_Check : 'Y',\r\n          On_MBOM: orgAllowedForm.On_MBOM !== undefined ? orgAllowedForm.On_MBOM : 'Y',\r\n          ALLOWABLE_ORG_TEMPLATES_ID: templateid[0].id,\r\n          Plants: resultPayload,\r\n        },\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              handlesnackBarClick(\"Org Allowed Values added successfully\", \"success\");\r\n            } else if (resp?.status === 'error') {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchDraftData();\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              handlesnackBarClick(\r\n                \"Org Allowed Values updated successfully\",\r\n                \"success\"\r\n              );\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setSelectedPlants([]);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedPlants([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditOrgAllowedValues = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n    for (const key in selectedRows[0]?.details?.Plants) {\r\n      if (selectedRows[0]?.details?.Plants[key] === \"Y\") {\r\n        selectedPlants.push(key);\r\n      }\r\n    }\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n\r\n  const prepareTableColumn = (orgallowedData) => {\r\n    let plantColumnsSet = new Set(); // Define it outside\r\n    if (orgallowedData && orgallowedData.length > 0) {\r\n      orgallowedData.forEach((dataItem) => {\r\n        const plants = dataItem.details?.Plants;\r\n        if (plants) {\r\n          const plantKeys = Object.keys(plants);\r\n          plantKeys.forEach((plant) => {\r\n            plantColumnsSet.add(plant);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const plantColumns = Array.from(plantColumnsSet).map((plant) => {\r\n      return {\r\n        name: plant,\r\n        header: plant,\r\n        defaultWidth: 100,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        ),\r\n      };\r\n    });\r\n    const columns = [\r\n      {\r\n        name: \"ALLOWABLE_ORG_TEMPLATES\",\r\n        defaultWidth: 250,\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.AllowableOrgTemplate}>Template Name</Tooltip>,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n\r\n      {\r\n        name: \"BUID\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.RDO}>Design Organization</Tooltip>,\r\n        defaultWidth: 150,\r\n      },\r\n      {\r\n        name: \"Has_MBOM\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.HasMBom}>Has MBOM</Tooltip>,\r\n        defaultWidth: 120,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"On_MBOM\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.OnMbom}>On MBOM</Tooltip>,\r\n        defaultWidth: 120,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"EBOM_Allowed\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.EBOM}>EBOM Allowed</Tooltip>,\r\n        defaultWidth: 100,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"Optional\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.Optional}>Optional</Tooltip>,\r\n        defaultWidth: 100,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"PO_Org_Exist_Check\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.PoCheck}>PO org Check</Tooltip>,\r\n        defaultWidth: 120,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      ...plantColumns,\r\n    ];\r\n\r\n    return columns;\r\n  }\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n\r\n  const sortedFilterOrgAllowedData = sortDataByKey(tableTempData, \"ALLOWABLE_ORG_TEMPLATES\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredOrgAllowedDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"orgallowedvalues\" });\r\n        if (filteredOrgAllowedDraftData.length > 0 && filteredOrgAllowedDraftData[0].MappingType === 'orgallowedvalues') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredOrgAllowedDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['TEMPLATE_MAPPING'] === obj2['id']) {\r\n                obj1.details.draftValue_ALLOWABLE_ORG_TEMPLATES = obj2.details.ALLOWABLE_ORG_TEMPLATES !== obj1.details.ALLOWABLE_ORG_TEMPLATES ? obj2.details.ALLOWABLE_ORG_TEMPLATES : null;\r\n                obj1.details.draftValue_Has_MBOM = obj2.details.Has_MBOM !== obj1.details.Has_MBOM ? obj2.details.Has_MBOM : null;\r\n                obj1.details.draftValue_On_MBOM = obj2.details.On_MBOM !== obj1.details.On_MBOM ? obj2.details.On_MBOM : null;\r\n                obj1.details.draftValue_EBOM_Allowed = obj2.details.EBOM_Allowed !== obj1.details.EBOM_Allowed ? obj2.details.EBOM_Allowed : null;\r\n                obj1.details.draftValue_Optional = obj2.details.Optional !== obj1.details.Optional ? obj2.details.Optional : null;\r\n                obj1.details.draftValue_PO_Org_Exist_Check = obj2.details.PO_Org_Exist_Check !== obj1.details.PO_Org_Exist_Check ? obj2.details.PO_Org_Exist_Check : null;\r\n                obj1.details.draft_Plants = {};\r\n                for (let key in obj1.details.Plants) {\r\n                  obj1.details.draft_Plants[key] = obj2.details.Plants[key] !== obj1.details.Plants[key] ? obj2.details.Plants[key] : null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setorgallowedData(finalTempMapList);\r\n        let data = finalTempMapList.map(item => {\r\n          item[\"ALLOWABLE_ORG_TEMPLATES\"] = item?.details?.draftValue_ALLOWABLE_ORG_TEMPLATES ? item?.details?.draftValue_ALLOWABLE_ORG_TEMPLATES : item?.details?.ALLOWABLE_ORG_TEMPLATES\r\n          item[\"Has_MBOM\"] = item?.details?.draftValue_Has_MBOM\r\n            ? `${item?.details?.draftValue_Has_MBOM} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.Has_MBOM}</span>`\r\n            : item?.details.Has_MBOM;\r\n          item[\"On_MBOM\"] = item?.details?.draftValue_On_MBOM ? `${item?.details?.draftValue_On_MBOM} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.On_MBOM}</span>`\r\n            : item?.details.On_MBOM;\r\n          item[\"EBOM_Allowed\"] = item?.details?.draftValue_EBOM_Allowed ? `${item?.details?.draftValue_EBOM_Allowed} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.EBOM_Allowed}</span>`\r\n            : item?.details.EBOM_Allowed;\r\n          item[\"Optional\"] = item?.details?.draftValue_Optional ? `${item?.details?.draftValue_Optional} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.Optional}</span>`\r\n            : item?.details.Optional;\r\n          item[\"PO_Org_Exist_Check\"] = item?.details?.draftValue_PO_Org_Exist_Check ? `${item?.details?.draftValue_PO_Org_Exist_Check} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.PO_Org_Exist_Check}</span>`\r\n            : item?.details.PO_Org_Exist_Check;\r\n\r\n          Object.keys(item?.details?.Plants).map(plant => {\r\n            item?.details?.draft_Plants ? item[plant] = item?.details?.draft_Plants[plant] ? `${item?.details?.draft_Plants[plant]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.Plants[plant]} <span>` : item?.details?.Plants[plant]\r\n              : item[plant] = item?.details?.Plants[plant]\r\n          }\r\n          )\r\n          return item\r\n        })\r\n        setUnSortTableTempData(finalTempMapList)\r\n        setTableTempData(data);\r\n        setIsLoading(false)\r\n      }, 500)\r\n    }\r\n    else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      if (result.data) {\r\n        let filterData = result.data.filter(element => element.BUID === BUID || element.BUID === 'Another Name');\r\n        setFilteredDraftTabledata(filterData);\r\n      } else {\r\n        setFilteredDraftTabledata([]);\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  // *********org allowed values dialog methods ends**********\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Org Allowed Templates\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    //setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item md={12} sm={12} xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditOrgAllowedValues}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                //onClick={handleDeleteOrgAllowedValues}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true);\r\n                }}\r\n                style={{ margin: \"0 10px 0 10px\" }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Org Allowed Templates\"}\r\n                MappingType={\"orgallowedvalues\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={prepareTableColumn(orgallowedData) || []}\r\n                  //dataSource={orgallowedData}\r\n                  dataSource={sortInfo === null ? unSortTableTempData : sortedFilterOrgAllowedData}\r\n                  rowHeight={null}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard >\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the OrgAllowedTemplates Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteTempMapping}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <OrgAllowedDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddOrgAllowedValues={handleAddOrgAllowedValues}\r\n        selectedPlants={selectedPlants}\r\n        isEdit={isEdit}\r\n        selectedBU={bussinessUnit}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import RDO Allowed Template Mappings\"}\r\n        MappingType={\"orgallowedvalues\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate}\r\n      />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default OrgAllowedValuesList;\r\n","import React from \"react\";\r\nimport OrgAllowedValuesList from \"./orgallowedList\";\r\nconst OrgAllowedValuesWrapper = () => {\r\n    return (\r\n        <OrgAllowedValuesList />\r\n    );\r\n};\r\nexport default OrgAllowedValuesWrapper;\r\n","import React from 'react';\r\nimport OrgAllowedValuesWrapper from \"./orgallowedWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst orgallowedroutes = [\r\n  {\r\n    path: \"/orgallowedList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <OrgAllowedValuesWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default orgallowedroutes;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport Constant from '../../../constant'\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { sortDataByKeyAllowableOrgTemplates } from \"app/utils/mcoUtils/commonUtils\";\r\nconst gridStyle = { minHeight: 248 }\r\nconst MVOtemplCompDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  orgAllowedTempList,\r\n  onSelectionChange,\r\n  selected,\r\n  filteredBUOptions,\r\n  setFilteredBUOptions,\r\n  formError,\r\n  RDO,\r\n  selectedRow,\r\n  handleStatusChange\r\n}) => {\r\n  const [tempData, setTempData] = useState([]);\r\n  const [selectedTemplateValues, setSelectedTemplateValues] = useState({});\r\n  sortDataByKeyAllowableOrgTemplates(tempData, \"ALLOWABLE_ORG_TEMPLATES\");\r\n\r\n  useEffect(() => {\r\n    if (orgAllowedForm?.BUID) {\r\n      let buoption = [orgAllowedForm?.BUID] || [];\r\n      setFilteredBUOptions([RDO])\r\n    } else {\r\n      setFilteredBUOptions([RDO])\r\n    }\r\n\r\n    if (orgAllowedTempList) {\r\n      const newTempList = orgAllowedTempList?.filter((fitem) => {\r\n        return fitem?.BUID === RDO;\r\n      })\r\n      if (selectedRow) {\r\n        newTempList.map(item => {\r\n          selectedRow?.details?.allowableOrgTemplates.map(item1 => {\r\n            if (item.details.ALLOWABLE_ORG_TEMPLATES === item1.ALLOWABLE_ORG_TEMPLATE) {\r\n              item.status = item1.status\r\n            }\r\n          })\r\n          return item;\r\n        })\r\n      }\r\n\r\n      let newdata = newTempList.map(item => {\r\n        const newitem = { ...item, ...item?.details }\r\n        return newitem\r\n      }) || [];\r\n\r\n      console.log(newdata, \"================table data\");\r\n\r\n      setTempData(newdata);\r\n    }\r\n  }, [orgAllowedTempList, orgAllowedForm]);\r\n\r\n  useEffect(() => {\r\n    console.log(formError, 'formError');\r\n  }, [])\r\n\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'number' },\r\n    {\r\n      name: \"ALLOWABLE_ORG_TEMPLATES\",\r\n      defaultWidth: 265,\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.AllowableOrgTemplate}>ALLOWABLE ORG TEMPLATES</Tooltip>,\r\n      render: ({ data }) => <div>{data?.details?.ALLOWABLE_ORG_TEMPLATES}</div>,\r\n    },\r\n    {\r\n      name: \"Has_MBOM\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.HasMBom}>Has MBOM</Tooltip>,\r\n      defaultWidth: 120,\r\n      render: ({ data }) => <div>{data?.details?.Has_MBOM}</div>,\r\n    },\r\n    {\r\n      name: \"EBOM_Allowed\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.EBOM}>EBOM</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.EBOM_Allowed}</div>,\r\n    },\r\n    {\r\n      name: \"Optional\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.Optional}>Optional</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.Optional}</div>,\r\n    },\r\n    {\r\n      name: \"PO_Org_Exist_Check\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.PoCheck}>PO Check</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.PO_Org_Exist_Check}</div>,\r\n    },\r\n    {\r\n      name: \"On_MBOM\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.OnMbom}>On MBOM</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.On_MBOM}</div>,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.status}>Status</Tooltip>,\r\n      defaultWidth: 200,\r\n      render: ({ data }) => {\r\n        return (\r\n          <div>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name={data?.details?.ALLOWABLE_ORG_TEMPLATES}\r\n                // defaultValue={data.status === undefined ? 'active' : data.status}\r\n                value={((selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES]) ? (selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES])?.trim() : \"active\")}\r\n                onChange={(e) => {\r\n                  const updatedStatus = {\r\n                    ...selectedTemplateValues,\r\n                    [e.target.name]: e.target.value,\r\n                  };\r\n                  setSelectedTemplateValues(updatedStatus);\r\n                  handleStatusChange(e);\r\n                }}\r\n              >\r\n                <FormControlLabel value=\"active\" control={<Radio />} label=\"Active\" />\r\n                <FormControlLabel value=\"disabled\" control={<Radio />} label=\"Disable\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>)\r\n      }\r\n    }\r\n  ];\r\n  const transformArray = (array) => {\r\n    let output = {};\r\n    array.forEach(item => {\r\n      output[item?.ALLOWABLE_ORG_TEMPLATE] = item?.status?.toLowerCase();\r\n    });\r\n    return output;\r\n  };\r\n  useEffect(() => {\r\n    if (selectedRow) {\r\n      const getSelTempVal = transformArray(selectedRow?.details?.allowableOrgTemplates);\r\n      setSelectedTemplateValues(getSelTempVal);\r\n    }\r\n  }, [selectedRow])\r\n  return (\r\n    <Dialog open={open}\r\n      fullWidth={true}\r\n      maxWidth='xl'\r\n    >\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit\r\n          ? \"Edit MVO Template Compatibility\"\r\n          : \"Add MVO Template Compatibility\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization:\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={RDO}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={true}\r\n              >\r\n                {filteredBUOptions?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {\r\n                (formError?.RDOError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.RDOError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Template MVO:\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                name=\"MVO_TEMPLATE_OPTION\"\r\n                fullWidth\r\n                value={orgAllowedForm.MVO_TEMPLATE_OPTION}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={isEdit}\r\n              >\r\n                {tempData?.map((option, index) => (\r\n                  <MenuItem key={index} value={option.details.ALLOWABLE_ORG_TEMPLATES}>\r\n                    {option.details.ALLOWABLE_ORG_TEMPLATES}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {\r\n                (formError?.templateError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.templateError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n              Org Allowed Templates:{\" \"}\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              {\r\n                (formError?.AllowableOrgTempError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.AllowableOrgTempError}</p>\r\n                </>) : (<></>)\r\n              }\r\n              <ReactDataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                selected={selected}\r\n                checkboxColumn={true}\r\n                onSelectionChange={onSelectionChange}\r\n                checkboxOnlyRowSelect={true}\r\n                style={{ ...gridStyle, height: '500px' }} // Add height here\r\n                columns={columns}\r\n                dataSource={tempData}\r\n                pagination\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MVOtemplCompDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport MVOtemplCompDialog from \"./mvoDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nimport { sortInsideRowData } from \"app/utils/utils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst MVOtemplateCompatibilityList = () => {\r\n  const {\r\n    refreshData,\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [mvotempcompData, setMVOtempCompData] = useState([]);\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [orgAllowedData, setorgAllowedData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selected, setSelected] = useState({});\r\n  const [formTemplateSelection, setFormTemplateSelection] = useState({});\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([]);\r\n  const [formError, setFormError] = useState({})\r\n  const [RDO, setRDO] = useState(\"\");\r\n  const [statusObject, setStatusObject] = useState({});\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"MVO_TEMPLATE_OPTION\",\r\n      header: <Tooltip title={Constant?.adminConstant?.mvoTemplateList?.tooltip?.TemplateOptionMVO}>Template MVO</Tooltip>,\r\n      defaultWidth: 250,\r\n      render: ({ data }) => <div>{data?.MVO_TEMPLATE_OPTION}</div>,\r\n    },\r\n    {\r\n      name: 'name',\r\n      header: <Tooltip title={Constant?.adminConstant?.mvoTemplateList?.tooltip?.AllowableOrgTemplate}>Org Allowed Templates - Status</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant?.adminConstant?.mvoTemplateList?.tooltip?.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n    },\r\n  ];\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...orgAllowedForm,\r\n      [name]: value,\r\n    };\r\n    setOrgAllowedForm(updatedForm);\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setRDO(value)\r\n      setFormError(prevState => {\r\n        const { RDOError, ...rest } = prevState;\r\n        return rest\r\n      });\r\n    }\r\n\r\n    if (name === \"MVO_TEMPLATE_OPTION\") {\r\n      setFormError(prevState => {\r\n        const { templateError, ...rest } = prevState;\r\n        return rest\r\n      });\r\n    }\r\n  };\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter((template) => template.templateName === orgAllowedForm.MVO_TEMPLATE_OPTION);\r\n    if (orgAllowedForm) {\r\n      if (RDO === undefined || RDO === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"RDOError\": \"Design Organization is required\",\r\n        }));\r\n      }\r\n      if (orgAllowedForm.MVO_TEMPLATE_OPTION === undefined || orgAllowedForm.MVO_TEMPLATE_OPTION === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"templateError\": \"Template Name is required\",\r\n        }));\r\n      }\r\n      let templatedata = [];\r\n      let new_formError = { ...formError };\r\n      delete new_formError[\"AllowableOrgTempError\"];\r\n\r\n      if (Object.keys(formTemplateSelection).length) {\r\n        templatedata = Object.values(formTemplateSelection).map((value) => value)\r\n        templatedata = templatedata.map(item => {\r\n          return {\r\n            ALLOWABLE_ORG_TEMPLATE: item.details.ALLOWABLE_ORG_TEMPLATES,\r\n            status: statusObject[item.details.ALLOWABLE_ORG_TEMPLATES] === undefined ? 'active' : statusObject[item.details.ALLOWABLE_ORG_TEMPLATES],\r\n            id: item.details.ALLOWABLE_ORG_TEMPLATES_ID,\r\n          }\r\n        })\r\n      } else {\r\n        new_formError[\"AllowableOrgTempError\"] = \"Please select at least one template\";\r\n      }\r\n\r\n      setFormError(new_formError);\r\n      if (Object.keys(new_formError).length) {\r\n        return;\r\n      } else {\r\n        const neworgallowedvalue = {\r\n          MappingType: \"mvoTemplateCompatibility\",\r\n          BUID: RDO,\r\n          details: {\r\n            MVO_TEMPLATE_OPTION: orgAllowedForm.MVO_TEMPLATE_OPTION,\r\n            MVO_TEMPLATE_OPTION_ID: templateid[0].id,\r\n            allowableOrgTemplates: templatedata,\r\n          },\r\n          id:\r\n            templateid[0].id +\r\n            \"_\" +\r\n            RDO.trim() +\r\n            \"_\" +\r\n            \"mvoTemplateCompatibility\",\r\n        };\r\n        if (isEdit === false) {\r\n          mvotempcompservice\r\n            .addnewTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp?.status === 'success') {\r\n                fetchData();\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                }, 200);\r\n                handlesnackBarClick(\"MVO template compatibility added successfully\", \"success\");\r\n              } else if (resp?.status === \"error\") {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        } else {\r\n          mvotempcompservice\r\n            .updateTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp.status === \"success\") {\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                  fetchDraftData();\r\n                  fetchData();\r\n                }, 200);\r\n                setIsEdit(false);\r\n                handlesnackBarClick(\"MVO template compatibility updated successfully\", \"success\");\r\n              } else if (resp?.status === \"error\") {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        }\r\n        handleorgAllowedDialogClose();\r\n      }\r\n    } else {\r\n      let orgtemperror = {}\r\n      if (Object.keys(formTemplateSelection).length === 0) {\r\n        orgtemperror = { \"AllowableOrgTempError\": \"Please select at least one template\" }\r\n      }\r\n      setFormError({\r\n        ...orgtemperror,\r\n        \"templateError\": \"Template Name is required\"\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm(\"\");\r\n    setOrgallowedaddDialog(true);\r\n    setRDO(bussinessUnit);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setFormTemplateSelection({});\r\n    setFormError({})\r\n    setIsEdit(false);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n    const thisVal = {\r\n      ...selectedDetails,\r\n      BUID,\r\n    }\r\n    setOrgAllowedForm(thisVal);\r\n    setRDO(BUID)\r\n    const selectedData = selectedRows[0]?.details?.allowableOrgTemplates.map((fitem) => {\r\n      const filterTableData = orgAllowedData?.filter(\r\n        (item) => (item.details.ALLOWABLE_ORG_TEMPLATES === fitem.ALLOWABLE_ORG_TEMPLATE &&\r\n          item.BUID === selectedRows[0].BUID)\r\n      );\r\n      return filterTableData;\r\n    }).flat();\r\n    let object = selectedData.reduce(\r\n      (obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n    setFormTemplateSelection(object);\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false);\r\n        handlesnackBarClick(result?.msg, result?.status);\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      // Filter the data based on MappingType\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"mvoTemplateCompatibility\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      setMVOtempCompData(finalTempMapList);\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"mvoTemplateCompatibility\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'mvoTemplateCompatibility') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_allowableOrgTemplates = obj2.details.allowableOrgTemplates;\r\n                const templateSet = new Set(obj2.details.allowableOrgTemplates.map(i => i.ALLOWABLE_ORG_TEMPLATE));\r\n                const missingFromArrObj1 = obj1.details.allowableOrgTemplates.filter(j => !templateSet.has(j.ALLOWABLE_ORG_TEMPLATE));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_allowableOrgTemplates.filter(item1 => \r\n                    !obj1.details.allowableOrgTemplates.some(item2 => \r\n                        item1.ALLOWABLE_ORG_TEMPLATE === item2.ALLOWABLE_ORG_TEMPLATE && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.allowableOrgTemplates,  ...obj1.details.newTemplateLists]\r\n                obj1.details.allowableOrgTemplates = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n      console.log('finalTempMapList', finalTempMapList);\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"MVO_TEMPLATE_OPTION\"] = item?.details?.MVO_TEMPLATE_OPTION\r\n        item['name'] = item?.details?.allowableOrgTemplates\r\n            .filter((plant, index, self) =>\r\n                index === self.findIndex(p => p.ALLOWABLE_ORG_TEMPLATE === plant.ALLOWABLE_ORG_TEMPLATE)\r\n            )\r\n            .map(plant => {\r\n                const deletedItems = item?.details?.deletedTemplateLists || [];\r\n    \r\n                const deletedText = deletedItems\r\n                    .map(draft_Plant => (\r\n                        plant.ALLOWABLE_ORG_TEMPLATE === draft_Plant.ALLOWABLE_ORG_TEMPLATE\r\n                            ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.ALLOWABLE_ORG_TEMPLATE}</span>`\r\n                            : ''\r\n                    ))\r\n                    .join(' '); // Join deleted items without any separator\r\n    \r\n                const statusText = plant.status ? plant.status.charAt(0).toUpperCase() + plant.status.slice(1) : '';\r\n    \r\n                return `<div>${plant.ALLOWABLE_ORG_TEMPLATE} - ${statusText} &nbsp;&nbsp; ${deletedText}</div>`;\r\n            })\r\n            .join(''); // Join all plant strings without a comma or any separator\r\n    \r\n        return item;\r\n    });\r\n      setUnSortTableTempData(finalTempMapList)\r\n      setTableTempData(data)\r\n      let buFilterData = mappingTemplatesInfo.filter((item) => {\r\n        return item.MappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\"\r\n      });\r\n\r\n      if (bussinessUnit) {\r\n        buFilterData = buFilterData?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        setorgAllowedData(buFilterData)\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n  const onFormSelectionChange = useCallback(({ selected }) => {\r\n    setFormTemplateSelection(selected);\r\n    setFormError(prevState => {\r\n      const { AllowableOrgTempError, ...rest } = prevState;\r\n      return rest\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  const handleStatusChange = (event) => {\r\n    const updatedStatus = {\r\n      ...statusObject,\r\n      [event.target.name]: event.target.value,\r\n    };\r\n    setStatusObject(updatedStatus);\r\n  }\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      height: \"auto !important\",\r\n      whiteSpace: \"normal\"\r\n    }\r\n  }\r\n\r\n  const [localStorageBusinessUnit, setLocalStorageBusinessUnit] = useState(bussinessUnit);\r\n  useEffect(() => {\r\n    setSelected({});\r\n    setSelectedRows([]);\r\n    updateBussinessUnit(bussinessUnit);\r\n    setRDO(bussinessUnit);\r\n    setSearchValue(\"\");\r\n    setSelectedRows([]);\r\n  }, [bussinessUnit]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n\r\n  const sortedByFirstColumnFilteredMVOTempData = sortDataByKey(tableTempData, 'MVO_TEMPLATE_OPTION');\r\n  const sortedFilteredMVOTempData = sortInsideRowData(sortedByFirstColumnFilteredMVOTempData);\r\n  const unSortRowSortTableTempData = sortInsideRowData(unSortTableTempData);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"MVO Template Compatibility\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  // onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setRDO(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                //onClick={handleDeleteMVOtempcomp}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"MVO Template Compatibility\"}\r\n                MappingType={\"mvoTemplateCompatibility\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog\r\n\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortRowSortTableTempData : sortedFilteredMVOTempData}\r\n                  rowHeight={\"auto\"}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  defaultLimit={100}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={() =>  gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the MVOTemplateCompatibility Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <MVOtemplCompDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        isEdit={isEdit}\r\n        onSelectionChange={onFormSelectionChange}\r\n        selected={formTemplateSelection}\r\n        orgAllowedTempList={orgAllowedData}\r\n        filteredBUOptions={filteredBUOptions}\r\n        setFilteredBUOptions={setFilteredBUOptions}\r\n        formError={formError}\r\n        RDO={RDO}\r\n        selectedRow={selectedRows[0]}\r\n        handleStatusChange={handleStatusChange}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import Template Compatibility Mappings\"}\r\n        MappingType={\"mvoTemplateCompatibility\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate}\r\n      />\r\n\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default MVOtemplateCompatibilityList;\r\n","import React from \"react\";\r\nimport MVOtemplateCompatibilityList from \"./mvotemplateList\";\r\nconst MVOtemplateCompatibilityWrapper = () => {\r\n    return (\r\n        <MVOtemplateCompatibilityList />\r\n    );\r\n};\r\n\r\nexport default MVOtemplateCompatibilityWrapper;\r\n","import React from 'react';\r\nimport MVOtemplateCompatibilityWrapper from \"./mvocompatibilityWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst mvocompatibilityRoutes = [\r\n  {\r\n    path: \"/mvotemplateList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <MVOtemplateCompatibilityWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default mvocompatibilityRoutes;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport Constant from '../../../constant'\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { sortDataByKeyAllowableOrgTemplates } from \"app/utils/mcoUtils/commonUtils\";\r\nconst gridStyle = { minHeight: 248 }\r\nconst PartTypeTemplateDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  orgAllowedTempList,\r\n  onSelectionChange,\r\n  selected,\r\n  filteredBUOptions,\r\n  setFilteredBUOptions,\r\n  formError,\r\n  RDO,\r\n  selectedRow,\r\n  handleStatusChange\r\n}) => {\r\n  const [tempData, setTempData] = useState([]);\r\n  const [selectedTemplateValues, setSelectedTemplateValues] = useState({});\r\n  sortDataByKeyAllowableOrgTemplates(tempData, \"ALLOWABLE_ORG_TEMPLATES\");\r\n  \r\n  useEffect(() => {\r\n    if (orgAllowedForm?.BUID) {\r\n      let buoption = [orgAllowedForm?.BUID] || [];\r\n      setFilteredBUOptions(buoption)\r\n    } else {\r\n      setFilteredBUOptions([RDO])\r\n    }\r\n\r\n    if (orgAllowedTempList) {\r\n      const newTempList = orgAllowedTempList?.filter((fitem) => {\r\n        return fitem?.BUID === RDO;\r\n      })\r\n      if (selectedRow) {\r\n        newTempList.map(item => {\r\n          selectedRow?.details?.allowableOrgTemplates.forEach(item1 => {\r\n            if (item.details.ALLOWABLE_ORG_TEMPLATES === item1.org_allowed_template) {\r\n              item.exclusive_use = item1.exclusive_use\r\n            }\r\n          })\r\n          return item;\r\n        })\r\n      }\r\n      setTempData(newTempList);\r\n    }\r\n  }, [orgAllowedTempList, orgAllowedForm]);\r\n\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'number' },\r\n    {\r\n      name: \"ALLOWABLE_ORG_TEMPLATES\",\r\n      defaultWidth: 280,\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.AllowableOrgTemplate}>ALLOWABLE ORG TEMPLATES</Tooltip>,\r\n      render: ({ data }) => <div>{data?.details?.ALLOWABLE_ORG_TEMPLATES}</div>,\r\n    },\r\n    {\r\n      name: \"Exclusive\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.status}>Exclusive Use</Tooltip>,\r\n      defaultWidth: 280,\r\n      render: ({ data }) => {\r\n        return (\r\n          <div>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name={data?.details?.ALLOWABLE_ORG_TEMPLATES}\r\n                // defaultValue={data.exclusive_use === undefined ? 'Yes' : data.exclusive_use}\r\n                value={((selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES]) ? selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES] : \"Yes\")}\r\n                onChange={(e) => {\r\n                  const updatedStatus = {\r\n                    ...selectedTemplateValues,\r\n                    [e.target.name]: e.target.value,\r\n                  };\r\n                  setSelectedTemplateValues(updatedStatus);\r\n                  handleStatusChange(e);\r\n                }}\r\n              >\r\n                <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  ];\r\n\r\n  const transformArray = (array) => {\r\n    let output = {};\r\n    array.forEach(item => {\r\n      output[item.org_allowed_template] = item.exclusive_use;\r\n    });\r\n    return output;\r\n  };\r\n  useEffect(() => {\r\n    if (selectedRow) {\r\n      const getSelTempVal = transformArray(selectedRow?.details?.allowableOrgTemplates);\r\n      setSelectedTemplateValues(getSelTempVal);\r\n    }\r\n  }, [selectedRow])\r\n  return (\r\n    <Dialog open={open}\r\n      fullWidth={true}\r\n      maxWidth='md'>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Part Type to Template \" : \"Add Part Type to Template\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization: {/* <span className={classes.spanRed}>*</span>:*/}\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={RDO}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={true}\r\n              >\r\n                {filteredBUOptions?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {\r\n                (formError?.RDOError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.RDOError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Enovia Part Type:\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <TextField\r\n                name=\"ENGG_ITEM_TYPE\"\r\n                value={orgAllowedForm.ENGG_ITEM_TYPE}\r\n                onChange={handleorgAllowedFormChange}\r\n                fullWidth\r\n                disabled={isEdit}\r\n                margin=\"normal\"\r\n              />\r\n              {\r\n                (formError?.templateError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.templateError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Org Allowed Templates:{\" \"}\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              {\r\n                (formError?.AllowableOrgTempError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.AllowableOrgTempError}</p>\r\n                </>) : (<></>)\r\n              }\r\n              {\r\n                (tempData?.length) ? (\r\n                  <ReactDataGrid\r\n                    idProperty=\"id\"\r\n                    showZebraRows={false}\r\n                    handle={ref => gridRef.current = ref ? ref.current : null}\r\n                    selected={selected}\r\n                    checkboxColumn={true}\r\n                    onSelectionChange={onSelectionChange}\r\n                    checkboxOnlyRowSelect={true}\r\n                    style={gridStyle}\r\n                    columns={columns}\r\n                    dataSource={tempData}\r\n                  />\r\n                ) : (null)\r\n              }\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PartTypeTemplateDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport PartTypeTemplateDialog from \"./parttypetemplateDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst PartTypeToTemplateList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const [orgAllowedData, setOrgAllowedData] = useState([]);\r\n  const [selectedPlants, setSelectedPlants] = useState([]);\r\n  const tempMapService = new TemplateMappingService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [selected, setSelected] = useState({});\r\n  const [formTemplateSelection, setFormTemplateSelection] = useState({});\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [formError, setFormError] = useState({})\r\n  const [RDO, setRDO] = useState(\"\");\r\n  const [statusObject, setStatusObject] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  //********Dialog code ********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    }\r\n    if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    }\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setSelectedPlants([]);\r\n    }\r\n\r\n    if (name === \"ENGG_ITEM_TYPE\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        BUID: \"\",\r\n      });\r\n      setFormError(prevState => {\r\n        const { templateError, ...rest } = prevState;\r\n        return rest\r\n      });\r\n      setSelectedPlants([]);\r\n    }\r\n    if (name === \"plants\") {\r\n      setSelectedPlants(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === newKey\r\n    );\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n    if (!newKey || !newValue) {\r\n      setKeyerror(\"Template and its status required\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      {\r\n        org_allowed_template: newKey,\r\n        exclusive_use: newValue,\r\n        id: templateid[0].id,\r\n      },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === orgAllowedForm.ENGG_ITEM_TYPE\r\n    )\r\n    if (orgAllowedForm) {\r\n      if (RDO === undefined || RDO === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"RDOError\": \"Design Organization is required\",\r\n        }));\r\n      }\r\n      if (orgAllowedForm.ENGG_ITEM_TYPE === undefined || orgAllowedForm.ENGG_ITEM_TYPE === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"templateError\": \"Template Name is required\",\r\n        }));\r\n      }\r\n      let templatedata = [];\r\n      let new_formError = { ...formError };\r\n      delete new_formError[\"AllowableOrgTempError\"];\r\n      if (Object.keys(formTemplateSelection).length) {\r\n        templatedata = Object.values(formTemplateSelection).map((value) => value)\r\n        templatedata = templatedata.map(item => {\r\n          return {\r\n            org_allowed_template: item.details.ALLOWABLE_ORG_TEMPLATES,\r\n            exclusive_use: statusObject[item.details.ALLOWABLE_ORG_TEMPLATES] === undefined ? 'Yes' : statusObject[item.details.ALLOWABLE_ORG_TEMPLATES],\r\n            id: item.details.ALLOWABLE_ORG_TEMPLATES_ID,\r\n          }\r\n        })\r\n      } else {\r\n        new_formError[\"AllowableOrgTempError\"] = \"Please select at least one template\";\r\n      }\r\n      setFormError(new_formError);\r\n      if (Object.keys(new_formError).length || Object.keys(formError).length) {\r\n        console.log(\"Resultant Payload:\", orgAllowedForm);\r\n        return;\r\n      } else {\r\n        const neworgallowedvalue = {\r\n          MappingType: \"parttypetotemplate\",\r\n          BUID: RDO,\r\n          details: {\r\n            ENGG_ITEM_TYPE: orgAllowedForm.ENGG_ITEM_TYPE,\r\n            ENOVIA_PART_TYPE_ID: templateid[0]?.id,\r\n            allowableOrgTemplates: templatedata,\r\n          },\r\n\r\n          id:\r\n            orgAllowedForm.ENGG_ITEM_TYPE +\r\n            \"_\" +\r\n            RDO.trim() +\r\n            \"_\" +\r\n            \"parttypetotemplate\",\r\n        };\r\n        if (isEdit === false) {\r\n          mvotempcompservice\r\n            .addnewTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp?.status === 'success') {\r\n                fetchData();\r\n                setSelected({})\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                }, 200);\r\n                handlesnackBarClick(\"Parttype to Template added successfully\", \"success\");\r\n              } else if (resp?.status === 'error') {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        } else {\r\n          mvotempcompservice\r\n            .updateTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp.status === \"success\") {\r\n                fetchDraftData();\r\n                fetchData();\r\n                setSelected({})\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                }, 200);\r\n                setIsEdit(false);\r\n                handlesnackBarClick(\r\n                  \"MVO template compatibility updated successfully\",\r\n                  \"success\"\r\n                );\r\n              } else if (resp?.status === \"error\") {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        }\r\n        handleorgAllowedDialogClose();\r\n      }\r\n    } else {\r\n      let orgtemperror = {}\r\n      if (Object.keys(formTemplateSelection).length === 0) {\r\n        orgtemperror = { \"AllowableOrgTempError\": \"Please select at least one template\" }\r\n      }\r\n      setFormError({\r\n        ...orgtemperror,\r\n        \"templateError\": \"Template Name is required\"\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedPlants([]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n    setValuesInputList([]);\r\n    setOrgallowedaddDialog(true);\r\n    setRDO(bussinessUnit);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedPlants([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setFormTemplateSelection({});\r\n    setFormError({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n  const handleEditPartTypeTotemplate = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n    setRDO(BUID)\r\n    const selectedData = selectedRows[0]?.details?.allowableOrgTemplates.map((fitem) => {\r\n      const filterTableData = orgAllowedData?.filter(\r\n        (item) => item.details.ALLOWABLE_ORG_TEMPLATES === fitem.org_allowed_template\r\n      );\r\n      return filterTableData;\r\n    }).flat();\r\n    let object = selectedData.reduce(\r\n      (obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n    setFormTemplateSelection(object);\r\n    setValuesInputList(selectedRows[0]?.details?.allowableOrgTemplates);\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleDeletePartTypeToTemplate = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n\r\n    handlesnackBarClick(\"Parttype to Template deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n  const sortedFilterTempData = sortDataByKey(tableTempData, \"ENGG_ITEM_TYPE\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"parttypetotemplate\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"parttypetotemplate\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'parttypetotemplate') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_allowableOrgTemplates = obj2.details.allowableOrgTemplates;\r\n                const templateSet = new Set(obj2.details.allowableOrgTemplates.map(i => i.org_allowed_template));\r\n                const missingFromArrObj1 = obj1.details.allowableOrgTemplates.filter(j => !templateSet.has(j.org_allowed_template));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_allowableOrgTemplates.filter(item1 => \r\n                    !obj1.details.allowableOrgTemplates.some(item2 => \r\n                        item1.org_allowed_template === item2.org_allowed_template && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.allowableOrgTemplates,  ...obj1.details.newTemplateLists]\r\n                obj1.details.allowableOrgTemplates = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"ENGG_ITEM_TYPE\"] = item?.details?.ENGG_ITEM_TYPE\r\n        item['org_allowed_template'] = item?.details?.allowableOrgTemplates\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.org_allowed_template === plant.org_allowed_template)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n\r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.org_allowed_template === draft_Plant.org_allowed_template\r\n                  ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.org_allowed_template}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); // Join deleted items without any separator\r\n\r\n            return `<div>${plant.org_allowed_template} - ${plant.exclusive_use.charAt(0).toUpperCase() + plant.exclusive_use.slice(1)} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); // Join all plant strings without a comma or any separator\r\n        return item\r\n      })\r\n      setTableTempData(data)\r\n      setUnSortTableTempData(finalTempMapList)\r\n      let buFilterData = mappingTemplatesInfo.filter((item) => {\r\n        return item.MappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\"\r\n      });\r\n      if (bussinessUnit) {\r\n        buFilterData = buFilterData?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        setOrgAllowedData(buFilterData)\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n  // *********org allowed values dialog methods ends**********\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n\r\n    {\r\n      name: \"ENGG_ITEM_TYPE\",\r\n      header: <Tooltip title={Constant.adminConstant.parttypetemplateList.tooltip.TemplateOptionsMVO}>Enovia Part Type</Tooltip>,\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>\r\n        {data?.ENGG_ITEM_TYPE}\r\n      </div>,\r\n    },\r\n    {\r\n      name: \"org_allowed_template\",\r\n      header: <Tooltip title={Constant.adminConstant.parttypetemplateList.tooltip.allowableOrgTemplatesExclusive}>Org Allowed Templates - Exclusive use</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      // render: ({ data }) =>\r\n      //   data?.details?.allowableOrgTemplates.map((template, index) => (\r\n      //     <div key={index}>\r\n      //       {template.org_allowed_template} - {template.exclusive_use}\r\n      //     </div>\r\n      //   )),\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.parttypetemplateList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n\r\n      defaultWidth: 50,\r\n    },\r\n  ];\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  const onFormSelectionChange = useCallback(({ selected }) => {\r\n    setFormTemplateSelection(selected);\r\n    setFormError(prevState => {\r\n      const { AllowableOrgTempError, ...rest } = prevState;\r\n      return rest\r\n    });\r\n  }, []);\r\n  const handleStatusChange = (event) => {\r\n    const updatedStatus = {\r\n      ...statusObject,\r\n      [event.target.name]: event.target.value,\r\n    };\r\n    setStatusObject(updatedStatus);\r\n  }\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      height: \"auto !important\",\r\n      whiteSpace: \"normal\"\r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Part Type to Template\" }]} />\r\n      </Box>\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditPartTypeTotemplate}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                //onClick={handleDeletePartTypeToTemplate}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Part Type To Template\"}\r\n                MappingType={\"parttypetotemplate\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  rowStyle={rowStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortTableTempData : sortedFilterTempData}\r\n                  rowHeight={\"auto\"}\r\n                  defaultLimit={100}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the PartTypeToTemplate Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeletePartTypeToTemplate}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <PartTypeTemplateDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        selectedPlants={selectedPlants}\r\n        isEdit={isEdit}\r\n        newKey={newKey}\r\n        newValue={newValue}\r\n        handleAddRow={handleAddRow}\r\n        handleDeleteRow={handleDeleteRow}\r\n        keyerror={keyerror}\r\n        valuesInputList={valuesInputList}\r\n        onSelectionChange={onFormSelectionChange}\r\n        selected={formTemplateSelection}\r\n        orgAllowedTempList={orgAllowedData}\r\n        filteredBUOptions={filteredBUOptions}\r\n        setFilteredBUOptions={setFilteredBUOptions}\r\n        formError={formError}\r\n        RDO={RDO}\r\n        selectedRow={selectedRows[0]}\r\n        handleStatusChange={handleStatusChange}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import Parttype To Template Mappings\"}\r\n        MappingType={\"parttypetotemplate\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default PartTypeToTemplateList;\r\n","import React from \"react\";\r\nimport PartTypeToTemplateList from \"./parttypeToTemplateList\";\r\nconst PartTypeToTemplateWrapper = () => {\r\n    return (\r\n        <PartTypeToTemplateList />\r\n    );\r\n};\r\nexport default PartTypeToTemplateWrapper;\r\n","import React from 'react';\r\nimport PartTypeToTemplateWrapper from \"./parttypetemplateWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst parttypetotemplateroutes = [\r\n  {\r\n    path: \"/parttypeToTemplateList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <PartTypeToTemplateWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\nexport default parttypetotemplateroutes;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button\r\n} from \"@mui/material\";\r\nconst MVOallowedchangesDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  mvotemplatesTo,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  templatesInfo,\r\n  selectedBU\r\n}) => {\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      console.log(tempData, 'tempData tempData tempData')\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo, orgAllowedForm.BUID]);\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit MVO Allowed Changes \" : \"Add MVO Allowed Changes\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n        <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Design Organization <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"DataType-select\"\r\n              name=\"BUID\"\r\n              fullWidth\r\n              value={selectedBU}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled\r\n            >\r\n              {filteredBUOptions?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              MVO Template - From <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              name=\"MVO_TEMPLATE_FROM\"\r\n              fullWidth\r\n              value={orgAllowedForm.MVO_TEMPLATE_FROM}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled={isEdit}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              MVO Template - To <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              multiple\r\n              name=\"MVO_TEMPLATE_TO\"\r\n              value={mvotemplatesTo}\r\n              onChange={handleorgAllowedFormChange}\r\n              renderValue={(selected) => selected?.join(\", \")}\r\n              MenuProps={{\r\n                sx: {\r\n                  \"&& .Mui-selected\": {\r\n                    backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MVOallowedchangesDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport MVOallowedchangesDialog from \"./mvoallowedchangesDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nimport { sortInsideRowData } from \"app/utils/utils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst MVOallowedchangesList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n\r\n  const [mvotemplatesTo, setMVOtemplatesTo] = useState([]);\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    })\r\n  };\r\n\r\n  //********Dialog code ********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    }\r\n    if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    }\r\n\r\n    if (name === \"BUID\") {\r\n      setMVOtemplatesTo([]);\r\n    }\r\n\r\n    if (name === \"MVO_TEMPLATE_FROM\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        BUID: \"\",\r\n      });\r\n      setMVOtemplatesTo([]);\r\n    }\r\n\r\n    // If the event comes from the multi-select dropdown\r\n    if (name === \"MVO_TEMPLATE_TO\") {\r\n      setMVOtemplatesTo(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === newKey\r\n    );\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n    if (!newKey || !newValue) {\r\n      setKeyerror(\"Template and its status required\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      {\r\n        ALLOWABLE_ORG_TEMPLATE: newKey,\r\n        status: newValue,\r\n        id: templateid[0]?.id,\r\n      },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === orgAllowedForm.MVO_TEMPLATE_FROM\r\n    );\r\n    let convertedMVO_TEMPLATES_TO = [];\r\n    // Iterate over filteredPlants\r\n    convertedMVO_TEMPLATES_TO = mvotemplatesTo?.map((item) => {\r\n      const template = templatesInfo.find((t) => t.templateName === item);\r\n      return {\r\n        id: template ? template.id : null,\r\n        MVO_TEMPLATE_TO: item,\r\n      };\r\n    });\r\n\r\n    if (\r\n      !orgAllowedForm.MVO_TEMPLATE_FROM ||\r\n      !orgAllowedForm.BUID ||\r\n      mvotemplatesTo?.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        MappingType: \"mvoallowedchanges\",\r\n        BUID: orgAllowedForm.BUID,\r\n        details: {\r\n          MVO_TEMPLATE_FROM: orgAllowedForm.MVO_TEMPLATE_FROM,\r\n          MVO_TEMPLATE_OPTION_ID: templateid[0]?.id,\r\n          MVO_TEMPLATES_TO: convertedMVO_TEMPLATES_TO,\r\n\r\n        },\r\n\r\n        id:\r\n          templateid[0]?.id +\r\n          \"_\" +\r\n          orgAllowedForm.BUID.trim() +\r\n          \"_\" +\r\n          \"mvoallowedchanges\",\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              handlesnackBarClick(\"MVO allowed changes added successfully\", \"success\");\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchDraftData();\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              handlesnackBarClick(\r\n                \"MVO allowed changes updated successfully\",\r\n                \"success\"\r\n              );\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, resp.status);\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setMVOtemplatesTo([]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n    setValuesInputList([]);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setMVOtemplatesTo([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n    for (const key in selectedRows[0]?.details?.MVO_TEMPLATES_TO) {\r\n      const template = selectedRows[0]?.details?.MVO_TEMPLATES_TO[key];\r\n      mvotemplatesTo.push(template?.MVO_TEMPLATE_TO);\r\n    }\r\n\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n\r\n    handlesnackBarClick(\"MVO allowed changes  deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n  const sortedFilterTempData = sortDataByKey(tableTempData, \"MVO_TEMPLATE_FROM\");\r\n  const unSortRowSortTableTempData = sortInsideRowData(unSortTableTempData);\r\n  const rowSortTableTempData = sortInsideRowData(sortedFilterTempData);\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      // Filter the data based on MappingType\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"mvoallowedchanges\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"mvoallowedchanges\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'mvoallowedchanges') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_MVO_TEMPLATES_TO = obj2.details.MVO_TEMPLATES_TO;\r\n                const templateSet = new Set(obj2.details.MVO_TEMPLATES_TO.map(i => i.MVO_TEMPLATE_TO));\r\n                const missingFromArrObj1 = obj1.details.MVO_TEMPLATES_TO.filter(j => !templateSet.has(j.MVO_TEMPLATE_TO));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_MVO_TEMPLATES_TO.filter(item1 => \r\n                    !obj1.details.MVO_TEMPLATES_TO.some(item2 => \r\n                        item1.MVO_TEMPLATE_TO === item2.MVO_TEMPLATE_TO && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.MVO_TEMPLATES_TO,  ...obj1.details.newTemplateLists]\r\n                obj1.details.MVO_TEMPLATES_TO = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      let unsortedData = [...finalTempMapList].map(item => {\r\n        item[\"MVO_TEMPLATE_FROM\"] = item?.details?.MVO_TEMPLATE_FROM;\r\n        item['MVO_TEMPLATE_TO'] = item?.details?.MVO_TEMPLATES_TO\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.MVO_TEMPLATE_TO === plant.MVO_TEMPLATE_TO)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n      \r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.MVO_TEMPLATE_TO === draft_Plant.MVO_TEMPLATE_TO\r\n                  ? `<span class=\"deleted-text\">${draft_Plant.MVO_TEMPLATE_TO}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); \r\n      \r\n            return `<div>${plant.MVO_TEMPLATE_TO} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); \r\n        return item;\r\n      });\r\n\r\n      let data = finalTempMapList\r\n      .sort((a, b) => a.details.MVO_TEMPLATE_FROM.localeCompare(b.details.MVO_TEMPLATE_FROM))\r\n      .map(item => {\r\n        item[\"MVO_TEMPLATE_FROM\"] = item?.details?.MVO_TEMPLATE_FROM\r\n        item['MVO_TEMPLATE_TO'] = item?.details?.MVO_TEMPLATES_TO\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.MVO_TEMPLATE_TO === plant.MVO_TEMPLATE_TO)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n\r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.MVO_TEMPLATE_TO === draft_Plant.MVO_TEMPLATE_TO\r\n                  ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.MVO_TEMPLATE_TO}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); // Join deleted items without any separator\r\n\r\n            return `<div>${plant.MVO_TEMPLATE_TO} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); // Join all plant strings without a comma or any separator\r\n        return item\r\n      })\r\n      setTimeout(() => {\r\n        setUnSortTableTempData(unsortedData); // Set the unsorted data\r\n        setTableTempData(data)\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n  // *********org allowed values dialog methods ends**********\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n    {\r\n      name: \"MVO_TEMPLATE_FROM\",\r\n      header: <Tooltip title={Constant.adminConstant.mvoallowedchangesList.tooltip.mvoTemplatesFrom}>MVO Template - From</Tooltip>,\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.MVO_TEMPLATE_FROM}</div>,\r\n    },\r\n    {\r\n      name: \"MVO_TEMPLATE_TO\",\r\n      header: <Tooltip title={Constant.adminConstant.mvoallowedchangesList.tooltip.mvoTemplatesTo}>MVO Template - To</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.mvoallowedchangesList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n\r\n      defaultWidth: 50,\r\n    }\r\n  ];\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      height: \"auto !important\",\r\n      whiteSpace: \"normal\"\r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"MVO Allowed Changes \" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"MVO Allowed Changes\"}\r\n                MappingType={\"mvoallowedchanges\"}\r\n                filterTemplateData={selectedRows} \r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog\r\n                />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortRowSortTableTempData : rowSortTableTempData}\r\n                  rowHeight={\"auto\"}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the MVOAllowedChanges Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <MVOallowedchangesDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        mvotemplatesTo={mvotemplatesTo}\r\n        isEdit={isEdit}\r\n        newKey={newKey}\r\n        newValue={newValue}\r\n        handleAddRow={handleAddRow}\r\n        handleDeleteRow={handleDeleteRow}\r\n        keyerror={keyerror}\r\n        valuesInputList={valuesInputList}\r\n        templatesInfo={templatesInfo}\r\n        selectedBU={bussinessUnit}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import MVO Allowed Changes Mappings\"}\r\n        MappingType={\"mvoallowedchanges\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default MVOallowedchangesList;\r\n","import React from \"react\";\r\nimport MVOallowedchangesList from \"./mvoallowedchangesList\";\r\nconst MVOallowedChangesWrapper = () => {\r\n    return (\r\n        <MVOallowedchangesList />\r\n    );\r\n};\r\nexport default MVOallowedChangesWrapper;\r\n","import React from 'react';\r\nimport MVOallowedChangesWrapper from \"./mvoallowedchangeWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst mvoallowedchangesroutes = [\r\n  {\r\n    path: \"/mvoallowedchangesList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <MVOallowedChangesWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default mvoallowedchangesroutes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\nconst SetCompTempDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  modifytempdata,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  templatesInfo,\r\n  selectedBU\r\n}) => {\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo, orgAllowedForm.BUID]);\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Set Compatible Templates\" : \"Add Set Compatible Templates\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Template For Org Existing <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              name=\"TEMPLATE_ORG_EXISTING\"\r\n              fullWidth\r\n              value={orgAllowedForm.TEMPLATE_ORG_EXISTING}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled={isEdit}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Design Organization <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"DataType-select\"\r\n              name=\"BUID\"\r\n              fullWidth\r\n              value={selectedBU}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled\r\n            >\r\n              {filteredBUOptions?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Template For Org Modifying <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              multiple\r\n              name=\"TEMPLATE_ORG_MODIFYING\"\r\n              value={modifytempdata}\r\n              onChange={handleorgAllowedFormChange}\r\n              renderValue={(selected) => selected?.join(\", \")}\r\n              MenuProps={{\r\n                sx: {\r\n                  \"&& .Mui-selected\": {\r\n                    backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SetCompTempDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\n\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport SetCompTempDialog from \"./setcomptempDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst SetCompTempList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const [comptempData, setComptempData] = useState([]);\r\n  const [modifytempdata, setModifytempData] = useState([]);\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n  const handleSearch = () => {\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  //********Dialog code ********\r\n  //console.log(mvoallowedchangesData, \"mvo dta\");\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    }\r\n    if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    }\r\n\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setComptempData([]);\r\n    }\r\n\r\n    if (name === \"TEMPLATE_ORG_EXISTING\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        BUID: \"\",\r\n      });\r\n      setComptempData([]);\r\n    }\r\n\r\n    // If the event comes from the multi-select dropdown\r\n    if (name === \"TEMPLATE_ORG_MODIFYING\") {\r\n      setModifytempData(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === newKey\r\n    );\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n    if (!newKey || !newValue) {\r\n      setKeyerror(\"Template and its status required\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      {\r\n        ALLOWABLE_ORG_TEMPLATE: newKey,\r\n        status: newValue,\r\n        id: templateid[0]?.id,\r\n      },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) =>\r\n        template.templateName === orgAllowedForm.TEMPLATE_ORG_EXISTING\r\n    );\r\n    let convertedTEMPLATE_ORG_MODIFYING = [];\r\n    // Iterate over filteredPlants\r\n    convertedTEMPLATE_ORG_MODIFYING = modifytempdata?.map((item) => {\r\n      const template = templatesInfo.find((t) => t.templateName === item);\r\n      return {\r\n        id: template ? template.id : null,\r\n        TEMPLATE_ORG_MODIFYING: item,\r\n      };\r\n    });\r\n\r\n    if (\r\n      !orgAllowedForm.TEMPLATE_ORG_EXISTING ||\r\n      !orgAllowedForm.BUID ||\r\n      modifytempdata?.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        MappingType: \"setcompatibletemplates\",\r\n        BUID: orgAllowedForm.BUID,\r\n        details: {\r\n          TEMPLATE_ORG_EXISTING: orgAllowedForm.TEMPLATE_ORG_EXISTING,\r\n          MVO_TEMPLATE_OPTION_ID: templateid[0]?.id,\r\n          TEMPLATE_ORG_MODIFYING: convertedTEMPLATE_ORG_MODIFYING,\r\n        },\r\n\r\n        id:\r\n          templateid[0]?.id +\r\n          \"_\" +\r\n          orgAllowedForm.BUID.trim() +\r\n          \"_\" +\r\n          \"setcompatibletemplates\",\r\n      };\r\n\r\n\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setSelected({})\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n\r\n              handlesnackBarClick(\"Set compatible template mapping added successfully\", \"success\");\r\n\r\n            } else if (resp?.status === 'error') {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              fetchDraftData();\r\n              fetchData();\r\n              setSelected({})\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n\r\n              }, 200);\r\n              setIsEdit(false);\r\n              handlesnackBarClick(\r\n                \"Set compatible template mapping updated successfully\",\r\n                \"success\"\r\n              );\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setComptempData([]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n    setValuesInputList([]);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setComptempData([]);\r\n    setModifytempData([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n    for (const key in selectedRows[0]?.details?.TEMPLATE_ORG_MODIFYING) {\r\n      const template = selectedRows[0]?.details?.TEMPLATE_ORG_MODIFYING[key];\r\n      modifytempdata.push(template?.TEMPLATE_ORG_MODIFYING);\r\n    }\r\n\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n\r\n    handlesnackBarClick(\r\n      \"Set compatible template mapping  deleted Successfully\",\r\n      \"success\"\r\n    );\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n\r\n  const sortedFilterSetCompTempData = sortDataByKey(tableTempData, \"TEMPLATE_ORG_EXISTING\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"setcompatibletemplates\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"setcompatibletemplates\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'setcompatibletemplates') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_TEMPLATE_ORG_MODIFYING = obj2.details.TEMPLATE_ORG_MODIFYING;\r\n                const templateSet = new Set(obj2.details.TEMPLATE_ORG_MODIFYING.map(i => i.TEMPLATE_ORG_MODIFYING));\r\n                const missingFromArrObj1 = obj1.details.TEMPLATE_ORG_MODIFYING.filter(j => !templateSet.has(j.TEMPLATE_ORG_MODIFYING));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_TEMPLATE_ORG_MODIFYING.filter(item1 => \r\n                    !obj1.details.TEMPLATE_ORG_MODIFYING.some(item2 => \r\n                        item1.TEMPLATE_ORG_MODIFYING === item2.TEMPLATE_ORG_MODIFYING && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.TEMPLATE_ORG_MODIFYING,  ...obj1.details.newTemplateLists]\r\n                obj1.details.TEMPLATE_ORG_MODIFYING = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"TEMPLATE_ORG_EXISTING\"] = item?.details?.TEMPLATE_ORG_EXISTING\r\n        item['TEMPLATE_ORG_MODIFYING'] = item?.details?.TEMPLATE_ORG_MODIFYING\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.TEMPLATE_ORG_MODIFYING === plant.TEMPLATE_ORG_MODIFYING)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n\r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.TEMPLATE_ORG_MODIFYING === draft_Plant.TEMPLATE_ORG_MODIFYING\r\n                  ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.TEMPLATE_ORG_MODIFYING}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); // Join deleted items without any separator\r\n\r\n            return `<div>${plant.TEMPLATE_ORG_MODIFYING} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); // Join all plant strings without a comma or any separator\r\n        return item\r\n      })\r\n      setTimeout(() => {\r\n        setUnSortTableTempData(finalTempMapList)\r\n        setTableTempData(data)\r\n        setIsLoading(false)\r\n      }, 500);\r\n\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n  // *********org allowed values dialog methods ends**********\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n\r\n    {\r\n      name: \"TEMPLATE_ORG_EXISTING\",\r\n      header: <Tooltip title={Constant.adminConstant.setComptempList.tooltip.TemplateForOrgExist}>Template for Org(s) Existing</Tooltip>,\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.TEMPLATE_ORG_EXISTING}</div>,\r\n    },\r\n    {\r\n      name: \"TEMPLATE_ORG_MODIFYING\",\r\n      header: <Tooltip title={Constant.adminConstant.setComptempList.tooltip.TemplateForOrgModify}>Template for Org Modifying</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.setComptempList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n    },\r\n  ];\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n        height: \"auto !important\",\r\n        whiteSpace: \"normal\"\r\n      \r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Set Compatible Templates\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                // onClick={handleDeleteMVOtempcomp}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Set Compatible Templates\"}\r\n                MappingType={\"setcompatibletemplates\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortTableTempData : sortedFilterSetCompTempData}\r\n                  rowHeight={\"auto\"}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the SetCompatibleTemplate Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <SetCompTempDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        comptempData={comptempData}\r\n        modifytempdata={modifytempdata}\r\n        isEdit={isEdit}\r\n        newKey={newKey}\r\n        newValue={newValue}\r\n        handleAddRow={handleAddRow}\r\n        handleDeleteRow={handleDeleteRow}\r\n        keyerror={keyerror}\r\n        valuesInputList={valuesInputList}\r\n        templatesInfo={templatesInfo}\r\n        selectedBU={bussinessUnit}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import Set Compatible Templates Mappings\"}\r\n        MappingType={\"setcompatibletemplates\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default SetCompTempList;\r\n","import React from \"react\";\r\nimport SetCompTempList from \"./setcomptempList\";\r\nconst SetCompTempWrapper = () => {\r\n    return (\r\n        <SetCompTempList />\r\n    );\r\n};\r\nexport default SetCompTempWrapper;\r\n","import React from 'react';\r\nimport SetCompTempWrapper from \"./SetCompTempWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst setcomptemproutes = [\r\n  {\r\n    path: \"/setcomptempList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <SetCompTempWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\nexport default setcomptemproutes;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport Constant from '../../../constant'\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { unionBy } from 'lodash';\r\nconst gridStyle = { minHeight: 248 }\r\n\r\nconst plantGroupOptions = [\r\n  { name: \"MASTER ORG\", value: \"MASTER ORG\" },\r\n  { name: \"Boulder OU\", value: \"Boulder OU\" },\r\n  { name: \"Nanjing OU\", value: \"Nanjing OU\" },\r\n  { name: \"EDE OU\", value: \"EDE OU\" },\r\n  { name: \"Cluj OU\", value: \"Cluj OU\" },\r\n  { name: \"Others\", value: \"Others\" }\r\n]\r\nconst bomStatusOptions = [\r\n  { name: \"BOM\", value: \"BOM\" },\r\n  { name: \"NO BOM\", value: \"NO BOM\" },\r\n];\r\nconst rduOptions = [\r\n  { name: \"YES\", value: \"YES\" },\r\n  { name: \"NO\", value: \"NO\" },\r\n];\r\nconst entitydropdown = [{ name: \"PlantGroup\", value: \"PlantGroup\" },\r\n{ name: \"BOM or NO BOM\", value: \"BOM or NO BOM\" },\r\n{ name: \"none or PO Org\", value: \"none or PO Org\" },\r\n{ name: \"RDO OU Org Set\", value: \"RDO OU Org Set\" }]\r\nconst BUPlantDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddBuPlant,\r\n  isEdit,\r\n  bussinessUnitLists,\r\n  bussinessUnit,\r\n  setPlantValueList,\r\n  plantValueList,\r\n  setDisplayOrder\r\n}) => {\r\n  const [filteredPlants, setFilteredPlants] = useState([]);\r\n  const [dropdownOptions, setDropdownOptions] = useState([]);\r\n  const [entityOption, setEntityOption] = useState([]);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    const Plants = (\r\n      bussinessUnitLists?.find((plant) => plant.buName === bussinessUnit)?.plants || []\r\n    ).concat({ plantName: \"None\", id: \"None\" });\r\n    let plist = Plants.map((item) => {\r\n      let res = {\r\n        \"name\": item.plantName,\r\n        \"value\": item.plantName\r\n      }\r\n      return res;\r\n    })\r\n    setFilteredPlants(plist)\r\n    let filteredPlantsLeftSide = bussinessUnitLists?.find((plant) => plant.buName === bussinessUnit)?.plants || [];\r\n    filteredPlantsLeftSide.map((plant, index) => {\r\n      plant.value = ''\r\n      plant.id = index\r\n      return Object.assign({}, plant)\r\n    })\r\n    filteredPlantsLeftSide = unionBy(plantValueList, filteredPlantsLeftSide, 'plantName');\r\n    setDataSource(filteredPlantsLeftSide)\r\n    setPlantValueList(filteredPlantsLeftSide)\r\n\r\n    console.log(plantValueList, 'plantValueList plantValueList')\r\n    setEntityOption(entitydropdown)\r\n    if (isEdit) {\r\n      console.log(orgAllowedForm.Entity, 'orgAllowedForm.Entity')\r\n      switch (orgAllowedForm.Entity) {\r\n        case \"PlantGroup\":\r\n          setDropdownOptions(plantGroupOptions)\r\n          setDisplayOrder(1)\r\n          break;\r\n        case \"BOM or NO BOM\":\r\n          setDropdownOptions(bomStatusOptions)\r\n          setDisplayOrder(2)\r\n          break;\r\n        case \"none or PO Org\":\r\n          setDropdownOptions(filteredPlants)\r\n          setDisplayOrder(3)\r\n          break;\r\n        case \"RDO OU Org Set\":\r\n          setDropdownOptions(rduOptions)\r\n          setDisplayOrder(4)\r\n          break;\r\n        default:\r\n          setDropdownOptions([])\r\n          break;\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [bussinessUnit, bussinessUnitLists, orgAllowedForm.Entity, isEdit]);\r\n  const plantColumn = {\r\n    name: 'value',\r\n    header: 'Value',\r\n    defaultFlex: 1, minWidth: 100,\r\n    rendersInlineEditor: true,\r\n    editable: true,\r\n    sortable: false,\r\n    render: ({ value }, { cellProps }) => {\r\n      let v = cellProps.editProps.inEdit\r\n        ? cellProps.editProps.value\r\n        : value;\r\n      return (\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          size=\"small\"\r\n          autoFocus={cellProps.inEdit}\r\n          name={cellProps.data.plantName}\r\n          value={v}\r\n          onBlur={e => {\r\n            cellProps.editProps.onComplete(e);\r\n          }}\r\n          onChange={handleChanges}\r\n          onFocus={() => cellProps.editProps.startEdit()}\r\n        >\r\n          {dropdownOptions?.map((option) => (\r\n            <MenuItem key={option.name} value={option.name}>\r\n              {option.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      );\r\n    }\r\n  };\r\n\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'string' },\r\n    {\r\n      name: \"plantName\",\r\n      defaultWidth: 180,\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.PlantName}>Plant Name</Tooltip>,\r\n      render: ({ data }) => <div>{data?.plantName}</div>,\r\n    },\r\n    plantColumn\r\n  ]\r\n\r\n  const handleChanges = (event) => {\r\n    const data = [...dataSource];\r\n    let newData = data.map(item => {\r\n      if (item.plantName === event.target.name) {\r\n        item.value = event.target.value\r\n      }\r\n      return Object.assign({}, item)\r\n    })\r\n    setDataSource(newData)\r\n    setPlantValueList(newData)\r\n  }\r\n  const handleEntityChange = (event) => {\r\n    handleorgAllowedFormChange(event)\r\n    let dropdownselect = event.target.value;\r\n    switch (dropdownselect) {\r\n      case \"PlantGroup\":\r\n        setDropdownOptions(plantGroupOptions)\r\n        setDisplayOrder(1)\r\n        break;\r\n      case \"BOM or NO BOM\":\r\n        setDropdownOptions(bomStatusOptions)\r\n        setDisplayOrder(2)\r\n        break;\r\n      case \"none or PO Org\":\r\n        setDropdownOptions(filteredPlants)\r\n        setDisplayOrder(3)\r\n        break;\r\n      case \"RDO OU Org Set\":\r\n        setDropdownOptions(rduOptions)\r\n        setDisplayOrder(4)\r\n        break;\r\n      default:\r\n        setDropdownOptions([])\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit RDO Plant Mapping \" : \"Add RDO Plant Mapping\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={bussinessUnit}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled\r\n              >\r\n                {bussinessUnitLists?.map((option) => (\r\n                  <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                    {option.businessUnit}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Entity <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                name=\"Entity\"\r\n                value={orgAllowedForm.Entity}\r\n                onChange={handleEntityChange}\r\n                disabled={isEdit}\r\n              >\r\n                {entityOption?.map((option) => (\r\n                  <MenuItem key={option.name} value={option.value}>\r\n                    {option.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Plant Values <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <ReactDataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                style={gridStyle}\r\n                columns={columns}\r\n                dataSource={dataSource}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddBuPlant}>{isEdit ? \"Update\" : \"Add\"}</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BUPlantDialog;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport BUPlantDialog from \"./buplantDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst BUPlantList = () => {\r\n  const {\r\n    refreshData,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [plantValueList, setPlantValueList] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [displayOrder, setDisplayOrder] = useState(0);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") { return; }\r\n    setsnackBar(false);\r\n  };\r\n\r\n  //********Dialog code ********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...orgAllowedForm,\r\n      [name]: value,\r\n    };\r\n    setOrgAllowedForm(updatedForm);\r\n  };\r\n\r\n  const handleAddBuPlant = () => {\r\n    if (!orgAllowedForm.Entity || !orgAllowedForm.BUID || plantValueList.length < 1) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n    const resultPlantPayload = plantValueList.reduce((acc, curr) => {\r\n      acc[curr.plantName] = curr.value;\r\n      return acc;\r\n    }, {});\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        MappingType: \"buplantmapping\",\r\n        BUID: orgAllowedForm.BUID,\r\n        details: {\r\n          Entity: orgAllowedForm.Entity,\r\n          displayOrder: displayOrder,\r\n          PLANT: resultPlantPayload\r\n        },\r\n        id: `${orgAllowedForm.Entity}_${orgAllowedForm.BUID}_buplantmapping`,\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              setSelected({})\r\n              handlesnackBarClick(\"RDO Plant Mapping added successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status);\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchDraftData();\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              setSelected({})\r\n              handlesnackBarClick(\"RDO Plant Mapping updated successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status);\r\n            }\r\n\r\n          });\r\n      }\r\n    }\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setPlantValueList([])\r\n    setIsEdit(false);\r\n    setSelectedRows([])\r\n    setSelected({})\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const Entity = { Entity: selectedRows[0]?.details?.Entity }\r\n    const BUID = { BUID: bussinessUnit }\r\n    setOrgAllowedForm({\r\n      ...BUID,\r\n      ...Entity\r\n    });\r\n    const plantValuesarr = Object.entries(\r\n      selectedRows[0]?.details?.PLANT\r\n    ).map(([key, value], index) => {\r\n      return { 'plantName': key, 'value': value, 'id': index };\r\n    });\r\n    setDisplayOrder(selectedRows[0]?.details?.displayOrder)\r\n    setPlantValueList(plantValuesarr)\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: result?.status,\r\n          desc: result?.msg,\r\n        })\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    fetchDraftData();\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n\r\n  const [plantColumns, setPlantColumns] = useState([]);\r\n  const [plantMappingList, setPlantMappingList] = useState([])\r\n\r\n  console.log(\"plantMappingList===\",plantMappingList)\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      // Filter the data based on MappingType\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"buplantmapping\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      finalTempMapList = finalTempMapList.sort((a, b) => a.details.displayOrder - b.details.displayOrder)\r\n      if (bussinessUnitLists) {\r\n        // Function to sort an object by its values\r\n        function sortObjectByValues(obj) {\r\n          if (obj) {\r\n            return Object.entries(obj).sort((a, b) => a[1].localeCompare(b[1])).reduce((acc, [key, value]) => {\r\n              acc[key] = value;\r\n              return acc;\r\n            }, {});\r\n          } else {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // Sorting the PLANT data by values\r\n        let sortedList = sortObjectByValues(finalTempMapList[0]?.details?.PLANT);\r\n        let plist = bussinessUnitLists.find(bu => bu.buName === bussinessUnit)?.plants || []\r\n        const newList = Object.keys(sortedList).map(plantName => {\r\n          const originalItem = plist.find(item => item?.plantName === plantName);\r\n          return { plantName, id: originalItem?.id, value: sortedList[plantName] };\r\n        });\r\n        /* mycode start */\r\n        const valueCounts = {};\r\n\r\n        // Iterate over the data to populate valueCounts\r\n        newList.forEach((item) => {\r\n          finalTempMapList.forEach((pdata) => {\r\n            if (pdata?.details?.Entity === \"PlantGroup\" && pdata.BUID === bussinessUnit) {\r\n              const plantValue = pdata?.details?.PLANT[item.plantName];\r\n              console.log(\"plantvalue===\",plantValue)\r\n              valueCounts[plantValue] = (valueCounts[plantValue] || 0) + 1;\r\n            }\r\n          });\r\n        });\r\n        let passedColumn = []\r\n        const headerColumns = newList.map((item) => {\r\n          return {\r\n            name: item.plantName,\r\n            header: item.plantName,\r\n            defaultWidth: 150,\r\n\r\n            // colspan: ({ data }) => {\r\n            //   if (data?.details?.Entity === \"PlantGroup\" && data.BUID === bussinessUnit) {\r\n            //     const plantValue = data?.details?.PLANT[item.plantName];\r\n            //     if (passedColumn?.includes(plantValue)) {\r\n            //       return 0\r\n            //     } else {\r\n            //       passedColumn.push(plantValue);\r\n            //       return valueCounts[plantValue];\r\n            //     }\r\n            //   }\r\n            //   return 1; // Default colspan is 1\r\n            // },\r\n            render: (params) => (\r\n              <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n            )\r\n          };\r\n        });\r\n\r\n        setPlantColumns(headerColumns);\r\n\r\n        /* mycode end */\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredRDODraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"buplantmapping\" });\r\n        if (filteredRDODraftData.length > 0 && filteredRDODraftData[0].MappingType === 'buplantmapping') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredRDODraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] == obj2['id']) {\r\n                // obj1.details.draft_Plants = {\r\n                //   \"MME\": obj2.details.PLANT.MME !== obj1.details.PLANT.MME ? obj2.details.PLANT.MME : null,\r\n                //   \"MMC\": obj2.details.PLANT.MMC !== obj1.details.PLANT.MMC ? obj2.details.PLANT.MMC : null,\r\n                //   \"MVO\": obj2.details.PLANT.MVO !== obj1.details.PLANT.MVO ? obj2.details.PLANT.MVO : null,\r\n                //   \"NA3\": obj2.details.PLANT.NA3 !== obj1.details.PLANT.NA3 ? obj2.details.PLANT.NA3 : null,\r\n                //   \"NAE\": obj2.details.PLANT.NAE !== obj1.details.PLANT.NAE ? obj2.details.PLANT.NAE : null,\r\n                //   \"CL2\": obj2.details.PLANT.CL2 !== obj1.details.PLANT.CL2 ? obj2.details.PLANT.CL2 : null,\r\n                //   \"PVE\": obj2.details.PLANT.PVE !== obj1.details.PLANT.PVE ? obj2.details.PLANT.PVE : null,\r\n                //   \"MMR\": obj2.details.PLANT.MMR !== obj1.details.PLANT.MMR ? obj2.details.PLANT.MMR : null,\r\n                //   \"MFS\": obj2.details.PLANT.MFS !== obj1.details.PLANT.MFS ? obj2.details.PLANT.MFS : null,\r\n                //   \"MET\": obj2.details.PLANT.MET !== obj1.details.PLANT.MET ? obj2.details.PLANT.MET : null,\r\n                //   \"MMB\": obj2.details.PLANT.MMB !== obj1.details.PLANT.MMB ? obj2.details.PLANT.MMB : null\r\n                // }\r\n                obj1.details.draft_Plants = {};\r\n                for (let key in obj1.details.PLANT) {\r\n                  console.log('obj2.details.PLANT[key]', obj2.details.PLANT[key]);\r\n                  console.log('obj1.details.PLANT[key]', obj1.details.PLANT[key]);\r\n                  obj1.details.draft_Plants[key] = obj2.details.PLANT[key].toLocaleLowerCase() !== obj1.details.PLANT[key].toLocaleLowerCase() ? obj2.details.PLANT[key] : null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      setTimeout(() => {\r\n        let data = finalTempMapList.map(item => {\r\n          // Object.keys(item?.details?.PLANT).map(plant => {\r\n          //   item?.details?.draft_Plants ? Object.keys(item?.details?.draft_Plants).map(draft_Plant =>{\r\n          //       //item[plant] = item?.details?.draft_Plants[draft_Plant] ? item?.details?.draft_Plants[draft_Plant] + ' ' + item?.details?.PLANT[plant] : item?.details?.PLANT[plant]\r\n          //       item[\"MME\"] = item?.details?.draft_Plants[\"MME\"] ? `${item?.details?.draft_Plants[\"MME\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MME\"]} <span>` : item?.details?.PLANT[\"MME\"]\r\n          //       item[\"MMC\"]= item?.details?.draft_Plants[\"MMC\"] ? `${item?.details?.draft_Plants[\"MMC\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MMC\"]} <span>` : item?.details?.PLANT[\"MMC\"]\r\n          //       item[\"MVO\"]= item?.details?.draft_Plants[\"MVO\"] ? `${item?.details?.draft_Plants[\"MVO\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MVO\"]} <span>` : item?.details?.PLANT[\"MVO\"]\r\n          //       item[\"NA3\"]= item?.details?.draft_Plants[\"NA3\"] ? `${item?.details?.draft_Plants[\"NA3\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"NA3\"]} <span>` : item?.details?.PLANT[\"NA3\"]\r\n          //       item[\"NAE\"]= item?.details?.draft_Plants[\"NAE\"] ? `${item?.details?.draft_Plants[\"NAE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"NAE\"]} <span>` : item?.details?.PLANT[\"NAE\"]\r\n          //       item[\"CL2\"]= item?.details?.draft_Plants[\"CL2\"] ? `${item?.details?.draft_Plants[\"CL2\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"CL2\"]} <span>` : item?.details?.PLANT[\"CL2\"]\r\n          //       item[\"PVE\"]= item?.details?.draft_Plants[\"PVE\"] ? `${item?.details?.draft_Plants[\"PVE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"PVE\"]} <span>` : item?.details?.PLANT[\"PVE\"]\r\n          //       item[\"MMR\"]= item?.details?.draft_Plants[\"MMR\"] ? `${item?.details?.draft_Plants[\"MMR\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MMR\"]} <span>` : item?.details?.PLANT[\"MMR\"]\r\n          //       item[\"MFS\"]= item?.details?.draft_Plants[\"MFS\"] ? `${item?.details?.draft_Plants[\"MFS\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MFS\"]} <span>` : item?.details?.PLANT[\"MFS\"]\r\n          //       item[\"MET\"]= item?.details?.draft_Plants[\"MET\"] ? `${item?.details?.draft_Plants[\"MET\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MET\"]} <span>` : item?.details?.PLANT[\"MET\"]\r\n          //       item[\"MMB\"]= item?.details?.draft_Plants[\"MMB\"] ? `${item?.details?.draft_Plants[\"MMB\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MMB\"]} <span>`: item?.details?.PLANT[\"MMB\"]\r\n          //     }) : item[plant] = item?.details?.PLANT[plant]          \r\n          //   }            \r\n          // )   \r\n          Object.keys(item?.details?.PLANT).map(plant => {\r\n            item?.details?.draft_Plants ? item[plant] = item?.details?.draft_Plants[plant] ? `${item?.details?.draft_Plants[plant]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[plant]} <span>` : item?.details?.PLANT[plant]\r\n              : item[plant] = item?.details?.PLANT[plant]\r\n          }\r\n          )\r\n          return item\r\n        })\r\n\r\n        setPlantMappingList(data)\r\n        setIsLoading(false)\r\n\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, updateBussinessUnit, bussinessUnitLists, filteredDraftTabledata]);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n    {\r\n      name: \"Entity\",\r\n      header: \"Entity\",\r\n      render: ({ data }) => <div><b>{data?.details?.Entity}</b></div>,\r\n      defaultWidth: 150,\r\n    },\r\n    ...plantColumns\r\n  ];\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      width: 'auto'\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"RDO Plant Mapping \" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                    setPlantValueList([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"RDO Plant Mapping\"}\r\n                MappingType={\"buplantmapping\"}\r\n                filterTemplateData={selectedRows}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  rowStyle={rowStyle}\r\n                  columns={columns}\r\n                  dataSource={plantMappingList}\r\n                  defaultLimit={100}\r\n                  // rowHeight={null}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  sortable={false}\r\n                  onSelectionChange={onSelectionChange}\r\n                  enableColumnAutosize={true}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <Snackbar\r\n        open={snackBar}\r\n        autoHideDuration={3000}\r\n        onClose={handlesnackbarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handlesnackbarClose}\r\n          severity={snackbarseverity}\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {snackbarmessage}\r\n        </Alert>\r\n      </Snackbar>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the RDO Plant Mapping(s) for Design Organization '}<b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <BUPlantDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddBuPlant={handleAddBuPlant}\r\n        isEdit={isEdit}\r\n        bussinessUnitLists={bussinessUnitLists}\r\n        bussinessUnit={bussinessUnit}\r\n        setPlantValueList={setPlantValueList}\r\n        plantValueList={plantValueList}\r\n        setDisplayOrder={setDisplayOrder}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import RDO Plant Mappings\"}\r\n        MappingType={\"buplantmapping\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BUPlantList;","import React from \"react\";\r\nimport BUPlantList from \"./buplantList\";\r\n\r\nconst BUPlantWrapper = () => {\r\n    return (\r\n        <BUPlantList />\r\n    );\r\n};\r\n\r\nexport default BUPlantWrapper;\r\n","import React from 'react';\r\nimport BUPlantWrapper from \"./buplantWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst buplantroutes = [\r\n  {\r\n    path: \"/buplantList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <BUPlantWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default buplantroutes;\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport Constant from '../../../constant'\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { unionBy } from 'lodash';\r\nconst gridStyle = { minHeight: 248 }\r\nconst ExpenseMappingDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddOrgAllowedValues,\r\n  isEdit,\r\n  templatesInfo,\r\n  bussinessUnitLists,\r\n  selectedBU,\r\n  setPlantValueList,\r\n  plantValueList\r\n}) => {\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [orgAllowedForm.EXPENSE_TEMPLATE, selectedBU]);\r\n  useEffect(() => {\r\n    let filteredPlants = bussinessUnitLists?.find((plant) => plant.buName === orgAllowedForm.BUID)?.plants || [];\r\n    filteredPlants.map((plant, index) => {\r\n      plant.expense = ''\r\n      plant.id = index\r\n      return Object.assign({}, plant)\r\n    })\r\n    filteredPlants = unionBy(plantValueList, filteredPlants, 'plantName');\r\n    setDataSource(filteredPlants)\r\n    setPlantValueList(filteredPlants)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [orgAllowedForm.BUID, selectedBU, bussinessUnitLists, setPlantValueList]);\r\n\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo]);\r\n\r\n  const Input = (props) => {\r\n    const inputRef = useRef(null);\r\n    useEffect(() => {\r\n      if (inputRef && inputRef.current) {\r\n        if (props.autoFocus) {\r\n          inputRef.current.focus();\r\n        }\r\n      }\r\n    }, [props.autoFocus]);\r\n\r\n    return <input {...props} inputRef={inputRef} />;\r\n  };\r\n  const expenseColumn = {\r\n    name: 'expense',\r\n    header: 'Expense',\r\n    defaultFlex: 1, minWidth: 100,\r\n    rendersInlineEditor: true,\r\n    editable: true,\r\n    render: ({ value }, { cellProps }) => {\r\n      let v = cellProps.editProps.inEdit\r\n        ? cellProps.editProps.value\r\n        : value;\r\n      return (\r\n        <Input\r\n          type=\"number\"\r\n          autoFocus={cellProps.inEdit}\r\n          value={v}\r\n          onBlur={e => {\r\n            cellProps.editProps.onComplete(e);\r\n          }}\r\n          onChange={cellProps.editProps.onChange}\r\n          onFocus={() => cellProps.editProps.startEdit()}\r\n          onKeyDown={e => {\r\n            if (e.key === 'Escape') {\r\n              cellProps.editProps.onCancel(e);\r\n            }\r\n            if (e.key === 'Enter') {\r\n              cellProps.editProps.onComplete(e);\r\n            }\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'string' },\r\n    {\r\n      name: \"plantName\",\r\n      defaultWidth: 180,\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.PlantName}>Plant Name</Tooltip>,\r\n      render: ({ data }) => <div>{data?.plantName}</div>,\r\n    },\r\n    expenseColumn\r\n  ]\r\n\r\n  const onEditComplete = useCallback(({ value, columnId, rowId }) => {\r\n    const data = [...dataSource];\r\n    data[rowId] = Object.assign({}, data[rowId], { [columnId]: value });\r\n    setDataSource(data);\r\n    setPlantValueList(data)\r\n  }, [dataSource, setPlantValueList])\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Expense Mapping \" : \"Add Expense Mapping\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={selectedBU}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled\r\n              >\r\n                {filteredBUOptions?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Template <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                name=\"EXPENSE_TEMPLATE\"\r\n                fullWidth\r\n                value={orgAllowedForm.EXPENSE_TEMPLATE}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={isEdit}\r\n              >\r\n                {templateOption?.map((option) => (\r\n                  <MenuItem key={option.templateName} value={option.templateName}>\r\n                    {option.templateName}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Plant Expenses <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <ReactDataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                style={gridStyle}\r\n                onEditComplete={onEditComplete}\r\n                columns={columns}\r\n                dataSource={dataSource}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddOrgAllowedValues}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExpenseMappingDialog;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport ExpenseMappingDialog from \"./expensemapDialog\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport ImportMappingsDialog from \"../../../components/importMappingsDialog\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst ExpenseMappingList = () => {\r\n  const {\r\n    refreshData,\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const gridStyle = { minHeight: 550 };\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [expensemapData, setExpenseMapData] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [plantValueList, setPlantValueList] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n\r\n  };\r\n  const handleSearch = () => {\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    })\r\n  };\r\n  let plantColumnsSet = new Set(); // Define it outside\r\n  if (expensemapData && expensemapData.length > 0) {\r\n    expensemapData.forEach((dataItem) => {\r\n      const plants = dataItem.details?.EXPENSE_PLANTS;\r\n      if (plants) {\r\n        const plantKeys = Object.keys(plants);\r\n\r\n        plantKeys.forEach((plant) => {\r\n          plantColumnsSet.add(plant);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  const plantColumns = Array.from(plantColumnsSet).map((plant) => {\r\n    return {\r\n      name: plant,\r\n      header: plant,\r\n      sortable: false,\r\n      defaultWidth: 90,\r\n      //render: ({ data }) => <div>{data?.details?.EXPENSE_PLANTS[plant]}</div>,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    };\r\n  });\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    // If it's a form field change\r\n    const updatedForm = {\r\n      ...orgAllowedForm,\r\n      [name]: value,\r\n    };\r\n    setOrgAllowedForm(updatedForm);\r\n  };\r\n  const handleAddOrgAllowedValues = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === orgAllowedForm.EXPENSE_TEMPLATE\r\n    );\r\n    const resultPlantPayload = plantValueList.reduce((acc, curr) => {\r\n      acc[curr.plantName] = Number(curr.expense) !== 0 && !isNaN(Number(curr.expense)) ? Number(curr.expense) : '';\r\n      return acc;\r\n    }, {});\r\n    if (\r\n      !orgAllowedForm.EXPENSE_TEMPLATE ||\r\n      !orgAllowedForm.BUID ||\r\n      plantValueList.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        BUID: orgAllowedForm.BUID,\r\n        MappingType: \"expensemapping\",\r\n        id:\r\n          templateid[0].id +\r\n          \"_\" +\r\n          orgAllowedForm.BUID.trim() +\r\n          \"_\" +\r\n          \"expensemapping\",\r\n        details: {\r\n          EXPENSE_TEMPLATE: orgAllowedForm.EXPENSE_TEMPLATE,\r\n          EXPENSE_TEMPLATE_ID: templateid[0].id,\r\n          EXPENSE_PLANTS: resultPlantPayload,\r\n        },\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              setSelected({})\r\n              handlesnackBarClick(\"Expense Mapping added successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status)\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              setSelected({})\r\n              handlesnackBarClick(\"Expense Mapping updated successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status)\r\n            }\r\n          });\r\n      }\r\n    }\r\n    handleorgAllowedDialogClose();\r\n  };\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setPlantValueList([])\r\n    setIsEdit(false);\r\n    setSelectedRows([])\r\n    setSelected({})\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditExpenseMapping = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = { BUID: selectedRows[0]?.BUID };\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      ...BUID,\r\n    });\r\n    const plantValuesarr = Object.entries(\r\n      selectedRows[0]?.details?.EXPENSE_PLANTS\r\n    ).map(([key, value], index) => {\r\n      return { 'plantName': key, 'expense': value, 'id': index };\r\n    });\r\n    sortDataByKey(plantValuesarr, \"plantName\");\r\n    setPlantValueList(plantValuesarr)\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n\r\n  const handleDeleteOrgAllowedValues = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    handlesnackBarClick(\"Expense Mapping deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"EXPENSE_TEMPLATE\",\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.EXPENSE_TEMPLATE}>Template</Tooltip>,\r\n      defaultWidth: 250,\r\n      // render: (params) => (\r\n      //   <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      // )\r\n      render: ({ data }) => <div>{data?.EXPENSE_TEMPLATE}</div>,\r\n    },\r\n\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultWidth: 150,\r\n    },\r\n\r\n    ...plantColumns,\r\n\r\n    // Add a custom column for checkboxes\r\n  ];\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true);\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n\r\n  const sortedFilterExpenseMappingData = sortDataByKey(tableTempData, \"EXPENSE_TEMPLATE\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"expensemapping\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredExpenseDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"expensemapping\" });\r\n        if (filteredExpenseDraftData.length > 0 && filteredExpenseDraftData[0].MappingType === 'expensemapping') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredExpenseDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draftValue_EXPENSE_TEMPLATE = obj2.details.EXPENSE_TEMPLATE !== obj1.details.EXPENSE_TEMPLATE ? obj2.details.EXPENSE_TEMPLATE : null;\r\n                obj1.details.draft_Plants = {};\r\n                for (let key in obj1.details.EXPENSE_PLANTS) {\r\n                  obj1.details.draft_Plants[key] = obj2.details.EXPENSE_PLANTS[key] !== obj1.details.EXPENSE_PLANTS[key] ? obj2.details.EXPENSE_PLANTS[key] : null;\r\n                }\r\n                // obj1.details.draft_Plants = {\r\n                //   \"MME\": obj2.details.EXPENSE_PLANTS.MME !== obj1.details.EXPENSE_PLANTS.MME ? obj2.details.EXPENSE_PLANTS.MME : null,\r\n                //   \"MMC\": obj2.details.EXPENSE_PLANTS.MMC !== obj1.details.EXPENSE_PLANTS.MMC ? obj2.details.EXPENSE_PLANTS.MMC : null,\r\n                //   \"MVO\": obj2.details.EXPENSE_PLANTS.MVO !== obj1.details.EXPENSE_PLANTS.MVO ? obj2.details.EXPENSE_PLANTS.MVO : null,\r\n                //   \"NA3\": obj2.details.EXPENSE_PLANTS.NA3 !== obj1.details.EXPENSE_PLANTS.NA3 ? obj2.details.EXPENSE_PLANTS.NA3 : null,\r\n                //   \"NAE\": obj2.details.EXPENSE_PLANTS.NAE !== obj1.details.EXPENSE_PLANTS.NAE ? obj2.details.EXPENSE_PLANTS.NAE : null,\r\n                //   \"CL2\": obj2.details.EXPENSE_PLANTS.CL2 !== obj1.details.EXPENSE_PLANTS.CL2 ? obj2.details.EXPENSE_PLANTS.CL2 : null,\r\n                //   \"PVE\": obj2.details.EXPENSE_PLANTS.PVE !== obj1.details.EXPENSE_PLANTS.PVE ? obj2.details.EXPENSE_PLANTS.PVE : null,\r\n                //   \"MMR\": obj2.details.EXPENSE_PLANTS.MMR !== obj1.details.EXPENSE_PLANTS.MMR ? obj2.details.EXPENSE_PLANTS.MMR : null,\r\n                //   \"MFS\": obj2.details.EXPENSE_PLANTS.MFS !== obj1.details.EXPENSE_PLANTS.MFS ? obj2.details.EXPENSE_PLANTS.MFS : null,\r\n                //   \"MET\": obj2.details.EXPENSE_PLANTS.MET !== obj1.details.EXPENSE_PLANTS.MET ? obj2.details.EXPENSE_PLANTS.MET : null,\r\n                //   \"MMB\": obj2.details.EXPENSE_PLANTS.MMB !== obj1.details.EXPENSE_PLANTS.MMB ? obj2.details.EXPENSE_PLANTS.MMB : null\r\n                // }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n      setExpenseMapData(finalTempMapList);\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"EXPENSE_TEMPLATE\"] = item?.details?.EXPENSE_TEMPLATE;\r\n        // Object.keys(item?.details?.EXPENSE_PLANTS).map(plant => {\r\n        //   item?.details?.draft_Plants ? Object.keys(item?.details?.draft_Plants).map(draft_Plant =>{\r\n        //       item[\"MME\"] = item?.details?.draft_Plants[\"MME\"] ? `${item?.details?.draft_Plants[\"MME\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MME\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MME\"]\r\n        //       item[\"MMC\"]= item?.details?.draft_Plants[\"MMC\"] ? `${item?.details?.draft_Plants[\"MMC\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MMC\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MMC\"]\r\n        //       item[\"MVO\"]= item?.details?.draft_Plants[\"MVO\"] ? `${item?.details?.draft_Plants[\"MVO\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MVO\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MVO\"]\r\n        //       item[\"NA3\"]= item?.details?.draft_Plants[\"NA3\"] ? `${item?.details?.draft_Plants[\"NA3\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"NA3\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"NA3\"]\r\n        //       item[\"NAE\"]= item?.details?.draft_Plants[\"NAE\"] ? `${item?.details?.draft_Plants[\"NAE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"NAE\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"NAE\"]\r\n        //       item[\"CL2\"]= item?.details?.draft_Plants[\"CL2\"] ? `${item?.details?.draft_Plants[\"CL2\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"CL2\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"CL2\"]\r\n        //       item[\"PVE\"]= item?.details?.draft_Plants[\"PVE\"] ? `${item?.details?.draft_Plants[\"PVE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"PVE\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"PVE\"]\r\n        //       item[\"MMR\"]= item?.details?.draft_Plants[\"MMR\"] ? `${item?.details?.draft_Plants[\"MMR\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MMR\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MMR\"]\r\n        //       item[\"MFS\"]= item?.details?.draft_Plants[\"MFS\"] ? `${item?.details?.draft_Plants[\"MFS\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MFS\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MFS\"]\r\n        //       item[\"MET\"]= item?.details?.draft_Plants[\"MET\"] ? `${item?.details?.draft_Plants[\"MET\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MET\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MET\"]\r\n        //       item[\"MMB\"]= item?.details?.draft_Plants[\"MMB\"] ? `${item?.details?.draft_Plants[\"MMB\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MMB\"]} <span>`: item?.details?.EXPENSE_PLANTS[\"MMB\"]\r\n        //     }) : item[plant] = item?.details?.EXPENSE_PLANTS[plant]          \r\n        //   }            \r\n        // )\r\n        Object.keys(item?.details?.EXPENSE_PLANTS).map(plant => {\r\n          item?.details?.draft_Plants ? item[plant] = item?.details?.draft_Plants[plant] ? `${item?.details?.draft_Plants[plant]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[plant]} <span>` : item?.details?.EXPENSE_PLANTS[plant]\r\n            : item[plant] = item?.details?.EXPENSE_PLANTS[plant]\r\n        }\r\n        )\r\n        return item\r\n      })\r\n      setTimeout(() => {\r\n        setTableTempData(data);\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, updateBussinessUnit, filteredDraftTabledata]);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = [];\r\n      if (result.data) {\r\n        filterData = result.data.filter(element => element.BUID === BUID);\r\n      }     \r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n    }\r\n  }\r\n  \r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Expense Mapping\" }]} />\r\n      </Box>\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditExpenseMapping}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true);\r\n                }}\r\n                style={{ margin: \"0 10px 0 10px\" }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Expense Mapping\"}\r\n                MappingType={\"expensemapping\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog \r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? expensemapData : sortedFilterExpenseMappingData}\r\n                  rowHeight={null}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the ExpenseAcctByTemplateAndPlant Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteOrgAllowedValues}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <ExpenseMappingDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddOrgAllowedValues={handleAddOrgAllowedValues}\r\n        isEdit={isEdit}\r\n        templatesInfo={templatesInfo}\r\n        bussinessUnitLists={bussinessUnitLists}\r\n        selectedBU={bussinessUnit}\r\n        setPlantValueList={setPlantValueList}\r\n        plantValueList={plantValueList}\r\n      />\r\n      <ImportMappingsDialog\r\n        title={\"Import Expense Mappings\"}\r\n        MappingType={\"expensemapping\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate}\r\n      />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default ExpenseMappingList;\r\n","import React from \"react\";\r\nimport ExpenseMappingList from \"./expensemapList\";\r\n\r\nconst ExpenseMapWrapper = () => {\r\n  return (\r\n    <ExpenseMappingList />\r\n  );\r\n};\r\n\r\nexport default ExpenseMapWrapper;\r\n","import React from 'react';\r\nimport ExpenseMapWrapper from \"./expensemapWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst expensemaproutes = [\r\n  {\r\n    path: \"/expensemapList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <ExpenseMapWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default expensemaproutes;\r\n","// import { useEffect, useState } from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport {\r\n    Grid,\r\n} from \"@mui/material\";\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    description: yup\r\n        .string()\r\n        .required('This field is required')\r\n        .max(500, 'Input should not exceed 500 characters'),\r\n});\r\n\r\n\r\nconst CommitChangesForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ description: null }}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            onSubmit={(values, { resetForm }) => {\r\n                // handle form submission here\r\n                props.saveApplyChanges(values);\r\n                resetForm();\r\n            }}\r\n        >\r\n            {({\r\n                errors,\r\n                touched,\r\n                submitForm,\r\n                setFieldValue,\r\n                setErrors,\r\n                setTouched\r\n            }) => {\r\n                const closeDialogBox = () => {\r\n                    props?.setApplyChangesDialog(false);\r\n                    setErrors({});\r\n                    setTouched({}, false);\r\n                }\r\n                return (\r\n                    <Form>\r\n                        <Dialog\r\n                            open={props?.applyChangesDialog}\r\n                            maxWidth={'sm'}\r\n                            fullWidth={true}\r\n                        >\r\n                            <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                                Do you want to apply your changes?\r\n                            </DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n\r\n                                    <Grid container spacing={1} alignItems=\"center\">\r\n                                        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n                                            Comments<span style={{ color: \"#FF3D57\" }}>*</span>:\r\n                                        </Grid>\r\n                                        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n                                            <Field as=\"textarea\" id=\"description\" name=\"description\" rows=\"10\" style={{ width: \"100%\", borderRadius: \"10px\" }} />\r\n                                            <ErrorMessage name=\"description\" component=\"div\" style={{ color: \"red\" }} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={closeDialogBox}>Cancel</Button>\r\n                                <Button onClick={submitForm} >Apply</Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik >\r\n    )\r\n}\r\n\r\nexport default CommitChangesForm;","import { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  // styled,\r\n  Grid,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\n\r\nimport { styled } from '@mui/system';\r\n\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\n\r\nimport CustomSelect from \"./../../components/CustomSelect\";\r\nimport { BUOptions } from \"../adminConfig/common\";\r\nimport CommitChangesForm from \"./commitChangesForm\";\r\n\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst DraftChangesList = () => {\r\n  const { bussinessUnit, updateBussinessUnit, updateMappingTemplatesInfo } = useOracleSettings();\r\n\r\n  const [tabledata, setTabledata] = useState([]);\r\n  const [filteredTabledata, setFilteredTabledata] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [applyChangesDialog, setApplyChangesDialog] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n  const historyManagementService = new HistoryManagementService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const columns = [\r\n    {\r\n      name: \"userName\",\r\n      header: \"User Name\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n    },\r\n    {\r\n      name: \"MappingType\",\r\n      header: \"Mapping Type\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.MappingType}</div>,\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: \"Design Organization\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.BUID}</div>,\r\n    },\r\n    // {\r\n    //   name: \"modifiedTemplate\",\r\n    //   header: \"Modified Templates\",\r\n    //   defaultFlex: 1,\r\n    //   render: ({ data }) => <div>{data?.modifiedTemplate.join(\", \")}</div>,\r\n    // },\r\n    {\r\n      name: \"modifiedDateTime\",\r\n      header: \"Modified Date & Time \",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{(data?.modifiedDateTime) ? data?.modifiedDateTime : \"-\"}</div>,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      header: \"Action\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => {\r\n        return (\r\n          <div>\r\n            <Button variant=\"contained\"\r\n              style={{ margin: \"0px 10px 0px 0px\" }}\r\n              onClick={() => {\r\n                setSelectedRows([data]);\r\n                setApplyChangesDialog(true);\r\n              }}\r\n            >\r\n              Apply\r\n            </Button>\r\n            <Button variant=\"contained\"\r\n              onClick={() => {\r\n                discardDraftChanges(data.id);\r\n              }}>\r\n              Discard\r\n            </Button>\r\n          </div>\r\n        )\r\n      }\r\n    },\r\n  ];\r\n\r\n  const handleSearch = () => {\r\n    let filteredData = [];\r\n    // input box filter\r\n    if (searchValue === \"\") {\r\n      filteredData = tabledata;\r\n    } else {\r\n      filteredData = tabledata?.filter((thisItem) => {\r\n        const thisRowData = Object.values(thisItem).join().toLowerCase();\r\n        return thisRowData.includes(searchValue.toLowerCase());\r\n      });\r\n    }\r\n\r\n    // dropdown filter\r\n    filteredData = filteredData?.filter((thisItem) => {\r\n      const thisRowData = Object.values(thisItem).join().toLowerCase();\r\n      return thisRowData.includes(bussinessUnit.toLowerCase());\r\n    });\r\n\r\n    setFilteredTabledata(filteredData);\r\n  };\r\n\r\n  const handleRowClick = (rowData) => {\r\n    const isSelected = selectedRows.some((row) => row.id === rowData.id);\r\n\r\n    if (isSelected) {\r\n      setSelectedRows((prevSelectedRows) =>\r\n        prevSelectedRows.filter((row) => row.id !== rowData.id)\r\n      );\r\n    } else {\r\n      setSelectedRows([rowData]);\r\n    }\r\n  };\r\n\r\n  const updateTemplateMappingData = () => {\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      //setIsLoading(false);\r\n    });\r\n  }\r\n  const saveApplyChanges = (values) => {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      if (!selectedRows.length) {\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: \"error\",\r\n          desc: \"Please select row.\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      const payload = {\r\n        id: selectedRows[0]?.id,\r\n        reason: values.description,\r\n        BUID: selectedRows[0]?.BUID,\r\n        MappingType: selectedRows[0]?.MappingType,\r\n      }\r\n      historyManagementService.applyDraftChanges(payload).then((result) => {\r\n        setApplyChangesDialog(false); // close dialog box\r\n        setSelectedRows([]); // reset selected row value\r\n\r\n        updateTemplateMappingData();\r\n        fetchData();\r\n        setIsLoading(false);\r\n\r\n        if (result?.status === \"success\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: result?.msg,\r\n          });\r\n        } else if (result?.status === \"failed\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"error\",\r\n            desc: result?.msg,\r\n          });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      //console.log(err, 'errors 1 ==================');\r\n    }\r\n  }\r\n  const discardDraftChanges = (rowId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      historyManagementService.discardDraftChanges(rowId).then((result) => {\r\n        setApplyChangesDialog(false); // close dialog box\r\n        setSelectedRows([]); // reset selected row value\r\n\r\n        updateTemplateMappingData();\r\n        fetchData();\r\n        setIsLoading(false);\r\n\r\n        if (result?.status === \"success\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: result?.msg,\r\n          });\r\n        } else if (result?.status === \"failed\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"error\",\r\n            desc: result?.msg,\r\n          });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      //console.log(err, 'errors 1 ==================');\r\n    }\r\n  }\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true);\r\n    historyManagementService.getAlldraftChanges().then((result) => {\r\n      setTabledata(result?.data);\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredTabledata(filterData);\r\n      //setTabledata(result?.data);\r\n      //setFilteredTabledata(result?.data);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, [searchValue, bussinessUnit]);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Draft Changes\" }]} />\r\n      </Box>\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={(e) => {\r\n                    setSearchValue(e.target.value);\r\n                  }}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={5} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\"\r\n              style={{\r\n                // marginLeft: \"198px\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"font-medium\"\r\n                style={{ paddingRight: \"10px\" }}\r\n              >\r\n                <label style={{ textWrap: \"nowrap\", paddingTop: \"10px\" }}>Design Organization:</label>\r\n                <CustomSelect\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"25%\" }}\r\n                  //optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n            {isLoading && (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"100vh\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            )}\r\n            {!isLoading && (\r\n              <DataGrid\r\n                showZebraRows={false}\r\n                defaultLimit={100}\r\n                style={gridStyle}\r\n                columns={columns}\r\n                dataSource={filteredTabledata}\r\n                // rowHeight={null}\r\n                onRowClick={(rowData) => handleRowClick(rowData.data)}\r\n                pagination\r\n                renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <CommitChangesForm applyChangesDialog={applyChangesDialog} setApplyChangesDialog={setApplyChangesDialog} saveApplyChanges={saveApplyChanges} />\r\n\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DraftChangesList;\r\n","import React from \"react\";\r\nimport RequestChangesList from \"./draftChangesList\";\r\n\r\nconst RequestChangesWraper = () => {\r\n    return (\r\n        <RequestChangesList />\r\n    );\r\n};\r\n\r\nexport default RequestChangesWraper;\r\n","import React from 'react';\r\nimport DraftChangesWraper from \"./draftChangesWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst draftChangesroutes = [\r\n  {\r\n    path: \"/draftChanges\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <DraftChangesWraper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default draftChangesroutes;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Table,\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem\r\n} from \"@mui/material\";\r\n\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport CustomSelect from \"../../components/CustomSelect\";\r\nimport { BUOptions } from \"../adminConfig/common\";\r\n\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\n\r\nimport historyData from \"./sampledata.json\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst HistoryLIst = () => {\r\n  const { bussinessUnit, updateBussinessUnit } = useOracleSettings();\r\n  const [tabledata, setTabledata] = useState(historyData);\r\n  const [filteredTabledata, setFilteredTabledata] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [mappingOptions, setMappingOptions] = useState([]);\r\n  const historyManagementService = new HistoryManagementService();\r\n  const [mappingType, setMappingType] = useState('orgallowedvalues')\r\n  const gridRef = useRef(null);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"version\",\r\n      header: \"Version\",\r\n      defaultFlex: 0.6,\r\n      defaultWidth: 20,\r\n      render: ({ data }) => <div>{data?.version}</div>,\r\n    },\r\n    {\r\n      name: \"dateTime\",\r\n      header: \"Change Date\",\r\n      defaultFlex: 2,\r\n      render: ({ data }) => {\r\n        let date = new Date(parseInt(data?.dateTime));\r\n        console.log(date, 'date')\r\n        const year = date.getFullYear();\r\n        const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const hours = String(date.getHours()).padStart(2, '0');\r\n        const minutes = String(date.getMinutes()).padStart(2, '0');\r\n        const seconds = String(date.getSeconds()).padStart(2, '0');\r\n        const meridiem = hours >= 12 ? 'PM' : 'AM';\r\n        const formattedHours = hours % 12 || 12; // Convert 24-hour to 12-hour format\r\n        const formattedDate = `${year}-${month}-${day} ${formattedHours}:${minutes}:${seconds} ${meridiem}`;\r\n        return <div>{formattedDate}</div>\r\n      },\r\n    },\r\n    {\r\n      name: \"userName\",\r\n      header: \"Requested By\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.userName}</div>,\r\n    },\r\n    {\r\n      name: \"MappingType \",\r\n      header: \"Mapping Type\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 200,\r\n      render: ({ data }) => <div>{data?.MappingType}</div>,\r\n    },\r\n    {\r\n      name: \"reason\",\r\n      header: \"Change Details\",\r\n      defaultFlex: 3,\r\n      defaultWidth: 200,\r\n      render: ({ data }) => <div>{data?.reason}</div>,\r\n    },\r\n\r\n  ];\r\n\r\n  const handleSearch = () => {\r\n    let filteredData = [];\r\n    // input box filter\r\n    if (searchValue === \"\") {\r\n      filteredData = tabledata;\r\n    } else {\r\n      filteredData = tabledata?.filter((thisItem) => {\r\n        const thisRowData = Object.values(thisItem).join()?.toLowerCase();\r\n        return thisRowData.includes(searchValue?.toLowerCase());\r\n      });\r\n    }\r\n\r\n    // dropdown filter\r\n    // filteredData = filteredData?.filter((thisItem) => {\r\n    //   const thisRowData = Object.values(thisItem).join()?.toLowerCase();\r\n    //   return thisRowData.includes(bussinessUnit?.toLowerCase());\r\n    // });\r\n    // console.log(filteredData, 'filteredDatafilteredData')\r\n    setFilteredTabledata(filteredData);\r\n  };\r\n\r\n  const handleRowClick = (rowData) => {\r\n    const isSelected = selectedRows.some((row) => row.id === rowData.id);\r\n\r\n    if (isSelected) {\r\n      setSelectedRows((prevSelectedRows) =>\r\n        prevSelectedRows.filter((row) => row.id !== rowData.id)\r\n      );\r\n    } else {\r\n      setSelectedRows([rowData]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    historyManagementService.getAllmappingHistory().then((result) => {\r\n      setTabledata(result?.data);\r\n      setFilteredTabledata(result?.data);\r\n      // setMappingType()\r\n      setIsLoading(false);\r\n      const values = new Set();\r\n      result?.data?.forEach((subscriber) => {\r\n        if (Array.isArray(subscriber['MappingType'])) {\r\n          subscriber['MappingType'].forEach((data) => {\r\n            values.add(data.MappingType);\r\n          });\r\n        } else {\r\n          values.add(subscriber['MappingType']);\r\n        }\r\n      });\r\n      console.log(Array.from(values), 'array of mapping')\r\n      setMappingOptions(Array.from(values))\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, [searchValue, bussinessUnit]);\r\n\r\n\r\n  useEffect(() => {\r\n    // let dataToShow = tabledata;\r\n    // console.log(dropdownFilter, 'dropdownFilter')\r\n    let filteredData = tabledata;\r\n    // dropdown filter\r\n    filteredData = filteredData?.filter((thisItem) => {\r\n      const thisRowData = Object.values(thisItem).join()?.toLowerCase();\r\n      return thisRowData.includes(bussinessUnit?.toLowerCase()) &&\r\n        thisRowData.includes(mappingType?.toLowerCase());\r\n    });\r\n    setFilteredTabledata(filteredData);\r\n  }, [mappingType, bussinessUnit, tabledata])\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Changes History \" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={(e) => {\r\n                    setSearchValue(e.target.value);\r\n                  }}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\"\r\n              style={{\r\n                // marginLeft: \"198px\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"font-medium\"\r\n                style={{ paddingRight: \"10px\" }}\r\n              >\r\n                <label style={{ textWrap: \"nowrap\", paddingTop: \"10px\" }}>Mapping Type:</label>\r\n\r\n                <Select\r\n                  className=\"form-control\"\r\n                  defaultValue={mappingOptions[0]}\r\n                  value={mappingType}\r\n                  onChange={(e) => setMappingType(e.target.value)}\r\n                  style={{ width: \"50%\" }}\r\n                  size={'medium'}\r\n                  displayEmpty // Enable displayEmpty prop\r\n                  renderValue={(selected) => {\r\n                    // Render the selected value\r\n                    let selectedOption = [];\r\n                    selectedOption = mappingOptions?.find(\r\n                      (option) => (option === selected)\r\n                    );\r\n\r\n                    return (selectedOption) ? selectedOption : '';\r\n                  }}\r\n                >\r\n                  {mappingOptions?.map((option, index) => {\r\n                    const listKey = \"dpKey\" + index;\r\n                    return (\r\n                      <MenuItem value={option} key={listKey}>\r\n                        {option}\r\n                      </MenuItem>\r\n                    )\r\n                  })}\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={12} sm={6} xs={12} className=\"font-medium\" style={{ display: \"none\" }}>\r\n            <Grid container alignItems=\"center\"\r\n              style={{\r\n                // marginLeft: \"198px\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"font-medium\"\r\n                style={{ paddingRight: \"10px\" }}\r\n              >\r\n                <label style={{ textWrap: \"nowrap\", paddingTop: \"10px\" }}>Design Organization:</label>\r\n\r\n                <CustomSelect\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"50%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    // handleOptionChange({bu: selectedOptionValue})\r\n                    setSearchValue(\"\");\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n            {isLoading && (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"100vh\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            )}\r\n            {!isLoading && (\r\n              <DataGrid\r\n                showZebraRows={false}\r\n                style={gridStyle}\r\n                columns={columns}\r\n                dataSource={filteredTabledata}\r\n                defaultLimit={100}\r\n                // rowHeight={null}\r\n                onRowClick={(rowData) => handleRowClick(rowData.data)}\r\n                pagination\r\n                renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HistoryLIst;\r\n","import React from \"react\";\r\nimport HistoryList from \"./historyList\";\r\n\r\nconst HistoryWrapper = () => {\r\n    return (\r\n        <HistoryList />\r\n    );\r\n};\r\n\r\nexport default HistoryWrapper;\r\n","import React from 'react';\r\nimport HistoryWrapper from \"./historyWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst historyroutes = [\r\n  {\r\n    path: \"/history\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <HistoryWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  }\r\n];\r\n\r\nexport default historyroutes;\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.systemData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  console.log('props', props);\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.systemData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {        \r\n        'ERP Type': item.ERPType,\r\n        Instance: item.instance,\r\n        'Validation Key 1': item.file1,\r\n        'Validation Key 2': item.file2\r\n      }\r\n      return res\r\n    })\r\n    //console.log(exportData, 'inside template export exportData')\r\n    //return;\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'System Setup' }).then((response) => {\r\n      setExportResponse(response)\r\n      //console.log(response, ';resprespresp')\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.vsystemData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n      //console.log(filteredTempData, 'filteredTempData')\r\n    }\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import React, { useState, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport shortId from 'shortid';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n\r\nconst formData = [\r\n    {\r\n        \"name\": \"ERP Type\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"select\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": [\r\n            {\r\n                \"sap\": \"SAP\",\r\n                \"oracle\": \"Oracle\",\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"name\": \"instance\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"select\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": [\r\n            {\r\n                \"onPrem\": \"OnPrem\",\r\n                \"SaaS\": \"SaaS\",\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"name\": \"Validation Key 1\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"text\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": \"\"\r\n    },\r\n    {\r\n        \"name\": \"Validation Key 2\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"text\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": \"\"\r\n    },\r\n]\r\n\r\nconst SystemSetupForm = forwardRef((props, ref) => {\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const [formAllData, setFormAllData] = useState([]);\r\n    const initialValues = {\r\n        // settingName: '',\r\n        \"ERP Type\": null,\r\n        instance: null,\r\n        \"Validation Key 1\": null,\r\n        \"Validation Key 2\": null,\r\n    };\r\n\r\n    const validate = (values) => {\r\n        console.log(values, \"validate\");\r\n        const errors = {};\r\n        // Validation logic for each field\r\n        // if (!values.settingName) {\r\n        //     errors.settingName = 'Required';\r\n        // }\r\n        if (!values[\"ERP Type\"]) {\r\n            errors[\"ERP Type\"] = 'Required';\r\n        }\r\n        if (!values.instance) {\r\n            errors.instance = 'Required';\r\n        }\r\n        if (!values[\"Validation Key 1\"]) {\r\n            errors[\"Validation Key 1\"] = 'Required';\r\n        }\r\n        if (!values[\"Validation Key 2\"]) {\r\n            errors[\"Validation Key 2\"] = 'Required';\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const onSubmit = (values, isValid, { resetForm }) => {\r\n        // Handle form submission\r\n        console.log(values, 'values 111');\r\n        if (isValid) {\r\n            // Map Validation Key fields to file1 and file2\r\n            const backendValues = {\r\n                ...values,\r\n                ERPType: values[\"ERP Type\"],\r\n                file1: values[\"Validation Key 1\"],\r\n                file2: values[\"Validation Key 2\"],\r\n            };\r\n            delete backendValues[\"ERP Type\"];\r\n            delete backendValues[\"Validation Key 1\"];\r\n            delete backendValues[\"Validation Key 2\"];\r\n\r\n            resetForm(); // Reset the form using the resetForm function from Formik context\r\n            // Check if the entire form has changed\r\n            const isFormChanged = Object.keys(values).some((fieldName) => {\r\n                return values[fieldName] !== initialValues[fieldName];\r\n            });\r\n            if (isFormChanged) {\r\n                props.saveForm({ formisValid: isValid, formData: backendValues }); // Close the modal box after successful submission\r\n            } else {\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"error\",\r\n                    desc: \"No changes made!\",\r\n                });\r\n            }\r\n        } else {\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: \"error\",\r\n                desc: \"Form submitted with invalid data\",\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setFormAllData(formData);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validate={validate}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    onSubmit(values, !Object.keys(validate(values)).length, { resetForm: () => setSubmitting(false) });\r\n                }}\r\n                innerRef={ref}\r\n            >\r\n                {\r\n                    function Showform({ isValid, values, errors, setFieldValue, resetForm, handleSubmit, submitForm }) {\r\n                        useEffect(() => {\r\n                            if (props?.editForm === \"Edit\" && props?.selectedRows?.length) {\r\n                                props?.selectedRows?.forEach(thisItem => {\r\n                                    setFieldValue('ERP Type', thisItem?.ERPType);\r\n                                    setFieldValue('instance', thisItem?.instance);\r\n                                    setFieldValue('Validation Key 1', thisItem?.file1);\r\n                                    setFieldValue('Validation Key 2', thisItem?.file2);\r\n                                });\r\n                            }\r\n                        }, [setFieldValue])\r\n\r\n                        // Expose the submitForm function to the parent component using useImperativeHandle\r\n                        useImperativeHandle(ref, () => ({\r\n                            submitForm() {\r\n                                console.log(\"triggering here\");\r\n                                // Call the submitForm function when triggered from the parent component\r\n                                // return new Promise((resolve, reject) => {\r\n                                //     // Submit the form using the Formik handleSubmit function\r\n                                //     handleSubmit();\r\n                                //     // After the form submission, resolve the promise with the form values\r\n                                //     resolve({ formisValid: isValid, formData: values });\r\n                                // });\r\n\r\n                                // Call the submitForm function when triggered from the parent component\r\n                                handleSubmit();\r\n                            }\r\n                        }));\r\n\r\n                        return (\r\n                            <Form>\r\n                                {\r\n                                    (formAllData).length ? formAllData?.map((item, fkey) => {\r\n                                        const thisInputName = item?.name;\r\n                                        const currentFieldValue = values[thisInputName] || item?.defaultValues;\r\n\r\n                                        let fieldType = item?.inputType;\r\n                                        let fieldkey = values[formAllData[0]?.name];\r\n\r\n                                        return (\r\n                                            <div className=\"attribute-section\" key={fkey}>\r\n                                                <Grid\r\n                                                    container\r\n                                                    spacing={3}\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n                                                        <label htmlFor=\"firstName\">\r\n                                                            <span >\r\n                                                                {item?.name}\r\n                                                                {item?.mandatory === \"Y\" ? <span style={{ color: \"red\" }}>*</span> : ''}\r\n                                                            </span>\r\n                                                        </label>\r\n                                                    </Grid>\r\n                                                    <Grid item md={8} sm={6} xs={12} key={fkey}>\r\n                                                        {\r\n                                                            (fieldType === 'text') && (\r\n                                                                <TextField\r\n                                                                    className={\"mb-4 w-full \"}\r\n                                                                    color={(errors?.[thisInputName] ? ('warning') : (''))}\r\n                                                                    fullWidth\r\n                                                                    size=\"small\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    id={thisInputName}\r\n                                                                    name={thisInputName}\r\n                                                                    value={currentFieldValue}\r\n                                                                    onChange={(e) => {\r\n                                                                        setFieldValue(thisInputName, e.target.value);\r\n                                                                    }}\r\n                                                                    type=\"text\"\r\n                                                                    style={{ marginBottom: '10px' }}\r\n                                                                />\r\n                                                            )\r\n                                                        }\r\n                                                        {\r\n                                                            (fieldType === 'select') && (\r\n                                                                <>\r\n                                                                    <Select\r\n                                                                        disabled={props?.editForm === \"Edit\" && [\"ERP Type\", \"instance\"].includes(thisInputName)}\r\n                                                                        value={currentFieldValue}\r\n                                                                        onChange={(e) => {\r\n                                                                            setFieldValue(thisInputName, e.target.value);\r\n                                                                        }}\r\n                                                                        displayEmpty\r\n                                                                        renderValue={(selected) => {\r\n                                                                            if (!selected) {\r\n                                                                                return <em>--Select--</em>; // Placeholder text\r\n                                                                            }\r\n                                                                            return item?.values.length && item?.values[0][selected];\r\n                                                                        }}\r\n                                                                        style={{ height: '37.13px', marginBottom: '1rem', width: \"100%\" }}\r\n                                                                    >\r\n                                                                        <MenuItem>Select</MenuItem>\r\n                                                                        {\r\n                                                                            item?.values.length && Object.keys(item?.values[0]).map((vitem) => {\r\n                                                                                return (\r\n                                                                                    <MenuItem value={vitem} key={shortId.generate()}>{item?.values[0][vitem]}</MenuItem>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </Select>\r\n                                                                </>\r\n                                                            )\r\n                                                        }\r\n                                                        <ErrorMessage name={thisInputName} component=\"div\" />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </div>\r\n                                        )\r\n                                    }) : (<></>)\r\n                                }\r\n                                {/* <button type=\"submit\" style={{ display: 'none' }}></button> Hidden submit button */}\r\n                            </Form>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>\r\n            {openDesc && (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default SystemSetupForm;","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\nimport Loader from 'app/components/Loader';\r\nimport { Breadcrumb } from \"app/components\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\nimport { SystemSettingsService } from \"services/systemSettingsService\"; // Change UserService to SystemSetupService\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportSetup\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport SystemSetupForm from \"./systemSetupForm\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst SystemSetup = () => {\r\n  const childCompRef = useRef(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [showFormType, setShowFormType] = useState(\"Create\");\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [systemData, setSystemData] = useState([]); // Change userData to systemData\r\n  const [orgSystemData, setOrgSystemData] = useState([]); // Change userData to systemData\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const systemSettingsService = new SystemSettingsService(); // Change userService to systemSettingsService\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [sortInfo, setSortInfo] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\nconst sortedSystemData = systemData.sort((a, b) => {\r\n  if (a.ERPType < b.ERPType) return -1;\r\n  if (a.ERPType > b.ERPType) return 1;\r\n  return 0;\r\n});\r\n\r\n  const columns = [ // Adjust columns according to your system setup data\r\n    {\r\n      name: \"ERPType\",\r\n      header: \"ERP Type\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.ERPType}</div>,\r\n    },\r\n    {\r\n      name: \"instance\",\r\n      header: \"Instance\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.instance}</div>,\r\n    },\r\n    {\r\n      name: \"file1\",\r\n      header: \"Validation Key 1\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.file1}</div>,\r\n    },\r\n    {\r\n      name: \"file2\",\r\n      header: \"Validation Key 2\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.file2}</div>,\r\n    },\r\n  ]\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteSetting = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      setIsLoading(true)\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await systemSettingsService.deleteSystemSettings(selRowsId).then(response => {\r\n        setIsLoading(false)\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete Setting:\", error);\r\n    }\r\n\r\n    systemSettingsService.getAllsystemSetupList().then((result) => {\r\n      console.log(result.data, \"result.data\");\r\n      setSystemData(result.data);\r\n      setInitialData(result.data);\r\n      setOrgSystemData(result.data);\r\n    });\r\n  };\r\n\r\n  // Function to trigger the form submission in the child component\r\n  const saveForm = async (submittedValues) => {\r\n    console.log(submittedValues, 'submittedValues 222');\r\n\r\n\r\n    if (submittedValues) {\r\n      // Update the formValues state only if the submission is successful\r\n      if (submittedValues?.formisValid) {\r\n        setShowForm(false);\r\n        setIsLoading(true);\r\n        setFormValues(submittedValues);\r\n        let updatedData = null;\r\n        if (showFormType === \"Edit\" && selectedRows?.length) {\r\n          updatedData = await systemSettingsService.updateSystemSettings(submittedValues?.formData);\r\n        } else {\r\n          updatedData = await systemSettingsService.addSystemSettings(submittedValues?.formData);\r\n        }\r\n        if (updatedData?.status === \"success\") {\r\n          setSelected({});\r\n          setSelectedRows([]);\r\n          await systemSettingsService.getAllsystemSetupList().then((result) => {\r\n            console.log(result.data, \"result.data\");\r\n            setSystemData(result.data);\r\n            setInitialData(result.data);\r\n            setOrgSystemData(result.data);\r\n          });\r\n\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: updatedData?.msg,\r\n          });\r\n        } else {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"error\",\r\n            desc: updatedData?.msg,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n  const handleSubmitForm = async () => {\r\n    if (childCompRef.current) {\r\n      // Call the submitForm function exposed by the child component\r\n      await childCompRef.current.submitForm();\r\n    }\r\n  };\r\n\r\n  const fetchAllDetails = async () => {\r\n    const listValue = await systemSettingsService.getAllsystemSetupList();\r\n    console.log(listValue, 'listValue');\r\n    if (listValue?.data?.length) {\r\n      setSystemData(listValue?.data);\r\n      setInitialData(listValue?.data);\r\n      setOrgSystemData(listValue?.data);\r\n      return listValue?.data;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n  const applyFilterData = async (searchValue) => {\r\n    let systemDataValue = [];\r\n    setIsLoading(true);\r\n    if (orgSystemData.length === 0) {\r\n      systemDataValue = await fetchAllDetails();\r\n    } else {\r\n      systemDataValue = orgSystemData;\r\n    }\r\n    if (systemDataValue) {\r\n      const newFilteredData = systemDataValue.filter((setting) => {\r\n        return (!searchValue ? true : (JSON.stringify(setting).toLowerCase().includes(searchValue.toLowerCase())))\r\n      }) || [];\r\n      if (newFilteredData.length) {\r\n        setSystemData(newFilteredData);\r\n        setInitialData(newFilteredData);\r\n      } else {\r\n        setSystemData([]);\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const handleBackdropClick = (event) => {\r\n    // Prevent closing the dialog when clicking on the backdrop\r\n    event.stopPropagation();\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAllDetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && (Object.keys(selRowsData)?.map(key => (selRowsData[key])) || []);\r\n    if (selRowsDetails?.length) {\r\n      setSelectedRows(selRowsDetails);\r\n    }\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    console.log(searchValue, 'parent comp 2');\r\n    applyFilterData(searchValue);\r\n  }, [searchValue]);\r\n\r\n  console.log('parent comp');\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedUserData = sortedExportDataHOC(SystemSetup);\r\n    const sortedData = SortedUserData({ data: systemData, sortInfo, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setSystemData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"System Setup\" }]} />\r\n      </Box>\r\n\r\n      <div>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\">\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={() => {\r\n                setShowForm(true);\r\n                setShowFormType(\"Create\");\r\n              }}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={() => {\r\n                setShowForm(true);\r\n                setShowFormType(\"Edit\");\r\n              }}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <ExportDialogBox \r\n             systemData={systemData}\r\n             filterTemplateData={selectedRows} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br />\r\n\r\n        {isLoading ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Loader show={isLoading} />\r\n          </div>\r\n        ) : (\r\n          <DataGrid\r\n            idProperty=\"id\"\r\n            showZebraRows={false}\r\n            style={{ minHeight: 550 }}\r\n            columns={columns}\r\n            defaultLimit={100}\r\n              dataSource={sortInfo === null ? systemData : sortedSystemData}\r\n            // rowHeight={null}\r\n            checkboxColumn\r\n            selected={selected}\r\n            onSelectionChange={onSelectionChange}\r\n            handle={ref => gridRef.current = ref ? ref.current : null}\r\n            pagination\r\n            renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n            onSortInfoChange={handleSortInfoChange}\r\n            />\r\n        )}\r\n      </div>\r\n\r\n      {openDesc && (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      )}\r\n\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Setting\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Do you want to delete the selected Setting(s)?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteSetting}>Delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* MODAL BOX */}\r\n      <Dialog\r\n        open={showForm}\r\n        onClose={() => { setShowForm(false) }}\r\n        scroll={'paper'}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth={'md'}\r\n        fullWidth={true}\r\n        onClick={handleBackdropClick}\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">\r\n          {`${showFormType} system setup`}\r\n        </DialogTitle>\r\n        <DialogContent dividers={true}>\r\n          <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n            {/* Display the form values from the state if they exist */}\r\n            {/* {formValues && (\r\n              <div>\r\n                <h2>Form Values:</h2>\r\n                <pre>{JSON.stringify(formValues, null, 2)}</pre>\r\n              </div>\r\n            )} */}\r\n            <SystemSetupForm ref={childCompRef} saveForm={saveForm} selectedRows={selectedRows} editForm={showFormType} />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => { setShowForm(false) }}>Cancel</Button>\r\n          { }\r\n          <Button onClick={handleSubmitForm}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SystemSetup;\r\n","import React from 'react';\r\nimport { Navigate, useLocation, useHref } from 'react-router-dom';\r\nimport { LoginCallback } from '@okta/okta-react';\r\n\r\nconst RedirectRoute = ({ children, ...rest }) => {\r\n    const basename = useHref(\"\");\r\n    const location = useLocation();\r\n    if (basename.startsWith('/')) {\r\n        return <Navigate to=\"/calist\" />;\r\n    } else if (location.pathname.startsWith('/Dev') || location.pathname === '/') {\r\n        return <Navigate to=\"/calist\" />;\r\n    } else if (location.pathname.startsWith('/login/callback')) {\r\n        return <LoginCallback />;\r\n    }\r\n    return children;\r\n};\r\n\r\nexport default RedirectRoute;","import React, { useEffect } from 'react';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CustomLoginCallback = () => {\r\n    const { oktaAuth, authState } = useOktaAuth();\r\n    let navigate = useNavigate();\r\n\r\n    const onSuccess = (user) => {\r\n        // Redirect the user to their intended destination or the home page\r\n        oktaAuth.redirect('/');\r\n        // navigate('/');\r\n    };\r\n\r\n    const onError = (error) => {\r\n        // Handle any errors that may occur during the login process\r\n        console.error('Error during login callback:', error);\r\n    };\r\n\r\n    useEffect(() => {\r\n        oktaAuth.handleLoginRedirect()\r\n            .then(onSuccess)\r\n            .catch(onError);\r\n    }, [oktaAuth]);\r\n\r\n    return (\r\n        <div>\r\n            <h4>Loading...</h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomLoginCallback;","import React from 'react';\r\nimport { useRoutes } from \"react-router-dom\";\r\n\r\nimport AuthGuard from \"app/auth/AuthGuard\";\r\nimport NotFound from \"app/views/sessions/NotFound\";\r\nimport UnauthorizedPage from \"app/unAuthorizedPage\";\r\nimport Homepage from \"app/homepage\";\r\nimport McoListRoutes from \"app/views/mcolist/McoListRoutes\";\r\n\r\nimport MatxLayout from \"./components/MatxLayout/MatxLayout\";\r\nimport templateRoutes from \"app/views/template/templateRoutes\";\r\nimport plantRoutes from \"app/views/plants/plantRoutes\";\r\nimport sourceListroutes from \"app/views/sourceList/sourceListroutes\";\r\nimport mappingsroutes from \"app/views/mappings/mappingsroutes\";\r\nimport buListRoutes from \"app/views/businessUnit/buRoutes\";\r\nimport userListRoutes from \"app/views/users/usersRoutes\";\r\n\r\n//Mapping pages\r\nimport orgallowedroutes from \"app/views/mappingPages/orgAllowedTemplates/orgallowedroutes\";\r\nimport mvocompatibilityRoutes from \"app/views/mappingPages/mvoTemplateCompatibility/mvocompatibiltyroutes\";\r\nimport parttypetotemplateroutes from \"app/views/mappingPages/partTypeToTemplate/parttypeTotemplateroutes\";\r\nimport mvoallowedchangesroutes from \"app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesroutes\";\r\nimport setcomptemproutes from \"app/views/mappingPages/setCompatibleTemplates/setcomptemproutes\";\r\nimport buplantroutes from \"app/views/mappingPages/buPlantMapping/buplantRoutes\";\r\nimport expensemaproutes from \"app/views/mappingPages/expenseMapping/expensemapRoutes\";\r\n\r\nimport draftChangesroutes from \"app/views/draftChanges/draftChangesroutes\";\r\nimport historyroutes from \"app/views/history/historyroutes\";\r\n\r\nimport systemSetupRoutes from \"app/views/systemSetup/systemSetupRoutes\";\r\n\r\nimport RedirectRoute from \"./RedirectRoute\";\r\nimport CustomLoginCallback from \"./CustomLoginCallback\";\r\n\r\nconst allChildroutes = [\r\n  ...McoListRoutes,\r\n  ...templateRoutes,\r\n  ...plantRoutes,\r\n  ...sourceListroutes,\r\n  ...mappingsroutes,\r\n  ...buListRoutes,\r\n  ...mvocompatibilityRoutes,\r\n  ...parttypetotemplateroutes,\r\n  ...mvoallowedchangesroutes,\r\n  ...setcomptemproutes,\r\n  ...orgallowedroutes,\r\n  ...buplantroutes,\r\n  ...expensemaproutes,\r\n  ...draftChangesroutes,\r\n  ...historyroutes,\r\n  ...userListRoutes,\r\n  ...systemSetupRoutes,\r\n]\r\n\r\nexport default function Router() {\r\n  const routes = [\r\n    {\r\n      element: (\r\n        <>\r\n          <AuthGuard>\r\n            <MatxLayout />\r\n          </AuthGuard>\r\n        </>\r\n      ),\r\n      children: allChildroutes,\r\n    },\r\n    {\r\n      path: '/',\r\n      element: <RedirectRoute />,\r\n    },\r\n    {\r\n      path: '/login/callback',\r\n      element: <CustomLoginCallback />,\r\n    },\r\n    {\r\n      path: '/accessDenied',\r\n      element: <UnauthorizedPage />,\r\n    },\r\n    {\r\n      path: '/homepage',\r\n      element: <Homepage />,\r\n    },\r\n    {\r\n      path: '*',\r\n      element: <NotFound />,\r\n    },\r\n  ];\r\n\r\n  let element = useRoutes(routes);\r\n  return element;\r\n}","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport SystemSetupList from \"./systemSetupList\";\r\n\r\nconst systemSetupRoutes = [{\r\n  path: \"/systemSetup\",\r\n  element: (\r\n    <PrivateRoute>\r\n      <SystemSetupList />\r\n    </PrivateRoute>\r\n  ),\r\n}];\r\n\r\nexport default systemSetupRoutes;\r\n","import React from \"react\";\r\nimport \"./Fallback.css\";\r\n\r\nconst Fallback = ({ componentStack, error }) => {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    // In production, render null to disable the error message\r\n    return null;\r\n  } else {\r\n    // In development or other environments, render a default error message\r\n    return (<>\r\n      <section className=\"fallback\">\r\n        <header className=\"fallback__header\">\r\n          <h3 className=\"fallback__title\">Oops! An error occured!</h3>\r\n        </header>\r\n        <div className=\"fallback__body\">\r\n          <p>\r\n            <strong>Error:</strong> {error.toString()}\r\n          </p>\r\n          <p>\r\n            <strong>Stacktrace:</strong> {componentStack}\r\n          </p>\r\n        </div>\r\n      </section>\r\n    </>)\r\n  }\r\n};\r\n\r\nexport default Fallback;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./DragAndDrop.css\"; // Import styles for the component\r\n\r\nconst DragAndDropComponent = ({ onDropSuccess }) => {\r\n  const dropRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleDragOver = (event) => {\r\n      event.preventDefault();\r\n      event.dataTransfer.dropEffect = \"copy\";\r\n    };\r\n\r\n    const handleDrop = (event) => {\r\n      event.preventDefault();\r\n\r\n      const data = event.dataTransfer.getData(\"text/plain\");\r\n\r\n      try {\r\n        const parsed = JSON.parse(data);\r\n        console.log(\"Dropped object:\", parsed);\r\n\r\n        if (onDropSuccess) {\r\n          onDropSuccess(parsed); // Let parent handle further logic\r\n        }\r\n      } catch (error) {\r\n        console.warn(\"Invalid drop data\", error);\r\n      }\r\n    };\r\n\r\n    const dropArea = dropRef.current;\r\n\r\n    if (dropArea) {\r\n      dropArea.addEventListener(\"dragover\", handleDragOver);\r\n      dropArea.addEventListener(\"drop\", handleDrop);\r\n    }\r\n\r\n    return () => {\r\n      if (dropArea) {\r\n        dropArea.removeEventListener(\"dragover\", handleDragOver);\r\n        dropArea.removeEventListener(\"drop\", handleDrop);\r\n      }\r\n    };\r\n  }, [onDropSuccess]);\r\n\r\n  return (\r\n    <div ref={dropRef} className=\"droppable-container mt-4\">\r\n      <img\r\n        style={{ width: \"90px\", height: \"90px\" }}\r\n        src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n        alt=\"Data Collect\"\r\n        className=\"search-icon\"\r\n      />\r\n      <span className=\"drag-and-drop-text\">Drag and Drop your object here</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { OktaAuth, toRelativeUrl } from \"@okta/okta-auth-js\";\r\nimport { Security } from \"@okta/okta-react\";\r\nimport config from \"./../config/config\";\r\nimport { Store } from \"./redux/Store\";\r\nimport Router from \"./routes\";\r\nimport { GlobalCss, MatxSuspense, MatxTheme } from \"app/components\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport Fallback from \"./components/Fallback/Fallback\";\r\nimport { OracleMappingsProvider } from \"./contexts/OracleSettingsContext\";\r\nimport { SettingsProvider } from \"./contexts/SettingsContext\";\r\nimport DragAndDropComponent from \"DragAndDrop/DragAndDrop\";\r\n\r\nconst App = () => {\r\n  console.log(\"✅ App.jsx is getting called\");\r\n  const navigate = useNavigate();\r\n  const [hasDropped, setHasDropped] = useState(false);\r\n  const [oktaAuth, setOktaAuth] = useState(null);\r\n\r\n  const restoreOriginalUri = (auth, originalUri) => {\r\n    navigate(toRelativeUrl(originalUri || \"/\", window.location.origin));\r\n  };\r\n\r\n  const onAuthRequired = () => {\r\n    navigate(window.location.origin);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      performance.mark(\"FirstContentfulPaint\");\r\n    }, 1000);\r\n\r\n    console.log(\"ENV:\", process.env.NODE_ENV);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  if (!hasDropped) {\r\n    console.log(\r\n      \"📦 Rendering DragAndDropComponent because hasDropped is false\"\r\n    );\r\n    return (\r\n      <DragAndDropComponent\r\n        onDropSuccess={(data) => {\r\n          console.log(\"✅ Dropping complete:\", data);\r\n          setOktaAuth(new OktaAuth(config.oidc)); // Init Okta only after drop\r\n          setHasDropped(true);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (!oktaAuth) {\r\n    return <div>Initializing authentication...</div>;\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary FallbackComponent={Fallback} onReset={() => {}}>\r\n      <Provider store={Store}>\r\n        <SettingsProvider>\r\n          <MatxTheme>\r\n            <GlobalCss />\r\n            <MatxSuspense>\r\n              <Security\r\n                oktaAuth={oktaAuth}\r\n                restoreOriginalUri={restoreOriginalUri}\r\n                onAuthRequired={onAuthRequired}\r\n              >\r\n                <OracleMappingsProvider>\r\n                  <Router />\r\n                </OracleMappingsProvider>\r\n              </Security>\r\n            </MatxSuspense>\r\n          </MatxTheme>\r\n        </SettingsProvider>\r\n      </Provider>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { Box, styled } from '@mui/material';\r\nimport clsx from 'clsx';\r\n\r\nconst StyledBox = styled(Box)(({ theme, texttransformstyle, ellipsis }) => ({\r\n  textTransform: texttransformstyle || 'none',\r\n  whiteSpace: ellipsis ? 'nowrap' : 'normal',\r\n  overflow: ellipsis ? 'hidden' : '',\r\n  textOverflow: ellipsis ? 'ellipsis' : '',\r\n}));\r\n\r\nexport const H1 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({ [className || '']: true })}\r\n      component=\"h1\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"28px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H2 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({ [className || '']: true })}\r\n      component=\"h2\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"24px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H3 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({ [className || '']: true })}\r\n      component=\"h3\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"18px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H4 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"h4\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"16px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H5 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"h5\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"14px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H6 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"h6\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"13px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Paragraph = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"p\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"14px\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Small = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"small\"\r\n      fontSize=\"12px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Span = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"span\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Tiny = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"small\"\r\n      fontSize=\"10px\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n","import { MCOService } from '../../../services/mcoService';\r\n\r\nexport const mcoService = new MCOService();\r\n\r\nexport const GET_MCOLIST = 'GET_MCOLIST';\r\nexport const GET_MCOINFO = 'GET_MCOINFO';\r\nexport const GET_UPDATEMCODETAILS = 'GET_UPDATEMCODETAILS';\r\nexport const GET_UPDATE_MCO_RELATED_VALUES = 'GET_UPDATE_MCO_RELATED_VALUES';\r\nexport const SET_ALL_CA_MCO_DETAILS = 'SET_ALL_CA_MCO_DETAILS';\r\nexport const SET_UPDATED_ROUTES = \"SET_UPDATED_ROUTES\";\r\n\r\nexport const RESET_VALUES = 'RESET_VALUES';\r\n\r\nexport const setUpdatedRoutes = (routes) => ({\r\n  type: SET_UPDATED_ROUTES,\r\n  payload: routes,\r\n});\r\n\r\nexport const getMCOLists = (data) => async (dispatch) => {\r\n  try {\r\n    // await mcoService.searchMCO(search).then((result) => {\r\n    await dispatch({\r\n      type: GET_MCOLIST,\r\n      payload: data,\r\n    })\r\n    // })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const updateResponseData = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: GET_MCOINFO,\r\n      payload: data,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const updateMcoDetails = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: GET_UPDATEMCODETAILS,\r\n      payload: data,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const update_generalValues = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: GET_UPDATE_MCO_RELATED_VALUES,\r\n      payload: data,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const resetValues = () => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: RESET_VALUES,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\n\r\nexport const setAllCaMCODetails = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: SET_ALL_CA_MCO_DETAILS,\r\n      payload: data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useEffect } from 'react';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function BuConfirmationBox({ isBUModified, updateBUModifiedData }) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = (event, reason) => {\r\n        // Prevent closing on backdrop click or escape key\r\n        if (reason === 'backdropClick' || reason === 'escapeKeyDown') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        updateBUModifiedData();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOpen(isBUModified);\r\n    }, [isBUModified]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <BootstrapDialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={open}\r\n            >\r\n                <DialogTitle sx={{ m: 0, p: 2 }} id=\"customized-dialog-title\">\r\n                    Organization Credentials Updated\r\n                </DialogTitle>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={handleClose}\r\n                    sx={(theme) => ({\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        color: theme.palette.grey[500],\r\n                    })}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                    <Typography gutterBottom>\r\n                        The credentials for the organization have been modified. To ensure you have the latest data,\r\n                        <br></br>\r\n                        <br></br>\r\n                        please click \"Okay\" to proceed.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose}>\r\n                        Okay\r\n                    </Button>\r\n                </DialogActions>\r\n            </BootstrapDialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { useNavigate, useLocation } from \"react-router-dom\"\r\nimport { TemplateMappingService } from \"./../../services/templateMappingService\";\r\nimport { UserService } from \"services/usersService\";\r\nimport Loader from 'app/components/Loader';\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport SomethingWrong from \"app/components/McoPages/PageError\";\r\nimport BuConfirmationBox from \"app/components/BuConfirmationBox\";\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\n\r\nconst OracleSettingsContext = createContext({\r\n    isLoading: false,\r\n    userDetails: null,\r\n    bussinessUnit: null,\r\n    bussinessUnitLists: null,\r\n    templatesInfo: [],\r\n    allTemplatesInfo: [],\r\n    mappingTemplatesInfo: [],\r\n    refreshData: true,\r\n    updateBussinessUnit: () => null,\r\n    updateBussinessUnitLists: () => null,\r\n    updateTemplateLists: () => [],\r\n    updateAllTemplate: () => [],\r\n    updateMappingTemplatesInfo: () => [],\r\n    updateRefreshData: () => null,\r\n})\r\n\r\nexport const OracleMappingsProvider = ({ children }) => {\r\n    const { authState, authService } = useOktaAuth();\r\n    const {\r\n        globalBussinessUnit,\r\n    } = useSelector((state) => ({\r\n        globalBussinessUnit: state.globalBUandInstance.bu,\r\n    }), shallowEqual);\r\n\r\n    // const tempService = new templateService();\r\n    const tempMapService = new TemplateMappingService();\r\n    const userService = new UserService();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [userDetails, setUserDetails] = useState(null);\r\n    const [isPageHavingError, setIsPageHavingError] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [bussinessUnit, setBussinessUnit] = useState(localStorage.getItem('bussinessUnit') || null);\r\n    const [isBUModified, setIsBUModified] = useState(false);\r\n    const [bussinessUnitLists, setBussinessUnitLists] = useState(null);\r\n    const [templatesInfo, setTemplatesInfo] = useState([]);\r\n    const [allTemplatesInfo, setAllTemplatesInfo] = useState([]);\r\n    const [mappingTemplatesInfo, setMappingTemplatesInfo] = useState([]);\r\n    const [refreshData, setRefreshData] = useState(true);\r\n\r\n    const updateBussinessUnit = (values) => {\r\n        setBussinessUnit(values);\r\n    };\r\n    const updateBussinessUnitLists = (values) => {\r\n        setBussinessUnitLists(values);\r\n    };\r\n    const updateTemplateLists = (values) => {\r\n        setTemplatesInfo(values);\r\n        setAllTemplatesInfo(values);\r\n    };\r\n    const updateAllTemplate = (values) => {\r\n        setAllTemplatesInfo(values);\r\n        setTemplatesInfo(values);\r\n    };\r\n    const updateMappingTemplatesInfo = (values) => {\r\n        setMappingTemplatesInfo(values);\r\n    };\r\n    const updateRefreshData = (values) => {\r\n        setRefreshData(values);\r\n    };\r\n\r\n    const updateBUModifiedData = () => {\r\n        if (location?.pathname?.includes(\"mcodetail\")) {\r\n            window.location.reload();\r\n        } else {\r\n            const bu = localStorage.getItem('bussinessUnit');\r\n            if (bu) {\r\n                setBussinessUnit(bu);\r\n            }\r\n        }\r\n        setIsBUModified(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userDetails && mappingTemplatesInfo?.length <= 1) {\r\n            if (authState && authState.isAuthenticated) {\r\n                // tempService.getAllTemplateList().then((result) => {\r\n                //     updateAllTemplate(result.template);\r\n                // });\r\n                updateRefreshData(true);\r\n                tempMapService.getAlltemplateMappings().then((result) => {\r\n                    updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n                    updateTemplateLists(result?.data?.templateList);\r\n                    updateBussinessUnitLists(result?.data?.bulist);\r\n\r\n                    updateAllTemplate(result?.data?.templateList);\r\n\r\n                    updateRefreshData(false);\r\n                });\r\n            }\r\n        }\r\n        if (authState && authState.isAuthenticated && authService) {\r\n            authService.getAccessToken().then((accessToken) => {\r\n                console.log('Access Token: ', accessToken);\r\n            });\r\n        }\r\n    }, [authState, authService, userDetails]);\r\n\r\n    useEffect(() => {\r\n        if (authState?.isAuthenticated && !userDetails) {\r\n            setIsLoading(true);\r\n            userService.validateUser().then((result) => {\r\n                if (result.status === 'error') {\r\n                    navigate(\"/accessDenied\", { state: { userInfo: result?.data[0], NotAuthorized: true } });\r\n                } else {\r\n                    if (result?.data?.length) {\r\n                        setUserDetails(result?.data[0]);\r\n                        setIsLoading(false);\r\n                    }\r\n                }\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setIsPageHavingError(true);\r\n            });\r\n        }\r\n    }, [authState]);\r\n\r\n    useEffect(() => {\r\n        console.log(globalBussinessUnit, \"=====globalBussinessUnit\");\r\n\r\n        const checkLocalStorage = (event) => {\r\n            // for avoid the check for mcodetails screen\r\n            if (location?.pathname?.includes(\"mcodetail\")) {\r\n                return false;\r\n            }\r\n            const bu = localStorage.getItem('bussinessUnit');\r\n\r\n            console.log(bussinessUnit, \"===localStorageBusinessUnit\");\r\n            console.log(bu, \"===localStorageBusinessUnit 2\");\r\n            // if (event.key === 'bussinessUnit') { // Check if the specific key you're interested in changed\r\n            //     return;\r\n            // }\r\n            if (bu && bu !== bussinessUnit) {\r\n                // setBussinessUnit(bu);\r\n                setIsBUModified(true);\r\n                console.log(bu, \"===localStorageBusinessUnit 3\");\r\n            }\r\n        };\r\n\r\n        window.addEventListener('storage', checkLocalStorage);\r\n        // checkLocalStorage(); // Check initially\r\n\r\n        return () => {\r\n            window.removeEventListener('storage', checkLocalStorage);\r\n        };\r\n    });\r\n\r\n\r\n    return (\r\n        <OracleSettingsContext.Provider\r\n            value={{\r\n                isLoading,\r\n                userDetails,\r\n                bussinessUnit,\r\n                bussinessUnitLists,\r\n                templatesInfo,\r\n                allTemplatesInfo,\r\n                mappingTemplatesInfo,\r\n                refreshData,\r\n                updateBussinessUnit,\r\n                updateBussinessUnitLists,\r\n                updateTemplateLists,\r\n                updateAllTemplate,\r\n                updateMappingTemplatesInfo,\r\n                updateRefreshData\r\n            }}\r\n        >\r\n            {\r\n                (!authState?.isAuthenticated) ? (children) : (\r\n                    <>\r\n                        {\r\n                            (!isPageHavingError) ? (\r\n                                <>\r\n                                    {(userDetails && !isLoading) ? children : (\r\n                                        <div style={{ textAlign: \"center\", position: \"absolute\", width: \"100%\", top: \"50%\" }}>\r\n                                            <CircularProgress />\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            ) : (<SomethingWrong />)\r\n                        }\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                (isBUModified) ? (<>\r\n                    <BuConfirmationBox isBUModified={isBUModified} updateBUModifiedData={updateBUModifiedData} />\r\n                </>) : (null)\r\n            }\r\n        </OracleSettingsContext.Provider>\r\n    );\r\n};\r\n\r\nexport default OracleSettingsContext;","import {\r\n  GET_MCOLIST,\r\n  GET_MCOINFO,\r\n  GET_UPDATEMCODETAILS,\r\n  GET_UPDATE_MCO_RELATED_VALUES,\r\n  RESET_VALUES,\r\n  SET_ALL_CA_MCO_DETAILS,\r\n  SET_UPDATED_ROUTES\r\n} from '../actions/MCODetailsAction';\r\n\r\nconst initialState = {\r\n  isPageHavingIssue: false,\r\n  stepData: 'Create',\r\n  RSMEList: {},\r\n  RMEList: {},\r\n  responseData: {\r\n    itemERPStatus: [],\r\n  },\r\n  affectedPartsData: [],\r\n  exportAffectedPartsData: [],\r\n  currentMcoDetails: null,\r\n  isPropertyFormEdited: false,\r\n  isMaterialFormEdited: false,\r\n  selectedRowData: {},\r\n  selectedRowFormdata: {},\r\n  selectedRowIndex: null,\r\n  templates: [],\r\n  source: [],\r\n  plants: [],\r\n  materialData: [],\r\n  masterData: {},\r\n  templateMappingsInfo: [],\r\n  ORGAllowedTemplateMappings: [],\r\n  previousMcosDetails: [],\r\n  // eachPartMRDetails: {},\r\n  mrDetails: [],\r\n  massUpdateChanges: {},\r\n  lifeCycleData: {},\r\n  systemSetingsDetail: [],\r\n  eachTemplateOptions: {},\r\n  bulkPartTemplates: [],\r\n  caRelatedEachMCODetails: {},\r\n  allCaMCODetails: {},\r\n  mcoSearchLists: {},\r\n  showMaterialForm: false,\r\n  parentMCODetails: {},\r\n  caLifeCycleData: {},\r\n};\r\n\r\nconst MCODetailsReducer = function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_UPDATED_ROUTES:\r\n      return {\r\n        ...state,\r\n        updatedRoutes: action.payload,\r\n    };\r\n    case GET_MCOLIST: {\r\n      return { ...action.payload };\r\n    }\r\n    case GET_MCOINFO: {\r\n      return {\r\n        ...state,\r\n        responseData: {\r\n          ...state.responseData,\r\n          ...action.payload\r\n        },\r\n      };\r\n    }\r\n    case GET_UPDATEMCODETAILS: {\r\n      return {\r\n        ...state,\r\n        responseData: {\r\n          ...state.responseData,\r\n          ...action.payload\r\n        },\r\n      };\r\n    }\r\n    case GET_UPDATE_MCO_RELATED_VALUES: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    }\r\n    case SET_ALL_CA_MCO_DETAILS: {\r\n      return {\r\n        ...state,\r\n        allCaMCODetails: action.payload, // Update the Redux state\r\n      };\r\n    }\r\n    case RESET_VALUES:\r\n      return {\r\n        // Reset to initial state\r\n        ...initialState,\r\n        updatedRoutes: state.updatedRoutes,\r\n      };\r\n  \r\n      \r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default MCODetailsReducer;\r\n","import {\r\n  GET_CURRENT_INSTANCE,\r\n} from '../actions/GlobalDataAction';\r\n\r\nimport { getBasename } from \"app/utils/baseurl\";\r\n\r\nconst baseValues = getBasename();\r\n\r\nconst initialState = {\r\n  segment: baseValues?.segment || {},\r\n  instanceType: baseValues?.instanceType || {},\r\n};\r\n\r\nconst GlobalDataReducer = function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CURRENT_INSTANCE: {\r\n      return { ...state };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default GlobalDataReducer;\r\n","import {\r\n  GET_BU_AND_INSTANSE,\r\n} from '../actions/GlobalBUandInstanceAction';\r\n\r\nconst initialState = {\r\n  bu: '',\r\n  instance: '',\r\n  systemName: \"\"\r\n};\r\n\r\nconst GlobalBUandInstanceReducer = function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BU_AND_INSTANSE: {\r\n      return { ...state, ...action.payload };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default GlobalBUandInstanceReducer;","import { combineReducers } from 'redux';\r\n// import NavigationReducer from './NavigationReducer';\r\n// import NotificationReducer from './NotificationReducer';\r\nimport MCODetailsReducer from './MCODetailsReducer';\r\nimport GlobalDataReducer from './GlobalDataReducer';\r\nimport GlobalBUandInstanceReducer from './GlobalBUandInstanceReducer';\r\n\r\nconst RootReducer = combineReducers({\r\n  // notifications: NotificationReducer,\r\n  // navigations: NavigationReducer,\r\n  mcoDetails: MCODetailsReducer,\r\n  globalData: GlobalDataReducer,\r\n  globalBUandInstance: GlobalBUandInstanceReducer\r\n});\r\n\r\nexport default RootReducer;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from './reducers/RootReducer';\r\n\r\nconst initialState = {};\r\nconst middlewares = [thunk];\r\nlet devtools = (x) => x;\r\n\r\nif (\r\n  process &&\r\n  process.env.NODE_ENV !== 'production' &&\r\n  process.browser &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n) {\r\n  devtools = window.__REDUX_DEVTOOLS_EXTENSION__();\r\n}\r\n\r\nexport const Store = createStore(\r\n  RootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middlewares), devtools)\r\n);\r\n","import { useContext } from 'react'\r\nimport SettingsContext from 'app/contexts/SettingsContext'\r\n\r\nconst useSettings = () => useContext(SettingsContext)\r\n\r\nexport default useSettings\r\n","import { MatxSuspense } from 'app/components';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { MatxLayouts } from './index';\r\n\r\nconst MatxLayout = (props) => {\r\n  const { settings } = useSettings();\r\n  const Layout = MatxLayouts[settings.activeLayout];\r\n\r\n  return (\r\n    <MatxSuspense>\r\n      <Layout {...props} />\r\n    </MatxSuspense>\r\n  );\r\n};\r\n\r\nexport default MatxLayout;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE  } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nimport { Store } from \"app/redux/Store\";\r\nimport { update_generalValues } from 'app/redux/actions/MCODetailsAction';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\nexport class UserService {\r\n  getAllUsersList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/users/getUsers`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getUsers\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  addnewUser = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/addUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewUser\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateUser = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/users/updateUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateUser\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteUser = (ids) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/users/deleteUser`,\r\n        { data: { ids } },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting users:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n  validateUser = () => {\r\n    console.log(\"validateUser called with URL:\", `${BACKEND_API_URL}/users/validateUser`);\r\n    console.log(\"Headers being sent:\", REACT_APP_BACKEND_API_HEADER);\r\n  \r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/users/validateUser`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        console.log(\"validateUser response:\", res);\r\n  \r\n        if (res.status === 200) {\r\n          console.log(\"validateUser success:\", res.data);\r\n          return res.data;\r\n        }\r\n  \r\n        console.warn(\"validateUser unexpected status:\", res.status);\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"validateUser request failed:\", error);\r\n  \r\n        Store.dispatch(update_generalValues({\r\n          isPageHavingIssue: true\r\n        }));\r\n  \r\n        throw error;\r\n      });\r\n  };\r\n  \r\n  requestForAccess = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/requestForAccessApp`,\r\n        { data: data },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error requestForAccessApp users:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  importUser = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/bulkAddUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddUser\", e);\r\n        return [];\r\n      });\r\n  };\r\n  exportUser = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/bulkExportUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath.replace(\"downloads/\", \"\") \r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportTemplate:', error);\r\n        throw error;\r\n      });\r\n  };\r\n  downloadSampleFile = (fileName) => {\r\n    window.open(`http://localhost:8086/users/bulkExportUser/${fileName}`);\r\n  }\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\n\r\nexport class templateService {\r\n  // ===============Template=====================\r\n\r\n  // get the templateList\r\n  getAllTemplateList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/template/gettemplate`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTemplateDetails\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  addnewTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/template/addTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n  getTemplateById = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/template/getTemplateById`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTemplateById\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTemplate = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/template/updateTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTemplate = (ids) => {\r\n    return ApiInstance.delete(\r\n      `${BACKEND_API_URL}/template/deleteTemplate`,\r\n      { data: { ids } },\r\n      REACT_APP_BACKEND_API_HEADER\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting plant:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  importTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/template/bulkAddTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddTemplate\", e);\r\n        return [];\r\n      });\r\n  };\r\n  exportTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/bulkExportTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath.replace(\"downloads/\", \"\") \r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportTemplate:', error);\r\n        throw error;\r\n      });\r\n  };\r\n  downloadSampleFile = (fileName) => {\r\n    window.open(`${BACKEND_API_URL}/${fileName}`);\r\n  }\r\n  // ===============Plant=====================\r\n}\r\n","import jwt from 'jwt-simple';\r\nimport { Buffer } from 'buffer';\r\n\r\nexport const getToken = () => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            const getToken = window.localStorage.getItem('okta-token-storage')\r\n            const sessionToken = (getToken) ? JSON.parse(getToken)?.accessToken?.accessToken : null;\r\n            resolve(sessionToken);\r\n        }, 500);\r\n    });\r\n}\r\n\r\nexport const getOKTAAccessKey = () => {\r\n    const getToken = window.localStorage.getItem('okta-token-storage');\r\n    if (!getToken) {\r\n        console.error('Token storage item not found');\r\n        return null;\r\n    }\r\n\r\n    const parsedToken = JSON.parse(getToken);\r\n    const accessToken = parsedToken?.accessToken?.accessToken;\r\n    const curruid = parsedToken?.accessToken?.claims?.uid;\r\n    const userinfo = parsedToken?.idToken?.claims;\r\n\r\n    if (!accessToken || !userinfo) {\r\n        console.error('Access token or userinfo not found in token storage item');\r\n        return null;\r\n    }\r\n\r\n    const payload = {\r\n        exp: Math.floor(Date.now() / 1000) + (60 * 60), // expires in 1 hour\r\n        data: {\r\n            accessToken: accessToken,\r\n            userinfo: {\r\n                username: userinfo?.name,\r\n                email: userinfo?.email,\r\n                uid: curruid\r\n            }\r\n        },\r\n    };\r\n\r\n    const secret = 'EMRPRoDucTDaTa';\r\n    let token = null;\r\n    try {\r\n        window.Buffer = Buffer;\r\n        token = jwt.encode(payload, secret, 'HS512')\r\n    } catch (error) {\r\n        console.error('Error encoding JWT:', error);\r\n        return null;\r\n    }\r\n    return token;\r\n}","import { differenceInSeconds } from 'date-fns';\r\n\r\nexport const convertHexToRGB = (hex) => {\r\n  // check if it's a rgba\r\n  if (hex.match('rgba')) {\r\n    let triplet = hex.slice(5).split(',').slice(0, -1).join(',');\r\n    return triplet;\r\n  }\r\n\r\n  let c;\r\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n    c = hex.substring(1).split('');\r\n    if (c.length === 3) {\r\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n    }\r\n    c = '0x' + c.join('');\r\n\r\n    return [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',');\r\n  }\r\n};\r\n\r\nexport function debounce(func, wait, immediate) {\r\n  let timeout;\r\n  return function () {\r\n    let context = this,\r\n      args = arguments;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    }, wait);\r\n    if (immediate && !timeout) func.apply(context, args);\r\n  };\r\n}\r\n\r\nexport function isMobile() {\r\n  if (window) {\r\n    return window.matchMedia(`(max-width: 767px)`).matches;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isMdScreen() {\r\n  if (window) {\r\n    return window.matchMedia(`(max-width: 1199px)`).matches;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction currentYPosition(elm) {\r\n  if (!window && !elm) {\r\n    return;\r\n  }\r\n  if (elm) return elm.scrollTop;\r\n  // Firefox, Chrome, Opera, Safari\r\n  if (window.pageYOffset) return window.pageYOffset;\r\n  // Internet Explorer 6 - standards mode\r\n  if (document.documentElement && document.documentElement.scrollTop)\r\n    return document.documentElement.scrollTop;\r\n  // Internet Explorer 6, 7 and 8\r\n  if (document.body.scrollTop) return document.body.scrollTop;\r\n  return 0;\r\n}\r\n\r\nfunction elmYPosition(elm) {\r\n  let y = elm.offsetTop;\r\n  let node = elm;\r\n  while (node.offsetParent && node.offsetParent !== document.body) {\r\n    node = node.offsetParent;\r\n    y += node.offsetTop;\r\n  }\r\n  return y;\r\n}\r\n\r\nexport function scrollTo(scrollableElement, elmID) {\r\n  let elm = document.getElementById(elmID);\r\n\r\n  if (!elmID || !elm) {\r\n    return;\r\n  }\r\n\r\n  let startY = currentYPosition(scrollableElement);\r\n  let stopY = elmYPosition(elm);\r\n\r\n  let distance = stopY > startY ? stopY - startY : startY - stopY;\r\n  if (distance < 100) {\r\n    scrollTo(0, stopY);\r\n    return;\r\n  }\r\n  let speed = Math.round(distance / 50);\r\n  if (speed >= 20) speed = 20;\r\n  let step = Math.round(distance / 25);\r\n  let leapY = stopY > startY ? startY + step : startY - step;\r\n  let timer = 0;\r\n  if (stopY > startY) {\r\n    for (let i = startY; i < stopY; i += step) {\r\n      setTimeout(\r\n        (function (leapY) {\r\n          return () => {\r\n            scrollableElement.scrollTo(0, leapY);\r\n          };\r\n        })(leapY),\r\n        timer * speed\r\n      );\r\n      leapY += step;\r\n      if (leapY > stopY) leapY = stopY;\r\n      timer++;\r\n    }\r\n    return;\r\n  }\r\n  for (let i = startY; i > stopY; i -= step) {\r\n    setTimeout(\r\n      (function (leapY) {\r\n        return () => {\r\n          scrollableElement.scrollTo(0, leapY);\r\n        };\r\n      })(leapY),\r\n      timer * speed\r\n    );\r\n    leapY -= step;\r\n    if (leapY < stopY) leapY = stopY;\r\n    timer++;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getTimeDifference(date) {\r\n  let difference = differenceInSeconds(new Date(), date);\r\n\r\n  if (difference < 60) return `${Math.floor(difference)} sec`;\r\n  else if (difference < 3600) return `${Math.floor(difference / 60)} min`;\r\n  else if (difference < 86400) return `${Math.floor(difference / 3660)} h`;\r\n  else if (difference < 86400 * 30) return `${Math.floor(difference / 86400)} d`;\r\n  else if (difference < 86400 * 30 * 12) return `${Math.floor(difference / 86400 / 30)} mon`;\r\n  else return `${(difference / 86400 / 30 / 12).toFixed(1)} y`;\r\n}\r\n\r\nexport function generateRandomId() {\r\n  const crypto = window.crypto || window.msCrypto;\r\n  let array = new Uint32Array(1);\r\n  crypto.getRandomValues(array); // Compliant for security-sensitive use cases\r\n  const uid = array[0];\r\n  return uid;\r\n}\r\n\r\nexport function getQueryParam(prop) {\r\n  let params = {};\r\n  let search = decodeURIComponent(\r\n    window.location.href.slice(window.location.href.indexOf('?') + 1)\r\n  );\r\n  let definitions = search.split('&');\r\n  definitions.forEach(function (val, key) {\r\n    let parts = val.split('=', 2);\r\n    params[parts[0]] = parts[1];\r\n  });\r\n  return prop && prop in params ? params[prop] : params;\r\n}\r\n\r\nexport function classList(classes) {\r\n  return Object.entries(classes)\r\n    .filter((entry) => entry[1])\r\n    .map((entry) => entry[0])\r\n    .join(' ');\r\n}\r\n\r\nexport const flat = (array) => {\r\n  let result = [];\r\n  array.forEach(function (a) {\r\n    result.push(a);\r\n    if (Array.isArray(a.children)) {\r\n      result = result.concat(flat(a.children));\r\n    }\r\n  });\r\n  return result;\r\n};\r\n// Sorted latest data get passed to bulkExport function\r\nexport const sortExportData = (data, sortInfo) => {\r\n  if (!sortInfo || !sortInfo.id) {\r\n    // If sortInfo is null or does not have an id, return original order\r\n    return data;\r\n  }\r\n\r\n  return [...data].sort((a, b) => {\r\n    const field = sortInfo.id || sortInfo.name || sortInfo.columnName;\r\n    const aValue = a[field]?.toLowerCase() || '';\r\n    const bValue = b[field]?.toLowerCase() || '';\r\n    if (aValue < bValue) {\r\n      return sortInfo.dir === 1 ? -1 : 1;\r\n    }\r\n    if (aValue > bValue) {\r\n      return sortInfo.dir === 1 ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const sortInsideRowData = (data) => {\r\n  let sortedNameDivs = [];\r\n  let sortedMvoTemplateToDivs = [];\r\n\r\n  return data.map(item => {\r\n    if (item.name) {\r\n      const nameDivs = item.name.match(/<div>.*?<\\/div>/g) || [];\r\n      sortedNameDivs = nameDivs.sort((a, b) => {\r\n        const textA = a.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        const textB = b.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        return textA.localeCompare(textB);\r\n      });\r\n    }\r\n\r\n    if (item.MVO_TEMPLATE_TO) {\r\n      const mvoTemplateToDivs = item.MVO_TEMPLATE_TO.match(/<div>.*?<\\/div>/g) || [];\r\n      sortedMvoTemplateToDivs = mvoTemplateToDivs.sort((a, b) => {\r\n        const textA = a.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        const textB = b.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        return textA.localeCompare(textB);\r\n      });\r\n    }\r\n\r\n    return {\r\n      ...item,\r\n      name: sortedNameDivs.join(''),\r\n      MVO_TEMPLATE_TO: sortedMvoTemplateToDivs.join('')\r\n    };\r\n  });\r\n};\r\n\r\nexport function sortAndReorderData(filterData) {\r\n  // Function to sort object values alphabetically (excluding \"Entity\")\r\n  function sortObjectValues(obj) {\r\n      return {\r\n          Entity: obj.Entity,\r\n          ...Object.fromEntries(\r\n              Object.entries(obj)\r\n                  .filter(([key]) => key !== \"Entity\")\r\n                  .sort((a, b) => a[1].localeCompare(b[1])) // Sort values alphabetically\r\n          )\r\n      };\r\n  }\r\n\r\n  // Find the \"PlantGroup\" object without removing it\r\n  const plantGroup = filterData.find(item => item.Entity === \"PlantGroup\");\r\n\r\n  // Sort the \"PlantGroup\" object (if found)\r\n  const sortedPlantGroup = plantGroup ? sortObjectValues(plantGroup) : null;\r\n\r\n  // Sort the rest of the objects based on \"Entity\" alphabetically, excluding \"PlantGroup\"\r\n  const sortedOtherEntities = filterData\r\n      .filter(item => item.Entity !== \"PlantGroup\") // Keep everything except \"PlantGroup\"\r\n      .map(sortObjectValues)\r\n      .sort((a, b) => a.Entity.localeCompare(b.Entity));\r\n\r\n  // Return the final array with \"PlantGroup\" on top (if exists)\r\n  return sortedPlantGroup ? [sortedPlantGroup, ...sortedOtherEntities] : sortedOtherEntities;\r\n}\r\n\r\nexport const caseInsensitiveSort = (a, b) => {\r\n  return a.localeCompare(b, undefined, { sensitivity: 'base' });\r\n};","//import React from \"react\";\r\n\r\nexport const getBasename = () => {\r\n    const path = window.location.pathname;\r\n    let currentInstance = \"\";\r\n    if (path === \"/\") {\r\n        return {\r\n            segment: path,\r\n            instanceType: currentInstance,\r\n        };\r\n    }\r\n    if (path.includes(\"login\")) {\r\n        return {\r\n            segment: \"/\",\r\n            instanceType: currentInstance,\r\n        };\r\n    }\r\n\r\n    let pathArray = path.split('/');\r\n    pathArray = pathArray.filter(fitem => fitem !== \"\");\r\n\r\n    let returnVal = '/';\r\n    if (pathArray.length > 1) {\r\n        if (pathArray[1] === \"Cloud\" || pathArray[1] === \"onPrem\") {\r\n            if (pathArray[0] === \"Dev\") {\r\n                currentInstance = pathArray[1];\r\n                returnVal = pathArray[0] + \"/\";\r\n            }\r\n        }\r\n    } else if (pathArray.length === 1 && pathArray[0] === \"Dev\") {\r\n        return {\r\n            segment: \"/\",\r\n            instanceType: currentInstance,\r\n        };\r\n    }\r\n    return {\r\n        segment: returnVal,\r\n        instanceType: currentInstance,\r\n    }\r\n};","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class BUService {\r\n  getAllBuList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/bu/getBusinessUnit`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getAllBuList\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  getBusinessUnitbyid = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/bu/getBusinessUnitbyid`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getBusinessUnitbyid\", e);\r\n        return [];\r\n      });\r\n  };\r\n  addnewBU = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/bu/addBusinessUnit`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewBU\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateBU = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/bu/updateBusinessUnit`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateBU\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteBU = (ids) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/bu/deleteBusinessUnit`,\r\n        { data: { ids } },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting bu:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","const textLight = {\r\n    primary: 'rgba(52, 49, 76, 1)',\r\n    secondary: 'rgba(52, 49, 76, 0.54)',\r\n    disabled: 'rgba(52, 49, 76, 0.38)',\r\n    hint: 'rgba(52, 49, 76, 0.38)',\r\n}\r\n\r\nconst textDark = {\r\n    primary: '#fff',\r\n    secondary: 'rgba(255, 255, 255, 0.7)',\r\n    disabled: 'rgba(255, 255, 255, 0.64)',\r\n    hint: 'rgba(255, 255, 255, 0.64)',\r\n};\r\n\r\nconst secondaryColor = {\r\n    light: '#f9a352',\r\n    main: '#ff9e43',\r\n    dark: '#ff932e',\r\n    contrastText: textLight.primary,\r\n}\r\nconst errorColor = {\r\n    main: '#FF3D57',\r\n}\r\n\r\nexport const themeColors = {\r\n    whitePurple: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#ffffff',\r\n                contrastText: textLight.primary,\r\n            },\r\n            secondary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    whiteBlue: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#ffffff',\r\n                contrastText: textLight.primary,\r\n            },\r\n            secondary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            text: textLight,\r\n        },\r\n    },\r\n    slateDark1: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#005686',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    slateDark2: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#1a2038',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    purple1: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: secondaryColor,\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    purple2: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#6a75c9',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    purpleDark1: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    purpleDark2: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#6a75c9',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    blue: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FFAF38',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    blueDark: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FF4F30',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    red: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#e53935',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FFAF38',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n        },\r\n    },\r\n}\r\n\r\nexport const themeShadows = [\r\n    'none',\r\n    '0px 2px 1px -1px rgba(0, 0, 0, 0.06),0px 1px 1px 0px rgba(0, 0, 0, 0.042),0px 1px 3px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 1px -2px rgba(0, 0, 0, 0.06),0px 2px 2px 0px rgba(0, 0, 0, 0.042),0px 1px 5px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 3px -2px rgba(0, 0, 0, 0.06),0px 3px 4px 0px rgba(0, 0, 0, 0.042),0px 1px 8px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 2px 4px -1px rgba(0, 0, 0, 0.06),0px 4px 5px 0px rgba(0, 0, 0, 0.042),0px 1px 10px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 5px -1px rgba(0, 0, 0, 0.06),0px 5px 8px 0px rgba(0, 0, 0, 0.042),0px 1px 14px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 5px -1px rgba(0, 0, 0, 0.06),0px 6px 10px 0px rgba(0, 0, 0, 0.042),0px 1px 18px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 4px 5px -2px rgba(0, 0, 0, 0.06),0px 7px 10px 1px rgba(0, 0, 0, 0.042),0px 2px 16px 1px rgba(0, 0, 0, 0.036)',\r\n    '0px 5px 5px -3px rgba(0, 0, 0, 0.06),0px 8px 10px 1px rgba(0, 0, 0, 0.042),0px 3px 14px 2px rgba(0, 0, 0, 0.036)',\r\n    '0px 5px 6px -3px rgba(0, 0, 0, 0.06),0px 9px 12px 1px rgba(0, 0, 0, 0.042),0px 3px 16px 2px rgba(0, 0, 0, 0.036)',\r\n    '0px 6px 6px -3px rgba(0, 0, 0, 0.06),0px 10px 14px 1px rgba(0, 0, 0, 0.042),0px 4px 18px 3px rgba(0, 0, 0, 0.036)',\r\n    '0px 6px 7px -4px rgba(0, 0, 0, 0.06),0px 11px 15px 1px rgba(0, 0, 0, 0.042),0px 4px 20px 3px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 8px -4px rgba(0, 0, 0, 0.06),0px 12px 17px 2px rgba(0, 0, 0, 0.042),0px 5px 22px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 8px -4px rgba(0, 0, 0, 0.06),0px 13px 19px 2px rgba(0, 0, 0, 0.042),0px 5px 24px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 9px -4px rgba(0, 0, 0, 0.06),0px 14px 21px 2px rgba(0, 0, 0, 0.042),0px 5px 26px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 9px -5px rgba(0, 0, 0, 0.06),0px 15px 22px 2px rgba(0, 0, 0, 0.042),0px 6px 28px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 10px -5px rgba(0, 0, 0, 0.06),0px 16px 24px 2px rgba(0, 0, 0, 0.042),0px 6px 30px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 11px -5px rgba(0, 0, 0, 0.06),0px 17px 26px 2px rgba(0, 0, 0, 0.042),0px 6px 32px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 9px 11px -5px rgba(0, 0, 0, 0.06),0px 18px 28px 2px rgba(0, 0, 0, 0.042),0px 7px 34px 6px rgba(0, 0, 0, 0.036)',\r\n    '0px 9px 12px -6px rgba(0, 0, 0, 0.06),0px 19px 29px 2px rgba(0, 0, 0, 0.042),0px 7px 36px 6px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n];","import { themeShadows } from './themeColors';\r\n\r\nexport const components = {\r\n  MuiTable: {\r\n    styleOverrides: {\r\n      root: {\r\n        tableLayout: 'fixed',\r\n      },\r\n    },\r\n  },\r\n  MuiTableCell: {\r\n    styleOverrides: {\r\n      head: {\r\n        fontSize: '13px',\r\n        padding: '12px 0px',\r\n      },\r\n      root: {\r\n        fontSize: '14px',\r\n        whiteSpace: 'pre-wrap',\r\n        wordBreak: 'break-all',\r\n        padding: '12px 8px 12px 0px',\r\n      },\r\n    },\r\n  },\r\n  MUIDataTableSelectCell: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: 12,\r\n      },\r\n    },\r\n  },\r\n  MUIDataTableHeadCell: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: 16,\r\n      },\r\n    },\r\n  },\r\n  MUIDataTableBodyCell: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: 8,\r\n      },\r\n    },\r\n  },\r\n  MuiButton: {\r\n    styleOverrides: {\r\n      root: {\r\n        fontSize: '12px',\r\n        textTransform: 'none',\r\n        fontWeight: '400',\r\n      },\r\n      contained: {\r\n        boxShadow: themeShadows[8],\r\n      },\r\n    },\r\n  },\r\n  MuiCssBaseline: {\r\n    styleOverrides: {\r\n      '*': {\r\n        boxSizing: 'border-box',\r\n      },\r\n      html: {\r\n        MozOsxFontSmoothing: 'grayscale',\r\n        WebkitFontSmoothing: 'antialiased',\r\n        height: '100%',\r\n        width: '100%',\r\n      },\r\n      body: {\r\n        height: '100%',\r\n      },\r\n      a: {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      },\r\n      '#root': {\r\n        height: '100%',\r\n      },\r\n      '#nprogress .bar': {\r\n        zIndex: '2000 !important',\r\n      },\r\n    },\r\n  },\r\n  MuiFab: {\r\n    styleOverrides: {\r\n      root: {\r\n        boxShadow: themeShadows[12],\r\n      },\r\n    },\r\n  },\r\n  MuiAccordion: {\r\n    styleOverrides: {\r\n      root: {\r\n        '&:before': {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  MuiTooltip: {\r\n    styleOverrides: {\r\n      tooltip: {\r\n        fontSize: '11px',\r\n      },\r\n    },\r\n  },\r\n  MuiMenuItem: {\r\n    styleOverrides: {\r\n      root: {\r\n        fontSize: '0.875rem',\r\n      },\r\n    },\r\n  },\r\n  MuiExpansionPanel: {\r\n    styleOverrides: {\r\n      root: {\r\n        '&:before': {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  MuiCard: {\r\n    styleOverrides: {\r\n      root: {\r\n        borderRadius: '8px',\r\n        boxShadow:\r\n          '0px 3px 3px -2px rgb(0 0 0 / 6%), 0px 3px 4px 0px rgb(0 0 0 / 4%), 0px 1px 8px 0px rgb(0 0 0 / 4%) !important',\r\n      },\r\n    },\r\n  },\r\n};\r\n","import { red } from '@mui/material/colors';\r\nimport { components } from './components';\r\n\r\nconst themeOptions = {\r\n  typography: {\r\n    fontSize: 14,\r\n    body1: { fontSize: '14px' },\r\n  },\r\n\r\n  status: { danger: red[500] },\r\n  components: { ...components },\r\n};\r\n\r\nexport default themeOptions;\r\n","import { createTheme } from '@mui/material';\r\nimport { forEach, merge } from 'lodash';\r\nimport { themeColors } from './themeColors';\r\nimport themeOptions from './themeOptions';\r\n\r\nfunction createMatxThemes() {\r\n  let themes = {};\r\n\r\n  forEach(themeColors, (value, key) => {\r\n    themes[key] = createTheme(merge({}, themeOptions, value));\r\n  });\r\n\r\n  return themes;\r\n}\r\nexport const themes = createMatxThemes();\r\n","import { themes } from '../MatxTheme/initThemes';\r\nimport layout1Settings from './Layout1/Layout1Settings';\r\n\r\n// UPDATE BELOW CODE\r\nexport const MatxLayoutSettings = {\r\n  activeLayout: 'layout1', // layout1, layout2\r\n  activeTheme: 'blue', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  perfectScrollbar: true,\r\n\r\n  themes: themes,\r\n  layout1Settings, // open Layout1/Layout1Settings.js\r\n\r\n  secondarySidebar: {\r\n    show: true,\r\n    open: false,\r\n    theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  },\r\n  // Footer options\r\n  footer: {\r\n    show: true,\r\n    fixed: false,\r\n    theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  },\r\n};\r\n","const Layout1Settings = {\r\n  leftSidebar: {\r\n    show: true,\r\n    mode: 'full', // full, close, compact, mobile,\r\n    theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n    bgimgurl: '/assets/images/sidebar/sidebar-bg-dark.jpg',\r\n  },\r\n  topbar: {\r\n    show: true,\r\n    fixed: true,\r\n    theme: 'whiteBlue', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  },\r\n};\r\n\r\nexport default Layout1Settings;\r\n","import React, { createContext, useState, useMemo } from 'react'\r\nimport { merge } from 'lodash'\r\nimport { MatxLayoutSettings } from 'app/components/MatxLayout/settings'\r\n\r\nconst SettingsContext = createContext({\r\n    settings: MatxLayoutSettings,\r\n    updateSettings: () => { },\r\n})\r\n\r\nexport const SettingsProvider = ({ settings, children }) => {\r\n    const [currentSettings, setCurrentSettings] = useState(\r\n        settings || MatxLayoutSettings\r\n    )\r\n\r\n    const handleUpdateSettings = (update = {}) => {\r\n        // Fixed typo from \"marged\" to \"merged\"\r\n        const merged = merge({}, currentSettings, update);\r\n        setCurrentSettings(merged);\r\n    }\r\n\r\n    // Use useMemo to ensure the context value object is stable unless currentSettings changes\r\n    const contextValue = useMemo(() => ({\r\n        settings: currentSettings,\r\n        updateSettings: handleUpdateSettings,\r\n    }), [currentSettings]);\r\n\r\n    return (\r\n        <SettingsContext.Provider value={contextValue}>\r\n            {children}\r\n        </SettingsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SettingsContext\r\n","\r\nexport const formatMessage = (template, replaceArray) => {\r\n    let formattedMessage = template;\r\n    // Replace placeholders in the message template\r\n    replaceArray.forEach((value, index) => {\r\n        const placeholder = new RegExp(`\\\\{${index}\\\\}`, 'g');\r\n        formattedMessage = formattedMessage?.replace(placeholder, value);\r\n    });\r\n    return formattedMessage;\r\n}\r\n\r\nexport const sortDataByKey = (data, key) => {\r\n  if (!Array.isArray(data)) {\r\n    console.error('Invalid data: Expected an array');\r\n    return [];\r\n  }\r\n\r\n  return data.sort((a, b) => {\r\n    const valueA = a[key] !== undefined ? a[key].toString().toLowerCase() : '';\r\n    const valueB = b[key] !== undefined ? b[key].toString().toLowerCase() : '';\r\n\r\n    if (!isNaN(valueA) && !isNaN(valueB)) {\r\n      return parseFloat(valueA) - parseFloat(valueB);\r\n    }\r\n\r\n    if (valueA < valueB) return -1;\r\n    if (valueA > valueB) return 1;\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const sortDataByKeyAllowableOrgTemplates = (data, key) => {\r\n  return data.sort((a, b) => {\r\n    const valueA = a.details[key] || '';\r\n    const valueB = b.details[key] || '';\r\n    return valueA.toLowerCase().localeCompare(valueB.toLowerCase());\r\n  });\r\n}; \r\n\r\nexport const sortByLabel = (data) => {\r\n  return data.sort((a, b) => {\r\n    const labelA = a.label ? a.label.toLowerCase() : '';\r\n    const labelB = b.label ? b.label.toLowerCase() : '';\r\n    return labelA.localeCompare(labelB);\r\n  });\r\n};","import React from 'react';\r\n\r\nexport const MatxLayouts = { layout1: React.lazy(() => import('./Layout1/Layout1')) };\r\n","import React, { useEffect } from \"react\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nexport default function Loader(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        setOpen(props.show)\r\n    }, [props.show]);\r\n\r\n    return (\r\n        <div>\r\n            <Backdrop\r\n                sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                open={open}>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <CircularProgress color=\"inherit\" style={{\r\n                            zIndex: 9999, // Set your desired z-index value\r\n                        }} />\r\n                    </div>\r\n                    <div>Please wait...</div>\r\n                </div>\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class SystemSettingsService {\r\n    getAllsystemSetupList = () => {\r\n        return ApiInstance\r\n            .get(\r\n                `${BACKEND_API_URL}/systemSettings/getSystemSettings`,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"getSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n    getSystemSettingsbyid = (data) => {\r\n        return ApiInstance\r\n            .post(\r\n                `${BACKEND_API_URL}/systemSettings/getSystemSettingsbyid`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"getSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n\r\n    addSystemSettings = (data) => {\r\n        return ApiInstance\r\n            .post(\r\n                `${BACKEND_API_URL}/systemSettings/addSystemSettings`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"addnewSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n\r\n    updateSystemSettings = (data) => {\r\n        return ApiInstance\r\n            .put(\r\n                `${BACKEND_API_URL}/systemSettings/updateSystemSettings`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"updateSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n\r\n    deleteSystemSettings = (ids) => {\r\n        return ApiInstance\r\n            .delete(\r\n                `${BACKEND_API_URL}/systemSettings/deleteSystemSettings`,\r\n                { data: ids },\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error deleting SystemSettings:\", error);\r\n                throw error;\r\n            });\r\n    };\r\n}\r\n","\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nconst CustomAlertBox = ({ openAlert, openDesc, setOpenAlert }) => {\r\n    const vertical = 'top';\r\n    const horizontal = 'center';\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={openAlert}\r\n                // autoHideDuration={30 * 1000} // 30 sec\r\n                onClose={(event, reason) => {\r\n                    if (reason === 'clickaway') {\r\n                        return;\r\n                    }\r\n                    setOpenAlert(false);\r\n                }}\r\n                key={vertical + horizontal}\r\n                sx={{ top: '70px!important' }} // Set top to 70px\r\n            >\r\n\r\n                <Alert\r\n                    onClose={(event, reason) => {\r\n                        if (reason === 'clickaway') {\r\n                            return;\r\n                        }\r\n                        setOpenAlert(false);\r\n                    }}\r\n                    severity={openDesc.severity}\r\n                    sx={{ width: '100%', maxHeight: \"calc(100vh - 100px)\" }}\r\n                >\r\n                    {(openDesc.severity === \"success\") ? (<AlertTitle>Success</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"warning\") ? (<AlertTitle>Warning</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"error\") ? (<AlertTitle>Error</AlertTitle>) : (<></>)}\r\n                    {\r\n                        (openDesc?.type === 'validationcheck') ? (\r\n                            <>\r\n                                <div style={{ fontWeight: \"bold\" }}>\r\n                                    Please verify the below items.\r\n                                </div>\r\n                                <ul>\r\n                                    {openDesc.desc}\r\n                                </ul>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {openDesc.desc}\r\n                            </>\r\n                        )\r\n                    }\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomAlertBox;","export const GET_BU_AND_INSTANSE = 'GET_BU_AND_INSTANSE';\r\n\r\nexport const updateGlobalBUandInstance = (data) => async (dispatch) => {\r\n    try {\r\n      console.log(data, 'updateGlobalBUandInstance data')\r\n      dispatch({\r\n        type: GET_BU_AND_INSTANSE,\r\n        payload: data,\r\n      })\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  };","import axios from 'axios';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\nconst ApiInstance = axios.create();\r\n\r\n// Request interceptor\r\nApiInstance.interceptors.request.use(\r\n    (config) => {\r\n        // Do something before request is sent\r\n        // For example, add an authorization header for specific APIs\r\n        config.headers.Authorization = 'Bearer ' + getOKTAAccessKey();\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Response interceptor\r\nApiInstance.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    (error) => {\r\n        console.error('Error response:', error.response);\r\n        return Promise.reject((error?.response?.data) || 'Something went wrong!')\r\n    }\r\n);\r\n\r\nexport default ApiInstance;","\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nconst CustomAlertBox = ({ openAlert, openDesc, setOpenAlert }) => {\r\n    const vertical = 'top';\r\n    const horizontal = 'center';\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={openAlert}\r\n                // autoHideDuration={30 * 1000} // 30 sec\r\n                onClose={(event, reason) => {\r\n                    if (reason === 'clickaway') {\r\n                        return;\r\n                    }\r\n                    setOpenAlert(false);\r\n                }}\r\n                key={vertical + horizontal}\r\n                sx={{ top: '70px!important' }} // Set top to 70px\r\n            >\r\n\r\n                <Alert\r\n                    onClose={(event, reason) => {\r\n                        if (reason === 'clickaway') {\r\n                            return;\r\n                        }\r\n                        setOpenAlert(false);\r\n                    }}\r\n                    severity={openDesc.severity}\r\n                    sx={{ width: '100%', maxHeight: \"calc(100vh - 100px)\" }}\r\n                >\r\n                    {(openDesc.severity === \"success\") ? (<AlertTitle>Success</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"warning\") ? (<AlertTitle>Warning</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"error\") ? (<AlertTitle>Error</AlertTitle>) : (<></>)}\r\n                    {\r\n                        (openDesc?.type === 'validationcheck') ? (\r\n                            <>\r\n                                <div style={{ fontWeight: \"bold\" }}>\r\n                                    Please verify the below items.\r\n                                </div>\r\n                                <ul>\r\n                                    {openDesc.desc}\r\n                                </ul>\r\n                            </>\r\n                        ) : (<>\r\n                            {openDesc.desc}\r\n                        </>)\r\n                    }\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomAlertBox;","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nexport class MassUpdate {\r\n    massUpdatePartDescription = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/massUpdate/massUpdatePartDescription`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddTemplate\", e);\r\n        return [];\r\n      });\r\n  }\r\n  getMyReport = (data) => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/massUpdate/myReport`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"myReport\", e);\r\n        return [];\r\n      });\r\n  }\r\n  deleteReport = (ids) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/massUpdate/deleteMyReport`,\r\n        { data: { ids } },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting bu:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n  downloadSampleFile=(fileName)=>{\r\n    window.open(`${BACKEND_API_URL}/${fileName}`);\r\n  }\r\n}","// EMRPDH SERVER\r\nexport const BACKEND_API_URL = process.env.REACT_APP_PRO_MODE;\r\n\r\n// React Okta\r\nexport const REACT_APP_EMRPDH_OKTA_CLIENT_ID = process.env.REACT_APP_EMRPDH_OKTA_CLIENT_ID;\r\nexport const REACT_APP_EMRPDH_OKTA_ISSUER = process.env.REACT_APP_EMRPDH_OKTA_ISSUER;\r\nexport const REACT_APP_EMRPDH_OKTA_DOMAIN = process.env.REACT_APP_EMRPDH_OKTA_DOMAIN;\r\n\r\nexport const REACT_APP_ENOVIA_API_URL = process.env.REACT_APP_ENOVIA_API_URL;\r\nexport const REACT_APP_ENOVIA_CLOUD_API_URL = process.env.REACT_APP_ENOVIA_CLOUD_API_URL;\r\nexport const REACT_APP_MULSOFT_API_URL = process.env.REACT_APP_MULSOFT_API_URL;\r\n\r\nexport const REACT_APP_PLM_API_KEY = process.env.REACT_APP_PLM_API_KEY;\r\nexport const REACT_APP_PLM_API_KEY_VALUE = process.env.REACT_APP_PLM_API_KEY_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_ENRYPT_KEY_VALUE = process.env.REACT_APP_MULESOFT_ENRYPT_KEY_VALUE;\r\nexport const REACT_APP_MULESOFT_ENRYPT_INIT_VECTOR_VALUE = process.env.REACT_APP_MULESOFT_ENRYPT_INIT_VECTOR_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_API_CLIENT_ID = process.env.REACT_APP_MULESOFT_API_CLIENT_ID;\r\nexport const REACT_APP_MULESOFT_API_CLIENT_ID_VALUE = process.env.REACT_APP_MULESOFT_API_CLIENT_ID_VALUE;\r\nexport const REACT_APP_MULESOFT_API_CLIENT_SECRET = process.env.REACT_APP_MULESOFT_API_CLIENT_SECRET;\r\nexport const REACT_APP_MULESOFT_API_CLIENT_SECRET_VALUE = process.env.REACT_APP_MULESOFT_API_CLIENT_SECRET_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_ID = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_ID;\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_ID_VALUE = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_ID_VALUE;\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET;\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET_VALUE = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID;\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID_VALUE = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID_VALUE;\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET;\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET_VALUE = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET_VALUE;\r\nexport const client_id = 123;\r\nexport const client_secret = 456;\r\nexport const REACT_APP_ENOVIA_SAAS_API_URL = 'https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1' //process.env.REACT_APP_ENOVIA_SAAS_API_URL\r\nexport const SAP_API_BASE_URL = process.env.REACT_APP_PRO_MODE; //\"http://localhost:8086\" //'https://emr-product-datahub-server-sap-stage.azurewebsites.net' //\"http://localhost:8086\" // process.env.API_BASE_URL\r\n\r\nexport const REACT_APP_BACKEND_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n};\r\nexport const REACT_APP_BACKEND_API_HEADER_FOR_FILE = {\r\n    headers: {\r\n        \"content-type\": \"multipart/form-data; boundary=-------842470573919341855553902\"\r\n    },\r\n};\r\nexport const REACT_APP_ENOVIA_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        [REACT_APP_PLM_API_KEY]: REACT_APP_PLM_API_KEY_VALUE,\r\n    },\r\n};\r\n\r\nexport const REACT_APP_MULESOFT_ITEM_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'text/plain',\r\n        [REACT_APP_MULESOFT_API_CLIENT_ID]: REACT_APP_MULESOFT_API_CLIENT_ID_VALUE,\r\n        [REACT_APP_MULESOFT_API_CLIENT_SECRET]: REACT_APP_MULESOFT_API_CLIENT_SECRET_VALUE,\r\n    },\r\n};\r\nexport const REACT_APP_MULESOFT_BOM_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'text/plain',\r\n        [REACT_APP_MULESOFT_BOM_API_CLIENT_ID]: REACT_APP_MULESOFT_BOM_API_CLIENT_ID_VALUE,\r\n        [REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET]: REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET_VALUE,\r\n    },\r\n};\r\n\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        [REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID]: REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID_VALUE,\r\n        [REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET]: REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET_VALUE,\r\n    },\r\n};\r\n\r\nexport const REACT_APP_MULESOFT_SAAS_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'client_id': client_id,\r\n        'client_secret': client_secret,\r\n        'Access-Control-Allow-Origin': '*'\r\n    },\r\n};","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\n\r\nexport class TemplateMappingService {\r\n  getAlltemplateMappings = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/newtemplateMappings/getTemplateMappings`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTemplateMapping = (tempMappingId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/newtemplateMappings/deleteTemplateMappings/${tempMappingId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting deleteTemplateMappings:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/addTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        //console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/newtemplateMappings/updateTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n  importTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/bulkAddTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddTemplate\", e);\r\n        return [];\r\n      });\r\n  };\r\n  \r\n  downloadSampleFile=(fileName)=>{\r\n    window.open(`${BACKEND_API_URL}/${fileName}`);\r\n  }\r\n\r\n  exportAllTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/exportAllTemplateMapping`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath;\r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportAllData:', error);\r\n        throw error;\r\n      });\r\n  };\r\n  \r\n\r\n  exportAllAdminGeneralProperties = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/exportAllAdminGeneralProperties`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath;\r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportAllData:', error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  exportAllAdminSystemSetups = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/exportAllAdminSystemSetups`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath;\r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportAllData:', error);\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import { sortByLabel } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nexport const BUOptions = [\r\n  { value: \"Micro Motion\", label: \"Micro Motion\" },\r\n  { value: \"Daniel\", label: \"Daniel\" },\r\n  { value: \"EPM brazil\", label: \"EPM brazil\" },\r\n  { value: \"Poly Oil\", label: \"Poly Oil\" },\r\n  { value: \"Rosemount Flow\", label: \"Rosemount Flow\" },\r\n  { value: \"Roxar\", label: \"Roxar\" },\r\n  { value: \"Rosemount Measurement\", label: \"Rosemount Measurement\" },\r\n  { value: \"Flow Assurance\", label: \"Flow Assurance\" },\r\n  { value: \"Flow Systems\", label: \"Flow Systems\" },\r\n  { value: \"Ultrasonic\", label: \"Ultrasonic\" },\r\n  { value: \"Metran Flow\", label: \"Metran Flow\" },\r\n  { value: \"Flow Control Valves\", label: \"Flow Control Valves\" },\r\n  { value: \"Biffi Morin\", label: \"Biffi Morin\" },\r\n  { value: \"DP Flow\", label: \"DP Flow\" },\r\n  { value: \"Magtech\", label: \"Magtech\" },\r\n  { value: \"Keystone Butterfly Valves\", label: \"Keystone Butterfly Valves\" },\r\n];\r\nexport const bomusageOptions = [\r\n  { value: \"1\", label: \"Production\" },\r\n  { value: \"2\", label: \"Engineering/Design\" },\r\n  { value: \"3\", label: \"Universal\" },\r\n  { value: \"4\", label: \"Plant maintenance\" },\r\n  { value: \"5\", label: \"Sales and Distribution\" },\r\n  { value: \"6\", label: \"Costing\" },\r\n  { value: \"7\", label: \"Empties\" },\r\n  { value: \"8\", label: \"Stability study\" },\r\n  { value: \"M\", label: \"External Munitions Display \" },\r\n  { value: \"Z\", label: \"Planning BOM\" },\r\n];\r\nexport const ERPtypeOptions = [\r\n  { value: \"ORACLE\", label: \"ORACLE\" },\r\n  { value: \"JDE\", label: \"JDE\" },\r\n  { value: \"SAP\", label: \"SAP\" },\r\n];\r\n\r\nexport const instanceOptions = sortByLabel([\r\n  { value: \"BETSYD10\", label: \"betsyD10\" },\r\n  { value: \"D01\", label: \"D01\" },\r\n  { value: \"D03\", label: \"D03\" },\r\n  { value: \"ED1\", label: \"ED1\" },\r\n  { value: \"EP1\", label: \"EP1\" },\r\n  { value: \"P01\", label: \"P01\" },\r\n  { value: \"P03\", label: \"P03\" },\r\n  // { value: \"Q01\", label: \"Q01\" },\r\n  // { value: \"Q03\", label: \"Q03\" },\r\n  // { value: \"EQ1\", label: \"EQ1\" },\r\n  // { value: \"EQ3\", label: \"EQ3\" },\r\n  // { value: \"BETSY\", label: \"BETSY\" },\r\n  // { value: \"BETSY\", label: \"BETSY\" },\r\n]);\r\n\r\nexport const exportToERPOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const existInOracleOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const notOwningDivisionOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const userGroupOptions = [\r\n  \"admin\",\r\n  \"Everyone\",\r\n  \"Guest\",\r\n]\r\n\r\nexport const is_authorizedOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const enableBOSTransferOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\nexport const InstanceOptions = sortByLabel([\r\n  { value: \"onPrem\", label: \"onPrem\" },\r\n  { value: \"SaaS\", label: \"SaaS\" },\r\n]);\r\n","import React from \"react\";\r\nimport { Grid, Button } from '@mui/material';\r\nimport { SimpleCard } from \"app/components\";\r\n\r\nconst SomethingWrong = () => {\r\n    return (\r\n        <SimpleCard>\r\n            <Grid container spacing={3} alignItems=\"center\" style={{ position: \"relative\" }}>\r\n                <Grid item md={12} sm={12} xs={12} style={{ textAlign: \"center\" }}>\r\n                    Something went wrong! Please inform to administrator or reload the page.\r\n                    <br></br>\r\n                    <br></br>\r\n                    <Button variant=\"contained\" onClick={() => window.location.reload()}>\r\n                        Reload\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </SimpleCard>\r\n    )\r\n}\r\nexport default SomethingWrong;","\r\nimport {\r\n    REACT_APP_ENOVIA_API_URL,\r\n    REACT_APP_ENOVIA_API_HEADER,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n    BACKEND_API_URL,\r\n    SAP_API_BASE_URL\r\n} from '../config'\r\nimport ApiInstance from './ApiInstance';\r\nimport { Store } from \"app/redux/Store\";\r\n// import BUService from './buService';\r\nimport axios from 'axios';\r\n\r\n\r\n// let buService = new BUService();\r\nlet selectedMCODetailsResponse = []; \r\nexport default class SaaSExecutionService {\r\n    searchCA = (filters) => {\r\n        let searchCAPayload = {\r\n            \"Operation\": \"CA-Search\",\r\n            \"Headers\": {\r\n                \"securityContext\": \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n                \"senderID\": \"EMRPDH\",\r\n                \"TargetID\": \"3DX\",\r\n                \"BusinessGroup\": \"ENOVIA\"\r\n            },\r\n            \"queryParams\": {\r\n                \"searchStr\": `${filters.searchPattern}`,\r\n                \"&$top\": \"10\",\r\n                \"instance\": \"SaaS\"\r\n            },\r\n            \"Requestdata\": \"\"\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/searchCA`, searchCAPayload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n\r\n   \r\n         \r\n    getCARelatedMco = (params) => {  \r\n        let payloadBody = {\r\n            \"queryParams\": {\r\n                \"id\": params?.ca_id,\r\n                \"operation\": \"flowDown\",\r\n                \"instance\": \"SaaS\"\r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caDetails`, payloadBody, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n  \r\n    \r\n    searchMCO = (filters, instance) => { \r\n        let searchCAPayload = {\r\n            \"Operation\": \"CA-Search-flowDown\",\r\n            \"Headers\": {\r\n                \"securityContext\": \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n                \"senderID\": \"EMRPDH\",\r\n                \"TargetID\": \"3DX\",\r\n                \"BusinessGroup\": \"ENOVIA\"\r\n            },\r\n            \"queryParams\": \r\n                {\r\n                    \"searchStr\": `${filters.searchPattern}`,\r\n                    \"&$top\": \"10\",\r\n                    \"instance\": \"SaaS\"\r\n                },\r\n            \r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/searchCA`, searchCAPayload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    \r\n    getMCOdetailById = (params) => {\r\n        let payloadBody = {\r\n            \"queryParams\": {\r\n                \"ids\": [{\"id\":params?.mco_id}],\r\n                \"operation\": \"CA-Details\",\r\n                \"instance\": \"SaaS\",\r\n                \r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caDetails`, payloadBody, headersBody).then((res) => {            \r\n            if (res.status === 200) {\r\n                res.data.map((item) => {\r\n                    if(item.mcoPropeties.id === params?.mco_id){\r\n                        selectedMCODetailsResponse.push(item);\r\n                    }\r\n                })\r\n                // return res.data;\r\n                return selectedMCODetailsResponse[selectedMCODetailsResponse && selectedMCODetailsResponse.length-1];\r\n            }\r\n            throw selectedMCODetailsResponse[0];\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    updateMCOdetails = (data) => {\r\n        return axios.put(`${REACT_APP_ENOVIA_API_URL}/productHierarchy/classify`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    validationByMcoId = (id) => {\r\n        let data = {pass:true};\r\n        return Promise.resolve(data);\r\n        // return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/validate/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n        //     if (res.status === 200) {\r\n        //         return res.data;\r\n        //     }\r\n        //     throw res.data;\r\n        // }).catch((e) => {\r\n        //     return e;\r\n        // });\r\n    };\r\n    getItemDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/erp/item/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBomDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/bom/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    changeStateByMcoId = (id, nextState, obj) => {\r\n        let payload = {            \r\n            \"id\": id,\r\n            \"nextState\": nextState,\r\n            \"instance\": \"SaaS\"\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caMcoPromoteDemote`, payload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data[0];\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    routeStart = (routeId) => {      \r\n        let payload = {\r\n          Operation: \"routeStart\", // Required field\r\n          Headers: {\r\n            securityContext: \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n            senderID: \"EMRPDH\",\r\n            TargetID: \"3DX\",\r\n            BusinessGroup: \"ENOVIA\"\r\n          },\r\n          Requestdata: {\r\n            data: [\r\n              {\r\n                \"id\": routeId  //  Send directly here\r\n              }\r\n            ]\r\n          },\r\n          instance: \"SaaS\" // still needed for backend route mapping\r\n        };\r\n      \r\n        let headersBody = {\r\n          'client_id': 123,\r\n          'client_secret': 456\r\n        };\r\n      \r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/routeStart`, payload, headersBody)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data; \r\n              }\r\n              throw new Error(\"Route start failed or not initiated\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"routeStart error:\", error);\r\n            throw error;\r\n          });\r\n      };\r\n   \r\n    getTaskList = (routeId) => {      \r\n        let payload = {\r\n          Operation: \"taskList\", // Required field\r\n          Headers: {\r\n            securityContext: \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n            senderID: \"EMRPDH\",\r\n            TargetID: \"3DX\",\r\n            BusinessGroup: \"ENOVIA\"\r\n          },\r\n          Requestdata: {\r\n            data: [\r\n              {\r\n                \"id\": routeId  //  Send directly here\r\n              }\r\n            ]\r\n          },\r\n          instance: \"SaaS\" // still needed for backend route mapping\r\n        };\r\n      \r\n        let headersBody = {\r\n          'client_id': 123,\r\n          'client_secret': 456\r\n        };\r\n      \r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/getTaskList`, payload, headersBody)\r\n          .then((res) => {\r\n            if (res.status === 200 && Array.isArray(res.data) && res.data.length > 0) {\r\n                return res.data; \r\n           \r\n              }\r\n              throw new Error(\"No task data found\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching task list:\", error);\r\n            throw error;\r\n          });\r\n      };\r\n\r\n      taskApproval = (taskId) => {\r\n        let payload = {\r\n          Operation: \"taskApproval\",\r\n          Headers: {\r\n            securityContext: \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n            senderID: \"EMRPDH\",\r\n            TargetID: \"3DX\",\r\n            BusinessGroup: \"ENOVIA\"\r\n          },\r\n          Requestdata: {\r\n            data: [\r\n              {\r\n                dataelements: {\r\n                  id: taskId,\r\n                  routeTaskApprovalComments: \"Approve\",\r\n                  routeTaskDueDate: \"\",\r\n                  state: \"Complete\",\r\n                  routeTaskApprovalAction: \"Approve\"\r\n                },\r\n                updateAction: \"MODIFY\"\r\n              }\r\n            ]\r\n          },\r\n          instance: \"SaaS\"\r\n        };\r\n      \r\n        const headersBody = {\r\n          client_id: 123,\r\n          client_secret: 456\r\n        };\r\n      \r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/taskApproval`, payload, headersBody)\r\n          .then(res => {\r\n            if (res.status === 200) return res.data;\r\n            throw res.data;\r\n          })\r\n          .catch(error => {\r\n            console.error(\"❌ Task Approval Error:\", error);\r\n            throw error;\r\n          });\r\n      };\r\n      \r\n      \r\n    updateMCOData = (id, data) => {\r\n        let payload = {            \r\n            \"uriParams\": {\r\n                \"identifier\": id,\r\n                'startDate': data['Start Date'],\r\n                'description': data['description'],\r\n                \"data\": data,\r\n                \"instance\": \"SaaS\"\r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caMcoModify`, payload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };    \r\n    ApproveCAMCO = (data) => {\r\n        let payload = {            \r\n            \"uriParams\": {\r\n                'id': data.id,\r\n                'type': data.type,\r\n                'currentStatus': data.currentStatus\r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caMcoApprove`, payload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    \r\n    getDataForClassificationyMCONames = (data) => {        \r\n        //  Filter out invalid entries (where `name` or `id` is undefined)\r\n        const validData = data.filter(item => item?.name && item?.id);\r\n        if (validData.length === 0) {\r\n            console.error(\"No valid data to send in API request!\");\r\n            return Promise.reject(\"Invalid data - No valid MCO entries.\");\r\n        }\r\n    \r\n\r\n        let payloadBody = {\r\n            \"queryParams\": {\r\n                \"ids\": validData,\r\n                \"operation\": \"CA-Details\",\r\n                \"instance\": \"SaaS\"\r\n            }\r\n        }\r\n     \r\n\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caDetails`, payloadBody, headersBody).then((res) => {            \r\n            if (res.status === 200) {                              \r\n                return res.data;\r\n            }               \r\n            }).then((data)=>{                \r\n                const formattedResponse = {};\r\n                data.forEach(item => {\r\n                    if (item?.mcoPropeties?.name) {\r\n                        formattedResponse[item.mcoPropeties.name] = item;\r\n                    }\r\n                });\r\n                return formattedResponse;\r\n            }).catch((e) => {\r\n                throw e;\r\n            });        \r\n    };\r\n    updateMCOObjects = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMCOObjects/mcoList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRSMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRSMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMRpartList = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMR/partList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSpecDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getSpecDetails/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoPropertyDetails = (mcoName) => {\r\n        let params = {\r\n            mco_id: mcoName,\r\n            isBasics: true\r\n        }\r\n        this.getMCOdetailById(params).then((res)=>{\r\n            if(res){\r\n                return res?.mcoPropeties;\r\n            }\r\n        }).catch((error)=>{\r\n        })\r\n        \r\n        // return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/name/${mcoName}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n        //     if (res.status === 200) {\r\n        //         return res.data;\r\n        //     }\r\n        //     throw res.data;\r\n        // }).catch((e) => {\r\n        //     return e;\r\n        // });\r\n    };\r\n    getMRbyPartAndPlant = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRbyPartAndPlant`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getSourcePlantTemplate = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/sourceList/getSourcePlantTemplate`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getBusinessUnitbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/bu/getBusinessUnitbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getMRRelatedDetailsbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRRelatedDetailsbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    \r\n    getLifeCycleStatusByMCOName = (data) => {\r\n        const validData = data.filter(name => name !== null && name !== undefined);\r\n        if (validData.length === 0) {\r\n            console.error(\"No valid MCO names to send in API request!\");\r\n            return Promise.reject(\"Invalid data - No valid MCO names.\");\r\n        }\r\n        return ApiInstance.post(`${BACKEND_API_URL}/status/getLifeCycleStatusByMCOName`, validData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error(\"API Error:\", e);\r\n            return e;\r\n        });\r\n    };\r\n    getMcoDetailsByName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getMcoDetailsByName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getattributesbyid = (data) => {\r\n        return new Promise(async (reject,resolve)=>{\r\n           await  ApiInstance.post(`${BACKEND_API_URL}/mco/getattributesbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n                if (res.status === 200) {\r\n                    resolve(res.data);\r\n                }\r\n                reject(res.data);\r\n            \r\n        })})\r\n    }\r\n    updateattributesbyid = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updateattributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    sendMCO = (payloadData) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/muleSoftServices/sendMCO`, payloadData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    \r\n}","import {\r\n    REACT_APP_ENOVIA_API_URL,\r\n    REACT_APP_ENOVIA_API_HEADER,\r\n    REACT_APP_ENOVIA_CLOUD_API_URL,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n    BACKEND_API_URL\r\n} from '../config';\r\nimport { Store } from \"app/redux/Store\";\r\nimport ApiInstance from './ApiInstance';\r\nimport axios from 'axios';\r\n\r\nconst getGlobalData = () => {\r\n    const StoreDetails = Store.getState();\r\n    const instanceType = StoreDetails?.globalData?.instanceType;\r\n    const enoviaApi = (instanceType === \"Cloud\") ? REACT_APP_ENOVIA_CLOUD_API_URL : REACT_APP_ENOVIA_API_URL;\r\n    return enoviaApi;\r\n}\r\n\r\nexport default class OnPremExecutionService {\r\n    searchCA = (filters) => {\r\n        return axios.post(`${getGlobalData()}/erp/findObjects`, filters, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    getCARelatedMco = (params) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/CAid/${params?.ca_id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    searchMCO = (filters, instance) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/erp/findMCOObjects`, filters, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    searchMCO_old = (filters) => { //Removed\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/erp/findObjects`, filters, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    getMCOdetailById = (params) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/productHierarchy/classes/${params?.mco_id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMCOdetails = (data) => {\r\n        return axios.put(`${REACT_APP_ENOVIA_API_URL}/productHierarchy/classify`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    validationByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/validate/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getItemDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/erp/item/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBomDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/bom/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    changeStateByMcoId = (id, status, data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/changeState/${id}/${status}`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMCOData = (id, data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMCOData/${id}`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getDataForClassificationyMCONames = (data) => {\r\n        let mcoNames = data?.names;\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/getDataForClassificationyMCONames/mcoList`, mcoNames, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMCOObjects = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMCOObjects/mcoList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRSMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRSMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMRpartList = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMR/partList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            console.log(\"hey vara here===========================================\", res);\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSpecDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getSpecDetails/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoPropertyDetails = (mcoName) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/name/${mcoName}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMRbyPartAndPlant = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRbyPartAndPlant`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getSourcePlantTemplate = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/sourceList/getSourcePlantTemplate`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {                \r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getMRRelatedDetailsbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRRelatedDetailsbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBusinessUnitbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/bu/getBusinessUnitbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getLifeCycleStatusByMCOName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/status/getLifeCycleStatusByMCOName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoDetailsByName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getMcoDetailsByName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getattributesbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getattributesbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    updateattributesbyid = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updateattributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    sendMCO = (payloadData) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/muleSoftServices/sendMCO`, payloadData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n}","\r\nimport {\r\n    BACKEND_API_URL,\r\n    REACT_APP_ENOVIA_API_URL,\r\n    REACT_APP_ENOVIA_CLOUD_API_URL,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n    REACT_APP_ENOVIA_API_HEADER,\r\n    REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n} from '../config'\r\nimport axios from 'axios';\r\nimport ApiInstance from './ApiInstance';\r\nimport partWith100Items from \"app/utils/mcoUtils/100partsdata.json\";\r\nimport partWith50Items from \"app/utils/mcoUtils/50partsdata.json\";\r\nimport SaaSExecutionService from \"./SaaSExecutionService\";\r\nimport OnPremExecutionService from \"./OnPremExecutionService\";\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\n\r\n\r\nlet executionClass;\r\nlet instance;\r\n\r\nexport class MCOService {\r\n    getInstanceDetail = () => {\r\n        instance = localStorage.getItem('instance');        \r\n        switch(instance) {\r\n            case \"onPrem\":\r\n                executionClass = new OnPremExecutionService();\r\n                break;\r\n            case \"SaaS\":\r\n                executionClass = new SaaSExecutionService();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    searchCA = (filters) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.searchCA(filters);\r\n    };\r\n    getCARelatedMco = (params) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getCARelatedMco(params);\r\n    };\r\n    searchMCO = (filters) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.searchMCO(filters, instance);\r\n    };\r\n    getMCOdetailById = (params) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMCOdetailById(params);\r\n    };\r\n    updateMCOdetails = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMCOdetails(data)\r\n    };\r\n    validationByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.validationByMcoId(id);\r\n    };\r\n    getItemDetailsByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getItemDetailsByMcoId(id);\r\n    };\r\n    getBomDetailsByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getBomDetailsByMcoId(id)\r\n    };\r\n    changeStateByMcoId = (id, status, data, action) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.changeStateByMcoId(id, status, data)\r\n    };\r\n    updateMCOData = (id, data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMCOData(id, data);\r\n    };\r\n    getDataForClassificationyMCONames = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getDataForClassificationyMCONames(data);\r\n    };\r\n    updateMCOObjects = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMCOObjects(data);\r\n    };\r\n    getRSMEList = () => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getRSMEList();\r\n    };\r\n    getRMEList = () => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getRMEList();\r\n    };\r\n    updateMRpartList = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMRpartList(data);\r\n    };\r\n    getSpecDetailsByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getSpecDetailsByMcoId(id);\r\n    };\r\n    getMcoPropertyDetails = (mcoName) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMcoPropertyDetails(mcoName);\r\n    };\r\n    ApproveCAMCO = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.ApproveCAMCO(data);\r\n    }\r\n    routeStart = (routeId) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.routeStart(routeId);\r\n    };\r\n    getTaskList = (routeId) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getTaskList(routeId);\r\n    };\r\n\r\n    taskApproval = (taskId) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.taskApproval(taskId);\r\n    };\r\n\r\n    // ==================MULE SERVICE================================\r\n    getMuleToken = () => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/muleSoftServices/getMuleToken`, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    sendMCO = (payloadData) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.sendMCO(payloadData);\r\n    };\r\n    sendAutoReleaseMCOs = (payloadData) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/muleSoftServices/sendAutoReleaseMCOs`, payloadData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };    \r\n    // ================================================\r\n    // =====================PLM BACKEND===============\r\n\r\n    // Attributes\r\n    getattributesbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getattributesbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoDetailsByName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getMcoDetailsByName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    addattributes = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/addattributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    mcoStatusValidation = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/mcoStatusValidation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateattributesbyid = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateattributesbyid(data);\r\n    };\r\n\r\n    updatePartListAndAttributes = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updatePartListAndAttributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    updatePartListAndAddAttributes = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updatePartListAndAddAttributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    getTemplateDetails = () => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/template/gettemplate`, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getPlantData = (data) => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/plant/getplants`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSourceData = (data) => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/sourceList/getSource`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMappingsData = (data) => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/api/mappings`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    itemvalidationbymcoid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/acknowledgement/itemvalidation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    BOMvalidationbymcoid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/acknowledgement/bomValidation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateFinalAcksDetails = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updateFinalAcksDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    callLoggingInfo = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/log/addLogInfo`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    getERPStatus = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/acknowledgement/getacknowledgementByItemId`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSourcePlantTemplate = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getSourcePlantTemplate(data);\r\n    };\r\n    mcoRuleValidation = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/item/validation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMRRelatedDetailsbyid = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMRRelatedDetailsbyid(data);\r\n    };\r\n    addMRRelatedDetails = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/addMRRelatedDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMRRelatedDetails = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mrRelatedDetails/updateMRRelatedDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMRbyPartAndPlant = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMRbyPartAndPlant(data);        \r\n    };\r\n    getMRForCAbyPartAndPlant = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRForCAbyPartAndPlant`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getChildPartDetails = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getChildPartDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBusinessUnitbyid = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getBusinessUnitbyid(data);\r\n    };\r\n    getMRDetailsByPartName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRDetailsByPartName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getLifeCycleStatusByMCOName = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getLifeCycleStatusByMCOName(data);\r\n    };\r\n    updateLifeCycleStatus = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/status/updateLifeCycleStatus`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    massUpdatePartDescription = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/massUpdate/massUpdatePartDescription`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    searchSpecCreationbyKey = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/specCreation/searchSpecCreationbykeyword`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    resendSpecCreation = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/specCreation/resendSpecCreation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    searchObsoletePartbyKey = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/obsoletePart/searchObsoletePartbykeyword`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    resendObsoletePart = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/obsoletePart/resendObsoletePart`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    bulkUploadPartAndTemplate = (data) => {\r\n        return ApiInstance\r\n            .post(\r\n                `${BACKEND_API_URL}/mco/bulkUploadPartAndOracleTemp`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"bulkAddTemplate\", e);\r\n                return [];\r\n            });\r\n    }\r\n    downloadSampleFile = (fileName) => {\r\n        window.open(`${BACKEND_API_URL}/${fileName}`);\r\n    }\r\n    exportMCOData = (data) => {\r\n        return ApiInstance\r\n          .post(\r\n            `${BACKEND_API_URL}/mco/exportMCOData`,\r\n            data,\r\n            REACT_APP_BACKEND_API_HEADER\r\n          )\r\n          .then(async (res) => {\r\n            if (res.status === 200) {\r\n              const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n              try {\r\n                const response = await fetch(fileUrl, {\r\n                  method: 'GET',\r\n                  headers: {\r\n                    'Content-Type': 'application/octet-stream',\r\n                    'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n                  }\r\n                });  \r\n                if (!response.ok) {\r\n                  throw new Error('Failed to fetch the file');\r\n                }  \r\n                const fileBlob = await response.blob();\r\n                const downloadUrl = URL.createObjectURL(fileBlob);\r\n      \r\n                const link = document.createElement('a');\r\n                link.href = downloadUrl;\r\n                link.download = res.data.filePath; \r\n                link.click();\r\n                URL.revokeObjectURL(downloadUrl);\r\n              } catch (error) {\r\n                console.error('Error downloading the file:', error);\r\n              }  \r\n              return res.data;\r\n            }\r\n            throw res.data;\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error in exportTemplate:', error);\r\n            throw error;\r\n          });\r\n    };\r\n    exportTableData = (data) => {\r\n        return ApiInstance\r\n          .post(\r\n            `${BACKEND_API_URL}/exportData/exportTableData`,\r\n            data,\r\n            REACT_APP_BACKEND_API_HEADER\r\n          )\r\n          .then(async (res) => {\r\n            if (res.status === 200) {\r\n              const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n              try {\r\n                const response = await fetch(fileUrl, {\r\n                  method: 'GET',\r\n                  headers: {\r\n                    'Content-Type': 'application/octet-stream',\r\n                    'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n                  }\r\n                });  \r\n                if (!response.ok) {\r\n                  throw new Error('Failed to fetch the file');\r\n                }  \r\n                const fileBlob = await response.blob();\r\n                const downloadUrl = URL.createObjectURL(fileBlob);\r\n      \r\n                const link = document.createElement('a');\r\n                link.href = downloadUrl;\r\n                link.download = res.data.filePath; \r\n                link.click();\r\n                URL.revokeObjectURL(downloadUrl);\r\n              } catch (error) {\r\n                console.error('Error downloading the file:', error);\r\n              }  \r\n              return res.data;\r\n            }\r\n            throw res.data;\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error in exportTemplate:', error);\r\n            throw error;\r\n          });\r\n    };\r\n    getMcoHistorybyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mcoHistory/getMcoHistorybyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n}","import { CircularProgress } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nconst StyledLoading = styled('div')(() => ({\r\n  width: '100%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  '& img': {\r\n    width: 'auto',\r\n    height: '25px',\r\n  },\r\n  '& .circleProgress': {\r\n    position: 'absolute',\r\n    left: -7,\r\n    right: 0,\r\n    top: 'calc(50% - 25px)',\r\n  },\r\n}));\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <StyledLoading>\r\n      <Box position=\"relative\">\r\n        <img src=\"/assets/images/logo-circle.svg\" alt=\"\" />\r\n        <CircularProgress className=\"circleProgress\" />\r\n      </Box>\r\n    </StyledLoading>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","export const topBarHeight = 64\r\nexport const sideNavWidth = 260\r\nexport const navbarHeight = 60\r\nexport const sidenavCompactWidth = 80\r\nexport const containedLayoutWidth = 1200"],"names":["useOracleSettings","useContext","OracleSettingsContext","BreadcrumbRoot","styled","display","flexWrap","alignItems","BreadcrumbName","margin","fontSize","paddingBottom","verticalAlign","textTransform","SubName","_ref","theme","color","palette","text","secondary","StyledIcon","_ref2","marginLeft","hint","Icon","marginBottom","_ref3","routeSegments","useTheme","_jsx","children","_jsxs","Breadcrumbs","separator","sx","position","NavLink","to","map","route","index","length","path","name","shortId","StyledAvatar","Avatar","height","width","StatusCircle","status","bottom","right","borderRadius","border","background","primary","main","error","src","Box","ChatContainer","flexDirection","StyledScrollBar","ScrollBar","flexGrow","ProfileBox","justifyContent","padding","ChatStatus","marginTop","fontWeight","ChatMessage","maxWidth","whiteSpace","wordBreak","MessageTime","_ref4","ChatImgContainer","_ref5","ChatImgBox","_ref6","ChatImg","ChatImgSize","globalMessageList","_ref7","togglePopup","isAlive","setIsAlive","useState","message","setMessage","messageList","setMessageList","currentUserId","chatBottomRef","document","querySelector","dummyReply","async","setTimeout","messageObject","contactId","avatar","push","scrollToBottom","useCallback","scrollTo","top","scrollHeight","behavior","useEffect","time","id","mood","textPrimary","ChatAvatar","H5","Span","IconButton","onClick","item","ind","p","ml","mb","alt","H6","mt","Divider","convertHexToRGB","TextField","placeholder","multiline","rowsMax","fullWidth","InputProps","endAdornment","size","classes","root","value","onChange","e","target","onKeyUp","event","key","shiftKey","tempMessage","trim","tempList","PopupRoot","topBarHeight","breakpoints","down","Popup","spacing","transition","boxShadow","shadows","zIndex","overflow","left","icon","open","setOpen","cloneElement","className","clsx","popupOpen","textAlign","marginRight","paddingTop","Button","paddingLeft","paddingRight","backgroundColor","fallbacks","MenuButton","action","hover","props","anchorEl","setAnchorEl","React","toArray","shouldCloseOnItemClick","horizontalPosition","settings","useSettings","handleClose","Fragment","currentTarget","menuButton","ThemeProvider","themes","activeTheme","Menu","elevation","getContentAnchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","child","LinearProgress","outline","default","Suspense","fallback","MatxLoading","CssBaseline","NavExpandRoot","transform","common","white","BaseButton","ButtonBase","BulletIcon","contrastText","ItemText","BadgeValue","MatxVerticalNavExpansionPanel","mode","collapsed","setCollapsed","elementRef","useRef","componentHeight","pathname","useLocation","iconText","badge","calcaulateHeight","node","current","getAttribute","compactNavItem","_e$target","closest","handleClick","sidenavHoverShow","collapseIcon","expandIcon","ref","style","maxHeight","Alert","MuiAlert","variant","StyledTable","Table","VisuallyHiddenInput","clip","clipPath","Dialog","_importResponse$error","_importResponse$error2","_importResponse$error3","_importResponse$error4","_importResponse$error5","_importResponse$error6","_importResponse$error7","_importResponse$error8","BUService","massUpdate","MassUpdate","importMassupdateFile","setImportMassupdateFile","setOpenAlert","setOpenDesc","setIsLoading","noFileError","setNoFileError","importResponse","setImportResponse","importfileBar","setimportfileBar","importedFileData","setImportedFileData","importedFileName","setImportedFileName","sampleFileUrl","setSampleFileUrl","instance","localStorage","getItem","bussinessUnitLists","BUError","setBUError","importSelectionValues","setImportSelectionValues","BU","handleImportfileBarClose","reason","_Fragment","PaperProps","DialogTitle","cursor","DialogContent","DialogContentText","TableBody","TableRow","TableCell","align","FormControl","InputLabel","Select","labelId","label","prevselectedValues","option","MenuItem","buName","component","startIcon","CloudUploadIcon","type","accept","console","log","file","files","fileType","split","pop","colSpan","handleDownload","downloadSampleFile","download","rel","DialogActions","handleImportFile","hasError","window","confirm","postData","data","Instance","massUpdatePartDescription","then","response","severity","desc","msg","autoFocus","handleCloseImport","Snackbar","autoHideDuration","errorInTemplate","errorInPlants","AlertTitle","errorInTemplateCount","eitem","errorInPlantCount","updateTemplates","templateMappingService","TemplateMappingService","exportAllTempMapping","setExportAllTempMapping","openAlert","openDesc","dataToExport","handleImportOptionSelection","info","RadioGroup","row","defaultValue","FormControlLabel","control","Radio","rdo","exportAllTemplateMapping","CustomAlertBox","exportAllAdminGeneralPropertiesDialog","setExportAllAdminGeneralPropertiesDialog","exportAllAdminGeneralProperties","exportAllAdminSystemSetupsDialog","setExportAllAdminSystemSetupsDialog","exportAllAdminSystemSetups","ListLabel","Paragraph","ExtAndIntCommon","textDecoration","ExternalLink","InternalLink","StyledText","StyledTextforMassUpdate","MatxVerticalNav","items","updateSettings","isLoading","layout1Settings","leftSidebar","isMdScreen","useMediaQuery","handleClickImportButton","handleNavLinkClick","updateSidebarMode","sidebarSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","renderLevels","href","mx","undefined","ExportAllGeneralPropertiesDialogBox","_ref8","isActive","MassUpdatePartDescriptionInEnoviaAndERP","Loader","show","ExportAllSystemSetupsDialogBox","_ref9","ExportAllTemplateMapping","_ref10","CardRoot","Card","CardTitle","subtitle","title","makeStyles","minWidth","minHeight","generateMarginPadding","generateHeightWidh","end","arguments","increament","unit","classList","i","GlobalCss","visibility","opacity","CLIENT_ID","REACT_APP_EMRPDH_OKTA_CLIENT_ID","ISSUER","REACT_APP_EMRPDH_OKTA_ISSUER","domain","REACT_APP_EMRPDH_OKTA_DOMAIN","OKTA_TESTING_DISABLEHTTPSCHECK","process","oidc","clientId","issuer","redirectUri","location","origin","scopes","pkce","disableHttpsCheck","resourceServer","messagesUrl","initialState","isAuthenticated","isInitialised","user","LoginScreen","authState","oktaAuth","useOktaAuth","originalUri","toRelativeUrl","setOriginalUri","signInWithRedirect","login","Outlet","authenticated","FlexBox","JustifyBox","IMG","NotFoundRoot","NotFound","navigate","useNavigate","getBaseUrl","getStorevalue","getBasename","segment","startsWith","styles","container","button","UnauthorizedPage","_location$state","_location$state2","_location$state3","_location$state4","_location$state5","userService","UserService","userInfo","state","NotAuthorized","requestforAccess","setRequestforAccess","logout","signOut","postLogoutRedirectUri","requestAccess","requestForAccess","userData","result","CustomSelect","isdisabled","selectedvalue","onChangeFunc","disabled","displayEmpty","renderValue","selected","_selectedOption","selectedOption","find","businessUnit","listKey","Homepage","globalBUandInstance","useSelector","bussinessUnit","setBussinessUnit","setInstance","bu","instanse","Grid","md","sm","xs","selectedOptionValue","InstanceOptions","Component","Loading","CaList","Loadable","lazy","CaDetails","McoList","Mcodetails","TrackerProgressBar","SpecCreationList","ObsoletePartList","MyReportList","element","_userDetails$userinfo","userDetails","userinfo","includes","Navigate","allTemplatesInfo","updateAllTemplate","tempService","templateService","importTemplate","setImportTemplate","setTemplateData","ERPTypeError","setERPTypeError","instanceError","setinstanceError","ERPType","handleImportTemplateSelection","column","selectedValues","TableHead","Autocomplete","multiple","options","values","Set","forEach","add","Array","from","getUniqueValues","_","newValue","renderInput","params","disableCloseOnSelect","disableClearable","isOptionEqualToValue","getOptionSelected","ChipProps","ERPtypeOptions","instanceOptions","CloudDownloadIcon","handleCloseImportTemplate","prev","handleImportTemplate","errorCount","newTemplateAdded","getAllTemplateList","template","exportTemplate","setExportTemplate","setDataToExport","templateData","setValue","exportfileBar","setexportfileBar","exportResponse","setExportResponse","handleExportTemplateDialog","SimpleCard","FormLabel","filterTemplateData","handleCloseExportTemplate","exportTemplateHandle","exportData","templateName","isArray","join","WrappedComponent","sortInfo","initialData","sortedData","sortData","field","columnName","direction","dir","sort","a","b","aValue","String","toLowerCase","bValue","Container","Template","toastState","deleteDialog","setDeleteDialog","setInitialData","selectedDelTemplate","setselectedDelTemplate","searchValue","setSearchValue","filteredTempData","setFilteredTempData","setSortInfo","setSelected","selectedRows","setSelectedRows","gridRef","dataMap","sortedFilterTempData","sortDataByKey","onSelectionChange","finally","_toastState","_toastState2","_toastState3","onbeforeunload","history","replaceState","templateModeRef","handleEditTemplate","editSelectedTemplate","selectedTempalteData","templateMode","handleDeleteTemplateDialog","Deltemplate","selRowsData","selRowsDetails","Object","keys","new_FilteredData","filter","subscriber","_subscriber$templateN","_subscriber$plants","_subscriber$BU","plants","some","plant","plantName","handleSortInfoChange","sortedExportDataHOC","SortedTemplate","onSortInfoChange","Breadcrumb","newSearchValue","handleSearch","flex","RouterLink","handleCreateTemplate","handleEditMappingDialog","handleDeleteDialog","handleImportTemplateDialog","ExportDialogBox","DataGrid","idProperty","showZebraRows","defaultLimit","columns","header","Tooltip","defaultFlex","defaultWidth","render","dataSource","checkboxColumn","handle","pagination","renderScroller","_gridRef$current","_gridRef$current2","setScrollTop","getScrollTop","handleCloseDelete","selRowsId","deleteTemplate","ImportDialogBox","TemplateWrapper","PlantService","constructor","getAllPlantsList","ApiInstance","get","BACKEND_API_URL","REACT_APP_BACKEND_API_HEADER","res","catch","getPlantById","post","addnewPlant","updatePlant","put","deletePlant","ids","delete","handleDialogClose","tempObject","handleAttributeChange","handleAddAttribute","newKey","handleAddRow","handleDeleteRow","keyerror","attributeForm","valuesInputList","mandatory","material_master","dataType","inputType","overflowY","alignContent","Paper","DeleteIcon","defaultValues","useStyles","spanRed","defaultFormValue","CreateTemplate","plantService","plantData","setPlantData","templateForm","setTemplateForm","exportToERP","existInOracle","notOwningDivision","snackBar","setsnackBar","snackbarmessage","setSnackbarMessage","snackbarseverity","setSnackbarSeverity","diabox","setDiabox","attributeData","setAttributeData","setAttributeForm","setTempObject","setValuesInputList","setNewKey","setNewValue","setKeyerror","selectedBU","setSelectedBU","selectedplants","setSelectedPlants","handleTemplateFormChange","updatedForm","plantId","url","username","port","authkey","SalesOrg","ECN_required","bomusage","ConnectivityDetails","password","handlesnackBarClick","handlesnackbarClose","onBlur","trimmedValue","replace","prevForm","caseInsensitiveSort","handleSelectChange","extractedInfo","MenuProps","handleAddNewAttribute","attrivar","aindex","_attributeData$index","attindex","valuesArray","entries","handleEditAttribute","EditIcon","handleDeleteAttribute","prevData","updatedData","splice","_templateForm$templat","_templateForm$desc","_templateForm$ERPType","randomid","Math","floor","generateRandomId","toString","attributes","addnewTemplate","resp","_Object$keys","_resp$message","altHtml","citem","handleCancel","AttributeDialog","prevObject","updatedTempObject","reduce","acc","curr","updatedAttributeData","prevAttributeData","keyExists","valueExists","prevList","newList","EditTemplate","refreshData","useParams","selectedTemplateObj","setSelectedTemplateObj","tempId","getTemplateById","_Object$keys2","selectedTemplate","templates","selectedPlantsInfo","_Object$entries","selectedAttribute","updateTemplate","PrivateRoute","exact","authRoles","sa","admin","editor","guest","Plant","selectedDelPlant","setSelectedDelPlant","setFilteredPlantData","filteredPlantData","sortedPlanteData","plantModeRef","handleDeletePlantDialog","DeletePlant","handleEditPlant","editSelectedPlant","selectedPlantData","plantMode","SortedPlant","handleCreatePlant","CircularProgress","ConnectivityDetailsDialog","connDetails","handleCDChange","handleAddCD","connectivityError","plantForm","sapsysnum","sapclientid","CreatePlant","allPlantData","setallPlantData","diaBox","setPlantForm","orgId","aliasPlant","setconnDetails","setconnectivityError","materialMasterOption","handlePlantFromChange","Formik","initialValues","Connectivitydetails","onSubmit","Form","exportToERPOptions","bomusageOptions","handleAddPlant","_plantForm$plantName","_plantForm$ERPType","_plantForm$instance","_plantForm$exportToER","_plantForm$plantName2","_plantForm$material_m","_plantForm$bomusage","newPlant","_resp$data","_resp$data$","_resp$data$2","_resp$data$3","EditPlant","setConnDetails","selectedPlant","setSelectedPlant","_selectedPlantObj$Con","_selectedPlantObj$Con2","_selectedPlantObj$Con3","_selectedPlantObj$Con4","_selectedPlantObj$Con5","_selectedPlantObj$Con6","_selectedPlantObj$Con7","_selectedPlantObj$Con8","_selectedPlantObj$Con9","_selectedPlantObj$Con10","_selectedPlantObj$Con11","_selectedPlantObj$Con12","selectedPlantObj","obj","hasOwnProperty","hasValues","Plants","SourceListService","getAllSourceList","deleteSource","addnewSource","updateSource","getSourceById","CreateSourceList","sourceForm","setSourceForm","sourceListService","handleSourceFormChange","source","environment","handleAddSource","_sourceForm$source","_sourceForm$environme","_sourceForm$instance","_sourceForm$ERPType","newSource","EditSourceList","sourceId","selectedSource","sourceData","Source","Environment","SourceList","setselectedSource","setsourceData","unSortSourceData","setUnSortSourceData","setFilteredSourceData","filteredSourceData","sortedSourceData","handleEditSource","editSelectedSource","selectedSourceData","handleDeleteSourceDilaog","DeleteSource","SortedSource","handleCreateSourceList","MappingsService","getAllMappings","deleteMapping","mappingId","addnewMapping","updateMapping","CreateMapping","mappingForm","setMappingForm","mappingService","handleMappingvalueChange","handleMappingFormChange","Name","handleAddMapping","_mappingForm$Name","_mappingForm$ERPType","newMaping","List","EditMapping","selectedMapping","selectedMappingData","reversedList","Mappings","page","setPage","rowsPerPage","setRowsPerPage","setSelectedMapping","mappingData","setMappingData","filteredRows","setFilteredRows","filteredMappingData","setFilteredMappingData","filterValues","setFilterValues","handleFilterChange","prevFilterValues","dataToShow","filteredData","_subscriber$Name","_subscriber$ERPType","handleCreateMappings","getOptionLabel","slice","editselectedMapping","handleEditMapping","handleDeleteMappingDilaog","TablePagination","px","count","onPageChange","handleChangePage","newPage","rowsPerPageOptions","onRowsPerPageChange","nextIconButtonProps","backIconButtonProps","auth","buData","_data","_a$businessUnit","_b$businessUnit","_item$plants","_item$plants2","exportToERPdisabled","exportToERPbyPassed","enableBOSTransfer","contextDEF","EMRDivisionORGValue","productHierarchy","doNotSendToERP","oracleExisting","makeWithoutBOMList","notOwningDivisionList","BUList","updateBussinessUnitLists","setBUData","buService","getAllBuList","setFilteredBUData","filteredBUData","sortedFilteredBuData","selectedBUData","SortedbuList","handleCreateBUList","rowStyle","isSelected","actionFlag","localeCompare","_ref11","_ref12","deleteBU","CreateBU","templatesInfo","buForm","setBuFrom","DoNotSendToERP","setDoNotSendToERP","OracleExisting","setOracleExisting","MakeWithoutBOMList","setMakeWithoutBOMList","NotOwningDivisionList","setNotOwningDivisionList","handlebuFormChange","handleTemplateChange","selectedObj","newselectedObj","existing","enableBOSTransferOptions","autoHighlight","handlePlantsChange","renderOption","mr","flexShrink","handleAddbuName","_buForm$buName","newbuName","addnewBU","EditBU","updateMappingTemplatesInfo","selectBU","setSelectBU","tempMapService","getTemplValues","fieldValue","buId","getBusinessUnitbyid","_resp$data2","_resp$data3","selectBUValue","InfoIcon","updateBU","getAlltemplateMappings","_result$data","templateMappingList","userImportDialog","setUserImportDialog","setUserData","mcoService","MCOService","handleCloseImportDialog","importUser","errors","getAllUsersList","userExportDialog","setUserExportDialog","handleCloseExportUser","userName","Email","email","is_authorized","exportUser","sheet_name","UserList","validFilteredBUData","sortedUsersData","handleEditUser","editSelectedUser","selectedUserData","isEdit","handleDeleteUserDilaog","SortedUserData","handleCreateUser","handleImportDialog","handleExportDialog","deleteUser","BulkExportUsers","handleCloseExportDialog","BulkImportUsers","AddEditUser","selectedUser","userForm","setUserFrom","userId","Date","now","handleUserFormChange","userGroup","setUserGroup","is_authorizedOptions","userGroupInfo","userGroupOptions","_userForm$userName","_userForm$name","_userForm$email","_userForm$is_authoriz","updateUser","addnewUser","USERList","_filteredPlants","handleorgAllowedDialogClose","selectedPlants","orgAllowedForm","handleorgAllowedFormChange","handleAddOrgAllowedValues","templateOption","setTemplateOption","filteredBUOptions","setFilteredBUOptions","tempData","temp","_temp$BU","ALLOWABLE_ORG_TEMPLATES","Has_MBOM","notOwningDivisionOptions","On_MBOM","EBOM_Allowed","Optional","PO_Org_Exist_Check","filteredPlants","_bussinessUnitLists$f","HistoryManagementService","getAlldraftChanges","deleteTemplateMapping","tempMappingId","addnewTemplateMapping","updateTemplateMapping","applyDraftChanges","discardDraftChanges","dataId","getAllmappingHistory","MVOtempcompService","getAlltempcompMappings","deleteTempCompMapping","addnewTempCompMapping","updateTempCompMapping","softDeleteTempCompMapping","updateRefreshData","fetchData","getsampleFileUrl","MappingType","MVOtemplatecompContext","createContext","mvotemplatecompInfo","updateMVOtempcompLists","useMVOtempComp","PartTypeTemplateContext","parttypetemplateinfo","updateParttypeTemplate","usePartTypeTemplate","MVOallowedchangesContext","mvoallowedchangesinfo","updateMVOallowedchanges","useMVoallowedchanges","SetTempCompContext","comptempInfo","updatecomptempList","useCompTemp","SetTempCompProvider","BUPlantContext","buplantsInfo","updatebuplantsInfo","useBUPlant","ExpenseMappingContext","expensemapInfo","updateExpenseMap","useExpenseMap","mappingTemplatesInfo","isObjectBlank","details","allowableOrgTemplates","ALLOWABLE_ORG_TEMPLATE","MVO_TEMPLATES_TO","MVO_TEMPLATE_TO","TEMPLATE_ORG_MODIFYING","mappingType","AllTempData","_a$field","_b$field","BUID","filterData","_item$details","_item$details2","_item$details3","_item$details4","_item$details5","_item$details6","_item$details7","_item$details8","_item$details8$allowa","_item$details9","_item$details9$allowa","_item$details10","_item$details10$MVO_T","_item$details11","_item$details11$TEMPL","item1","MVO_TEMPLATE_OPTION","ENGG_ITEM_TYPE","org_allowed_template","exclusive_use","MVO_TEMPLATE_FROM","TEMPLATE_ORG_EXISTING","Entity","PLANT","EXPENSE_TEMPLATE","EXPENSE_PLANTS","flat","dataToPass","sortAndReorderData","_a$field2","_b$field2","substring","OrgAllowedValuesList","updateBussinessUnit","orgallowedaddDialog","setOrgallowedaddDialog","setOrgAllowedForm","mvotempcompservice","draftMapService","selectedDeleteMapping","setSelectedDeleteMapping","setIsEdit","orgallowedData","setorgallowedData","filteredDraftTabledata","setFilteredDraftTabledata","handleSearchInputChange","tableTempData","setTableTempData","unSortTableTempData","setUnSortTableTempData","sortedFilterOrgAllowedData","fetchDraftData","finalTempMapList","_finalTempMapList","_finalTempMapList2","fitem","_JSON$stringify","_JSON$stringify2","_JSON$stringify2$toLo","JSON","stringify","toLocaleLowerCase","filteredOrgAllowedDraftData","obj1","changes","obj2","draftValue_ALLOWABLE_ORG_TEMPLATES","draftValue_Has_MBOM","draftValue_On_MBOM","draftValue_EBOM_Allowed","draftValue_Optional","draftValue_PO_Org_Exist_Check","draft_Plants","_item$details12","_item$details13","_item$details14","_item$details15","_item$details16","_item$details17","_item$details18","_item$details19","_item$details20","_BUOptions$","BUOptions","justify","optionsValues","handleorgAllowedDialogOpen","handleEditOrgAllowedValues","_selectedRows$","_selectedRows$2","selectedDetails","_selectedRows$3","_selectedRows$3$detai","_selectedRows$4","_selectedRows$4$detai","ExportMappingDialog","plantColumnsSet","dataItem","_dataItem$details","plantColumns","dangerouslySetInnerHTML","__html","Constant","adminConstant","orgAllowedList","tooltip","AllowableOrgTemplate","RDO","HasMBom","OnMbom","EBOM","PoCheck","prepareTableColumn","rowHeight","deleteNote","OrgAllowedDialog","handleorgAllowedDialogAdd","templateid","resultPayload","neworgallowedvalue","ALLOWABLE_ORG_TEMPLATES_ID","ImportMappingsDialog","OrgAllowedValuesWrapper","gridStyle","handleAddMVOtempComp","orgAllowedTempList","formError","selectedRow","handleStatusChange","setTempData","selectedTemplateValues","setSelectedTemplateValues","sortDataByKeyAllowableOrgTemplates","newTempList","_selectedRow$details","newdata","defaultVisible","_data$details","_data$details2","_data$details3","_data$details4","_data$details5","_data$details6","_data$details7","_data$details8","_selectedTemplateValu","_data$details9","updatedStatus","_selectedRow$details2","getSelTempVal","array","output","_item$status","transformArray","Scrollbars","autoHeight","autoHeightMin","autoHeightMax","autoHide","autoHideTimeout","RDOError","templateError","AllowableOrgTempError","ReactDataGrid","checkboxOnlyRowSelect","MVOtemplateCompatibilityList","_Constant$adminConsta","_Constant$adminConsta2","_Constant$adminConsta3","_Constant$adminConsta4","_Constant$adminConsta5","_Constant$adminConsta6","_Constant$adminConsta7","_Constant$adminConsta8","_Constant$adminConsta9","mvotempcompData","setMVOtempCompData","orgAllowedData","setorgAllowedData","formTemplateSelection","setFormTemplateSelection","setFormError","setRDO","statusObject","setStatusObject","mvoTemplateList","TemplateOptionMVO","sortable","filteredMVOTempDraftData","draft_allowableOrgTemplates","templateSet","missingFromArrObj1","j","has","deletedTemplateLists","newTemplate","item2","newTemplateLists","mergeNewOldTemplates","self","findIndex","deletedText","draft_Plant","statusText","charAt","toUpperCase","buFilterData","_buFilterData","onFormSelectionChange","prevState","rest","localStorageBusinessUnit","setLocalStorageBusinessUnit","sortedByFirstColumnFilteredMVOTempData","sortedFilteredMVOTempData","sortInsideRowData","unSortRowSortTableTempData","thisVal","object","assign","MVOtemplCompDialog","templatedata","new_formError","MVO_TEMPLATE_OPTION_ID","orgtemperror","MVOtemplateCompatibilityWrapper","buoption","PartTypeToTemplateList","setOrgAllowedData","parttypetemplateList","TemplateOptionsMVO","allowableOrgTemplatesExclusive","handleEditPartTypeTotemplate","PartTypeTemplateDialog","_templateid$","ENOVIA_PART_TYPE_ID","PartTypeToTemplateWrapper","mvotemplatesTo","MVOallowedchangesList","setMVOtemplatesTo","rowSortTableTempData","draft_MVO_TEMPLATES_TO","unsortedData","mvoallowedchangesList","mvoTemplatesFrom","mvoTemplatesTo","MVOallowedchangesDialog","convertedMVO_TEMPLATES_TO","t","_templateid$2","_templateid$3","MVOallowedChangesWrapper","modifytempdata","SetCompTempList","comptempData","setComptempData","setModifytempData","sortedFilterSetCompTempData","draft_TEMPLATE_ORG_MODIFYING","setComptempList","TemplateForOrgExist","TemplateForOrgModify","SetCompTempDialog","convertedTEMPLATE_ORG_MODIFYING","SetCompTempWrapper","plantGroupOptions","bomStatusOptions","rduOptions","entitydropdown","handleAddBuPlant","setPlantValueList","plantValueList","setDisplayOrder","setFilteredPlants","dropdownOptions","setDropdownOptions","entityOption","setEntityOption","setDataSource","_bussinessUnitLists$f2","plist","concat","filteredPlantsLeftSide","unionBy","plantColumn","rendersInlineEditor","editable","cellProps","v","editProps","inEdit","onComplete","handleChanges","onFocus","startEdit","expensemapList","PlantName","newData","BUPlantList","displayOrder","setPlantColumns","plantMappingList","setPlantMappingList","_finalTempMapList$","_finalTempMapList$$de","sortedList","originalItem","valueCounts","pdata","_pdata$details","_pdata$details2","plantValue","headerColumns","filteredRDODraftData","_selectedRows$$detail","_selectedRows$2$detai","plantValuesarr","enableColumnAutosize","BUPlantDialog","resultPlantPayload","BUPlantWrapper","expense","Input","inputRef","focus","expenseColumn","onKeyDown","onCancel","onEditComplete","columnId","rowId","ExpenseMappingList","expensemapData","setExpenseMapData","sortedFilterExpenseMappingData","filteredExpenseDraftData","draftValue_EXPENSE_TEMPLATE","handleEditExpenseMapping","ExpenseMappingDialog","Number","isNaN","EXPENSE_TEMPLATE_ID","ExpenseMapWrapper","validationSchema","yup","shape","description","required","max","enableReinitialize","validateOnChange","validateOnBlur","resetForm","saveApplyChanges","touched","submitForm","setFieldValue","setErrors","setTouched","applyChangesDialog","Field","as","rows","ErrorMessage","closeDialogBox","setApplyChangesDialog","DraftChangesList","tabledata","setTabledata","filteredTabledata","setFilteredTabledata","historyManagementService","modifiedDateTime","_filteredData","thisItem","updateTemplateMappingData","err","textWrap","onRowClick","rowData","prevSelectedRows","handleRowClick","CommitChangesForm","payload","RequestChangesWraper","RequestChangesList","DraftChangesWraper","HistoryLIst","historyData","mappingOptions","setMappingOptions","setMappingType","version","date","parseInt","dateTime","year","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","formattedDate","getMinutes","getSeconds","_Object$values$join","_Object$values$join2","thisRowData","HistoryWrapper","HistoryList","systemData","vsystemData","file1","file2","formData","forwardRef","formAllData","setFormAllData","validate","setSubmitting","isValid","backendValues","fieldName","saveForm","formisValid","innerRef","handleSubmit","_props$selectedRows","_props$selectedRows2","editForm","useImperativeHandle","fkey","_formAllData$","thisInputName","currentFieldValue","fieldType","htmlFor","vitem","SystemSetup","childCompRef","showForm","setShowForm","showFormType","setShowFormType","formValues","setFormValues","setSystemData","orgSystemData","setOrgSystemData","systemSettingsService","SystemSettingsService","sortedSystemData","fetchAllDetails","_listValue$data","listValue","getAllsystemSetupList","systemDataValue","newFilteredData","setting","applyFilterData","deleteSystemSettings","scroll","stopPropagation","dividers","tabIndex","SystemSetupForm","submittedValues","_updatedData","_updatedData2","_updatedData3","updateSystemSettings","addSystemSettings","basename","useHref","LoginCallback","CustomLoginCallback","onSuccess","redirect","onError","handleLoginRedirect","allChildroutes","McoListRoutes","templateRoutes","plantRoutes","sourceListroutes","mappingsroutes","buListRoutes","mvocompatibilityRoutes","parttypetotemplateroutes","mvoallowedchangesroutes","setcomptemproutes","orgallowedroutes","buplantroutes","expensemaproutes","draftChangesroutes","historyroutes","userListRoutes","SystemSetupList","Router","routes","AuthGuard","MatxLayout","RedirectRoute","useRoutes","componentStack","onDropSuccess","dropRef","handleDragOver","preventDefault","dataTransfer","dropEffect","handleDrop","getData","parsed","parse","warn","dropArea","addEventListener","removeEventListener","App","hasDropped","setHasDropped","setOktaAuth","timer","performance","mark","clearTimeout","ErrorBoundary","FallbackComponent","Fallback","onReset","Provider","store","Store","SettingsProvider","MatxTheme","MatxSuspense","Security","restoreOriginalUri","onAuthRequired","OracleMappingsProvider","DragAndDropComponent","OktaAuth","config","StyledBox","texttransformstyle","ellipsis","textOverflow","lineHeight","GET_MCOLIST","GET_MCOINFO","GET_UPDATEMCODETAILS","GET_UPDATE_MCO_RELATED_VALUES","SET_ALL_CA_MCO_DETAILS","SET_UPDATED_ROUTES","RESET_VALUES","setUpdatedRoutes","getMCOLists","dispatch","updateResponseData","updateMcoDetails","update_generalValues","resetValues","BootstrapDialog","BuConfirmationBox","isBUModified","updateBUModifiedData","m","grey","CloseIcon","Typography","gutterBottom","updateTemplateLists","authService","globalBussinessUnit","shallowEqual","setUserDetails","isPageHavingError","setIsPageHavingError","setIsBUModified","setBussinessUnitLists","setTemplatesInfo","setAllTemplatesInfo","setMappingTemplatesInfo","setRefreshData","_result$data2","_result$data3","_result$data4","templateList","bulist","getAccessToken","accessToken","validateUser","_result$data5","checkLocalStorage","_location$pathname2","SomethingWrong","_location$pathname","reload","isPageHavingIssue","stepData","RSMEList","RMEList","responseData","itemERPStatus","affectedPartsData","exportAffectedPartsData","currentMcoDetails","isPropertyFormEdited","isMaterialFormEdited","selectedRowData","selectedRowFormdata","selectedRowIndex","materialData","masterData","templateMappingsInfo","ORGAllowedTemplateMappings","previousMcosDetails","mrDetails","massUpdateChanges","lifeCycleData","systemSetingsDetail","eachTemplateOptions","bulkPartTemplates","caRelatedEachMCODetails","allCaMCODetails","mcoSearchLists","showMaterialForm","parentMCODetails","caLifeCycleData","updatedRoutes","baseValues","instanceType","systemName","GET_BU_AND_INSTANSE","combineReducers","mcoDetails","MCODetailsReducer","globalData","GlobalDataReducer","GlobalBUandInstanceReducer","middlewares","thunk","createStore","RootReducer","compose","applyMiddleware","x","SettingsContext","Layout","MatxLayouts","REACT_APP_BACKEND_API_HEADER_FOR_FILE","fileUrl","filePath","fetch","method","headers","getOKTAAccessKey","ok","Error","fileBlob","blob","downloadUrl","URL","createObjectURL","link","createElement","click","revokeObjectURL","fileName","_parsedToken$accessTo","_parsedToken$accessTo2","_parsedToken$accessTo3","_parsedToken$idToken","getToken","parsedToken","curruid","claims","uid","idToken","exp","token","Buffer","jwt","hex","match","c","test","crypto","msCrypto","Uint32Array","getRandomValues","sortedNameDivs","sortedMvoTemplateToDivs","nameDivs","textA","textB","mvoTemplateToDivs","sortObjectValues","fromEntries","plantGroup","sortedPlantGroup","sortedOtherEntities","sensitivity","currentInstance","pathArray","returnVal","textLight","errorColor","themeColors","whitePurple","whiteBlue","slateDark1","paper","slateDark2","purple1","light","dark","purple2","purpleDark1","purpleDark2","blue","blueDark","red","themeShadows","components","MuiTable","styleOverrides","tableLayout","MuiTableCell","head","MUIDataTableSelectCell","MUIDataTableHeadCell","MUIDataTableBodyCell","MuiButton","contained","MuiCssBaseline","boxSizing","html","MozOsxFontSmoothing","WebkitFontSmoothing","body","MuiFab","MuiAccordion","MuiTooltip","MuiMenuItem","MuiExpansionPanel","MuiCard","typography","body1","danger","MatxLayoutSettings","perfectScrollbar","createTheme","merge","themeOptions","createMatxThemes","bgimgurl","topbar","fixed","secondarySidebar","footer","currentSettings","setCurrentSettings","handleUpdateSettings","update","merged","contextValue","useMemo","formatMessage","replaceArray","formattedMessage","_formattedMessage","RegExp","valueA","valueB","parseFloat","sortByLabel","labelA","labelB","layout1","Backdrop","drawer","getSystemSettingsbyid","updateGlobalBUandInstance","axios","create","interceptors","request","use","Authorization","Promise","reject","_error$response","getMyReport","deleteReport","REACT_APP_ENOVIA_API_URL","REACT_APP_ENOVIA_CLOUD_API_URL","REACT_APP_PLM_API_KEY","SAP_API_BASE_URL","REACT_APP_ENOVIA_API_HEADER","selectedMCODetailsResponse","SaaSExecutionService","searchCA","filters","searchCAPayload","searchPattern","getCARelatedMco","payloadBody","ca_id","searchMCO","getMCOdetailById","mco_id","mcoPropeties","updateMCOdetails","validationByMcoId","resolve","pass","getItemDetailsByMcoId","getBomDetailsByMcoId","changeStateByMcoId","nextState","routeStart","routeId","Operation","Headers","securityContext","senderID","TargetID","BusinessGroup","Requestdata","getTaskList","taskApproval","taskId","dataelements","routeTaskApprovalComments","routeTaskDueDate","routeTaskApprovalAction","updateAction","client_id","client_secret","updateMCOData","ApproveCAMCO","currentStatus","getDataForClassificationyMCONames","validData","formattedResponse","_item$mcoPropeties","updateMCOObjects","getRSMEList","getRMEList","updateMRpartList","getSpecDetailsByMcoId","getMcoPropertyDetails","mcoName","isBasics","this","getMRbyPartAndPlant","getSourcePlantTemplate","getMRRelatedDetailsbyid","getLifeCycleStatusByMCOName","getMcoDetailsByName","getattributesbyid","updateattributesbyid","sendMCO","payloadData","OnPremExecutionService","getGlobalData","_StoreDetails$globalD","StoreDetails","getState","searchMCO_old","mcoNames","names","executionClass","getInstanceDetail","getMuleToken","sendAutoReleaseMCOs","addattributes","mcoStatusValidation","updatePartListAndAttributes","updatePartListAndAddAttributes","getTemplateDetails","getPlantData","getSourceData","getMappingsData","itemvalidationbymcoid","BOMvalidationbymcoid","updateFinalAcksDetails","callLoggingInfo","getERPStatus","mcoRuleValidation","addMRRelatedDetails","updateMRRelatedDetails","getMRForCAbyPartAndPlant","getChildPartDetails","getMRDetailsByPartName","updateLifeCycleStatus","searchSpecCreationbyKey","resendSpecCreation","searchObsoletePartbyKey","resendObsoletePart","bulkUploadPartAndTemplate","exportMCOData","exportTableData","getMcoHistorybyid","StyledLoading","sideNavWidth","sidenavCompactWidth"],"sourceRoot":""}